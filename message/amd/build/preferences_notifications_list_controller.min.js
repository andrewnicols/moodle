define ("core_message/preferences_notifications_list_controller",["jquery","core/ajax","core/notification","core/custom_interaction_events","core_message/notification_preference","core_message/notification_processor_settings","core/modal_factory"],function($,Ajax,Notification,CustomEvents,NotificationPreference,NotificationProcessorSettings,ModalFactory){var SELECTORS={DISABLE_NOTIFICATIONS:"[data-region=\"disable-notification-container\"] [data-disable-notifications]",DISABLE_NOTIFICATIONS_CONTAINER:"[data-region=\"disable-notification-container\"]",PREFERENCE:"[data-state]",PREFERENCE_ROW:"[data-region=\"preference-row\"]",PREFERENCE_INPUT:"[data-state] input",PROCESSOR_SETTING:"[data-processor-setting]"},PreferencesController=function(element){this.root=$(element);this.userId=this.root.attr("data-user-id");this.registerEventListeners()};PreferencesController.prototype.isDisabled=function(){return this.root.hasClass("disabled")};PreferencesController.prototype.setDisabled=function(){this.root.addClass("disabled");this.root.find(SELECTORS.PREFERENCE_INPUT).prop("disabled",!0)};PreferencesController.prototype.setEnabled=function(){this.root.removeClass("disabled");this.root.find(SELECTORS.PREFERENCE_INPUT).prop("disabled",!1)};PreferencesController.prototype.toggleDisableAllStatus=function(){var checkbox=$(SELECTORS.DISABLE_NOTIFICATIONS),container=$(SELECTORS.DISABLE_NOTIFICATIONS_CONTAINER),ischecked=checkbox.prop("checked");if(container.hasClass("loading")){return $.Deferred().resolve()}container.addClass("loading");var request={methodname:"core_user_update_user_preferences",args:{userid:this.userId,emailstop:ischecked?1:0}};return Ajax.call([request])[0].done(function(){if(ischecked){this.setDisabled()}else{this.setEnabled()}}.bind(this)).always(function(){container.removeClass("loading")}).fail(Notification.exception)};PreferencesController.prototype.registerEventListeners=function(){var disabledNotificationsElement=$(SELECTORS.DISABLE_NOTIFICATIONS);CustomEvents.define(this.root,[CustomEvents.events.activate]);this.root.on("change",function(e){if(!this.isDisabled()){var preferenceElement=$(e.target).closest(SELECTORS.PREFERENCE),preferenceRow=$(e.target).closest(SELECTORS.PREFERENCE_ROW),preference=new NotificationPreference(preferenceRow,this.userId);preferenceElement.addClass("loading");preference.save().always(function(){preferenceElement.removeClass("loading")})}}.bind(this));var eventFormPromise=ModalFactory.create({type:NotificationProcessorSettings.TYPE});this.root.on(CustomEvents.events.activate,SELECTORS.PROCESSOR_SETTING,function(e){var element=$(e.target).closest(SELECTORS.PROCESSOR_SETTING);e.preventDefault();eventFormPromise.then(function(modal){modal.setUserId($(element).attr("data-user-id"));modal.setName($(element).attr("data-name"));modal.setContextId($(element).attr("data-context-id"));modal.setElement(element);modal.show();e.stopImmediatePropagation()}).fail(Notification.exception)});CustomEvents.define(disabledNotificationsElement,[CustomEvents.events.activate]);disabledNotificationsElement.on(CustomEvents.events.activate,function(){this.toggleDisableAllStatus()}.bind(this))};return PreferencesController});
//# sourceMappingURL=preferences_notifications_list_controller.min.js.map
