{"version":3,"sources":["../src/message_drawer_view_contacts_section_requests.js"],"names":["define","$","Notification","PubSub","Templates","MessageRepository","MessageDrawerEvents","LazyLoadList","SELECTORS","CONTACT_REQUEST","TEMPLATES","REQUESTS_LIST","render","contentContainer","requests","formattedRequests","map","request","id","profileimageurl","fullname","then","html","append","catch","exception","load","listRoot","userId","getContactRequests","setLoadedAll","handleContactRequestProcessed","root","find","userid","remove","contactRequests","length","showEmptyMessage","hideContent","registerEventListeners","subscribe","CONTACT_REQUEST_ACCEPTED","CONTACT_REQUEST_DECLINED","show","attr"],"mappings":"AAsBAA,OAAM,8DACN,CACI,QADJ,CAEI,mBAFJ,CAGI,aAHJ,CAII,gBAJJ,CAKI,iCALJ,CAMI,oCANJ,CAOI,4CAPJ,CADM,CAUN,SACIC,CADJ,CAEIC,YAFJ,CAGIC,MAHJ,CAIIC,SAJJ,CAKIC,iBALJ,CAMIC,mBANJ,CAOIC,YAPJ,CAQE,IAEMC,CAAAA,SAAS,CAAG,CACZC,eAAe,CAAE,mCADL,CAFlB,CAMMC,SAAS,CAAG,CACZC,aAAa,CAAE,sEADH,CANlB,CAiBMC,MAAM,CAAG,SAASC,gBAAT,CAA2BC,QAA3B,CAAqC,CAC9C,GAAIC,CAAAA,iBAAiB,CAAGD,QAAQ,CAACE,GAAT,CAAa,SAASC,OAAT,CAAkB,CACnD,MAAO,CAEHC,EAAE,CAAED,OAAO,CAACC,EAFT,CAGHC,eAAe,CAAEF,OAAO,CAACE,eAHtB,CAIHC,QAAQ,CAAEH,OAAO,CAACG,QAJf,CAMV,CAPuB,CAAxB,CAQA,MAAOhB,CAAAA,SAAS,CAACQ,MAAV,CAAiBF,SAAS,CAACC,aAA3B,CAA0C,CAACG,QAAQ,CAAEC,iBAAX,CAA1C,EACFM,IADE,CACG,SAASC,IAAT,CAAe,CACjBT,gBAAgB,CAACU,MAAjB,CAAwBD,IAAxB,EACA,MAAOA,CAAAA,IACV,CAJE,EAKFE,KALE,CAKItB,YAAY,CAACuB,SALjB,CAMV,CAhCH,CAyCMC,IAAI,CAAG,SAASC,QAAT,CAAmBC,MAAnB,CAA2B,CAClC,MAAOvB,CAAAA,iBAAiB,CAACwB,kBAAlB,CAAqCD,MAArC,EACFP,IADE,CACG,SAASP,QAAT,CAAmB,CACrBP,YAAY,CAACuB,YAAb,CAA0BH,QAA1B,KACA,MAAOb,CAAAA,QACV,CAJE,EAKFU,KALE,CAKItB,YAAY,CAACuB,SALjB,CAMV,CAhDH,CAyDMM,6BAA6B,CAAG,SAASC,IAAT,CAAe,CAC/C,MAAO,UAASf,OAAT,CAAkB,CACrBe,IAAI,CAACC,IAAL,CAAU,sBAAuBhB,OAAO,CAACiB,MAA/B,CAAwC,KAAlD,EAAwDC,MAAxD,GACA,GAAIC,CAAAA,eAAe,CAAGJ,IAAI,CAACC,IAAL,CAAUzB,SAAS,CAACC,eAApB,CAAtB,CAEA,GAAI,CAAC2B,eAAe,CAACC,MAArB,CAA6B,CACzB9B,YAAY,CAAC+B,gBAAb,CAA8BN,IAA9B,EACAzB,YAAY,CAACgC,WAAb,CAAyBP,IAAzB,CACH,CACJ,CACJ,CAnEH,CA0EMQ,sBAAsB,CAAG,SAASR,IAAT,CAAe,CACxC7B,MAAM,CAACsC,SAAP,CAAiBnC,mBAAmB,CAACoC,wBAArC,CAA+DX,6BAA6B,CAACC,IAAD,CAA5F,EACA7B,MAAM,CAACsC,SAAP,CAAiBnC,mBAAmB,CAACqC,wBAArC,CAA+DZ,6BAA6B,CAACC,IAAD,CAA5F,CACH,CA7EH,CA8FE,MAAO,CACHY,IAAI,CAXG,SAASZ,IAAT,CAAe,CACtB,GAAI,CAACA,IAAI,CAACa,IAAL,CAAU,oBAAV,CAAL,CAAsC,CAClCL,sBAAsB,CAACR,IAAD,CAAtB,CACAA,IAAI,CAACa,IAAL,CAAU,oBAAV,IACH,CAGDtC,YAAY,CAACqC,IAAb,CAAkBZ,IAAlB,CAAwBN,IAAxB,CAA8Bd,MAA9B,CACH,CAEM,CAGV,CAnHK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the requests section of the contacts page.\n *\n * @module     core_message/message_drawer_view_contacts_section_requests\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/pubsub',\n    'core/templates',\n    'core_message/message_repository',\n    'core_message/message_drawer_events',\n    'core_message/message_drawer_lazy_load_list'\n],\nfunction(\n    $,\n    Notification,\n    PubSub,\n    Templates,\n    MessageRepository,\n    MessageDrawerEvents,\n    LazyLoadList\n) {\n\n    var SELECTORS = {\n        CONTACT_REQUEST: '[data-region=\"contact-request\"]'\n    };\n\n    var TEMPLATES = {\n        REQUESTS_LIST: 'core_message/message_drawer_view_contacts_body_section_requests_list'\n    };\n\n    /**\n     * Render the requests in the content container.\n     *\n     * @param {Object} contentContainer List container element.\n     * @param {Array} requests List of requests.\n     * @return {Object} jQuery promise\n     */\n    var render = function(contentContainer, requests) {\n        var formattedRequests = requests.map(function(request) {\n            return {\n                // This is actually the user id.\n                id: request.id,\n                profileimageurl: request.profileimageurl,\n                fullname: request.fullname\n            };\n        });\n        return Templates.render(TEMPLATES.REQUESTS_LIST, {requests: formattedRequests})\n            .then(function(html) {\n                contentContainer.append(html);\n                return html;\n            })\n            .catch(Notification.exception);\n    };\n\n    /**\n     * Load the user contacts and call the renderer.\n     *\n     * @param {Object} listRoot The lazy loaded list root element\n     * @param {Integer} userId The logged in user id.\n     * @return {Object} jQuery promise\n     */\n    var load = function(listRoot, userId) {\n        return MessageRepository.getContactRequests(userId)\n            .then(function(requests) {\n                LazyLoadList.setLoadedAll(listRoot, true);\n                return requests;\n            })\n            .catch(Notification.exception);\n    };\n\n    /**\n     * Handle when a contact request is accepted or declined by removing the contact\n     * list from the page.\n     *\n     * @param {Object} root The section root element\n     * @return {Function} The event handler function\n     */\n    var handleContactRequestProcessed = function(root) {\n        return function(request) {\n            root.find('[data-request-id=\"' + request.userid + '\"]').remove();\n            var contactRequests = root.find(SELECTORS.CONTACT_REQUEST);\n\n            if (!contactRequests.length) {\n                LazyLoadList.showEmptyMessage(root);\n                LazyLoadList.hideContent(root);\n            }\n        };\n    };\n\n    /**\n     * Listen for any events that might affect the requests section.\n     *\n     * @param {Object} root The section root element\n     */\n    var registerEventListeners = function(root) {\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_REQUEST_ACCEPTED, handleContactRequestProcessed(root));\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_REQUEST_DECLINED, handleContactRequestProcessed(root));\n    };\n\n    /**\n     * Setup the requests section.\n     *\n     * @param {Object} root Requests section container.\n     */\n    var show = function(root) {\n        if (!root.attr('data-contacts-init')) {\n            registerEventListeners(root);\n            root.attr('data-contacts-init', true);\n        }\n\n        // The root element is already the lazy loaded list root.\n        LazyLoadList.show(root, load, render);\n    };\n\n    return {\n        show: show,\n    };\n});\n"],"file":"message_drawer_view_contacts_section_requests.min.js"}