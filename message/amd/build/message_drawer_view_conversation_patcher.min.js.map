{"version":3,"sources":["../src/message_drawer_view_conversation_patcher.js"],"names":["define","$","UserDate","Constants","sortMessagesByDay","messages","midnight","messagesByDay","reduce","carry","message","timeCreated","dayTimestamp","getUserMidnightForTimestamp","hasOwnProperty","push","Object","keys","map","timestamp","diffArrays","a","b","matchFunction","slice","missingFromA","missingFromB","matches","forEach","current","found","index","length","next","splice","findPositionInArray","array","breakFunction","before","i","candidate","isArrayEqual","sort","aLength","bLength","every","item","isObjectEqual","aKeys","bKeys","key","aVal","bVal","aType","bType","Array","isArray","isMessageEqual","id","state","sendState","text","buildDaysPatch","remove","add","day","value","buildMessagesPatch","matchingDays","update","days","dayCurrent","dayNext","messagesDiff","patch","timeAdded","concat","after","buildConversationPatch","newState","diff","daysDiff","buildHeaderPatchTypePrivate","requireAddContact","buildRequireAddContact","confirmContactRequest","buildConfirmContactRequest","oldOtherUser","getOtherUserFromState","newOtherUser","requiresAddContact","show","hasMessages","requiredAddContact","shouldRenderHeader","type","CONVERSATION_TYPES","PRIVATE","showControls","context","name","subname","totalmembercount","totalMemberCount","imageurl","imageUrl","isfavourite","isFavourite","ismuted","isMuted","showfavourite","userid","showonlinestatus","isonline","isblocked","iscontact","buildHeaderPatchTypeSelf","SELF","buildHeaderPatchTypePublic","oldMemberCount","newMemberCount","PUBLIC","buildScrollToMessagePatch","oldMessages","newMessages","previousNewest","currentNewest","previousOldest","currentOldest","buildLoadingMembersPatch","loadingMembers","buildLoadingFirstMessages","hasTriedToLoadMessages","loadingMessages","buildLoadingMessages","buildShowEmojiPicker","showEmojiPicker","buildShowEmojiAutoComplete","showEmojiAutoComplete","buildConfirmBlockUser","pendingBlockUserIds","userId","members","buildConfirmUnblockUser","pendingUnblockUserIds","buildConfirmAddContact","pendingAddContactIds","buildConfirmRemoveContact","pendingRemoveContactIds","buildConfirmDeleteSelectedMessages","oldPendingCount","pendingDeleteMessageIds","newPendingCount","canDeleteMessagesForAllUsers","buildConfirmDeleteConversation","pendingDeleteConversation","loggedInUserId","oldReceivedRequests","contactrequests","filter","request","requesteduserid","newReceivedRequests","oldRequest","newRequest","buildIsBlocked","buildIsFavourite","oldIsFavourite","newIsFavourite","buildIsMuted","oldIsMuted","newIsMuted","buildIsContact","oldContactRequests","newContactRequests","oldHasContactRequests","newHasContactRequests","buildLoadingConfirmationAction","loadingConfirmAction","buildInEditMode","oldHasSelectedMessages","selectedMessageIds","newHasSelectedMessages","numberOfMessagesHasChanged","buildSelectedMessages","oldSelectedMessages","newSelectedMessages","count","requiresContactRequest","user","canmessage","contactRequests","hasSentContactRequest","requirescontact","hadMessages","prevRequiresContactRequest","nextRequiresContactRequest","confirmAddContact","buildRequireUnblock","buildUnableToMessage","buildFooterPatchTypePrivate","loadingFirstMessages","inEditMode","requireUnblock","unableToMessage","showRequireAddContact","otherUser","generateReturnValue","checkValue","successReturn","checks","result","buildFooterPatchTypePublic","buildReset","oldType","newType","oldConversationId","newConversationId","oldMemberIds","newMemberIds","membersUnchanged","buildSelfConversationMessage","buildContactRequestSent","oldSentRequests","newSentRequests","fullname","buildPatch","config","all","reset","conversation","scrollToMessage","confirmDeleteSelectedMessages","selectedMessages","header","footer","confirmBlockUser","confirmUnblockUser","confirmRemoveContact","confirmDeleteConversation","isBlocked","isContact","contactRequestSent","selfConversationMessage","patchConfig","extend","buildFunc"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will take 2 view states from the message_drawer_view_conversation\n * module and generate a patch that can be given to the\n * message_drawer_view_conversation_renderer module to update the UI.\n *\n * This module should never modify either state. It's purely a read only\n * module.\n *\n * @module     core_message/message_drawer_view_conversation_patcher\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/user_date',\n    'core_message/message_drawer_view_conversation_constants'\n],\nfunction(\n    $,\n    UserDate,\n    Constants\n) {\n    /**\n     * Sort messages by day.\n     *\n     * @param  {Array} messages The list of messages to sort.\n     * @param  {Number} midnight User's midnight timestamp.\n     * @return {Array} messages sorted by day.\n     */\n    var sortMessagesByDay = function(messages, midnight) {\n        var messagesByDay = messages.reduce(function(carry, message) {\n            var timeCreated = message.timeCreated ? message.timeCreated : midnight;\n            var dayTimestamp = UserDate.getUserMidnightForTimestamp(timeCreated, midnight);\n\n            if (carry.hasOwnProperty(dayTimestamp)) {\n                carry[dayTimestamp].push(message);\n            } else {\n                carry[dayTimestamp] = [message];\n            }\n\n            return carry;\n        }, {});\n\n        return Object.keys(messagesByDay).map(function(dayTimestamp) {\n            return {\n                timestamp: dayTimestamp,\n                messages: messagesByDay[dayTimestamp]\n            };\n        });\n    };\n\n    /**\n     * Diff 2 arrays using a match function\n     *\n     * @param  {Array} a The first array.\n     * @param  {Array} b The second array.\n     * @param  {Function} matchFunction Function used for matching array items.\n     * @return {Object} Object containing array items missing from a, array items missing from b\n     * and matches\n     */\n    var diffArrays = function(a, b, matchFunction) {\n        // Make copy of it.\n        b = b.slice();\n        var missingFromA = [];\n        var missingFromB = [];\n        var matches = [];\n\n        a.forEach(function(current) {\n            var found = false;\n            var index = 0;\n\n            for (; index < b.length; index++) {\n                var next = b[index];\n\n                if (matchFunction(current, next)) {\n                    found = true;\n                    matches.push({\n                        a: current,\n                        b: next\n                    });\n                    break;\n                }\n            }\n\n            if (found) {\n                // This day has been processed so removed it from the list.\n                b.splice(index, 1);\n            } else {\n                // If we couldn't find it in the next messages then it means\n                // it needs to be added.\n                missingFromB.push(current);\n            }\n        });\n\n        missingFromA = b;\n\n        return {\n            missingFromA: missingFromA,\n            missingFromB: missingFromB,\n            matches: matches\n        };\n    };\n\n    /**\n     * Find an element in a array based on a matching function.\n     *\n     * @param  {array} array Array to search.\n     * @param  {Function} breakFunction Function to run on array item.\n     * @return {*} The array item.\n     */\n    var findPositionInArray = function(array, breakFunction) {\n        var before = null;\n\n        for (var i = 0; i < array.length; i++) {\n            var candidate = array[i];\n\n            if (breakFunction(candidate)) {\n                return candidate;\n            }\n        }\n\n        return before;\n    };\n\n    /**\n     * Check if 2 arrays are equal.\n     *\n     * @param  {Array} a The first array.\n     * @param  {Array} b The second array.\n     * @return {Boolean} Are arrays equal.\n     */\n    var isArrayEqual = function(a, b) {\n        // Make shallow copies so that we don't mess with the array sorting.\n        a = a.slice();\n        b = b.slice();\n        a.sort();\n        b.sort();\n        var aLength = a.length;\n        var bLength = b.length;\n\n        if (aLength < 1 && bLength < 1) {\n            return true;\n        }\n\n        if (aLength != bLength) {\n            return false;\n        }\n\n        return a.every(function(item, index) {\n            return item == b[index];\n        });\n    };\n\n    /**\n     * Do a shallow check to see if two objects appear to be equal. This should\n     * only be used for pretty basic objects.\n     *\n     * @param {Object} a First object to compare.\n     * @param {Object} b Second object to compare\n     * @return {Bool}\n     */\n    var isObjectEqual = function(a, b) {\n        var aKeys = Object.keys(a);\n        var bKeys = Object.keys(b);\n\n        if (aKeys.length != bKeys.length) {\n            return false;\n        }\n\n        return aKeys.every(function(key) {\n            var aVal = a[key];\n            var bVal = b[key];\n            var aType = typeof aVal;\n            var bType = typeof bVal;\n            aType = (aVal === null) ? 'null' : aType;\n            bType = (aVal === null) ? 'null' : bType;\n            aType = (aType === 'object' && Array.isArray(aType)) ? 'array' : aType;\n            bType = (bType === 'object' && Array.isArray(bType)) ? 'array' : bType;\n\n            if (aType !== bType) {\n                return false;\n            }\n\n            switch (aType) {\n                case 'object':\n                    return isObjectEqual(aVal, bVal);\n                case 'array':\n                    return isArrayEqual(aVal, bVal);\n                default:\n                    return a[key] == b[key];\n            }\n        });\n    };\n\n    /**\n     * Compare two messages to check if they are equal. This function only checks a subset\n     * of the message properties which we know will change rather than all properties.\n     *\n     * @param {Object} a The first message\n     * @param {Object} b The second message\n     * @return {Bool}\n     */\n    var isMessageEqual = function(a, b) {\n        return isObjectEqual(\n            {\n                id: a.id,\n                state: a.sendState,\n                text: a.text,\n                timeCreated: a.timeCreated\n            },\n            {\n                id: b.id,\n                state: b.sendState,\n                text: b.text,\n                timeCreated: b.timeCreated\n            }\n        );\n    };\n\n    /**\n     * Build a patch based on days.\n     *\n     * @param  {Object} current Current list current items.\n     * @param  {Array} remove List of days to remove.\n     * @param  {Array} add List of days to add.\n     * @return {Object} Patch with elements to add and remove.\n     */\n    var buildDaysPatch = function(current, remove, add) {\n        return {\n            remove: remove,\n            add: add.map(function(day) {\n                // Any days left over in the \"next\" list weren't in the \"current\" list\n                // so they will need to be added.\n                var before = findPositionInArray(current, function(candidate) {\n                    return day.timestamp < candidate.timestamp;\n                });\n\n                return {\n                    before: before,\n                    value: day\n                };\n            })\n        };\n    };\n\n    /**\n     * Build the messages patch for each day.\n     *\n     * @param {Array} matchingDays Array of old and new messages sorted by day.\n     * @return {Object} patch.\n     */\n    var buildMessagesPatch = function(matchingDays) {\n        var remove = [];\n        var add = [];\n        var update = [];\n\n        // Iterate over the list of days and determine which messages in those days\n        // have been changed.\n        matchingDays.forEach(function(days) {\n            var dayCurrent = days.a;\n            var dayNext = days.b;\n            // Find out which messages have changed in this day. This will return a list of messages\n            // from the current state that couldn't be found in the next state and a list of messages in\n            // the next state which couldn't be count in the current state.\n            var messagesDiff = diffArrays(dayCurrent.messages, dayNext.messages, isMessageEqual);\n            // Take the two arrays (list of messages changed from dayNext and list of messages changed\n            // from dayCurrent) any work out which messages have been added/removed from the list and\n            // which messages were just updated.\n            var patch = diffArrays(\n                // The messages from dayCurrent.message that weren't in dayNext.messages.\n                messagesDiff.missingFromB,\n                // The messages from dayNext.message that weren't in dayCurrent.messages.\n                messagesDiff.missingFromA,\n                function(a, b) {\n                    // This function is going to determine if the messages were\n                    // added/removed from either list or if they were simply an updated.\n                    //\n                    // If the IDs match or it was a state change (i.e. message with a temp\n                    // ID goes from pending to sent and receives an actual id) then they are\n                    // the same message which should be an update not an add/remove.\n                    return a.id == b.id || (a.sendState != b.sendState && a.timeAdded == b.timeAdded);\n                }\n            );\n\n            // Any messages from the current state for this day which aren't in the next state\n            // for this day (i.e. the user deleted the message) means we need to remove them from\n            // the UI.\n            remove = remove.concat(patch.missingFromB);\n\n            // Any messages not in the current state for this day which are in the next state\n            // for this day (i.e. it's a new message) means we need to add it to the UI so work\n            // out where in the list of messages it should appear (it could be a new message the\n            // user has sent or older messages loaded as part of the conversation scroll back).\n            patch.missingFromA.forEach(function(message) {\n                // By default a null value for before will render the message at the bottom of\n                // the message UI (i.e. it's the newest message).\n                var before = null;\n\n                if (message.timeCreated) {\n                    // If this message has a time created then find where it sits in the list of\n                    // message to insert it into the correct position.\n                    before = findPositionInArray(dayCurrent.messages, function(candidate) {\n                        if (message.timeCreated == candidate.timeCreated) {\n                            return message.id < candidate.id;\n                        } else {\n                            return message.timeCreated < candidate.timeCreated;\n                        }\n                    });\n                }\n\n                add.push({\n                    before: before,\n                    value: message,\n                    day: dayCurrent\n                });\n            });\n\n            // Any message that appears in both the current state for this day and the next state\n            // for this day means something in the message was updated.\n            update = update.concat(patch.matches.map(function(message) {\n                return {\n                    before: message.a,\n                    after: message.b\n                };\n            }));\n        });\n\n        return {\n            add: add,\n            remove: remove,\n            update: update\n        };\n    };\n\n    /**\n     * Build a patch for this conversation.\n     *\n     * @param  {Object} state The current state of this conversation.\n     * @param  {Object} newState The new state of this conversation.\n     * @returns {Object} Patch with days and messsages for each day.\n     */\n    var buildConversationPatch = function(state, newState) {\n        var diff = diffArrays(state.messages, newState.messages, isMessageEqual);\n\n        if (diff.missingFromA.length || diff.missingFromB.length) {\n            // Some messages have changed so let's work out which ones by sorting\n            // them into their respective days.\n            var current = sortMessagesByDay(state.messages, state.midnight);\n            var next = sortMessagesByDay(newState.messages, newState.midnight);\n            // This diffs the arrays to work out if there are any missing days that need\n            // to be added (i.e. we've got some new messages on a new day) or if there\n            // are any days that need to be deleted (i.e. the user has deleted some old messages).\n            var daysDiff = diffArrays(current, next, function(dayCurrent, dayNext) {\n                return dayCurrent.timestamp == dayNext.timestamp;\n            });\n\n            return {\n                // Handle adding or removing whole days.\n                days: buildDaysPatch(current, daysDiff.missingFromB, daysDiff.missingFromA),\n                // Handle updating messages that don't require adding/removing a whole day.\n                messages: buildMessagesPatch(daysDiff.matches)\n            };\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Build a patch for the header of this conversation. Check if this conversation\n     * is a group conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildHeaderPatchTypePrivate = function(state, newState) {\n        var requireAddContact = buildRequireAddContact(state, newState);\n        var confirmContactRequest = buildConfirmContactRequest(state, newState);\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var requiresAddContact = requireAddContact && requireAddContact.show && !requireAddContact.hasMessages;\n        var requiredAddContact = requireAddContact && !requireAddContact.show;\n        // Render the header once we've got a user.\n        var shouldRenderHeader = !oldOtherUser && newOtherUser;\n        // We should also re-render the header if the other user requires\n        // being added as a contact or if they did but no longer do.\n        shouldRenderHeader = shouldRenderHeader || requiresAddContact || requiredAddContact;\n        // Finally, we should re-render if the other user has sent this user\n        // a contact request that is waiting for approval or if it's been approved/declined.\n        shouldRenderHeader = shouldRenderHeader || confirmContactRequest !== null;\n\n        if (shouldRenderHeader) {\n            return {\n                type: Constants.CONVERSATION_TYPES.PRIVATE,\n                // We can show controls if the other user doesn't require add contact\n                // and we aren't waiting for this user to respond to a contact request.\n                showControls: !requiresAddContact && !confirmContactRequest,\n                context: {\n                    id: newState.id,\n                    name: newState.name,\n                    subname: newState.subname,\n                    totalmembercount: newState.totalMemberCount,\n                    imageurl: newState.imageUrl,\n                    isfavourite: newState.isFavourite,\n                    ismuted: newState.isMuted,\n                    // Don't show favouriting if we don't have a conversation.\n                    showfavourite: newState.id !== null,\n                    userid: newOtherUser.id,\n                    showonlinestatus: newOtherUser.showonlinestatus,\n                    isonline: newOtherUser.isonline,\n                    isblocked: newOtherUser.isblocked,\n                    iscontact: newOtherUser.iscontact\n                }\n            };\n        }\n\n        return null;\n    };\n\n    /**\n     * Build a patch for the header of this conversation. Check if this conversation\n     * is a group conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildHeaderPatchTypeSelf = function(state, newState) {\n        var shouldRenderHeader = (state.name === null && newState.name !== null);\n\n        if (shouldRenderHeader) {\n            return {\n                type: Constants.CONVERSATION_TYPES.SELF,\n                // Don't display the controls for the self-conversations.\n                showControls: false,\n                context: {\n                    id: newState.id,\n                    name: newState.name,\n                    subname: newState.subname,\n                    imageurl: newState.imageUrl,\n                    isfavourite: newState.isFavourite,\n                    // Don't show favouriting if we don't have a conversation.\n                    showfavourite: newState.id !== null,\n                    showonlinestatus: true,\n                }\n            };\n        }\n\n        return null;\n    };\n\n    /**\n     * Build a patch for the header of this conversation. Check if this conversation\n     * is a group conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildHeaderPatchTypePublic = function(state, newState) {\n        var oldMemberCount = state.totalMemberCount;\n        var newMemberCount = newState.totalMemberCount;\n\n        if (oldMemberCount != newMemberCount) {\n            return {\n                type: Constants.CONVERSATION_TYPES.PUBLIC,\n                showControls: true,\n                context: {\n                    id: newState.id,\n                    name: newState.name,\n                    subname: newState.subname,\n                    totalmembercount: newState.totalMemberCount,\n                    imageurl: newState.imageUrl,\n                    isfavourite: newState.isFavourite,\n                    ismuted: newState.isMuted,\n                    // Don't show favouriting if we don't have a conversation.\n                    showfavourite: newState.id !== null\n                }\n            };\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Find the newest or oldest message.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Number} Oldest or newest message id.\n     */\n    var buildScrollToMessagePatch = function(state, newState) {\n        var oldMessages = state.messages;\n        var newMessages = newState.messages;\n\n        if (newMessages.length < 1) {\n            return null;\n        }\n\n        if (oldMessages.length < 1) {\n            return newMessages[newMessages.length - 1].id;\n        }\n\n        var previousNewest = oldMessages[state.messages.length - 1];\n        var currentNewest = newMessages[newMessages.length - 1];\n        var previousOldest = oldMessages[0];\n        var currentOldest = newMessages[0];\n\n        if (previousNewest.id != currentNewest.id) {\n            return currentNewest.id;\n        } else if (previousOldest.id != currentOldest.id) {\n            return previousOldest.id;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if members should be loaded.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingMembersPatch = function(state, newState) {\n        if (!state.loadingMembers && newState.loadingMembers) {\n            return true;\n        } else if (state.loadingMembers && !newState.loadingMembers) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if the messages are being loaded for the first time.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingFirstMessages = function(state, newState) {\n        if (state.hasTriedToLoadMessages === newState.hasTriedToLoadMessages) {\n            return null;\n        } else if (!newState.hasTriedToLoadMessages && newState.loadingMessages) {\n            return true;\n        } else if (newState.hasTriedToLoadMessages && !newState.loadingMessages) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if the messages are still being loaded\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingMessages = function(state, newState) {\n        if (!state.loadingMessages && newState.loadingMessages) {\n            return true;\n        } else if (state.loadingMessages && !newState.loadingMessages) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Determine if we should show the emoji picker.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildShowEmojiPicker = function(state, newState) {\n        if (!state.showEmojiPicker && newState.showEmojiPicker) {\n            return true;\n        } else if (state.showEmojiPicker && !newState.showEmojiPicker) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Determine if we should show the emoji auto complete.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildShowEmojiAutoComplete = function(state, newState) {\n        if (!state.showEmojiAutoComplete && newState.showEmojiAutoComplete) {\n            return true;\n        } else if (state.showEmojiAutoComplete && !newState.showEmojiAutoComplete) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Get the user Object of user to be blocked if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmBlockUser = function(state, newState) {\n        if (newState.pendingBlockUserIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingBlockUserIds[0];\n            return newState.members[userId];\n        } else if (state.pendingBlockUserIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Get the user Object of user to be unblocked if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmUnblockUser = function(state, newState) {\n        if (newState.pendingUnblockUserIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingUnblockUserIds[0];\n            return newState.members[userId];\n        } else if (state.pendingUnblockUserIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Get the user Object of user to be added as contact if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmAddContact = function(state, newState) {\n        if (newState.pendingAddContactIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingAddContactIds[0];\n            return newState.members[userId];\n        } else if (state.pendingAddContactIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Get the user Object of user to be removed as contact if pending.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Bool|Null} User Object if Object.\n     */\n    var buildConfirmRemoveContact = function(state, newState) {\n        if (newState.pendingRemoveContactIds.length) {\n            // We currently only support a single user;\n            var userId = newState.pendingRemoveContactIds[0];\n            return newState.members[userId];\n        } else if (state.pendingRemoveContactIds.length) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if there are any messages to be deleted.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object|Null} The conversation type and if the user can delete  the messages for all users.\n     */\n    var buildConfirmDeleteSelectedMessages = function(state, newState) {\n        var oldPendingCount = state.pendingDeleteMessageIds.length;\n        var newPendingCount = newState.pendingDeleteMessageIds.length;\n\n        if (newPendingCount && !oldPendingCount) {\n            return {\n                show: true,\n                type: newState.type,\n                canDeleteMessagesForAllUsers: newState.canDeleteMessagesForAllUsers\n            };\n        } else if (oldPendingCount && !newPendingCount) {\n            return {\n                show: false\n            };\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if there is a conversation to be deleted.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {int|Null} The conversation type to be deleted.\n     */\n    var buildConfirmDeleteConversation = function(state, newState) {\n        if (!state.pendingDeleteConversation && newState.pendingDeleteConversation) {\n            return newState.type;\n        } else if (state.pendingDeleteConversation && !newState.pendingDeleteConversation) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if there is a pending contact request to accept or decline.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildConfirmContactRequest = function(state, newState) {\n        var loggedInUserId = state.loggedInUserId;\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var oldReceivedRequests = !oldOtherUser ? [] : oldOtherUser.contactrequests.filter(function(request) {\n            return request.requesteduserid == loggedInUserId && request.userid == oldOtherUser.id;\n        });\n        var newReceivedRequests = !newOtherUser ? [] : newOtherUser.contactrequests.filter(function(request) {\n            return request.requesteduserid == loggedInUserId && request.userid == newOtherUser.id;\n        });\n        var oldRequest = oldReceivedRequests.length ? oldReceivedRequests[0] : null;\n        var newRequest = newReceivedRequests.length ? newReceivedRequests[0] : null;\n\n        if (!oldRequest && newRequest) {\n            return newOtherUser;\n        } else if (oldRequest && !newRequest) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes in blocked users.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildIsBlocked = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.isblocked ? true : null;\n        } else if (!newOtherUser && oldOtherUser) {\n            return oldOtherUser.isblocked ? false : null;\n        } else if (oldOtherUser.isblocked && !newOtherUser.isblocked) {\n            return false;\n        } else if (!oldOtherUser.isblocked && newOtherUser.isblocked) {\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes the conversation favourite state.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildIsFavourite = function(state, newState) {\n        var oldIsFavourite = state.isFavourite;\n        var newIsFavourite = newState.isFavourite;\n\n        if (state.id === null && newState.id === null) {\n            // The conversation isn't yet created so don't change anything.\n            return null;\n        } else if (state.id === null && newState.id !== null) {\n            // The conversation was created so we can show the add favourite button.\n            return 'show-add';\n        } else if (state.id !== null && newState.id === null) {\n            // We're changing from a created conversation to a new conversation so hide\n            // the favouriting functionality for now.\n            return 'hide';\n        } else if (oldIsFavourite == newIsFavourite) {\n            // No change.\n            return null;\n        } else if (!oldIsFavourite && newIsFavourite) {\n            return 'show-remove';\n        } else if (oldIsFavourite && !newIsFavourite) {\n            return 'show-add';\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes the conversation muted state.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {string|null}\n     */\n    var buildIsMuted = function(state, newState) {\n        var oldIsMuted = state.isMuted;\n        var newIsMuted = newState.isMuted;\n\n        if (state.id === null && newState.id === null) {\n            // The conversation isn't yet created so don't change anything.\n            return null;\n        } else if (state.id === null && newState.id !== null) {\n            // The conversation was created so we can show the mute button.\n            return 'show-mute';\n        } else if (state.id !== null && newState.id === null) {\n            // We're changing from a created conversation to a new conversation so hide\n            // the muting functionality for now.\n            return 'hide';\n        } else if (oldIsMuted == newIsMuted) {\n            // No change.\n            return null;\n        } else if (!oldIsMuted && newIsMuted) {\n            return 'show-unmute';\n        } else if (oldIsMuted && !newIsMuted) {\n            return 'show-mute';\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if there are any changes in the contact status of the current user\n     * and other user.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildIsContact = function(state, newState) {\n        var loggedInUserId = state.loggedInUserId;\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var oldContactRequests = !oldOtherUser ? [] : oldOtherUser.contactrequests.filter(function(request) {\n            return (request.userid == loggedInUserId && request.requesteduserid == oldOtherUser.id) ||\n                (request.userid == oldOtherUser.id && request.requesteduserid == loggedInUserId);\n        });\n        var newContactRequests = !newOtherUser ? [] : newOtherUser.contactrequests.filter(function(request) {\n            return (request.userid == loggedInUserId && request.requesteduserid == newOtherUser.id) ||\n                (request.userid == newOtherUser.id && request.requesteduserid == loggedInUserId);\n        });\n        var oldHasContactRequests = oldContactRequests.length > 0;\n        var newHasContactRequests = newContactRequests.length > 0;\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (oldHasContactRequests && newHasContactRequests) {\n            return null;\n        } else if (!oldHasContactRequests && newHasContactRequests && !newOtherUser.iscontact) {\n            return 'pending-contact';\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.iscontact ? 'contact' : null;\n        } else if (!newOtherUser && oldOtherUser) {\n            return oldOtherUser.iscontact ? 'non-contact' : null;\n        } else if (oldOtherUser.iscontact && !newOtherUser.iscontact) {\n            return newHasContactRequests ? 'pending-contact' : 'non-contact';\n        } else if (!oldOtherUser.iscontact && newOtherUser.iscontact) {\n            return 'contact';\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if a confirm action is active.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildLoadingConfirmationAction = function(state, newState) {\n        if (!state.loadingConfirmAction && newState.loadingConfirmAction) {\n            return true;\n        } else if (state.loadingConfirmAction && !newState.loadingConfirmAction) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Check if a edit mode is active.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildInEditMode = function(state, newState) {\n        var oldHasSelectedMessages = state.selectedMessageIds.length > 0;\n        var newHasSelectedMessages = newState.selectedMessageIds.length > 0;\n        var numberOfMessagesHasChanged = state.messages.length != newState.messages.length;\n\n        if (!oldHasSelectedMessages && newHasSelectedMessages) {\n            return true;\n        } else if (oldHasSelectedMessages && !newHasSelectedMessages) {\n            return false;\n        } else if (oldHasSelectedMessages && numberOfMessagesHasChanged) {\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Build a patch for the messages selected.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} patch\n     */\n    var buildSelectedMessages = function(state, newState) {\n        var oldSelectedMessages = state.selectedMessageIds;\n        var newSelectedMessages = newState.selectedMessageIds;\n\n        if (isArrayEqual(oldSelectedMessages, newSelectedMessages)) {\n            return null;\n        }\n\n        var diff = diffArrays(oldSelectedMessages, newSelectedMessages, function(a, b) {\n            return a == b;\n        });\n\n        return {\n            count: newSelectedMessages.length,\n            add: diff.missingFromA,\n            remove: diff.missingFromB\n        };\n    };\n\n    /**\n     * Get a list of users from the state that are not the logged in user. Use to find group\n     * message members or the other user in a conversation.\n     *\n     * @param  {Object} state State\n     * @return {Array} List of users.\n     */\n    var getOtherUserFromState = function(state) {\n        return Object.keys(state.members).reduce(function(carry, userId) {\n            if (userId != state.loggedInUserId && !carry) {\n                carry = state.members[userId];\n            }\n\n            return carry;\n        }, null);\n    };\n\n    /**\n     * Check if the given user requires a contact request from the logged in user.\n     *\n     * @param  {Integer} loggedInUserId The logged in user id\n     * @param  {Object} user User record\n     * @return {Bool}\n     */\n    var requiresContactRequest = function(loggedInUserId, user) {\n        // If a user can message then no contact request is required.\n        if (user.canmessage) {\n            return false;\n        }\n\n        var contactRequests = user.contactrequests.filter(function(request) {\n            return request.userid == loggedInUserId || request.requesteduserid;\n        });\n        var hasSentContactRequest = contactRequests.length > 0;\n        return user.requirescontact && !user.iscontact && !hasSentContactRequest;\n    };\n\n    /**\n     * Check if other users are required to be added as contact.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} Object controlling the required to add contact dialog variables.\n     */\n    var buildRequireAddContact = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var hadMessages = state.messages.length > 0;\n        var hasMessages = newState.messages.length > 0;\n        var loggedInUserId = newState.loggedInUserId;\n        var prevRequiresContactRequest = oldOtherUser && requiresContactRequest(loggedInUserId, oldOtherUser);\n        var nextRequiresContactRequest = newOtherUser && requiresContactRequest(loggedInUserId, newOtherUser);\n        var confirmAddContact = buildConfirmAddContact(state, newState);\n        var finishedAddContact = confirmAddContact === false;\n\n        // Still doing first load.\n        if (!state.hasTriedToLoadMessages && !newState.hasTriedToLoadMessages) {\n            return null;\n        }\n\n        // No users yet.\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        }\n\n        // We've loaded a new user and they require a contact request.\n        if (!oldOtherUser && nextRequiresContactRequest) {\n            return {\n                show: true,\n                hasMessages: hasMessages,\n                user: newOtherUser\n            };\n        }\n\n        // The logged in user has completed the confirm contact request dialogue\n        // but the other user still requires a contact request which means the logged\n        // in user either declined the confirmation or it failed.\n        if (finishedAddContact && nextRequiresContactRequest) {\n            return {\n                show: true,\n                hasMessages: hasMessages,\n                user: newOtherUser\n            };\n        }\n\n        // Everything is loaded.\n        if (state.hasTriedToLoadMessages && newState.hasTriedToLoadMessages) {\n            if (!prevRequiresContactRequest && nextRequiresContactRequest) {\n                return {\n                    show: true,\n                    hasMessages: hasMessages,\n                    user: newOtherUser\n                };\n            }\n\n            if (prevRequiresContactRequest && !nextRequiresContactRequest) {\n                return {\n                    show: false,\n                    hasMessages: hasMessages\n                };\n            }\n        }\n\n        // First load just completed.\n        if (!state.hasTriedToLoadMessages && newState.hasTriedToLoadMessages) {\n            if (nextRequiresContactRequest) {\n                return {\n                    show: true,\n                    hasMessages: hasMessages,\n                    user: newOtherUser\n                };\n            }\n        }\n\n        // Being reset.\n        if (state.hasTriedToLoadMessages && !newState.hasTriedToLoadMessages) {\n            if (prevRequiresContactRequest) {\n                return {\n                    show: false,\n                    hasMessages: hadMessages\n                };\n            }\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if other users are required to be unblocked.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildRequireUnblock = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (oldOtherUser && !newOtherUser) {\n            return oldOtherUser.isblocked ? false : null;\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.isblocked ? true : null;\n        } else if (!oldOtherUser.isblocked && newOtherUser.isblocked) {\n            return true;\n        } else if (oldOtherUser.isblocked && !newOtherUser.isblocked) {\n            return false;\n        }\n\n        return null;\n    };\n\n    /**\n     * Check if other users can be messaged.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Bool|Null}\n     */\n    var buildUnableToMessage = function(state, newState) {\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n\n        if (newState.type == Constants.CONVERSATION_TYPES.SELF) {\n            // Users always can send message themselves on self-conversations.\n            return null;\n        }\n\n        if (!oldOtherUser && !newOtherUser) {\n            return null;\n        } else if (oldOtherUser && !newOtherUser) {\n            return oldOtherUser.canmessage ? null : true;\n        } else if (!oldOtherUser && newOtherUser) {\n            return newOtherUser.canmessage ? null : true;\n        } else if (!oldOtherUser.canmessage && newOtherUser.canmessage) {\n            return false;\n        } else if (oldOtherUser.canmessage && !newOtherUser.canmessage) {\n            return true;\n        }\n\n        return null;\n    };\n\n    /**\n     * Build patch for footer information for a private conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} containing footer state type.\n     */\n    var buildFooterPatchTypePrivate = function(state, newState) {\n        var loadingFirstMessages = buildLoadingFirstMessages(state, newState);\n        var inEditMode = buildInEditMode(state, newState);\n        var requireAddContact = buildRequireAddContact(state, newState);\n        var requireUnblock = buildRequireUnblock(state, newState);\n        var unableToMessage = buildUnableToMessage(state, newState);\n        var showRequireAddContact = requireAddContact !== null ? requireAddContact.show && requireAddContact.hasMessages : null;\n        var otherUser = getOtherUserFromState(newState);\n        var generateReturnValue = function(checkValue, successReturn) {\n            if (checkValue) {\n                return successReturn;\n            } else if (checkValue !== null && !checkValue) {\n                if (!otherUser) {\n                    return {type: 'content'};\n                } else if (otherUser.isblocked) {\n                    return {type: 'unblock'};\n                } else if (newState.messages.length && requiresContactRequest(newState.loggedInUserId, otherUser)) {\n                    return {\n                        type: 'add-contact',\n                        user: otherUser\n                    };\n                } else if (!otherUser.canmessage && (otherUser.requirescontact && !otherUser.iscontact)) {\n                    return {type: 'unable-to-message'};\n                }\n            }\n\n            return null;\n        };\n\n        if (\n            loadingFirstMessages === null &&\n            inEditMode === null &&\n            requireAddContact === null &&\n            requireUnblock === null\n        ) {\n            return null;\n        }\n\n        var checks = [\n            [loadingFirstMessages, {type: 'placeholder'}],\n            [inEditMode, {type: 'edit-mode'}],\n            [unableToMessage, {type: 'unable-to-message'}],\n            [requireUnblock, {type: 'unblock'}],\n            [showRequireAddContact, {type: 'add-contact', user: otherUser}]\n        ];\n\n        for (var i = 0; i < checks.length; i++) {\n            var checkValue = checks[i][0];\n            var successReturn = checks[i][1];\n            var result = generateReturnValue(checkValue, successReturn);\n\n            if (result !== null) {\n                return result;\n            }\n        }\n\n        return {\n            type: 'content'\n        };\n    };\n\n    /**\n     * Build patch for footer information for a public conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} containing footer state type.\n     */\n    var buildFooterPatchTypePublic = function(state, newState) {\n        var loadingFirstMessages = buildLoadingFirstMessages(state, newState);\n        var inEditMode = buildInEditMode(state, newState);\n\n        if (loadingFirstMessages === null && inEditMode === null) {\n            return null;\n        }\n\n        if (loadingFirstMessages) {\n            return {type: 'placeholder'};\n        }\n\n        if (inEditMode) {\n            return {type: 'edit-mode'};\n        }\n\n        return {\n            type: 'content'\n        };\n    };\n\n    /**\n     * Check if we're viewing a different conversation. If so then we need to\n     * reset the UI.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {bool|null} If a reset needs to occur\n     */\n    var buildReset = function(state, newState) {\n        var oldType = state.type;\n        var newType = newState.type;\n        var oldConversationId = state.id;\n        var newConversationId = newState.id;\n        var oldMemberIds = Object.keys(state.members);\n        var newMemberIds = Object.keys(newState.members);\n\n        oldMemberIds.sort();\n        newMemberIds.sort();\n\n        var membersUnchanged = oldMemberIds.every(function(id, index) {\n            return id == newMemberIds[index];\n        });\n\n        if (oldType != newType) {\n            // If we've changed conversation type then we need to reset.\n            return true;\n        } else if (oldConversationId && !newConversationId) {\n            // We previously had a conversation id but no longer do. This likely means\n            // the user is viewing the conversation with someone they've never spoken to\n            // before.\n            return true;\n        } else if (oldConversationId && newConversationId && oldConversationId != newConversationId) {\n            // If we had a conversation id and it's changed then we need to reset.\n            return true;\n        } else if (!oldConversationId && !newConversationId && !membersUnchanged) {\n            // If we never had a conversation id but the members of the conversation have\n            // changed then we need to reset. This can happen if the user goes from viewing\n            // a user they've never had a conversation with to viewing a different user that\n            // they've never had a conversation with.\n            return true;\n        }\n\n        return null;\n    };\n\n    /**\n     * We should show this message always, for all the self-conversations.\n     *\n     * The message should be hidden when it's not a self-conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {bool}\n     */\n    var buildSelfConversationMessage = function(state, newState) {\n        if (state.type != newState.type) {\n            return (newState.type == Constants.CONVERSATION_TYPES.SELF);\n        }\n\n        return null;\n    };\n\n    /**\n     * We should show the contact request sent message if the user just sent\n     * a contact request to the other user and there are no messages in the\n     * conversation.\n     *\n     * The messages should be hidden when there are messages in the conversation.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {string|false|null}\n     */\n    var buildContactRequestSent = function(state, newState) {\n        var loggedInUserId = newState.loggedInUserId;\n        var oldOtherUser = getOtherUserFromState(state);\n        var newOtherUser = getOtherUserFromState(newState);\n        var oldSentRequests = !oldOtherUser ? [] : oldOtherUser.contactrequests.filter(function(request) {\n            return request.userid == loggedInUserId;\n        });\n        var newSentRequests = !newOtherUser ? [] : newOtherUser.contactrequests.filter(function(request) {\n            return request.userid == loggedInUserId;\n        });\n        var oldRequest = oldSentRequests.length > 0;\n        var newRequest = newSentRequests.length > 0;\n        var hadMessages = state.messages.length > 0;\n        var hasMessages = state.messages.length > 0;\n\n        if (!oldRequest && newRequest && !newOtherUser.iscontact && !hasMessages) {\n            return newOtherUser.fullname;\n        } else if (oldOtherUser && !oldOtherUser.iscontact && newRequest && newOtherUser.iscontact) {\n            // Contact request accepted.\n            return false;\n        } else if (oldRequest && !newRequest) {\n            return false;\n        } else if (!hadMessages && hasMessages) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Build the full patch comparing the current state and the new state. This patch is used by\n     * the conversation renderer to render the UI on any update.\n     *\n     * @param  {Object} state The current state.\n     * @param  {Object} newState The new state.\n     * @return {Object} Patch containing all information changed.\n     */\n    var buildPatch = function(state, newState) {\n        var config = {\n            all: {\n                reset: buildReset,\n                conversation: buildConversationPatch,\n                scrollToMessage: buildScrollToMessagePatch,\n                loadingMembers: buildLoadingMembersPatch,\n                loadingFirstMessages: buildLoadingFirstMessages,\n                loadingMessages: buildLoadingMessages,\n                confirmDeleteSelectedMessages: buildConfirmDeleteSelectedMessages,\n                inEditMode: buildInEditMode,\n                selectedMessages: buildSelectedMessages,\n                isFavourite: buildIsFavourite,\n                isMuted: buildIsMuted,\n                showEmojiPicker: buildShowEmojiPicker,\n                showEmojiAutoComplete: buildShowEmojiAutoComplete\n            }\n        };\n        // These build functions are only applicable to private conversations.\n        config[Constants.CONVERSATION_TYPES.PRIVATE] = {\n            header: buildHeaderPatchTypePrivate,\n            footer: buildFooterPatchTypePrivate,\n            confirmBlockUser: buildConfirmBlockUser,\n            confirmUnblockUser: buildConfirmUnblockUser,\n            confirmAddContact: buildConfirmAddContact,\n            confirmRemoveContact: buildConfirmRemoveContact,\n            confirmContactRequest: buildConfirmContactRequest,\n            confirmDeleteConversation: buildConfirmDeleteConversation,\n            isBlocked: buildIsBlocked,\n            isContact: buildIsContact,\n            loadingConfirmAction: buildLoadingConfirmationAction,\n            requireAddContact: buildRequireAddContact,\n            contactRequestSent: buildContactRequestSent\n        };\n        // These build functions are only applicable to public (group) conversations.\n        config[Constants.CONVERSATION_TYPES.PUBLIC] = {\n            header: buildHeaderPatchTypePublic,\n            footer: buildFooterPatchTypePublic,\n        };\n        // These build functions are only applicable to self-conversations.\n        config[Constants.CONVERSATION_TYPES.SELF] = {\n            header: buildHeaderPatchTypeSelf,\n            footer: buildFooterPatchTypePublic,\n            confirmDeleteConversation: buildConfirmDeleteConversation,\n            selfConversationMessage: buildSelfConversationMessage\n        };\n\n        var patchConfig = $.extend({}, config.all);\n        if (newState.type && newState.type in config) {\n            // Add the type specific builders to the patch config.\n            patchConfig = $.extend(patchConfig, config[newState.type]);\n        }\n\n        return Object.keys(patchConfig).reduce(function(patch, key) {\n            var buildFunc = patchConfig[key];\n            var value = buildFunc(state, newState);\n\n            if (value !== null) {\n                patch[key] = value;\n            }\n\n            return patch;\n        }, {});\n    };\n\n    return {\n        buildPatch: buildPatch\n    };\n});\n"],"file":"message_drawer_view_conversation_patcher.min.js"}