define ("core_message/default_notification_preferences",["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;const selectors={provider:".defaultmessageoutputs .provider_enabled",lockSetting:".locked_message_setting",enabledSetting:".enabled_message_setting",allSettings:".locked_message_setting, .enabled_message_setting"},registerEventListeners=()=>{const toggleLockSetting=lockedElement=>{const isEnabled=lockedElement.checked||!1,enabledId=lockedElement.id.replace("_locked[","_enabled["),enabledElement=document.getElementById(enabledId).closest("div.custom-control");enabledElement.classList.toggle("dimmed_text",isEnabled)},toggleEnableProviderSettings=providerEnabledElement=>{const isEnabled=providerEnabledElement.checked||!1,parentRow=providerEnabledElement.closest("tr"),elements=parentRow.querySelectorAll(selectors.allSettings);elements.forEach(element=>{element.toggleAttribute("disabled",!isEnabled)})},container=document.querySelector(".preferences-container");container.querySelectorAll(selectors.provider).forEach(providerEnabledElement=>{if(!providerEnabledElement.checked){toggleEnableProviderSettings(providerEnabledElement)}providerEnabledElement.addEventListener("change",e=>{toggleEnableProviderSettings(e.target)})});container.querySelectorAll(selectors.lockSetting).forEach(lockedElement=>{if(lockedElement.checked){toggleLockSetting(lockedElement)}lockedElement.addEventListener("change",e=>{toggleLockSetting(e.target)})})};_exports.default={init:()=>{registerEventListeners()}};return _exports.default});
//# sourceMappingURL=default_notification_preferences.min.js.map
