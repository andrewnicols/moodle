{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder editor\n *\n * @module      core_reportbuilder/editor\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {init as columnsEditorInit} from 'core_reportbuilder/local/editor/columns';\nimport {init as conditionsEditorInit} from 'core_reportbuilder/local/editor/conditions';\nimport {init as filtersEditorInit} from 'core_reportbuilder/local/editor/filters';\nimport {init as sortingEditorInit} from 'core_reportbuilder/local/editor/sorting';\nimport {init as cardviewEditorInit} from 'core_reportbuilder/local/editor/card_view';\nimport {getReport} from 'core_reportbuilder/local/repository/reports';\nimport {createReportModal} from 'core_reportbuilder/local/repository/modals';\n\nlet initialized = false;\n\n/**\n * Initialise editor and all it's modules\n */\nexport const init = () => {\n    columnsEditorInit(initialized);\n    conditionsEditorInit(initialized);\n    filtersEditorInit(initialized);\n    sortingEditorInit(initialized);\n    cardviewEditorInit(initialized);\n\n    // Ensure we only add our listeners once (can be called multiple times by mustache template).\n    if (initialized) {\n        return;\n    }\n\n    // Add event handlers to generic report editor elements.\n    document.addEventListener('click', event => {\n\n        // Toggle between edit and preview mode.\n        const toggleEditViewMode = event.target.closest(reportSelectors.actions.toggleEditPreview);\n        if (toggleEditViewMode) {\n            event.preventDefault();\n\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const pendingPromise = new Pending('core_reportbuilder/reports:get');\n            const toggledEditMode = toggleEditViewMode.dataset.editMode !== \"1\";\n\n            let customjs = '';\n\n            getReport(reportElement.dataset.reportId, toggledEditMode)\n                .then(response => {\n                    customjs = response.javascript;\n                    return Templates.render('core_reportbuilder/local/dynamictabs/editor', response);\n                })\n                .then((html, js) => {\n                    return Templates.replaceNode(reportElement, html, js + customjs);\n                })\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n\n        // Edit report details modal.\n        const reportEdit = event.target.closest(reportSelectors.actions.reportEdit);\n        if (reportEdit) {\n            event.preventDefault();\n\n            const reportModal = createReportModal(event.target, getString('editreportdetails', 'core_reportbuilder'),\n                reportEdit.dataset.reportId);\n            reportModal.addEventListener(reportModal.events.FORM_SUBMITTED, () => {\n                getString('reportupdated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        return window.location.reload();\n                    })\n                    .catch(Notification.exception);\n            });\n            reportModal.show();\n        }\n    });\n\n    initialized = true;\n};\n"],"names":["_notification","_interopRequireDefault","_pending","_templates","reportSelectors","_interopRequireWildcard","initialized","_columns","init","_conditions","_filters","_sorting","_card_view","document","addEventListener","event","toggleEditViewMode","target","closest","actions","toggleEditPreview","preventDefault","reportElement","regions","report","pendingPromise","Pending","default","toggledEditMode","dataset","editMode","customjs","reportId","then","response","javascript","Templates","render","html","js","replaceNode","resolve","catch","Notification","exception","reportEdit","reportModal","_modals","createReportModal","_str","get_string","events","FORM_SUBMITTED","addToast","add","window","location","reload","show"],"mappings":"mkCA0BAA,cAAAC,uBAAAD,eACAE,SAAAD,uBAAAC,UACAC,WAAAF,uBAAAE,YAGAC,4pBAAAC,CAAAD,iBASIE,IAAAA,aAAc,gBAKE,MAChB,EAAAC,SAAAC,MAAkBF,cAClB,EAAAG,YAAAD,MAAqBF,cACrB,EAAAI,SAAAF,MAAkBF,cAClB,EAAAK,SAAAH,MAAkBF,cAClB,EAAAM,WAAAJ,MAAmBF,aAGfA,cAKJO,SAASC,iBAAiB,SAASC,QAG/B,MAAMC,mBAAqBD,MAAME,OAAOC,QAAQd,gBAAgBe,QAAQC,mBACxE,GAAIJ,mBAAoB,CACpBD,MAAMM,iBAEN,MAAMC,cAAgBP,MAAME,OAAOC,QAAQd,gBAAgBmB,QAAQC,QAC7DC,eAAiB,IAAIC,SAAJC,QAAY,kCAC7BC,gBAA0D,MAAxCZ,mBAAmBa,QAAQC,SAE/CC,IAAAA,SAAW,IAELT,EAAAA,SAAAA,WAAAA,cAAcO,QAAQG,SAAUJ,iBACrCK,MAAKC,WACFH,SAAWG,SAASC,WACbC,mBAAUC,OAAO,8CAA+CH,aAE1ED,MAAK,CAACK,KAAMC,KACFH,WAAAA,QAAUI,YAAYlB,cAAegB,KAAMC,GAAKR,YAE1DE,MAAK,IAAMR,eAAegB,YAC1BC,MAAMC,cAAAA,QAAaC,UAC3B,CAGD,MAAMC,WAAa9B,MAAME,OAAOC,QAAQd,gBAAgBe,QAAQ0B,YAChE,GAAIA,WAAY,CACZ9B,MAAMM,iBAEN,MAAMyB,aAAc,EAAAC,QAAAC,mBAAkBjC,MAAME,QAAQ,EAAUgC,KAAAC,YAAA,oBAAqB,sBAC/EL,WAAWhB,QAAQG,UACvBc,YAAYhC,iBAAiBgC,YAAYK,OAAOC,gBAAgB,MAClD,EAAAH,KAAAC,YAAA,gBAAiB,sBACtBjB,KAAKoB,OADVC,KAEKrB,MAAK,IACKsB,OAAOC,SAASC,WAE1Bf,MAAMC,cAAAA,QAAaC,UALxB,IAOJE,YAAYY,MACf,KAGLpD,aAAc,EAAd"}