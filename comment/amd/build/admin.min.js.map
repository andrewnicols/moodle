{"version":3,"file":"admin.min.js","sources":["../src/admin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Comments admin management\n *\n * @module      core_comment/admin\n * @copyright   2022 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {deleteComment, deleteComments} from 'core_comment/repository';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\n\nconst Selectors = {\n    commentDelete: '[data-action=\"comment-delete\"]',\n    commentDeleteChecked: '[data-togglegroup=\"report-select-all\"][data-toggle=\"slave\"]:checked',\n    commentDeleteSelected: '[data-action=\"comment-delete-selected\"]',\n};\n\n/**\n * Initialise module\n */\nexport const init = () => {\n    prefetchStrings('core_admin', [\n        'confirmdeletecomments',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n        'deleteselected'\n    ]);\n\n    document.addEventListener('click', event => {\n        const commentDelete = event.target.closest(Selectors.commentDelete);\n        if (commentDelete) {\n            event.preventDefault();\n\n            // Use triggerElement to return focus to the action menu toggle.\n            const triggerElement = commentDelete.closest('.dropdown').querySelector('.dropdown-toggle');\n            Notification.saveCancelPromise(\n                getString('delete', 'core'),\n                getString('confirmdeletecomments', 'core_admin'),\n                getString('delete', 'core'),\n                {triggerElement}\n            ).then(() => {\n                const pendingPromise = new Pending('core_comment/comment:delete');\n                const reportElement = event.target.closest(reportSelectors.regions.report);\n\n                return deleteComment(commentDelete.dataset.commentId)\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n\n        const commentDeleteSelected = event.target.closest(Selectors.commentDeleteSelected);\n        if (commentDeleteSelected) {\n            event.preventDefault();\n\n            const reportElement = document.querySelector(reportSelectors.regions.report);\n            const commentDeleteChecked = reportElement.querySelectorAll(Selectors.commentDeleteChecked);\n            if (commentDeleteChecked.length === 0) {\n                return;\n            }\n\n            Notification.saveCancelPromise(\n                getString('deleteselected', 'core'),\n                getString('confirmdeletecomments', 'core_admin'),\n                getString('delete', 'core'),\n                {triggerElement: commentDeleteSelected}\n            ).then(() => {\n                const pendingPromise = new Pending('core_comment/comments:delete');\n                const deleteCommentIds = [...commentDeleteChecked].map(check => check.value);\n\n                return deleteComments(deleteCommentIds)\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n};\n"],"names":["_notification","_interopRequireDefault","_pending","reportEvents","_interopRequireWildcard","reportSelectors","Selectors","_prefetch","prefetchStrings","document","addEventListener","event","commentDelete","target","closest","preventDefault","triggerElement","querySelector","Notification","saveCancelPromise","_str","get_string","then","pendingPromise","Pending","default","reportElement","regions","report","_repository","deleteComment","dataset","commentId","tableReload","preservePagination","resolve","catch","exception","commentDeleteSelected","commentDeleteChecked","querySelectorAll","length","deleteCommentIds","map","check","value"],"mappings":"06CA0BAA,cAAAC,uBAAAD,eACAE,SAAAD,uBAAAC,UAIAC,aAAAC,wBAAAD,cACAE,gBAAAD,wBAAAC,iBAEA,MAAMC,wBACa,iCADbA,+BAEoB,sEAFpBA,gCAGqB,wDAMP,MAChB,EAAAC,UAAAC,iBAAgB,aAAc,CAC1B,2BAGJ,EAAAD,UAAAC,iBAAgB,OAAQ,CACpB,SACA,mBAGJC,SAASC,iBAAiB,SAASC,QACzBC,MAAAA,cAAgBD,MAAME,OAAOC,QAAQR,yBAC3C,GAAIM,cAAe,CACfD,MAAMI,iBAGAC,MAAAA,eAAiBJ,cAAcE,QAAQ,aAAaG,cAAc,oBACxEC,cAAAA,QAAaC,mBACT,EAAAC,KAAAC,YAAU,SAAU,SACpB,EAAAD,KAAAC,YAAU,wBAAyB,eACnC,EAAAD,KAAAC,YAAU,SAAU,QACpB,CAACL,gCACHM,MAAK,KACH,MAAMC,eAAiB,IAAIC,SAAJC,QAAY,+BAC7BC,cAAgBf,MAAME,OAAOC,QAAQT,gBAAgBsB,QAAQC,QAE5D,OAAA,EAAAC,YAAAC,eAAclB,cAAcmB,QAAQC,WACtCV,MAAK,MACYnB,EAAAA,kBAAAA,eAAAA,aAAa8B,YAAa,CAACC,oBAAoB,GAAOR,eAC7DH,eAAeY,aAEzBC,MAAMlB,cAAAA,QAAamB,UALxB,IAMDD,OAAM,KACL,GAEP,CAEKE,MAAAA,sBAAwB3B,MAAME,OAAOC,QAAQR,iCACnD,GAAIgC,sBAAuB,CACvB3B,MAAMI,iBAEAW,MAAAA,cAAgBjB,SAASQ,cAAcZ,gBAAgBsB,QAAQC,QAC/DW,qBAAuBb,cAAcc,iBAAiBlC,gCAC5D,GAAoC,IAAhCiC,qBAAqBE,OACrB,OAGJvB,cAAAA,QAAaC,mBACT,EAAAC,KAAAC,YAAU,iBAAkB,SAC5B,EAAAD,KAAAC,YAAU,wBAAyB,eACnC,EAAAD,KAAAC,YAAU,SAAU,QACpB,CAACL,eAAgBsB,wBACnBhB,MAAK,KACH,MAAMC,eAAiB,IAAIC,SAAJC,QAAY,gCAC7BiB,iBAAmB,IAAIH,sBAAsBI,KAAIC,OAASA,MAAMC,QAEtE,OAAO,EAAeH,YAAAA,gBAAAA,kBACjBpB,MAAK,MACYnB,EAAAA,kBAAAA,eAAAA,aAAa8B,YAAa,CAACC,oBAAoB,GAAOR,eAC7DH,eAAeY,aAEzBC,MAAMlB,cAAAA,QAAamB,UALxB,IAMDD,OAAM,KACL,GAEP,IAvDL"}