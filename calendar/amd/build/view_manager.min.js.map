{"version":3,"file":"view_manager.min.js","sources":["../src/view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @package    core_calendar\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport CalendarEvents from 'core_calendar/events';\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'core_calendar/summary_modal';\nimport CustomEvents from 'core/custom_interaction_events';\nimport Pending from 'core/pending';\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n */\nconst registerEventListeners = (root) => {\n    root = $(root);\n\n    // Bind click events to event links.\n    root.on('click', CalendarSelectors.links.eventLink, (e) => {\n        const target = e.target;\n        let eventLink = null;\n        let eventId = null;\n        const pendingPromise = new Pending('core_calendar/view_manager:eventLink:click');\n\n        if (target.matches(CalendarSelectors.actions.viewEvent)) {\n            eventLink = target;\n        } else {\n            eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n        }\n\n        if (eventLink) {\n            eventId = eventLink.dataset.eventId;\n        } else {\n            eventId = target.querySelector(CalendarSelectors.actions.viewEvent).dataset.eventId;\n        }\n\n        if (eventId) {\n            // A link was found. Show the modal.\n\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderEventSummaryModal(eventId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n\n    root.on('click', CalendarSelectors.links.navLink, (e) => {\n        const wrapper = root.find(CalendarSelectors.wrapper);\n        const view = wrapper.data('view');\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        if (view === 'month') {\n            changeMonth(root, link.href, link.dataset.year, link.dataset.month, courseId, categoryId, link.dataset.day);\n            e.preventDefault();\n        } else if (view === 'day') {\n            changeDay(root, link.href, link.dataset.year, link.dataset.month, link.dataset.day, courseId, categoryId);\n            e.preventDefault();\n        }\n    });\n\n    const viewSelector = root.find(CalendarSelectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const view = option.dataset.view,\n                year = option.dataset.year,\n                month = option.dataset.month,\n                day = option.dataset.day,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            if (view == 'month') {\n                refreshMonthContent(root, year, month, courseId, categoryId, root, 'core_calendar/calendar_month', day)\n                    .then(() => {\n                        return window.history.pushState({}, '', '?view=month');\n                    }).fail(Notification.exception);\n            } else if (view == 'day') {\n                refreshDayContent(root, year, month, day, courseId, categoryId, root, 'core_calendar/calendar_day')\n                    .then(() => {\n                        return window.history.pushState({}, '', '?view=day');\n                    }).fail(Notification.exception);\n            } else if (view == 'upcoming') {\n                reloadCurrentUpcoming(root, courseId, categoryId, root, 'core_calendar/calendar_upcoming')\n                    .then(() => {\n                        return window.history.pushState({}, '', '?view=upcoming');\n                    }).fail(Notification.exception);\n            }\n        }\n    );\n};\n\n/**\n * Refresh the month content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const refreshMonthContent = (root, year, month, courseId, categoryId, target = null, template = '', day = 1) => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, courseId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    const mini = root.data('mini');\n    return CalendarRepository.getCalendarMonthData(year, month, courseId, categoryId, includenavigation, mini, day)\n        .then(context => {\n            context.viewingmonth = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The container element\n * @param {string} url The calendar url to be shown\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const changeMonth = (root, url, year, month, courseId, categoryId, day = 1) => {\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                window.history.pushState({}, '', url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.monthChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(CalendarSelectors.wrapper).data('year');\n    const month = root.find(CalendarSelectors.wrapper).data('month');\n    const day = root.find(CalendarSelectors.wrapper).data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day);\n};\n\n\n/**\n * Refresh the day content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} day Day\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n *\n * @return {promise}\n */\nexport const refreshDayContent = (root, year, month, day, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    return CalendarRepository.getCalendarDayData(year, month, day, courseId, categoryId, includenavigation)\n        .then((context) => {\n            context.viewingday = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Reload the current day view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentDay = (root, courseId = 0, categoryId = 0) => {\n    const wrapper = root.find(CalendarSelectors.wrapper);\n    const year = wrapper.data('year');\n    const month = wrapper.data('month');\n    const day = wrapper.data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshDayContent(root, year, month, day, courseId, categoryId);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The root element.\n * @param {String} url The calendar url to be shown\n * @param {Number} year Year\n * @param {Number} month Month\n * @param {Number} day Day\n * @param {Number} courseId The id of the course whose events are shown\n * @param {Number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const changeDay = (root, url, year, month, day, courseId, categoryId) => {\n    return refreshDayContent(root, year, month, day, courseId, categoryId)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                window.history.pushState({}, '', url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.dayChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\nconst startLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.removeClass('hidden');\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nconst stopLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.addClass('hidden');\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const reloadCurrentUpcoming = (root, courseId = 0, categoryId = 0, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n        .then((context) => {\n            context.viewingupcoming = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(function() {\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Get the CSS class to apply for the given event type.\n *\n * @param {string} eventType The calendar event type\n * @return {string}\n */\nconst getEventTypeClassFromType = (eventType) => {\n    return 'calendar_event_' + eventType;\n};\n\n/**\n * Render the event summary modal.\n *\n * @param {Number} eventId The calendar event id.\n * @returns {Promise}\n */\nconst renderEventSummaryModal = (eventId) => {\n    const pendingPromise = new Pending('core_calendar/view_manager:renderEventSummaryModal');\n\n    // Calendar repository promise.\n    return CalendarRepository.getEventById(eventId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.event) {\n            throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n        }\n\n        return getEventResponse.event;\n    })\n    .then(eventData => {\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: eventData.name,\n            type: SummaryModal.TYPE,\n            body: Templates.render('core_calendar/event_summary_body', eventData),\n            templateContext: {\n                canedit: eventData.canedit,\n                candelete: eventData.candelete,\n                headerclasses: getEventTypeClassFromType(eventData.normalisedeventtype),\n                isactionevent: eventData.isactionevent,\n                url: eventData.url,\n                action: eventData.action\n            }\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\nexport const init = (root, view) => {\n    registerEventListeners(root, view);\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_jquery","_templates","_notification","CalendarRepository","_events","CalendarSelectors","_modal_factory","_modal_events","_summary_modal","_custom_interaction_events","_pending","refreshMonthContent","root","year","month","courseId","categoryId","target","arguments","length","undefined","template","day","startLoading","find","wrapper","attr","M","util","js_pending","join","includenavigation","data","mini","getCalendarMonthData","then","context","viewingmonth","Templates","render","html","js","replaceNode","document","querySelector","dispatchEvent","CustomEvent","CalendarEvents","viewUpdated","always","js_complete","stopLoading","fail","Notification","exception","_exports","changeMonth","url","window","history","pushState","_len","args","Array","_key","$","trigger","monthChanged","_len2","_key2","reloadCurrentMonth","refreshDayContent","getCalendarDayData","viewingday","reloadCurrentDay","changeDay","_len3","_key3","dayChanged","_len4","_key4","containers","loadingIcon","removeClass","addClass","reloadCurrentUpcoming","getCalendarUpcomingData","viewingupcoming","renderEventSummaryModal","eventId","pendingPromise","Pending","getEventById","getEventResponse","event","Error","eventData","eventType","modalParams","title","name","type","SummaryModal","TYPE","body","templateContext","canedit","candelete","headerclasses","normalisedeventtype","isactionevent","action","ModalFactory","create","modal","getRoot","on","ModalEvents","hidden","destroy","show","resolve","catch","init","view","links","eventLink","e","matches","actions","viewEvent","closest","dataset","preventDefault","stopPropagation","navLink","link","currentTarget","href","viewSelector","CustomEvents","define","events","activate","option","classList","contains","courseid","categoryid","registerEventListeners"],"mappings":"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"}