{"version":3,"sources":["../src/manage_subscriptions.js"],"names":["getSubscriptionId","element","parseInt","closest","dataset","subid","getSubscriptionName","subname","getSubscriptionRow","subscriptionId","document","querySelector","createModal","messageCode","subscriptionName","Modal","create","type","types","SAVE_CANCEL","title","body","buttons","save","then","modal","getRoot","on","ModalEvents","hidden","focus","show","responseHandlerForDelete","data","message","status","warnings","registerEventListeners","addEventListener","e","deleteAction","target","CalendarSelectors","actions","deleteSubscription","preventDefault","modalPromise","CalendarRepository","response","subscriptionRow","remove","catch","displayException","eventTypes","elementUpdated","inplaceEditable","getAttribute","init","Prefetch","prefetchStrings"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A module to handle Delete/Update operations of the manage subscription page.\n *\n * @module core_calendar/manage_subscriptions\n * @copyright 2021 Huong Nguyen <huongnv13@gmail.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since 4.0\n */\n\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport {displayException, addNotification, fetchNotifications} from 'core/notification';\nimport Prefetch from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {eventTypes} from 'core/local/inplace_editable/events';\n\n/**\n * Get subscription id for given element.\n *\n * @param {HTMLElement} element update/delete link\n * @return {Number}\n */\nconst getSubscriptionId = element => {\n    return parseInt(element.closest('tr').dataset.subid);\n};\n\n/**\n * Get subscription name for given element.\n *\n * @param {HTMLElement} element update/delete link\n * @return {String}\n */\nconst getSubscriptionName = element => {\n    return element.closest('tr').dataset.subname;\n};\n\n/**\n * Get subscription table row for subscription id.\n *\n * @param {string} subscriptionId Subscription id\n * @return {Element}\n */\nconst getSubscriptionRow = subscriptionId => {\n    return document.querySelector(`tr[data-subid=\"${subscriptionId}\"]`);\n};\n\n/**\n * Create modal.\n *\n * @param {HTMLElement} element\n * @param {string} messageCode Message code.\n * @return {promise} Promise for modal\n */\nconst createModal = (element, messageCode) => {\n    const subscriptionName = getSubscriptionName(element);\n    return Modal.create({\n        type: Modal.types.SAVE_CANCEL,\n        title: getString('confirmation', 'admin'),\n        body: getString(messageCode, 'calendar', subscriptionName),\n        buttons: {\n            save: getString('yes')\n        },\n    }).then(modal => {\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            element.focus();\n        });\n        modal.show();\n        return modal;\n    });\n};\n\n/**\n * Response handler for delete action.\n *\n * @param {HTMLElement} element\n * @param {Object} data\n * @return {Promise}\n */\nconst responseHandlerForDelete = async(element, data) => {\n    const subscriptionName = getSubscriptionName(element);\n    const message = data.status ? await getString('subscriptionremoved', 'calendar', subscriptionName) : data.warnings[0].message;\n    const type = data.status ? 'info' : 'error';\n    return addNotification({message, type});\n};\n\n/**\n * Register events for update/delete links.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const deleteAction = e.target.closest(CalendarSelectors.actions.deleteSubscription);\n        if (deleteAction) {\n            e.preventDefault();\n            const modalPromise = createModal(deleteAction, 'confirmsubscriptiondelete');\n            modalPromise.then(modal => {\n                modal.getRoot().on(ModalEvents.save, () => {\n                    const subscriptionId = getSubscriptionId(deleteAction);\n                    CalendarRepository.deleteSubscription(subscriptionId).then(data => {\n                        const response = responseHandlerForDelete(deleteAction, data);\n                        return response.then(() => {\n                            const subscriptionRow = getSubscriptionRow(subscriptionId);\n                            return subscriptionRow.remove();\n                        });\n                    }).catch(displayException);\n                });\n\n                return modal;\n            }).catch(displayException);\n        }\n    });\n\n    document.addEventListener(eventTypes.elementUpdated, e => {\n        const inplaceEditable = e.target;\n        if (inplaceEditable.getAttribute('data-component') == 'core_calendar') {\n            fetchNotifications();\n        }\n    });\n};\n\n/**\n * Initialises.\n */\nexport const init = () => {\n    Prefetch.prefetchStrings('moodle', ['yes']);\n    Prefetch.prefetchStrings('core_admin', ['confirmation']);\n    Prefetch.prefetchStrings('core_calendar', ['confirmsubscriptiondelete', 'subscriptionremoved']);\n    registerEventListeners();\n};\n"],"file":"manage_subscriptions.min.js"}