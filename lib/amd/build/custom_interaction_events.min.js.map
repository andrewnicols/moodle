{"version":3,"sources":["../src/custom_interaction_events.js"],"names":["define","$","keyCodes","events","activate","scrollLock","accessibleChange","triggeredEvents","shouldAddEvent","eventType","include","length","indexOf","triggerEvent","eventName","e","eventTypeKey","hasOwnProperty","type","timeStamp","target","trigger","originalEvent","addScrollLockListener","element","off","on","scrollTop","scrollHeight","height","delta","detail","wheelDelta","up","stopPropagation","preventDefault","returnValue","addAccessibleChangeListener","onMac","navigator","userAgent","touchEnabled","window","msMaxTouchPoints","setInitialValue","dataset","initValue","value","resetToInitialValue","checkAndTriggerAccessibleChange","nativeElement","get","addEventListener","which","enter","escape","ignoreChange","getHandlers","handlers","each","handler"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides a wrapper to encapsulate a lot of the common combinations of\n * user interaction we use in Moodle.\n *\n * @module     core/custom_interaction_events\n * @class      custom_interaction_events\n * @package    core\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.2\n */\ndefine(['jquery', 'core/key_codes', 'core/key_events'], function($, keyCodes) {\n    // The list of events provided by this module. Namespaced to avoid clashes.\n    var events = {\n        activate: 'cie:activate',\n        scrollLock: 'cie:scrollLock',\n        accessibleChange: 'cie:accessibleChange',\n    };\n    // Static cache of jQuery events that have been handled. This should\n    // only be populated by JavaScript generated events (which will keep it\n    // fairly small).\n    var triggeredEvents = {};\n\n    /**\n     * Check if the caller has asked for the given event type to be\n     * registered.\n     *\n     * @method shouldAddEvent\n     * @private\n     * @param {string} eventType name of the event (see events above)\n     * @param {array} include the list of events to be added\n     * @return {bool} true if the event should be added, false otherwise.\n     */\n    var shouldAddEvent = function(eventType, include) {\n        include = include || [];\n\n        if (include.length && include.indexOf(eventType) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    /**\n     * Trigger the custom event for the given jQuery event.\n     *\n     * This function will only fire the custom event if one hasn't already been\n     * fired for the jQuery event.\n     *\n     * This is to prevent multiple custom event handlers triggering multiple\n     * custom events for a single jQuery event as it bubbles up the stack.\n     *\n     * @param  {string} eventName The name of the custom event\n     * @param  {event} e          The jQuery event\n     * @return {void}\n     */\n    var triggerEvent = function(eventName, e) {\n        var eventTypeKey = \"\";\n\n        if (!e.hasOwnProperty('originalEvent')) {\n            // This is a jQuery event generated from JavaScript not a browser event so\n            // we need to build the cache key for the event.\n            eventTypeKey = \"\" + eventName + e.type + e.timeStamp;\n\n            if (!triggeredEvents.hasOwnProperty(eventTypeKey)) {\n                // If we haven't seen this jQuery event before then fire a custom\n                // event for it and remember the event for later.\n                triggeredEvents[eventTypeKey] = true;\n                $(e.target).trigger(eventName, [{originalEvent: e}]);\n            }\n            return;\n        }\n\n        eventTypeKey = \"triggeredCustom_\" + eventName;\n        if (!e.originalEvent.hasOwnProperty(eventTypeKey)) {\n            // If this is a jQuery event generated by the browser then set a\n            // property on the original event to track that we've seen it before.\n            // The property is set on the original event because it's the only part\n            // of the jQuery event that is maintained through multiple event handlers.\n            e.originalEvent[eventTypeKey] = true;\n            $(e.target).trigger(eventName, [{originalEvent: e}]);\n            return;\n        }\n    };\n\n    /**\n     * Trigger the scrollLock event on the given element if the user scrolls to\n     * the bottom or top of the given element.\n     *\n     * @method addScrollLockListener\n     * @private\n     * @param {jQuery} element jQuery object to add event listeners to\n     */\n    var addScrollLockListener = function(element) {\n        // Lock mousewheel scrolling within the element to stop the annoying window scroll.\n        element.off('DOMMouseScroll.cie.DOMMouseScrollLock mousewheel.cie.mousewheelLock')\n            .on('DOMMouseScroll.cie.DOMMouseScrollLock mousewheel.cie.mousewheelLock', function(e) {\n                var scrollTop = element.scrollTop();\n                var scrollHeight = element[0].scrollHeight;\n                var height = element.height();\n                var delta = (e.type == 'DOMMouseScroll' ?\n                    e.originalEvent.detail * -40 :\n                    e.originalEvent.wheelDelta);\n                var up = delta > 0;\n\n                if (!up && -delta > scrollHeight - height - scrollTop) {\n                    // Scrolling down past the bottom.\n                    element.scrollTop(scrollHeight);\n                    e.stopPropagation();\n                    e.preventDefault();\n                    e.returnValue = false;\n                    // Fire the scroll lock event.\n                    triggerEvent(events.scrollLock, e);\n\n                    return false;\n                } else if (up && delta > scrollTop) {\n                    // Scrolling up past the top.\n                    element.scrollTop(0);\n                    e.stopPropagation();\n                    e.preventDefault();\n                    e.returnValue = false;\n                    // Fire the scroll lock event.\n                    triggerEvent(events.scrollLock, e);\n\n                    return false;\n                }\n\n                return true;\n            });\n    };\n\n    /**\n     * Trigger the AccessibleChange event on the given element if the value of the element is changed.\n     *\n     * @method addAccessibleChangeListener\n     * @private\n     * @param {object} element jQuery object to add event listeners to\n     */\n    var addAccessibleChangeListener = function(element) {\n        var onMac = navigator.userAgent.indexOf('Macintosh') !== -1;\n        var touchEnabled = ('ontouchstart' in window) || (('msMaxTouchPoints' in navigator) && (navigator.msMaxTouchPoints > 0));\n        if (onMac || touchEnabled) {\n            // On Mac devices, and touch-enabled devices, the change event seems to be handled correctly and\n            // consistently at this time.\n            element.on('change', function(e) {\n                triggerEvent(events.accessibleChange, e);\n            });\n        } else {\n            // Some browsers have non-normalised behaviour for handling the selection of values in a <select> element.\n            // When using Chrome on Linux (and possibly others), a 'change' event is fired when pressing the Escape key.\n            // When using Firefox on Linux (and possibly others), a 'change' event is fired when navigating through the\n            // list with a keyboard.\n            //\n            // To normalise these behaviours:\n            // - the initial value is stored in a data attribute when focusing the element\n            // - the current value is checked against the stored initial value when and the accessibleChange event fired when:\n            // --- blurring the element\n            // --- the 'Enter' key is pressed\n            // --- the element is clicked\n            // --- the 'change' event is fired, except where it is from a keyboard interaction\n            //\n            // To facilitate the change event keyboard interaction check, the 'keyDown' handler sets a flag to ignore\n            // the change event handler which is unset on the 'keyUp' event.\n            //\n            // Unfortunately we cannot control this entirely as some browsers (Chrome) trigger a change event when\n            // pressign the Escape key, and this is considered to be the correct behaviour.\n            // Chrome https://bugs.chromium.org/p/chromium/issues/detail?id=839717\n            //\n            // Our longer-term solution to this should be to switch away from using <select> boxes as a single-select,\n            // and make use of a dropdown of action links like the Bootstrap Dropdown menu.\n            var setInitialValue = function(target) {\n                target.dataset.initValue = target.value;\n            };\n            var resetToInitialValue = function(target) {\n                if ('initValue' in target.dataset) {\n                    target.value = target.dataset.initValue;\n                }\n            };\n            var checkAndTriggerAccessibleChange = function(e) {\n                if (!('initValue' in e.target.dataset)) {\n                    // Some browsers trigger click before focus, therefore it is possible that initValue is undefined.\n                    // In this case it's likely that it's being focused for the first time and we should therefore not submit.\n                    return;\n                }\n\n                if (e.target.value !== e.target.dataset.initValue) {\n                    // Update the initValue when the event is triggered.\n                    // This means that if the click handler fires before the focus handler on a subsequent interaction\n                    // with the element, the currently dispalyed value will be the best guess current value.\n                    e.target.dataset.initValue = e.target.value;\n                    triggerEvent(events.accessibleChange, e);\n                }\n            };\n            var nativeElement = element.get()[0];\n            // The `focus` and `blur` events do not support bubbling. Use Event Capture instead.\n            nativeElement.addEventListener('focus', function(e) {\n                setInitialValue(e.target);\n            }, true);\n            nativeElement.addEventListener('blur', function(e) {\n                checkAndTriggerAccessibleChange(e);\n            }, true);\n            element.on('keydown', function(e) {\n                if ((e.which === keyCodes.enter)) {\n                    checkAndTriggerAccessibleChange(e);\n                } else if (e.which === keyCodes.escape) {\n                    resetToInitialValue(e.target);\n                    e.target.dataset.ignoreChange = true;\n                } else {\n                    // Firefox triggers a change event when using the keyboard to scroll through the selection.\n                    // Set a data- attribute that the change listener can use to ignore the change event where it was\n                    // generated from a keyboard change such as typing to complete a value, or using arrow keys.\n                    e.target.dataset.ignoreChange = true;\n\n                }\n            });\n            element.on('change', function(e) {\n                if (e.target.dataset.ignoreChange) {\n                    // This change event was triggered from a keyboard change which is not yet complete.\n                    // Do not trigger the accessibleChange event until the selection is completed using the [return]\n                    // key.\n                    return;\n                }\n\n                checkAndTriggerAccessibleChange(e);\n            });\n            element.on('keyup', function(e) {\n                // The key has been lifted. Stop ignoring the change event.\n                delete e.target.dataset.ignoreChange;\n            });\n            element.on('click', function(e) {\n                checkAndTriggerAccessibleChange(e);\n            });\n        }\n    };\n\n    /**\n     * Get the list of events and their handlers.\n     *\n     * @method getHandlers\n     * @private\n     * @return {object} object key of event names and value of handler functions\n     */\n    var getHandlers = function() {\n        var handlers = {};\n\n        handlers[events.scrollLock] = addScrollLockListener;\n        handlers[events.accessibleChange] = addAccessibleChangeListener;\n\n        return handlers;\n    };\n\n    /**\n     * Add all of the listeners on the given element for the requested events.\n     *\n     * @method define\n     * @public\n     * @param {object} element the DOM element to register event listeners on\n     * @param {array} include the array of events to be triggered\n     */\n    var define = function(element, include) {\n        element = $(element);\n        include = include || [];\n\n        if (!element.length || !include.length) {\n            return;\n        }\n\n        $.each(getHandlers(), function(eventType, handler) {\n            if (shouldAddEvent(eventType, include)) {\n                handler(element);\n            }\n        });\n    };\n\n    return /** @module core/custom_interaction_events */ {\n        define: define,\n        events: events,\n    };\n});\n"],"file":"custom_interaction_events.min.js"}