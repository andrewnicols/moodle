{"version":3,"sources":["../src/mustache.js"],"names":["global","factory","exports","nodeName","define","amd","Mustache","mustache","objectToString","Object","prototype","toString","isArray","Array","object","call","isFunction","typeStr","obj","escapeRegExp","string","replace","hasProperty","propName","primitiveHasOwnProperty","primitive","hasOwnProperty","regExpTest","RegExp","test","testRegExp","re","isWhitespace","entityMap","equalsRe","parseTemplate","template","tags","lineHasNonSpace","sections","tokens","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","length","pop","openingTagRe","closingTagRe","closingCurlyRe","compileTags","tagsToCompile","split","Error","scanner","Scanner","start","type","value","chr","token","openSection","eos","pos","scanUntil","i","valueLength","charAt","push","scan","nestTokens","squashTokens","squashedTokens","lastToken","numTokens","nestedTokens","collector","section","tail","match","index","substring","search","Context","view","parentContext","blocks","cache","parent","setBlockVar","name","clearBlockVars","getBlockVar","lookup","context","intermediateValue","names","lookupHit","indexOf","Writer","clearCache","parse","cacheKey","join","render","partials","renderTokens","originalTemplate","buffer","symbol","renderSection","renderInverted","renderPartial","renderBlock","renderBlockVariable","unescapedValue","escapedValue","rawValue","self","subRender","j","slice","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","result","exists","escape","version","defaultWriter","TypeError","to_html","send","s"],"mappings":"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","sourcesContent":["// The MIT License\n//\n// Copyright (c) 2009 Chris Wanstrath (Ruby)\n// Copyright (c) 2010-2014 Jan Lehnardt (JavaScript)\n// Copyright (c) 2010-2015 The mustache.js community\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// Description of import into Moodle:\n// Checkout from https://github.com/moodle/custom-mustache.js Branch: LAMBDA_ARGS\n// Rebase onto latest release tag from https://github.com/janl/mustache.js\n// Copy mustache.js into lib/amd/src/ in Moodle folder.\n// Add the license as a comment to the file and these instructions.\n// Add jshint tags so this file is not linted.\n// Remove the \"global define:\" comment (hint for linter)\n// Make sure that you have not removed the custom code for '$' and '<'.\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/* jshint ignore:start */\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!|\\$|</;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^' || type === '$' || type === '<') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '$':\n        case '<':\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.blocks = {};\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Set a value in the current block context.\n   */\n  Context.prototype.setBlockVar = function set (name, value) {\n    var blocks = this.blocks;\n\n    blocks[name] = value;\n\n    return value;\n  };\n\n  /**\n   * Clear all current block vars.\n   */\n  Context.prototype.clearBlockVars = function clearBlockVars () {\n    this.blocks = {};\n  };\n\n  /**\n   * Get a value only from the current block context.\n   */\n  Context.prototype.getBlockVar = function getBlockVar (name) {\n    var blocks = this.blocks;\n\n    var value;\n    if (blocks.hasOwnProperty(name)) {\n      value = blocks[name];\n    } else {\n      if (this.parent) {\n        value = this.parent.getBlockVar(name);\n      }\n    }\n    // Can return undefined.\n    return value;\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var tokens = cache[cacheKey];\n\n    if (tokens == null)\n      tokens = cache[cacheKey] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '<') value = this.renderBlock(token, context, partials, originalTemplate);\n      else if (symbol === '$') value = this.renderBlockVariable(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.renderBlock = function renderBlock (token, context, partials, originalTemplate) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n    // Ignore any wrongly set block vars before we started.\n      context.clearBlockVars();\n    // We are only rendering to record the default block variables.\n    this.renderTokens(token[4], context, partials, originalTemplate);\n    // Now we render and return the result.\n    var result = this.renderTokens(this.parse(value), context, partials, value);\n    // Don't leak the block variables outside this include.\n    context.clearBlockVars();\n    return result;\n  };\n\n  Writer.prototype.renderBlockVariable = function renderBlockVariable (token, context, partials, originalTemplate) {\n    var value = token[1];\n\n    var exists = context.getBlockVar(value);\n    if (!exists) {\n      context.setBlockVar(value, originalTemplate.slice(token[3], token[5]));\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n    } else {\n      return this.renderTokens(this.parse(exists), context, partials, exists);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '3.1.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n/* jshint ignore:end */\n"],"file":"mustache.min.js"}