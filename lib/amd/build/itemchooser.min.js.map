{"version":3,"sources":["../src/itemchooser.js"],"names":["eventName","itemEvents","eventTypes","stateUpdated","eventDispatch","notifyStateUpdated","name","constructor","setMutations","ItemMutations","callerElement","caller","tabName","items","length","item","favourite","isRecommended","tabConfig","Object","assign","titleComponent","visible","validateTabConfiguration","titleIdentifier","title","Error","_modal","_getModal","body","chooserBody","footer","chooserFooter","large","isDialogueLarge","scrollable","isDialogueScrollable","templateContext","getChooserTemplateContext","dialogueTitle","type","modalTypes","DEFAULT","then","modal","setupReactiveModal","Promise","all","getBodyPromise","chooserData","tabList","initialTab","setInitialState","map","id","tabData","data","TabSelector","element","querySelector","reactive","TabContainer","dispatch","querySelectorAll","forEach","Item","getModal","show","hide","itemName","state","get","window","location","href","link","_cachedData","reject","getPopulatedTab","recommendedTab","allItemsTab","favouriteTab","Templates","render","resolve","cachedData","orderedTabList","itemData","visibilityFunction","getTabVisibilityFunction","filterFunction","getTabFilterFunction","filteredItems","concat","filter","some","isActive","find","orderedList","tabOrder","value","Reactive"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing modules in a course.\n *\n * @module     core_course/activitychooser\n * @copyright  2021 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    create as createModal,\n    types as modalTypes,\n} from 'core/modal_factory';\nimport * as Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {prefetchStrings} from 'core/prefetch';\n\nimport Item from './local/itemchooser/item';\nimport TabContainer from './local/itemchooser/tabcontainer';\nimport TabSelector from './local/itemchooser/tabselector';\nimport ItemMutations from './local/itemchooser/mutations';\nimport {Reactive} from 'core/reactive';\nimport * as itemEvents from './local/itemchooser/events';\n\n// Prefetch the strings.\nprefetchStrings('core', [\n    'all',\n    'favourite',\n    'recommended',\n]);\n\n/**\n * @typedef tabConfig\n * @property {string} name\n * @property {bool} [visible=false]\n */\n\nexport default class extends Reactive {\n    constructor() {\n        super({\n            eventName: itemEvents.eventTypes.stateUpdated,\n            eventDispatch: itemEvents.notifyStateUpdated,\n        });\n\n        this.name = this.constructor.name;\n\n        this.setMutations(new ItemMutations());\n    }\n\n    /**\n     * @property {string} The name of the itemchooser type.\n     */\n    static name = 'itemchooser';\n\n    /**\n     * Store a reference to the element that opened the item chooser.\n     *\n     * @param {HTMLElement} callerElement\n     */\n    setCaller(callerElement) {\n        this.caller = callerElement;\n    }\n\n    /**\n     * Fetch the cached data.\n     *\n     * @returns {Promise<object>}\n     */\n    get cachedData() {\n        if (!this._cachedData) {\n            this._cachedData = this.data;\n        }\n\n        return this._cachedData;\n    }\n\n    /**\n     * Fetch the data to display.\n     *\n     * @returns {Promise<object>}\n     */\n    get data() {\n        return Promise.reject(new Error(`TODO: Implement`));\n    }\n\n    /**\n     * Get the tab order.\n     *\n     * @returns {string[]}\n     */\n    get tabOrder() {\n        // Favourites, All.\n        return [\n            'recommendedTab',\n            'favouriteTab',\n            'allItemsTab',\n        ];\n    }\n\n    /**\n     * Get an ordered list of tabs for this chooser.\n     *\n     * To be extended by the child class.\n     *\n     * @returns {Promise<tabConfig[]>}\n     */\n    get tabList() {\n        return Promise.all([\n            this.getPopulatedTab(this.recommendedTab),\n            this.getPopulatedTab(this.allItemsTab),\n            this.getPopulatedTab(this.favouriteTab,),\n        ]).then(([recommendedTab, allItemsTab, favouriteTab]) => {\n            return {\n                recommendedTab,\n                allItemsTab,\n                favouriteTab,\n            };\n        });\n    }\n\n    /**\n     * Get the tab visibility controller function for the named tab.\n     *\n     * @param {string} tabName\n     * @return {function|null}\n     */\n    getTabVisibilityFunction(tabName) {\n        switch (tabName) {\n            case 'favourites':\n            case 'recommended':\n                return ({items}) => !!items.length;\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Get the tab visibility controller function for the named tab.\n     *\n     * @param {string} tabName\n     * @return {function|null}\n     */\n    getTabFilterFunction(tabName) {\n        switch (tabName) {\n            case 'favourites':\n                return item => item.favourite;\n            case 'recommended':\n                return item => item.isRecommended;\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Get the data for the recommended items tab.\n     *\n     * @returns {tabConfig}\n     */\n    get recommendedTab() {\n        return {\n            name: 'recommended',\n            titleIdentifier: 'recommended',\n        };\n    }\n\n    /**\n     * Get the data for the all items tab.\n     *\n     * @returns {tabConfig}\n     */\n    get allItemsTab() {\n        return {\n            name: 'all',\n            visible: true,\n            titleIdentifier: 'all',\n        };\n    }\n\n    /**\n     * Get the data for the favourite items tab.\n     *\n     * @returns {tabConfig}\n     */\n    get favouriteTab() {\n        return {\n            name: 'favourites',\n            titleIdentifier: 'favourites',\n        };\n    }\n\n    /**\n     * Get the populated tab data for the given configuration.\n     *\n     * @param {tabConfig} tabConfig\n     * @returns {Promise<tabConfig>}\n     */\n    async getPopulatedTab(tabConfig) {\n        tabConfig = Object.assign({\n            titleComponent: 'core',\n            visible: false,\n        }, tabConfig);\n\n        this.validateTabConfiguration(tabConfig);\n\n        tabConfig.title = await getString(tabConfig.titleIdentifier, tabConfig.titleComponent);\n\n        return tabConfig;\n    }\n\n    /**\n     * Validate the tab configuration to check for required values.\n     *\n     * @param {tabConfig} tabConfig\n     * @throws {Error}\n     */\n    validateTabConfiguration(tabConfig) {\n        if (!tabConfig.name) {\n            throw new Error(`Missing name for tab`, tabConfig);\n        }\n\n        if (!tabConfig.titleIdentifier || !tabConfig.titleComponent) {\n            throw new Error(`Missing title details for ${tabConfig.name}`);\n        }\n    }\n\n    /**\n     * Get the template to use for the body.\n     *\n     * @returns {string} The template name\n     */\n    get templateName() {\n        return 'core/local/itemchooser/body';\n    }\n\n    /**\n     * Get the modal.\n     *\n     * @returns {Promise}\n     */\n    getModal() {\n        if (!this._modal) {\n            this._modal = this._getModal();\n        }\n\n        return this._modal;\n    }\n\n    _getModal() {\n        return createModal({\n            body: this.chooserBody,\n            footer: this.chooserFooter,\n            large: this.isDialogueLarge,\n            scrollable: this.isDialogueScrollable,\n            templateContext: this.getChooserTemplateContext,\n            title: this.dialogueTitle,\n            type: modalTypes.DEFAULT,\n        })\n        .then(modal => this.setupReactiveModal(modal));\n    }\n\n    setupReactiveModal(modal) {\n        return Promise.all([\n            modal,\n            modal.getBodyPromise(),\n            this.chooserData,\n        ])\n        .then(([modal, body, {items, tabList, initialTab}]) => {\n            this.setInitialState({\n                items: items.map(item => {\n                    return {\n                        ...item,\n                        id: item.name,\n                    };\n                }),\n                tabData: tabList.map(data => {\n                    return {\n                        ...data,\n                        id: data.name,\n                    };\n                })\n            });\n\n            new TabSelector({\n                element: body[0].querySelector('[role=\"tablist\"]'),\n                reactive: this,\n            });\n\n            // Set up the tab container, which contains the list of items.\n            new TabContainer({\n                element: body[0].querySelector('.tab-content'),\n                reactive: this,\n            });\n\n            // Set the name of the initial tab.\n            this.dispatch('selectTab', this, initialTab.name);\n\n            body[0].querySelectorAll('[role=\"menuitem\"]').forEach(element => new Item({element}));\n\n            return modal;\n        });\n    }\n\n    /**\n     * Get the title for the item chooser dialogue.\n     *\n     * @returns {Promise<string>}\n     */\n    get dialogueTitle() {\n        return Promise.reject(new Error(`TODO: Implement the title fetcher`));\n    }\n\n    /**\n     * Get the Chooser body.\n     *\n     * @returns {Promise<string>}\n     */\n    get chooserBody() {\n        return this.chooserData.then(chooserData => Templates.render(\n            'core/itemchooser',\n            chooserData\n        ));\n    }\n\n    /**\n     * Get the Chooser footer.\n     *\n     * @returns {Promise<string>}\n     */\n    get chooserFooter() {\n        return Promise.resolve();\n    }\n\n    /**\n     * Whether to make the dialogue large.\n     *\n     * @returns {boolean}\n     */\n    isDialogueLarge() {\n        return true;\n    }\n\n    /**\n     * Whether to make the dialogue scrollable.\n     *\n     * @returns {boolean}\n     */\n    isDialogueScrollable() {\n        return false;\n    }\n\n    /**\n     * Get any context data for the dialogue.\n     *\n     * @returns {object}\n     */\n    get chooserTemplateContext() {\n        return {};\n    }\n\n    /**\n     * Format the data for the item chooser.\n     *\n     * @returns {object}\n     */\n    get chooserData() {\n        return Promise.all([this.cachedData, this.orderedTabList])\n        .then(([itemData, tabList]) => {\n            // Set initial tab visibility state.\n            tabList = tabList.map(tabConfig => {\n                const visibilityFunction = this.getTabVisibilityFunction(tabConfig.name);\n                if (!visibilityFunction) {\n                    return tabConfig;\n                }\n\n                const filterFunction = this.getTabFilterFunction(tabConfig.name);\n                let filteredItems = itemData.concat();\n                filteredItems = filteredItems.filter(itemData => {\n                    if (filterFunction) {\n                        return filterFunction(itemData);\n                    }\n\n                    return true;\n                });\n\n                let visible = tabConfig.visible;\n                if (visibilityFunction) {\n                    visible = visibilityFunction({\n                        tabConfig,\n                        items: filteredItems,\n                    });\n                }\n\n                return Object.assign({}, tabConfig, {\n                    visible,\n                });\n            });\n\n\n            // Set initial tab configuration.\n            if (!tabList.some(tabData => tabData.isActive && tabData.visible)) {\n                tabList.find(tabData => tabData.visible).isActive = true;\n            }\n\n            // Unset the isActive so that it will be changed by the reactive component.\n            const initialTab = tabList.find(tabData => tabData.isActive);\n            initialTab.isActive = false;\n\n            return {\n                items: itemData,\n                tabList,\n                initialTab,\n            };\n        });\n    }\n\n    /**\n     * Get the tabs, in their ordered list.\n     *\n     * @returns {Promise}\n     */\n    get orderedTabList() {\n        return this.tabList.then(tabList => {\n            const orderedList = this.tabOrder.map(tabName => {\n                return tabList[tabName] ?? false;\n            }).filter(value => value);\n\n            return orderedList;\n        });\n    }\n\n    /**\n     * Display the modal.\n     */\n    async show() {\n        const modal = await this.getModal();\n        modal.show();\n    }\n\n    /**\n     * Hide the modal.\n     */\n    async hide() {\n        const modal = await this.getModal();\n        modal.hide();\n    }\n\n    /**\n     * Handle selection of the item.\n     *\n     * @param {string} itemName\n     */\n    handleItemSelection(itemName) {\n        const item = this.state.items.get(itemName);\n        window.location.href = item.link;\n    }\n}\n"],"file":"itemchooser.min.js"}