{"version":3,"sources":["../src/itemchooser.js"],"names":["callerElement","caller","tabConfig","Object","assign","titleComponent","filterFunction","visibleFunction","visible","validateTabConfiguration","titleIdentifier","title","name","Error","identifier","isFavourited","_reactiveManager","Reactive","eventName","itemEvents","eventTypes","stateUpdated","eventDispatch","notifyStateUpdated","setMutations","mutations","_modal","_getModal","body","chooserBody","footer","chooserFooter","large","isDialogueLarge","scrollable","isDialogueScrollable","templateContext","getChooserTemplateContext","dialogueTitle","type","modalTypes","DEFAULT","then","modal","setupReactiveModal","Promise","all","getReactiveManager","getBodyPromise","chooserData","reactive","items","tabList","initialTab","setInitialState","map","item","id","tabData","data","TabSelector","element","querySelector","TabContainer","dispatch","querySelectorAll","forEach","Item","getModal","show","hide","_cachedData","reject","getPopulatedTab","recommendedTab","allItemsTab","favouriteTab","isRecommended","length","favourite","_mutations","ItemMutations","Templates","render","resolve","cachedData","orderedTabList","itemData","filteredItems","concat","filter","some","isActive","find","orderedList","tabOrder","tabName","value"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing modules in a course.\n *\n * @module     core_course/activitychooser\n * @copyright  2021 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    create as createModal,\n    types as modalTypes,\n} from 'core/modal_factory';\nimport * as Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {prefetchStrings} from 'core/prefetch';\n\nimport Item from './local/itemchooser/item';\nimport TabContainer from './local/itemchooser/tabcontainer';\nimport TabSelector from './local/itemchooser/tabselector';\nimport ItemMutations from './local/itemchooser/mutations';\nimport {Reactive} from 'core/reactive';\nimport * as itemEvents from './local/itemchooser/events';\n\n// Prefetch the strings.\nprefetchStrings('core', [\n    'all',\n    'favourite',\n    'recommended',\n]);\n\n/**\n * @typedef tabConfig\n * @property {string} name\n * @property {function} [filterFunction]\n * @property {function} [visibleFunction]\n * @property {bool} [visible=false] Calculated from visibleFunction if not specified\n */\n\nexport default class {\n    /**\n     * Store a reference to the element that opened the item chooser.\n     *\n     * @param {HTMLElement} callerElement\n     */\n    setCaller(callerElement) {\n        this.caller = callerElement;\n    }\n\n    /**\n     * Fetch the cached data.\n     *\n     * @returns {Promise<object>}\n     */\n    get cachedData() {\n        if (!this._cachedData) {\n            this._cachedData = this.data;\n        }\n\n        return this._cachedData;\n    }\n\n    /**\n     * Fetch the data to display.\n     *\n     * @returns {Promise<object>}\n     */\n    get data() {\n        return Promise.reject(new Error(`TODO: Implement`));\n    }\n\n    /**\n     * Get the tab order.\n     *\n     * @returns {string[]}\n     */\n    get tabOrder() {\n        // Favourites, All.\n        return [\n            'recommendedTab',\n            'favouriteTab',\n            'allItemsTab',\n        ];\n    }\n\n    /**\n     * Get an ordered list of tabs for this chooser.\n     *\n     * To be extended by the child class.\n     *\n     * @returns {Promise<tabConfig[]>}\n     */\n    get tabList() {\n        return Promise.all([\n            this.getPopulatedTab(this.recommendedTab),\n            this.getPopulatedTab(this.allItemsTab),\n            this.getPopulatedTab(this.favouriteTab,),\n        ]).then(([recommendedTab, allItemsTab, favouriteTab]) => {\n            return {\n                recommendedTab,\n                allItemsTab,\n                favouriteTab,\n            };\n        });\n    }\n\n    /**\n     * Get the data for the recommended items tab.\n     *\n     * @returns {tabConfig}\n     */\n    get recommendedTab() {\n        return {\n            name: 'recommended',\n            filterFunction: item => item.isRecommended,\n            visibleFunction: ({items}) => !!items.length,\n            titleIdentifier: 'recommended',\n        };\n    }\n\n    /**\n     * Get the data for the all items tab.\n     *\n     * @returns {tabConfig}\n     */\n    get allItemsTab() {\n        return {\n            name: 'all',\n            visible: true,\n            titleIdentifier: 'all',\n        };\n    }\n\n    /**\n     * Get the data for the favourite items tab.\n     *\n     * @returns {tabConfig}\n     */\n    get favouriteTab() {\n        return {\n            name: 'favourites',\n            filterFunction: item => item.favourite,\n            visibleFunction: ({items}) => !!items.length,\n            titleIdentifier: 'favourites',\n        };\n    }\n\n    /**\n     * Get the populated tab data for the given configuration.\n     *\n     * @param {tabConfig} tabConfig\n     * @returns {Promise<tabConfig>}\n     */\n    async getPopulatedTab(tabConfig) {\n        tabConfig = Object.assign({\n            titleComponent: 'core',\n            filterFunction: null,\n            visibleFunction: null,\n            visible: false,\n        }, tabConfig);\n\n        this.validateTabConfiguration(tabConfig);\n\n        tabConfig.title = await getString(tabConfig.titleIdentifier, tabConfig.titleComponent);\n\n        return tabConfig;\n    }\n\n    /**\n     * Validate the tab configuration to check for required values.\n     *\n     * @param {tabConfig} tabConfig\n     * @throws {Error}\n     */\n    validateTabConfiguration(tabConfig) {\n        if (!tabConfig.name) {\n            throw new Error(`Missing name for tab`, tabConfig);\n        }\n\n        if (!tabConfig.titleIdentifier || !tabConfig.titleComponent) {\n            throw new Error(`Missing title details for ${tabConfig.name}`);\n        }\n    }\n\n    /**\n     * Get the template to use for the body.\n     *\n     * @returns {string} The template name\n     */\n    get templateName() {\n        return 'core/local/itemchooser/body';\n    }\n\n    /**\n     * TODO Move to Mutations?\n     * Mark the specified item as a favourite.\n     *\n     * @param {string} identifier The identifier of the favourite\n     * @param {bool} [isFavourited=true]\n     */\n    setFavouriteState(identifier, isFavourited = true) {\n        throw new Error(`TODO: Implement setting favourite state for ${identifier} to ${isFavourited}`);\n    }\n\n    get mutations() {\n        if (!this._mutations) {\n            this._mutations = new ItemMutations();\n        }\n\n        return this._mutations;\n    }\n\n    getReactiveManager() {\n        if (!this._reactiveManager) {\n            this._reactiveManager = new Reactive({\n                name: 'itemchooser',\n                eventName: itemEvents.eventTypes.stateUpdated,\n                eventDispatch: itemEvents.notifyStateUpdated,\n            });\n\n            this._reactiveManager.setMutations(this.mutations);\n        }\n\n        return this._reactiveManager;\n    }\n\n    /**\n     * Get the modal.\n     *\n     * @returns {Promise}\n     */\n    getModal() {\n        if (!this._modal) {\n            this._modal = this._getModal();\n        }\n\n        return this._modal;\n    }\n\n    _getModal() {\n        return createModal({\n            body: this.chooserBody,\n            footer: this.chooserFooter,\n            large: this.isDialogueLarge,\n            scrollable: this.isDialogueScrollable,\n            templateContext: this.getChooserTemplateContext,\n            title: this.dialogueTitle,\n            type: modalTypes.DEFAULT,\n        })\n        .then(modal => this.setupReactiveModal(modal));\n    }\n\n    setupReactiveModal(modal) {\n        return Promise.all([\n            modal,\n            this.getReactiveManager(),\n            modal.getBodyPromise(),\n            this.chooserData,\n        ])\n        .then(([modal, reactive, body, {items, tabList, initialTab}]) => {\n            reactive.setInitialState({\n                items: items.map(item => {\n                    return {\n                        ...item,\n                        id: item.name,\n                    };\n                }),\n                tabData: tabList.map(data => {\n                    return {\n                        ...data,\n                        id: data.name,\n                    };\n                })\n            });\n\n            new TabSelector({\n                element: body[0].querySelector('[role=\"tablist\"]'),\n                reactive,\n            });\n\n            // Set up the tab container, which contains the list of items.\n            new TabContainer({\n                element: body[0].querySelector('.tab-content'),\n                reactive,\n            });\n\n            // Set the name of the initial tab.\n            reactive.dispatch('selectTab', initialTab.name);\n\n            body[0].querySelectorAll('[role=\"menuitem\"]').forEach(element => new Item({element}));\n\n            return modal;\n        });\n    }\n\n    /**\n     * Get the title for the item chooser dialogue.\n     *\n     * @returns {Promise<string>}\n     */\n    get dialogueTitle() {\n        return Promise.reject(new Error(`TODO: Implement the title fetcher`));\n    }\n\n    /**\n     * Get the Chooser body.\n     *\n     * @returns {Promise<string>}\n     */\n    get chooserBody() {\n        return this.chooserData.then(chooserData => Templates.render(\n            'core/itemchooser',\n            chooserData\n        ));\n    }\n\n    /**\n     * Get the Chooser footer.\n     *\n     * @returns {Promise<string>}\n     */\n    get chooserFooter() {\n        return Promise.resolve();\n    }\n\n    /**\n     * Whether to make the dialogue large.\n     *\n     * @returns {boolean}\n     */\n    isDialogueLarge() {\n        return true;\n    }\n\n    /**\n     * Whether to make the dialogue scrollable.\n     *\n     * @returns {boolean}\n     */\n    isDialogueScrollable() {\n        return false;\n    }\n\n    /**\n     * Get any context data for the dialogue.\n     *\n     * @returns {object}\n     */\n    get chooserTemplateContext() {\n        return {};\n    }\n\n    /**\n     * Format the data for the item chooser.\n     *\n     * @returns {object}\n     */\n    get chooserData() {\n        return Promise.all([this.cachedData, this.orderedTabList])\n        .then(([itemData, tabList]) => {\n            // Set initial tab visibility state.\n            tabList = tabList.map(tabConfig => {\n                if (!tabConfig.visibleFunction) {\n                    return tabConfig;\n                }\n\n                let filteredItems = itemData.concat();\n                if (tabConfig.filterFunction) {\n                    filteredItems = filteredItems.filter(itemData => {\n                        if (tabConfig.filterFunction) {\n                            return tabConfig.filterFunction(itemData);\n                        }\n\n                        return true;\n                    });\n                }\n\n                let visible = tabConfig.visible;\n                if (tabConfig.visibleFunction) {\n                    visible = tabConfig.visibleFunction({\n                        tabConfig,\n                        items: filteredItems,\n                    });\n                }\n\n                return Object.assign({}, tabConfig, {\n                    visible,\n                });\n            });\n\n\n            // Set initial tab configuration.\n            if (!tabList.some(tabData => tabData.isActive && tabData.visible)) {\n                tabList.find(tabData => tabData.visible).isActive = true;\n            }\n\n            // Unset the isActive so that it will be changed by the reactive component.\n            const initialTab = tabList.find(tabData => tabData.isActive);\n            initialTab.isActive = false;\n\n            return {\n                items: itemData,\n                tabList,\n                initialTab,\n            };\n        });\n    }\n\n    /**\n     * Get the tabs, in their ordered list.\n     *\n     * @returns {Promise}\n     */\n    get orderedTabList() {\n        return this.tabList.then(tabList => {\n            const orderedList = this.tabOrder.map(tabName => {\n                return tabList[tabName] ?? false;\n            }).filter(value => value);\n\n            return orderedList;\n        });\n    }\n\n    /**\n     * Display the modal.\n     */\n    async show() {\n        const modal = await this.getModal();\n        modal.show();\n    }\n\n    /**\n     * Hide the modal.\n     */\n    async hide() {\n        const modal = await this.getModal();\n        modal.hide();\n    }\n}\n"],"file":"itemchooser.min.js"}