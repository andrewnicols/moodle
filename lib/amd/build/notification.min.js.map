{"version":3,"sources":["../src/notification.js"],"names":["currentContextId","M","cfg","contextid","notificationTypes","success","info","warning","error","notificationRegionId","Selectors","notificationRegion","fallbackRegionParents","setupTargetRegion","targetRegion","getNotificationRegion","newRegion","document","createElement","id","some","selector","querySelector","prepend","fetchNotifications","Ajax","call","methodname","args","then","addNotifications","notifications","length","Promise","resolve","pendingPromise","Pending","forEach","notification","renderNotification","template","variables","addNotification","closebutton","announce","type","message","Log","debug","Templates","renderForPromise","html","js","prependNodeContents","catch","exception","alert","title","cancelText","ModalFactory","create","types","ALERT","body","buttons","cancel","removeOnClose","modal","show","confirm","question","saveLabel","noLabel","saveCallback","cancelCallback","saveCancel","all","ModalEvents","SAVE_CANCEL","save","getRoot","on","ex","stack","debuginfo","backtrace","stacktrace","ln","match","fn","lineNumber","fileName","substr","name","errorcode","Y","use","core","init","contextId","notificationList"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notification manager for in-page notifications in Moodle.\n *\n * @module     core/notification\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\nimport Pending from 'core/pending';\nimport Log from 'core/log';\n\nlet currentContextId = M.cfg.contextid;\n\nconst notificationTypes = {\n    success:  'core/notification_success',\n    info:     'core/notification_info',\n    warning:  'core/notification_warning',\n    error:    'core/notification_error',\n};\n\nconst notificationRegionId = 'user-notifications';\n\nconst Selectors = {\n    notificationRegion: `#${notificationRegionId}`,\n    fallbackRegionParents: [\n        '#region-main',\n        '[role=\"main\"]',\n        'body',\n    ],\n};\n\nconst setupTargetRegion = () => {\n    let targetRegion = getNotificationRegion();\n    if (targetRegion) {\n        return false;\n    }\n\n    const newRegion = document.createElement('span');\n    newRegion.id = notificationRegionId;\n\n    return Selectors.fallbackRegionParents.some(selector => {\n        const targetRegion = document.querySelector(selector);\n\n        if (targetRegion) {\n            targetRegion.prepend(newRegion);\n            return true;\n        }\n\n        return false;\n    });\n};\n\n/**\n * A notification object displayed to a user.\n *\n * @typedef  {Object} Notification\n * @property {string} message       The body of the notification\n * @property {string} type          The type of notification to add (error, warning, info, success).\n * @property {Boolean} closebutton  Whether to show the close button.\n * @property {Boolean} announce     Whether to announce to screen readers.\n */\n\n/**\n * Poll the server for any new notifications.\n *\n * @method\n * @returns {Promise}\n */\nexport const fetchNotifications = async() => {\n    const Ajax = await import('core/ajax');\n\n    return Ajax.call([{\n        methodname: 'core_fetch_notifications',\n        args: {\n            contextid: currentContextId\n        }\n    }])[0]\n    .then(addNotifications);\n};\n\n/**\n * Add all of the supplied notifications.\n *\n * @method\n * @param {Notification[]} notifications The list of notificaitons\n * @returns {Promise}\n */\nconst addNotifications = notifications => {\n    if (!notifications.length) {\n        return Promise.resolve();\n    }\n\n    const pendingPromise = new Pending('core/notification:addNotifications');\n    notifications.forEach(notification => renderNotification(notification.template, notification.variables));\n\n    return pendingPromise.resolve();\n};\n\n/**\n * Add a notification to the page.\n *\n * Note: This does not cause the notification to be added to the session.\n *\n * @method\n * @param {Notification} notification The notification to add.\n * @returns {Promise}\n */\nexport const addNotification = notification => {\n    const pendingPromise = new Pending('core/notification:addNotifications');\n\n    let template = notificationTypes.error;\n\n    notification = {\n        closebutton:    true,\n        announce:       true,\n        type:           'error',\n        ...notification,\n    };\n\n    if (notification.template) {\n        template = notification.template;\n        delete notification.template;\n    } else if (notification.type) {\n        if (typeof notificationTypes[notification.type] !== 'undefined') {\n            template = notificationTypes[notification.type];\n        }\n        delete notification.type;\n    }\n\n    return renderNotification(template, notification)\n    .then(pendingPromise.resolve);\n};\n\nconst renderNotification = async(template, variables) => {\n    if (typeof variables.message === 'undefined' || !variables.message) {\n        Log.debug('Notification received without content. Skipping.');\n        return;\n    }\n\n    const pendingPromise = new Pending('core/notification:renderNotification');\n    const Templates = await import('core/templates');\n\n    Templates.renderForPromise(template, variables)\n    .then(({html, js = ''}) => {\n        Templates.prependNodeContents(getNotificationRegion(), html, js);\n\n        return;\n    })\n    .then(pendingPromise.resolve)\n    .catch(exception);\n};\n\nconst getNotificationRegion = () => document.querySelector(Selectors.notificationRegion);\n\n/**\n * Alert dialogue.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} message\n * @param {String|Promise} cancelText\n * @returns {Promise}\n */\nexport const alert = async(title, message, cancelText) => {\n    var pendingPromise = new Pending('core/notification:alert');\n\n    const ModalFactory = await import('core/modal_factory');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        body: message,\n        title: title,\n        buttons: {\n            cancel: cancelText,\n        },\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n\n        pendingPromise.resolve();\n        return modal;\n    });\n};\n\n/**\n * The confirm has now been replaced with a save and cancel dialogue.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} question\n * @param {String|Promise} saveLabel\n * @param {String|Promise} noLabel\n * @param {String|Promise} saveCallback\n * @param {String|Promise} cancelCallback\n * @returns {Promise}\n */\nexport const confirm = (title, question, saveLabel, noLabel, saveCallback, cancelCallback) =>\n        saveCancel(title, question, saveLabel, saveCallback, cancelCallback);\n\n/**\n * The Save and Cancel dialogue helper.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} question\n * @param {String|Promise} saveLabel\n * @param {String|Promise} saveCallback\n * @param {String|Promise} cancelCallback\n * @returns {Promise}\n */\nexport const saveCancel = async(title, question, saveLabel, saveCallback, cancelCallback) => {\n    const pendingPromise = new Pending('core/notification:confirm');\n\n    const [\n        ModalFactory,\n        ModalEvents,\n    ] = await Promise.all([\n        import('core/modal_factory'),\n        import('core/modal_events'),\n    ]);\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: title,\n        body: question,\n        buttons: {\n            // Note: The noLabel is no longer supported.\n            save: saveLabel,\n        },\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n\n        modal.getRoot().on(ModalEvents.save, saveCallback);\n        modal.getRoot().on(ModalEvents.cancel, cancelCallback);\n        pendingPromise.resolve();\n\n        return modal;\n    });\n};\n\n/**\n * Wrap M.core.exception.\n *\n * @method\n * @param {Error} ex\n */\nexport const exception = async ex => {\n    const pendingPromise = new Pending('core/notification:displayException');\n\n    // Fudge some parameters.\n    if (!ex.stack) {\n        ex.stack = '';\n    }\n\n    if (ex.debuginfo) {\n        ex.stack += ex.debuginfo + '\\n';\n    }\n\n    if (!ex.backtrace && ex.stacktrace) {\n        ex.backtrace = ex.stacktrace;\n    }\n\n    if (ex.backtrace) {\n        ex.stack += ex.backtrace;\n        const ln = ex.backtrace.match(/line ([^ ]*) of/);\n        const fn = ex.backtrace.match(/ of ([^:]*): /);\n        if (ln && ln[1]) {\n            ex.lineNumber = ln[1];\n        }\n        if (fn && fn[1]) {\n            ex.fileName = fn[1];\n            if (ex.fileName.length > 30) {\n                ex.fileName = '...' + ex.fileName.substr(ex.fileName.length - 27);\n            }\n        }\n    }\n\n    if (typeof ex.name === 'undefined' && ex.errorcode) {\n        ex.name = ex.errorcode;\n    }\n\n    const Y = await import('core/yui');\n    Y.use('moodle-core-notification-exception', function() {\n        var modal = new M.core.exception(ex);\n\n        modal.show();\n\n        pendingPromise.resolve();\n    });\n};\n\n/**\n * Initialise the page for the suppled context, and displaying the supplied notifications.\n *\n * @method\n * @param {Number} contextId\n * @param {Notification[]} notificationList\n */\nexport const init = (contextId, notificationList) => {\n    currentContextId = contextId;\n\n    // Setup the message target region if it isn't setup already\n    setupTargetRegion();\n\n    // Add provided notifications.\n    addNotifications(notificationList);\n};\n\n// To maintain backwards compatability we export default here.\nexport default {\n    init,\n    fetchNotifications,\n    addNotification,\n    alert,\n    confirm,\n    saveCancel,\n    exception,\n};\n"],"file":"notification.min.js"}