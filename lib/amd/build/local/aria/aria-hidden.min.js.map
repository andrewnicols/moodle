{"version":3,"sources":["../../../src/local/aria/aria-hidden.js"],"names":["childObserverMap","Map","siblingObserverMap","supportsMutationObservers","MutationObserver","disableElementFocusability","target","HTMLElement","matches","Selectors","elements","focusable","disableAndStoreTabIndex","querySelectorAll","forEach","element","dataset","ariaHiddenTabIndex","getAttribute","setAttribute","enableElementFocusability","focusableToUnhide","restoreTabIndex","closest","aria","hidden","oldTabIndex","removeAttribute","hide","_hide","mutationObserver","mutationList","mutation","type","addedNodes","proposedTabIndex","observe","subtree","childList","attributes","attributeFilter","set","unhide","_unhide","has","get","disconnect","delete","hideSiblings","_hideSiblings","parentElement","childNodes","node","newNodeObserver","contains","unhideSiblings","_unhideSiblings"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * ARIA helpers related to the aria-hidden attribute.\n *\n * @module     core/local/aria/aria-hidden.\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {getList} from 'core/normalise';\nimport Selectors from './selectors';\n\n// The map of MutationObserver objects for an object.\nconst childObserverMap = new Map();\nconst siblingObserverMap = new Map();\n\n/**\n * Determine whether the browser supports the MutationObserver system.\n *\n * @method\n * @returns {Bool}\n */\nconst supportsMutationObservers = () => (MutationObserver && typeof MutationObserver === 'function');\n\n/**\n * Disable element focusability, disabling the tabindex for child elements which are normally focusable.\n *\n * @method\n * @param {HTMLElement} target\n */\nconst disableElementFocusability = target => {\n    if (!(target instanceof HTMLElement)) {\n        // This element is not an HTMLElement.\n        // This can happen for Text Nodes.\n        return;\n    }\n\n    if (target.matches(Selectors.elements.focusable)) {\n        disableAndStoreTabIndex(target);\n    }\n\n    target.querySelectorAll(Selectors.elements.focusable).forEach(disableAndStoreTabIndex);\n};\n\n/**\n * Remove the current tab-index and store it for later restoration.\n *\n * @method\n * @param {HTMLElement} element\n */\nconst disableAndStoreTabIndex = element => {\n    if (typeof element.dataset.ariaHiddenTabIndex !== 'undefined') {\n        // This child already has a hidden attribute.\n        // Do not modify it as the original value will be lost.\n        return;\n    }\n\n    // Store the old tabindex in a data attribute.\n    if (element.getAttribute('tabindex')) {\n        element.dataset.ariaHiddenTabIndex = element.getAttribute('tabindex');\n    } else {\n        element.dataset.ariaHiddenTabIndex = '';\n    }\n    element.setAttribute('tabindex', -1);\n};\n\n/**\n * Re-enable element focusability, restoring any tabindex.\n *\n * @method\n * @param {HTMLElement} target\n */\nconst enableElementFocusability = target => {\n    if (!(target instanceof HTMLElement)) {\n        // This element is not an HTMLElement.\n        // This can happen for Text Nodes.\n        return;\n    }\n\n    if (target.matches(Selectors.elements.focusableToUnhide)) {\n        restoreTabIndex(target);\n    }\n\n    target.querySelectorAll(Selectors.elements.focusableToUnhide).forEach(restoreTabIndex);\n};\n\n/**\n * Restore the tab-index of the supplied element.\n *\n * When disabling focusability the current tab-index is stored in the ariaHiddenTabIndex data attribute.\n * This is used to restore the tab-index, but only whilst the parent nodes remain unhidden.\n *\n * @method\n * @param {HTMLElement} element\n */\nconst restoreTabIndex = element => {\n    if (element.closest(Selectors.aria.hidden)) {\n        // This item still has a hidden parent, or is hidden itself. Do not unhide it.\n        return;\n    }\n\n    const oldTabIndex = element.dataset.ariaHiddenTabIndex;\n    if (oldTabIndex === '') {\n        element.removeAttribute('tabindex');\n    } else {\n        element.setAttribute('tabindex', oldTabIndex);\n    }\n\n    delete element.dataset.ariaHiddenTabIndex;\n};\n\n/**\n * Update the supplied DOM Module to be hidden.\n *\n * @method\n * @param {HTMLElement} target\n * @returns {Array}\n */\nexport const hide = target => getList(target).forEach(_hide);\n\nconst _hide = target => {\n    if (!(target instanceof HTMLElement)) {\n        // This element is not an HTMLElement.\n        // This can happen for Text Nodes.\n        return;\n    }\n\n    if (target.closest(Selectors.aria.hidden)) {\n        // This Element, or a parent Element, is already hidden.\n        // Stop processing.\n        return;\n    }\n\n    // Set the aria-hidden attribute to true.\n    target.setAttribute('aria-hidden', true);\n\n    // Based on advice from https://dequeuniversity.com/rules/axe/3.3/aria-hidden-focus, upon setting the aria-hidden\n    // attribute, all focusable elements underneath that element should be modified such that they are not focusable.\n    disableElementFocusability(target);\n\n    if (supportsMutationObservers()) {\n        // Add a MutationObserver to check for new children to the tree.\n        const mutationObserver = new MutationObserver(mutationList => {\n            mutationList.forEach(mutation => {\n                if (mutation.type === 'childList') {\n                    mutation.addedNodes.forEach(disableElementFocusability);\n                } else if (mutation.type === 'attributes') {\n                    // The tabindex has been updated on a hidden attribute.\n                    // Ensure that it is stored, ad set to -1 to prevent breakage.\n                    const element = mutation.target;\n                    const proposedTabIndex = element.getAttribute('tabindex');\n\n                    if (proposedTabIndex !== \"-1\") {\n                        element.dataset.ariaHiddenTabIndex = proposedTabIndex;\n                        element.setAttribute('tabindex', -1);\n                    }\n                }\n            });\n        });\n\n        mutationObserver.observe(target, {\n            // Watch for changes to the entire subtree.\n            subtree: true,\n\n            // Watch for new nodes.\n            childList: true,\n\n            // Watch for attribute changes to the tabindex.\n            attributes: true,\n            attributeFilter: ['tabindex'],\n        });\n        childObserverMap.set(target, mutationObserver);\n    }\n};\n\n/**\n * Reverse the effect of the hide action.\n *\n * @method\n * @param {HTMLElement} target\n * @returns {Array}\n */\nexport const unhide = target => getList(target).forEach(_unhide);\n\nconst _unhide = target => {\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n\n    // Note: The aria-hidden attribute should be removed, and not set to false.\n    // The presence of the attribute is sufficient for some browsers to treat it as being true, regardless of its value.\n    target.removeAttribute('aria-hidden');\n\n    // Restore the tabindex across all child nodes of the target.\n    enableElementFocusability(target);\n\n    // Remove the focusability MutationObserver watching this tree.\n    if (childObserverMap.has(target)) {\n        childObserverMap.get(target).disconnect();\n        childObserverMap.delete(target);\n    }\n};\n\n/**\n * Correctly mark all siblings of the supplied target Element as hidden.\n *\n * @method\n * @param {HTMLElement} target\n * @returns {Array}\n */\nexport const hideSiblings = target => getList(target).forEach(_hideSiblings);\n\nconst _hideSiblings = target => {\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n\n    if (!target.parentElement) {\n        return;\n    }\n\n    target.parentElement.childNodes.forEach(node => {\n        if (node === target) {\n            // Skip self;\n            return;\n        }\n\n        hide(node);\n    });\n\n    if (supportsMutationObservers()) {\n        // Add a MutationObserver to check for new children to the tree.\n        const newNodeObserver = new MutationObserver(mutationList => {\n            mutationList.forEach(mutation => {\n                mutation.addedNodes.forEach(node => {\n                    if (target.contains(node)) {\n                        // Skip self, and children of self.\n                        return;\n                    }\n\n                    hide(node);\n                });\n            });\n        });\n\n        newNodeObserver.observe(target.parentElement, {childList: true, subtree: true});\n        siblingObserverMap.set(target.parentElement, newNodeObserver);\n    }\n};\n\n/**\n * Correctly reverse the hide action of all children of the supplied target Element.\n *\n * @method\n * @param {HTMLElement} target\n * @returns {Array}\n */\nexport const unhideSiblings = target => getList(target).forEach(_unhideSiblings);\n\nconst _unhideSiblings = target => {\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n\n    if (!target.parentElement) {\n        return;\n    }\n\n    target.parentElement.childNodes.forEach(node => {\n        if (node === target) {\n            // Skip self;\n            return;\n        }\n\n        unhide(node);\n    });\n\n    // Remove the sibling MutationObserver watching this tree.\n    if (siblingObserverMap.has(target.parentElement)) {\n        siblingObserverMap.get(target.parentElement).disconnect();\n        siblingObserverMap.delete(target.parentElement);\n    }\n};\n"],"file":"aria-hidden.min.js"}