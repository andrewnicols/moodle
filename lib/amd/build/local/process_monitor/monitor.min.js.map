{"version":3,"file":"monitor.min.js","sources":["../../../src/local/process_monitor/monitor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * The file upload monitor component.\n *\n * @module     core/local/process_monitor/monitor\n * @class      core/local/process_monitor/monitor\n * @copyright  2022 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {BaseComponent} from 'core/reactive';\nimport {manager} from 'core/local/process_monitor/manager';\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'process_monitor';\n        // Default query selectors.\n        this.selectors = {\n            QUEUELIST: `[data-for=\"process-list\"]`,\n            CLOSE: `[data-action=\"hide\"]`,\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            HIDE: `d-none`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {string} query the DOM main element query selector\n     * @param {object} selectors optional css selector overrides\n     * @return {this}\n     */\n    static init(query, selectors) {\n        return new this({\n            element: document.querySelector(query),\n            reactive: manager,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the initial state\n     */\n    stateReady(state) {\n        this._updateMonitor({state, element: state.display});\n        this.addEventListener(this.getElement(this.selectors.CLOSE), 'click', this._closeMonitor);\n        state.queue.forEach((element) => {\n            this._createListItem({state, element});\n        });\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            // State changes that require to reload some course modules.\n            {watch: `queue:created`, handler: this._createListItem},\n            {watch: `display:updated`, handler: this._updateMonitor},\n        ];\n    }\n\n    /**\n     * Create a monitor item.\n     *\n     * @param {object} args the watcher arguments\n     * @param {object} args.element the item state data\n     */\n    async _createListItem({element}) {\n        const {html, js} = await Templates.renderForPromise(\n            'core/local/process_monitor/process',\n            {...element}\n        );\n        const target = this.getElement(this.selectors.QUEUELIST);\n        Templates.appendNodeContents(target, html, js);\n    }\n\n    /**\n     * Create a monitor item.\n     *\n     * @param {object} args the watcher arguments\n     * @param {object} args.element the display state data\n     */\n    _updateMonitor({element}) {\n        this.element.classList.toggle(this.classes.HIDE, element.show !== true);\n    }\n\n    /**\n     * Close the monitor.\n     */\n    _closeMonitor() {\n        this.reactive.dispatch('setShow', false);\n    }\n}\n"],"names":["obj","_templates","__esModule","default","_default","BaseComponent","create","this","name","selectors","QUEUELIST","CLOSE","classes","HIDE","static","query","element","document","querySelector","reactive","manager","stateReady","state","_updateMonitor","display","addEventListener","getElement","_closeMonitor","queue","forEach","_createListItem","getWatchers","watch","handler","async","_ref","html","js","Templates","renderForPromise","target","appendNodeContents","_ref2","classList","toggle","show","dispatch","_exports"],"mappings":"gLAwBuC,IAAAA;;;;;;;;qFAAvCC,YAAuCD,IAAvCC,aAAuCD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAIxB,MAAAI,iBAAcC,UAAAA,cAKzBC,SAEIC,KAAKC,KAAO,kBAEZD,KAAKE,UAAY,CACbC,UAAsC,4BACtCC,MAAK,wBAGTJ,KAAKK,QAAU,CACXC,KAAI,SAEZ,CASAC,YAAYC,MAAON,WACf,OAAO,IAAIF,KAAK,CACZS,QAASC,SAASC,cAAcH,OAChCI,SAAUC,SAAOA,QACjBX,qBAER,CAOAY,WAAWC,OACPf,KAAKgB,eAAe,CAACD,YAAON,QAASM,MAAME,UAC3CjB,KAAKkB,iBAAiBlB,KAAKmB,WAAWnB,KAAKE,UAAUE,OAAQ,QAASJ,KAAKoB,eAC3EL,MAAMM,MAAMC,SAASb,UACjBT,KAAKuB,gBAAgB,CAACR,YAAON,iBAAS,GAE9C,CAOAe,cACI,MAAO,CAEH,CAACC,MAAsB,gBAAEC,QAAS1B,KAAKuB,iBACvC,CAACE,MAAwB,kBAAEC,QAAS1B,KAAKgB,gBAEjD,CAQAW,sBAAqBC,MAAY,IAAXnB,QAACA,SAAQmB,KAC3B,MAAMC,KAACA,KAAIC,GAAEA,UAAYC,WAAAA,QAAUC,iBAC/B,qCACA,IAAIvB,UAEFwB,OAASjC,KAAKmB,WAAWnB,KAAKE,UAAUC,WAC9C4B,WAASnC,QAACsC,mBAAmBD,OAAQJ,KAAMC,GAC/C,CAQAd,eAAcmB,OAAY,IAAX1B,QAACA,SAAQ0B,MACpBnC,KAAKS,QAAQ2B,UAAUC,OAAOrC,KAAKK,QAAQC,MAAuB,IAAjBG,QAAQ6B,KAC7D,CAKAlB,gBACIpB,KAAKY,SAAS2B,SAAS,WAAW,EACtC,EACH,OAAAC,SAAA5C,QAAAC,SAAA2C,SAAA5C,OAAA"}