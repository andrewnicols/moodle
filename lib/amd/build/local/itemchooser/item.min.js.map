{"version":3,"sources":["../../../src/local/itemchooser/item.js"],"names":["Item","name","selectors","favourite","items","addLink","id","element","dataset","addEventListener","getElement","_handleResponse","e","addButton","getAddButton","target","preventDefault","reactive","handleItemSelection","getItemName","favouriteButton","getFavouriteButton","_toggleFavourite","itemName","closest","wasFavourite","favourited","dispatch","watch","handler","_refreshItem","_updateFavouriteState","_updateVisibility","targetState","querySelector","icon","classList","toggle","ariaPressed","visible","BaseComponent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * An individual item.\n *\n * @module     core_course/local/modchooser/item\n * @copyright  2021 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\n\nexport default class Item extends BaseComponent {\n    create() {\n        this.name = 'item';\n\n        this.selectors = {\n            favourite: '[data-toggle=\"favourite\"]',\n\n            // TODO Fix this to not use menuitem.\n            items: '[role=\"menuitem\"]',\n\n            // TODO Rename chooser to itemchooser.\n            addLink: '[data-action=\"add-chooser-option\"]',\n        };\n\n        this.id = this.element.dataset.id;\n    }\n\n    stateReady() {\n        this.addEventListener(\n            this.getElement(),\n            'click',\n            this._handleResponse,\n        );\n    }\n\n    _handleResponse(e) {\n        const addButton = this.getAddButton(e.target);\n        if (addButton) {\n            e.preventDefault();\n            this.reactive.handleItemSelection(this.getItemName());\n        }\n\n        const favouriteButton = this.getFavouriteButton(e.target);\n        if (favouriteButton) {\n            this._toggleFavourite(e);\n        }\n    }\n\n    getItemName() {\n        return this.getElement().dataset.itemName;\n    }\n\n    getFavouriteButton(target) {\n        return target.closest(this.selectors.favourite);\n    }\n\n    getAddButton(target) {\n        return target.closest(this.selectors.addLink);\n    }\n\n    /**\n     * @param {Event} e The click event\n     */\n    _toggleFavourite(e) {\n        const favouriteButton = this.getFavouriteButton(e.target);\n        if (favouriteButton) {\n            e.preventDefault();\n\n            const wasFavourite = favouriteButton.dataset.favourited === 'true';\n            this.reactive.dispatch(\n                'toggleFavourite',\n                this.getItemName(),\n                wasFavourite,\n            );\n        }\n    }\n\n    getWatchers() {\n        return [\n            {\n                watch: `items[${this.id}]:updated`,\n                handler: this._refreshItem,\n            },\n        ];\n    }\n\n    _refreshItem({element}) {\n        // There must be a better way of doing this!\n        const target = this.getElement();\n\n        this._updateFavouriteState(element, target);\n        this._updateVisibility(element, target);\n    }\n\n    _updateFavouriteState(targetState, target) {\n        const favouriteButton = target.querySelector(this.selectors.favourite);\n        const icon = favouriteButton.querySelector(`i`);\n\n        icon.classList.toggle('fa-star', targetState.favourite);\n        icon.classList.toggle('fa-star-o', !targetState.favourite);\n        favouriteButton.classList.toggle('text-primary', targetState.favourite);\n        favouriteButton.classList.toggle('text-muted', !targetState.favourite);\n        favouriteButton.dataset.favourited = targetState.favourite;\n        favouriteButton.ariaPressed = targetState.favourite;\n    }\n\n    _updateVisibility(targetState, target) {\n        target.classList.toggle('d-none', !targetState.visible);\n    }\n}\n"],"file":"item.min.js"}