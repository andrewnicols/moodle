{"version":3,"sources":["../../../src/local/itemchooser/events.js"],"names":["eventTypes","stateUpdated","notifyStateUpdated","detail","container"],"mappings":"iMAgCO,GAAMA,CAAAA,CAAU,CAAG,CAStBC,YAAY,CAAE,+BATQ,CAAnB,C,oCAqB2B,QAArBC,CAAAA,kBAAqB,CAACC,CAAD,CAASC,CAAT,QAAuB,oBACrDJ,CAAU,CAACC,YAD0C,CAErDE,CAFqD,CAGrDC,CAHqD,CAAvB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `itemchooser`.\n *\n * @module core/local/itemchooser/events\n * @copyright 2021 Andrew Lyons <andrew@nicols.co.uk>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since 4.1.0\n */\n\nimport {dispatchEvent} from 'core/event_dispatcher';\n\n/**\n * Events for the `itemchooser`.\n *\n * @constant\n * @property {String} stateUpdated See {@link event:core/itemchooser/stateUpdated}\n */\nexport const eventTypes = {\n    /**\n     * An event triggered when the reactive state has been updated.\n     *\n     * @event core/itemchooser/stateUpdated\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The form field which was changed\n     * @property {object} detail An object containing details of the update\n     */\n    stateUpdated: 'core/itemchooser/stateUpdated',\n};\n\n/**\n * Trigger an event to notify that the reactive state was updated.\n *\n * @method\n * @param {object} detail\n * @param {HTMLElement} container\n * @returns {CustomEvent}\n * @fires uploadChanged\n */\nexport const notifyStateUpdated = (detail, container) => dispatchEvent(\n    eventTypes.stateUpdated,\n    detail,\n    container\n);\n"],"file":"events.min.js"}