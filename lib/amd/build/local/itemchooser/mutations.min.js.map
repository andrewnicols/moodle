{"version":3,"sources":["../../../src/local/itemchooser/mutations.js"],"names":["Mutations","state","name","items","item","stateManager","setPanel","itemName","setReadOnly","get","favourite","panelName","carousel","isActive","reactive","results","Array","from","tabData","map","tabConfig","visibilityFunction","getTabVisibilityFunction","visible","filterFunction","getTabFilterFunction","tabItems","values","filter","action","fields","value","length","processUpdates","forEach","tabName","newTabData","push","setItemVisibilities"],"mappings":"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","sourcesContent":["export default class Mutations {\n    getItemByName(state, name) {\n        for (const item of state.items) {\n            if (item.name === name) {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Handle the case where the chooser is hidden.\n     *\n     * @param {StateManager} stateManager\n     */\n    itemChooserHidden(stateManager) {\n        this.setPanel(stateManager, 'items');\n    }\n\n    /**\n     * The favourite mutation.\n     *\n     * @param {StateManager} stateManager\n     * @param {string} itemName\n     */\n    toggleFavourite(stateManager, itemName) {\n        // TODO Use WS.\n        stateManager.setReadOnly(false);\n        stateManager.state.items.get(itemName).favourite = !stateManager.state.items.get(itemName).favourite;\n        stateManager.setReadOnly(true);\n    }\n\n    setPanel(stateManager, panelName, itemName = null) {\n        stateManager.setReadOnly(false);\n\n        if (panelName === 'items') {\n            stateManager.state.carousel.get('items').isActive = true;\n            stateManager.state.carousel.get('help').isActive = false;\n        } else {\n            stateManager.state.carousel.get('items').isActive = false;\n            stateManager.state.carousel.get('help').isActive = true;\n            stateManager.state.carousel.get('help').item = stateManager.state.items.get(itemName);\n        }\n\n        stateManager.setReadOnly(true);\n    }\n\n    setTabVisibilities(stateManager, reactive) {\n        const results = Array.from(stateManager.state.tabData).map(([, tabConfig]) => {\n            const visibilityFunction = reactive.getTabVisibilityFunction(tabConfig.name);\n            if (!visibilityFunction && tabConfig.visible) {\n                return false;\n            }\n\n            const filterFunction = reactive.getTabFilterFunction(tabConfig.name);\n            let tabItems = Array.from(stateManager.state.items.values());\n            if (filterFunction) {\n                tabItems = tabItems.filter(filterFunction);\n            }\n\n            const visible = visibilityFunction({items: tabItems});\n            if (visible === tabConfig.visible) {\n                return false;\n            }\n\n            return {\n                name: 'tabData',\n                action: 'update',\n                fields: {\n                    ...tabConfig,\n                    visible,\n                },\n            };\n        }).filter(value => value);\n\n        if (results.length) {\n            stateManager.processUpdates(results);\n        }\n    }\n\n    selectTab(stateManager, reactive, itemName) {\n        const results = [];\n\n        Array.from(stateManager.state.tabData).forEach(([tabName, tabData]) => {\n            if (tabName === itemName && !tabData.isActive) {\n                const newTabData = {\n                    ...tabData,\n                    isActive: true,\n                };\n                results.push({\n                    name: 'tabData',\n                    action: 'update',\n                    fields: newTabData,\n                });\n\n                results.push(...this.setItemVisibilities(stateManager, reactive, newTabData));\n            } else if (tabData.isActive) {\n                results.push({\n                    name: 'tabData',\n                    action: 'update',\n                    fields: {\n                        ...tabData,\n                        isActive: false,\n                    },\n                });\n            }\n        });\n\n        if (results.length) {\n            stateManager.processUpdates(results);\n        }\n    }\n\n    setItemVisibilities(stateManager, reactive, tabConfig) {\n        const results = Array.from(stateManager.state.items).map(([, item]) => {\n            let visible = true;\n            const filterFunction = reactive.getTabFilterFunction(tabConfig.name);\n            if (filterFunction) {\n                visible = filterFunction(item);\n            }\n\n            if (visible === item.visible) {\n                return false;\n            }\n\n            return {\n                name: 'items',\n                action: 'update',\n                fields: {\n                    ...item,\n                    visible,\n                },\n            };\n        }).filter(value => value);\n\n        return results;\n    }\n}\n"],"file":"mutations.min.js"}