{"version":3,"sources":["../src/normalise.js"],"names":["getList","nodes","HTMLElement","Array","NodeList","from","jQuery","get","getElement","node"],"mappings":"wJAuBA,uDASO,GAAMA,CAAAA,CAAO,CAAG,SAAAC,CAAK,CAAI,CAC5B,GAAIA,CAAK,WAAYC,CAAAA,WAArB,CAAkC,CAE9B,MAAO,CAACD,CAAD,CACV,CAED,GAAIA,CAAK,WAAYE,CAAAA,KAArB,CAA4B,CAExB,MAAOF,CAAAA,CACV,CAED,GAAIA,CAAK,WAAYG,CAAAA,QAArB,CAA+B,CAE3B,MAAOD,CAAAA,KAAK,CAACE,IAAN,CAAWJ,CAAX,CACV,CAED,GAAIA,CAAK,WAAYK,UAArB,CAA6B,CAEzB,MAAOL,CAAAA,CAAK,CAACM,GAAN,EACV,CAGD,MAAOJ,CAAAA,KAAK,CAACE,IAAN,CAAWJ,CAAX,CACV,CAvBM,C,YAgCA,GAAMO,CAAAA,CAAU,CAAG,SAAAC,CAAI,CAAI,CAC9B,GAAIA,CAAI,WAAYP,CAAAA,WAApB,CAAiC,CAE7B,MAAOO,CAAAA,CACV,CAED,GAAIA,CAAI,WAAYH,UAApB,CAA4B,CAExB,MAAOG,CAAAA,CAAI,CAACF,GAAL,CAAS,CAAT,CACV,CAED,MAAO,KACV,CAZM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Normalisation helpers.\n *\n * @module     core/normalise\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport jQuery from 'jquery';\n\n/**\n * Normalise a list of Nodes into an Array of Nodes.\n *\n * @method getList\n * @param {(Array|jQuery|NodeList|HTMLElement)} nodes\n * @returns {HTMLElement[]}\n */\nexport const getList = nodes => {\n    if (nodes instanceof HTMLElement) {\n        // A single record to conver to a NodeList.\n        return [nodes];\n    }\n\n    if (nodes instanceof Array) {\n        // A single record to conver to a NodeList.\n        return nodes;\n    }\n\n    if (nodes instanceof NodeList) {\n        // Already a NodeList.\n        return Array.from(nodes);\n    }\n\n    if (nodes instanceof jQuery) {\n        // A jQuery object to a NodeList.\n        return nodes.get();\n    }\n\n    // Fallback to just having a go.\n    return Array.from(nodes);\n};\n\n/**\n * Normalise a Nodes into an HTMLElement.\n *\n * @method getList\n * @param {(jQuery|Node|HTMLElement)} node\n * @returns {HTMLElement|null}\n */\nexport const getElement = node => {\n    if (node instanceof HTMLElement) {\n        // A single record already.\n        return node;\n    }\n\n    if (node instanceof jQuery) {\n        // A jQuery object to a NodeList.\n        return node.get(0);\n    }\n\n    return null;\n};\n"],"file":"normalise.min.js"}