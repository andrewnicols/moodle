{"version":3,"file":"prefetch.min.js","sources":["../src/prefetch.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Prefetch module to help lazily load content for use on the current page.\n *\n * @module     core/prefetch\n * @class      prefetch\n * @package    core\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Config from 'core/config';\n\n// Keep track of whether the initial prefetch has occurred.\nlet initialPrefetchComplete = false;\n\n// Prefetch templates.\nlet templateList = [];\n\n// Prefetch strings.\nlet stringList = {};\n\nlet prefetchTimer;\n\n/**\n * Fetch all queued items in the queue.\n *\n * Should only be called via processQueue.\n */\nconst fetchQueue = () => {\n    // Prefetch templates.\n    if (templateList) {\n        const templatesToLoad = templateList.slice();\n        templateList = [];\n        import('core/templates')\n        .then(Templates => Templates.prefetchTemplates(templatesToLoad))\n        .catch();\n    }\n\n    // Prefetch strings.\n    const mappedStringsToFetch = stringList;\n    stringList = {};\n\n    const stringsToFetch = [];\n    Object.keys(mappedStringsToFetch).forEach(component => {\n        stringsToFetch.push(...mappedStringsToFetch[component].map(key => {\n            return {component, key};\n        }));\n    });\n\n    if (stringsToFetch) {\n        import('core/str')\n        .then(Str => Str.get_strings(stringsToFetch))\n        .catch();\n    }\n};\n\n/**\n * Process the prefetch queues as required.\n *\n * The initial call will queue the first fetch after a delay.\n * Subsequent fetches are immediate.\n */\nconst processQueue = () => {\n    if (prefetchTimer) {\n        // There is a live prefetch timer. The initial prefetch has been scheduled but is not complete.\n        return;\n    }\n\n    // The initial prefetch has compelted. Just queue as normal.\n    if (initialPrefetchComplete) {\n        fetchQueue();\n\n        return;\n    }\n\n    // Queue the initial prefetch in a short while.\n    prefetchTimer = setTimeout(() => {\n        initialPrefetchComplete = true;\n        prefetchTimer = null;\n\n        // Ensure that the icon system is loaded.\n        // This can be quite slow and delay UI interactions if it is loaded on demand.\n        import(Config.iconsystemmodule)\n        .then(IconSystem => {\n            const iconSystem = new IconSystem();\n            prefetchTemplate(iconSystem.getTemplateName());\n\n            return iconSystem;\n        })\n        .then(iconSystem => {\n            fetchQueue();\n            iconSystem.init();\n\n            return;\n        })\n        .catch();\n    }, 500);\n};\n\n/**\n * Add a set of templates to the prefetch queue.\n *\n * @param {Array} templatesNames\n */\nconst prefetchTemplates = templatesNames => {\n    templateList = templateList.concat(templatesNames);\n\n    processQueue();\n};\n\n/**\n * Add a single template to the prefetch queue.\n *\n * @param {String} templateName\n * @returns {undefined}\n */\nconst prefetchTemplate = templateName => prefetchTemplates([templateName]);\n\n/**\n * Add a set of strings from the same component to the prefetch queue.\n *\n * @param {String} component\n * @param {String[]} keys\n */\nconst prefetchStrings = (component, keys) => {\n    if (!stringList[component]) {\n        stringList[component] = [];\n    }\n\n    stringList[component] = stringList[component].concat(keys);\n\n    processQueue();\n};\n\n/**\n * Add a single string to the prefetch queue.\n *\n * @param {String} component\n * @param {String} key\n */\nconst prefetchString = (component, key) => {\n    if (!stringList[component]) {\n        stringList[component] = [];\n    }\n\n    stringList[component].push(key);\n\n    processQueue();\n};\n\n// Prefetch some commonly-used templates.\nprefetchTemplates([].concat(\n    ['core/loading'],\n    ['core/modal'],\n    ['core/modal_backdrop'],\n));\n\n// And some commonly used strings.\nprefetchStrings('core', [\n    'cancel',\n    'closebuttontitle',\n    'loading',\n    'savechanges',\n]);\nprefetchStrings('core_form', [\n    'showless',\n    'showmore',\n]);\n\nexport default {\n    prefetchTemplate,\n    prefetchTemplates,\n    prefetchString,\n    prefetchStrings,\n};\n"],"names":["obj","_config","__esModule","default","_systemImportTransformerGlobalIdentifier","window","self","global","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","length","i","arr2","prefetchTimer","initialPrefetchComplete","templateList","stringList","fetchQueue","templatesToLoad","define","amd","Promise","resolve","reject","require","module","exports","component","loader","then","Templates","prefetchTemplates","catch","mappedStringsToFetch","stringsToFetch","keys","forEach","push","apply","map","key","Str","get_strings","processQueue","setTimeout","Config","iconsystemmodule","IconSystem","iconSystem","prefetchTemplate","getTemplateName","init","templatesNames","concat","templateName","prefetchStrings","_default","prefetchString","_exports"],"mappings":"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"}