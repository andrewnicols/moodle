define ("core/user_date",["jquery","core/ajax","core/sessionstorage","core/config"],function($,Ajax,Storage,Config){var promisesCache={},getKey=function(request){var language=$("html").attr("lang").replace(/-/g,"_");return"core_user_date/"+language+"/"+Config.usertimezone+"/"+request.timestamp+"/"+request.format},getFromLocalStorage=function(key){return Storage.get(key)},addToLocalStorage=function(key,value){Storage.set(key,value)},inPromisesCache=function(key){return"undefined"!=typeof promisesCache[key]},getFromPromisesCache=function(key){return promisesCache[key]},addToPromisesCache=function(key,promise){promisesCache[key]=promise},loadDatesFromServer=function(dates){var args=dates.map(function(data){var fixDay=data.hasOwnProperty("fixday")?data.fixday:1,fixHour=data.hasOwnProperty("fixhour")?data.fixhour:1;return{timestamp:data.timestamp,format:data.format,type:data.type||null,fixday:fixDay,fixhour:fixHour}}),request={methodname:"core_get_user_dates",args:{contextid:Config.contextid,timestamps:args}};return Ajax.call([request],!0,!0)[0].then(function(results){results.dates.forEach(function(value,index){var date=dates[index],key=getKey(date);addToLocalStorage(key,value);date.deferred.resolve(value)})}).catch(function(ex){dates.forEach(function(date){date.deferred.reject(ex)})})};return{get:function(requests){var ajaxRequests=[],promises=[];requests.forEach(function(request){var key=getKey(request);if(inPromisesCache(key)){promises.push(getFromPromisesCache(key))}else{var deferred=$.Deferred(),cached=getFromLocalStorage(key);if(cached){deferred.resolve(cached)}else{request.deferred=deferred;ajaxRequests.push(request)}addToPromisesCache(key,deferred.promise());promises.push(deferred.promise())}});if(ajaxRequests.length){loadDatesFromServer(ajaxRequests)}return $.when.apply($,promises).then(function(){return 1===arguments.length?[arguments[0]]:Array.apply(null,arguments)})},getUserMidnightForTimestamp:function(timestamp,todayMidnight){var future=timestamp>todayMidnight,diffSeconds=Math.abs(timestamp-todayMidnight),diffDays=future?Math.floor(diffSeconds/86400):Math.ceil(diffSeconds/86400),diffDaysInSeconds=diffDays*86400,dayTimestamp=future?todayMidnight+diffDaysInSeconds:todayMidnight-diffDaysInSeconds;return dayTimestamp}}});
//# sourceMappingURL=user_date.min.js.map
