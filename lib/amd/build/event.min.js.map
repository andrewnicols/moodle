{"version":3,"sources":["../src/event.js"],"names":["getLegacyEvents","result","$","Deferred","Y","use","resolve","window","M","core","event","promise","notifyFilterContentUpdated","nodes","document","trigger","FILTER_CONTENT_UPDATED","yuiNodes","NodeList","get","fire","notifyEditorContentRestored","EDITOR_CONTENT_RESTORED","Events","FORM_FIELD_VALIDATION","dispatchEvent","notifyFormSubmitAjax","getCurriedRenamedFunction","oldFunctionName","newModule","newFunctionName","newFunctionRef","console","warn","notifyFormSubmittedByJavascript"],"mappings":"yMA6BA,OACA,O,sDAcMA,CAAAA,CAAe,CAAG,UAAM,CAC1B,GAAIC,CAAAA,CAAM,CAAGC,UAAEC,QAAF,EAAb,CACAC,UAAEC,GAAF,CAAM,OAAN,CAAe,mBAAf,CAAoC,UAAW,CAC3CJ,CAAM,CAACK,OAAP,CAAeC,MAAM,CAACC,CAAP,CAASC,IAAT,CAAcC,KAA7B,CACH,CAFD,EAGA,MAAOT,CAAAA,CAAM,CAACU,OAAP,EACV,C,CAQKC,CAA0B,CAAG,SAAAC,CAAK,CAAI,CACxCA,CAAK,CAAG,cAAEA,CAAF,CAAR,CACAT,UAAEC,GAAF,CAAM,OAAN,CAAe,mBAAf,CAAoC,SAASD,CAAT,CAAY,CAE5C,cAAEU,QAAF,EAAYC,OAAZ,CAAoBP,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAaM,sBAAjC,CAAyD,CAACH,CAAD,CAAzD,EAGA,GAAII,CAAAA,CAAQ,CAAG,GAAIb,CAAAA,CAAC,CAACc,QAAN,CAAeL,CAAK,CAACM,GAAN,EAAf,CAAf,CAGAf,CAAC,CAACgB,IAAF,CAAOZ,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAaM,sBAApB,CAA4C,CAACH,KAAK,CAAEI,CAAR,CAA5C,CACH,CATD,CAUH,C,CAQKI,CAA2B,CAAG,UAAM,CACtCjB,UAAEC,GAAF,CAAM,OAAN,CAAe,mBAAf,CAAoC,SAASD,CAAT,CAAY,CAE5C,cAAEU,QAAF,EAAYC,OAAZ,CAAoBP,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAaY,uBAAjC,EAGAlB,CAAC,CAACgB,IAAF,CAAOZ,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAaY,uBAApB,CACH,CAND,CAOH,C,GAoBc,CACXC,MAAM,CAzEK,CACXC,qBAAqB,CAAE,4BADZ,CAwEA,CAEXC,aAAa,CAAbA,eAFW,CAGXzB,eAAe,CAAfA,CAHW,CAIXqB,2BAA2B,CAA3BA,CAJW,CAKXT,0BAA0B,CAA1BA,CALW,CAOXc,oBAAoB,CAhBU,QAA5BC,CAAAA,yBAA4B,CAACC,CAAD,CAAkBC,CAAlB,CAA6BC,CAA7B,CAA8CC,CAA9C,QAAiE,WAAa,CAC5GxB,MAAM,CAACyB,OAAP,CAAeC,IAAf,CACI,0BAAmBL,CAAnB,0CAAmEC,CAAnE,cAAiFC,CAAjF,wDADJ,EAKA,MAAOC,CAAAA,CAAc,MAAd,kBACV,CAPiC,CAgBR,CAClB,sBADkB,CAElB,kBAFkB,CAGlB,iCAHkB,CAIlBG,iCAJkB,CAPX,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Global registry of core events that can be triggered/listened for.\n *\n * @module     core/event\n * @package    core\n * @class      event\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.0\n */\n\nimport {dispatchEvent} from 'core/local/event/dispatcher';\nimport {notifyFormSubmittedByJavascript} from 'core_form/events';\n\n// These are only imported for legacy.\nimport $ from 'jquery';\nimport Y from 'core/yui';\n\n// Public variables and functions.\n// These are AMD only events - no backwards compatibility for new things.\nconst Events = {\n    FORM_FIELD_VALIDATION: \"core_form-field-validation\"\n};\n\n/**\n * Load the legacy YUI module which defines events in M.core.event and return it.\n *\n * @method getLegacyEvents\n * @return {Promise}\n */\nconst getLegacyEvents = () => {\n    var result = $.Deferred();\n    Y.use('event', 'moodle-core-event', function() {\n        result.resolve(window.M.core.event);\n    });\n    return result.promise();\n};\n\n/**\n * Trigger an event using both JQuery and YUI\n *\n * @method notifyFilterContentUpdated\n * @param {string|JQuery} nodes - Selector or list of elements that were inserted.\n */\nconst notifyFilterContentUpdated = nodes => {\n    nodes = $(nodes);\n    Y.use('event', 'moodle-core-event', function(Y) {\n        // Trigger it the JQuery way.\n        $(document).trigger(M.core.event.FILTER_CONTENT_UPDATED, [nodes]);\n\n        // Create a YUI NodeList from our JQuery Object.\n        var yuiNodes = new Y.NodeList(nodes.get());\n\n        // And again for YUI.\n        Y.fire(M.core.event.FILTER_CONTENT_UPDATED, {nodes: yuiNodes});\n    });\n};\n\n/**\n * Trigger an event using both JQuery and YUI\n * This event alerts the world that the editor has restored some content.\n *\n * @method notifyEditorContentRestored\n */\nconst notifyEditorContentRestored = () => {\n    Y.use('event', 'moodle-core-event', function(Y) {\n        // Trigger it the JQuery way.\n        $(document).trigger(M.core.event.EDITOR_CONTENT_RESTORED);\n\n        // And again for YUI.\n        Y.fire(M.core.event.EDITOR_CONTENT_RESTORED);\n    });\n};\n\n/**\n * Get a curried function to warn that a function has been moved and renamed\n *\n * @param   {string} oldFunctionName\n * @param   {string} newModule\n * @param   {string} newFunctionName\n * @param   {Function} newFunctionRef\n * @returns {Function}\n */\nconst getCurriedRenamedFunction = (oldFunctionName, newModule, newFunctionName, newFunctionRef) => (...args) => {\n    window.console.warn(\n        `The core/event::${oldFunctionName}() function has been moved to ${newModule}::${newFunctionName}}. ` +\n        `Please update your code to use the new module.`\n    );\n\n    return newFunctionRef(...args);\n};\n\nexport default {\n    Events,\n    dispatchEvent,\n    getLegacyEvents,\n    notifyEditorContentRestored,\n    notifyFilterContentUpdated,\n\n    notifyFormSubmitAjax: getCurriedRenamedFunction(\n        'notifyFormSubmitAjax',\n        'core_form/events',\n        'notifyFormSubmittedByJavascript',\n        notifyFormSubmittedByJavascript\n    ),\n};\n"],"file":"event.min.js"}