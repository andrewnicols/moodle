define ("core/toast",["exports","core/templates","core/notification","core/pending"],function(_exports,_templates,_notification,_pending){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.addToastRegion=_exports.add=void 0;_templates=_interopRequireDefault(_templates);_notification=_interopRequireDefault(_notification);_pending=_interopRequireDefault(_pending);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const addToastRegion=async parent=>{const pendingPromise=new _pending.default("addToastRegion");try{const{html,js}=await _templates.default.renderForPromise("core/local/toast/wrapper",{});_templates.default.prependNodeContents(parent,html,js)}catch(e){_notification.default.exception(e)}pendingPromise.resolve()};_exports.addToastRegion=addToastRegion;const add=async(message,configuration)=>{const pendingPromise=new _pending.default("addToastRegion");configuration={type:"info",closeButton:!1,autohide:!0,delay:4e3,...configuration};try{const targetNode=await getTargetNode(),{html,js}=await _templates.default.renderForPromise("core/local/toast/message",{message:await message,...configuration});_templates.default.prependNodeContents(targetNode,html,js)}catch(e){_notification.default.exception(e)}pendingPromise.resolve()};_exports.add=add;const getTargetNode=async()=>{const regions=document.querySelectorAll(".toast-wrapper");if(regions.length){return regions[regions.length-1]}await addToastRegion(document.body,"fixed-bottom");return getTargetNode()}});
//# sourceMappingURL=toast.min.js.map
