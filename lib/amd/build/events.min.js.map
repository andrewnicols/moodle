{"version":3,"sources":["../src/events.js"],"names":["eventTypes","drawerShown","drawerHidden","checkboxToggleToggled","notifyDrawerShown","element","notifyDrawerHidden","notifyCheckboxToggleToggled"],"mappings":"uOAmCO,GAAMA,CAAAA,CAAU,CAAG,CACtBC,WAAW,CAAE,kBADS,CAEtBC,YAAY,CAAE,mBAFQ,CAGtBC,qBAAqB,CAAE,4BAHD,CAAnB,C,mCAc0B,QAApBC,CAAAA,iBAAoB,CAAAC,CAAO,QAAI,oBAAcL,CAAU,CAACC,WAAzB,CAAsC,EAAtC,CAA0CI,CAA1C,CAAJ,C,sBAUN,QAArBC,CAAAA,kBAAqB,CAAAD,CAAO,QAAI,oBAAcL,CAAU,CAACE,YAAzB,CAAuC,EAAvC,CAA2CG,CAA3C,CAAJ,C,+BAUE,QAA9BE,CAAAA,2BAA8B,CAAAF,CAAO,QAAI,oBAAcL,CAAU,CAACG,qBAAzB,CAAgD,EAAhD,CAAoDE,CAApD,CAAJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Core Events.\n *\n * @module     core/events\n * @copyright  2021 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.11\n */\n\nimport {dispatchEvent} from 'core/local/event/dispatcher';\n\n/**\n * The list of defined event types.\n *\n * @public\n * @readonly\n * @constant\n * @property {string} drawerShown This event is triggered when a drawer was shown.\n * @property {string} drawerHidden This event is triggered when a drawer was hidden.\n * @property {string} checkboxToggleToggled This event is triggered when a checkbox-toggleall is toggled.\n */\nexport const eventTypes = {\n    drawerShown: 'core/drawerShown',\n    drawerHidden: 'core/drawerHidden',\n    checkboxToggleToggled: 'core/checkboxToggleToggled',\n};\n\n/**\n * Trigger an event to indicate that a drawer was shown.\n *\n * @method notifyDrawerShown\n * @public\n * @param {HTMLElement} element The HTMLElement containing the drawer.\n * @returns {CustomEvent}\n */\nexport const notifyDrawerShown = element => dispatchEvent(eventTypes.drawerShown, {}, element);\n\n/**\n * Trigger an event to indicate that a drawer was hidden.\n *\n * @method notifyDrawerHidden\n * @public\n * @param {HTMLElement} element The HTMLElement containing the drawer.\n * @returns {CustomEvent}\n */\nexport const notifyDrawerHidden = element => dispatchEvent(eventTypes.drawerHidden, {}, element);\n\n/**\n * Trigger an event to indicate that a checkbox-toggleall was toggled.\n *\n * @method notifyCheckboxToggleToggled\n * @public\n * @param {HTMLElement} element The HTMLElement containing the drawer.\n * @returns {CustomEvent}\n */\nexport const notifyCheckboxToggleToggled = element => dispatchEvent(eventTypes.checkboxToggleToggled, {}, element);\n"],"file":"events.min.js"}