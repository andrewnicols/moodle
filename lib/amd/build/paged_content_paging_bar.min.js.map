{"version":3,"sources":["../src/paged_content_paging_bar.js"],"names":["define","$","CustomEvents","PagedContentEvents","Str","PubSub","Pending","SELECTORS","ROOT","PAGE","PAGE_ITEM","PAGE_LINK","FIRST_BUTTON","LAST_BUTTON","NEXT_BUTTON","PREVIOUS_BUTTON","DOTS_BUTTONS","BEGINNING_DOTS_BUTTON","ENDING_DOTS_BUTTON","getPageByNumber","root","pageNumber","find","getNextButton","setLastPageNumber","number","attr","getLastPageNumber","parseInt","getActivePageNumber","setActivePageNumber","hasActivePageNumber","isNaN","getPageNumber","page","activePageNumber","lastPage","getLimit","setLimit","limit","show","removeClass","hide","addClass","disableNextControlButtons","nextButton","lastButton","enableNextControlButtons","removeAttr","disablePreviousControlButtons","previousButton","firstButton","adjustPagingBarSize","lastPageNumber","dotsButtons","beginningDotsButton","endingDotsButton","pages","barSize","minpage","Math","max","round","maxpage","each","index","enablePreviousControlButtons","getPageAriaLabelComponents","componentString","components","split","map","component","trim","getActivePageAriaLabelComponents","generatePageNumbers","items","item","hasClass","generateAriaLabels","pageAriaLabelComponents","activePageAriaLabelComponents","pageItems","stringRequests","key","param","get_strings","then","strings","string","catch","showPage","id","pendingPromise","isSamePage","publish","SHOW_PAGES","offset","resolve","registerEventListeners","ignoreControlWhileLoading","loading","events","activate","on","e","data","originalEvent","preventDefault","stopPropagation","target","closest","subscribe","ALL_ITEMS_LOADED","currentLastPage","PAGES_SHOWN","SET_ITEMS_PER_PAGE_LIMIT","init","click","rootSelector"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to enhance the paged content paging bar.\n *\n * @module     core/paging_bar\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/custom_interaction_events',\n    'core/paged_content_events',\n    'core/str',\n    'core/pubsub',\n    'core/pending',\n],\nfunction(\n    $,\n    CustomEvents,\n    PagedContentEvents,\n    Str,\n    PubSub,\n    Pending\n) {\n\n    var SELECTORS = {\n        ROOT: '[data-region=\"paging-bar\"]',\n        PAGE: '[data-page]',\n        PAGE_ITEM: '[data-region=\"page-item\"]',\n        PAGE_LINK: '[data-region=\"page-link\"]',\n        FIRST_BUTTON: '[data-control=\"first\"]',\n        LAST_BUTTON: '[data-control=\"last\"]',\n        NEXT_BUTTON: '[data-control=\"next\"]',\n        PREVIOUS_BUTTON: '[data-control=\"previous\"]',\n        DOTS_BUTTONS: '[data-dots]',\n        BEGINNING_DOTS_BUTTON: '[data-dots=\"beginning\"]',\n        ENDING_DOTS_BUTTON: '[data-dots=\"ending\"]',\n    };\n\n    /**\n     * Get the page element by number.\n     *\n     * @param {object} root The root element.\n     * @param {Number} pageNumber The page number.\n     * @return {jQuery}\n     */\n    var getPageByNumber = function(root, pageNumber) {\n        return root.find(SELECTORS.PAGE_ITEM + '[data-page-number=\"' + pageNumber + '\"]');\n    };\n\n    /**\n     * Get the next button element.\n     *\n     * @param {object} root The root element.\n     * @return {jQuery}\n     */\n    var getNextButton = function(root) {\n        return root.find(SELECTORS.NEXT_BUTTON);\n    };\n\n    /**\n     * Set the last page number after which no more pages\n     * should be loaded.\n     *\n     * @param {object} root The root element.\n     * @param {Number} number Page number.\n     */\n    var setLastPageNumber = function(root, number) {\n        root.attr('data-last-page-number', number);\n    };\n\n    /**\n     * Get the last page number.\n     *\n     * @param {object} root The root element.\n     * @return {Number}\n     */\n    var getLastPageNumber = function(root) {\n        return parseInt(root.attr('data-last-page-number'), 10);\n    };\n\n    /**\n     * Get the active page number.\n     *\n     * @param {object} root The root element.\n     * @returns {Number} The page number\n     */\n    var getActivePageNumber = function(root) {\n        return parseInt(root.attr('data-active-page-number'), 10);\n    };\n\n    /**\n     * Set the active page number.\n     *\n     * @param {object} root The root element.\n     * @param {Number} number Page number.\n     */\n    var setActivePageNumber = function(root, number) {\n        root.attr('data-active-page-number', number);\n    };\n\n    /**\n     * Check if there is an active page number.\n     *\n     * @param {object} root The root element.\n     * @returns {bool}\n     */\n    var hasActivePageNumber = function(root) {\n        var number = getActivePageNumber(root);\n        return !isNaN(number) && number != 0;\n    };\n\n    /**\n     * Get the page number for a given page.\n     *\n     * @param {object} root The root element.\n     * @param {object} page The page element.\n     * @returns {Number} The page number\n     */\n    var getPageNumber = function(root, page) {\n        if (page.attr('data-page') != undefined) {\n            // If it's an actual page then we can just use the page number\n            // attribute.\n            return parseInt(page.attr('data-page-number'), 10);\n        }\n\n        var pageNumber = 1;\n        var activePageNumber = null;\n\n        switch (page.attr('data-control')) {\n            case 'first':\n                pageNumber = 1;\n                break;\n\n            case 'last':\n                pageNumber = getLastPageNumber(root);\n                break;\n\n            case 'next':\n                activePageNumber = getActivePageNumber(root);\n                var lastPage = getLastPageNumber(root);\n                if (!lastPage) {\n                    pageNumber = activePageNumber + 1;\n                } else if (activePageNumber && activePageNumber < lastPage) {\n                    pageNumber = activePageNumber + 1;\n                } else {\n                    pageNumber = lastPage;\n                }\n                break;\n\n            case 'previous':\n                activePageNumber = getActivePageNumber(root);\n                if (activePageNumber && activePageNumber > 1) {\n                    pageNumber = activePageNumber - 1;\n                } else {\n                    pageNumber = 1;\n                }\n                break;\n\n            default:\n                pageNumber = 1;\n                break;\n        }\n\n        // Make sure we return an int not a string.\n        return parseInt(pageNumber, 10);\n    };\n\n    /**\n     * Get the limit of items for each page.\n     *\n     * @param {object} root The root element.\n     * @returns {Number}\n     */\n    var getLimit = function(root) {\n        return parseInt(root.attr('data-items-per-page'), 10);\n    };\n\n    /**\n     * Set the limit of items for each page.\n     *\n     * @param {object} root The root element.\n     * @param {Number} limit Items per page limit.\n     */\n    var setLimit = function(root, limit) {\n        root.attr('data-items-per-page', limit);\n    };\n\n    /**\n     * Show the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var show = function(root) {\n        root.removeClass('hidden');\n    };\n\n    /**\n     * Hide the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var hide = function(root) {\n        root.addClass('hidden');\n    };\n\n    /**\n     * Disable the next and last buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var disableNextControlButtons = function(root) {\n        var nextButton = root.find(SELECTORS.NEXT_BUTTON);\n        var lastButton = root.find(SELECTORS.LAST_BUTTON);\n\n        nextButton.addClass('disabled');\n        nextButton.attr('aria-disabled', true);\n        lastButton.addClass('disabled');\n        lastButton.attr('aria-disabled', true);\n    };\n\n    /**\n     * Enable the next and last buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var enableNextControlButtons = function(root) {\n        var nextButton = root.find(SELECTORS.NEXT_BUTTON);\n        var lastButton = root.find(SELECTORS.LAST_BUTTON);\n\n        nextButton.removeClass('disabled');\n        nextButton.removeAttr('aria-disabled');\n        lastButton.removeClass('disabled');\n        lastButton.removeAttr('aria-disabled');\n    };\n\n    /**\n     * Disable the previous and first buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var disablePreviousControlButtons = function(root) {\n        var previousButton = root.find(SELECTORS.PREVIOUS_BUTTON);\n        var firstButton = root.find(SELECTORS.FIRST_BUTTON);\n\n        previousButton.addClass('disabled');\n        previousButton.attr('aria-disabled', true);\n        firstButton.addClass('disabled');\n        firstButton.attr('aria-disabled', true);\n    };\n\n    /**\n     * Adjusts the size of the paging bar and hides unnecessary pages.\n     *\n     * @param {object} root The root element.\n     */\n    var adjustPagingBarSize = function(root) {\n        var activePageNumber = getActivePageNumber(root);\n        var lastPageNumber = getLastPageNumber(root);\n\n        var dotsButtons = root.find(SELECTORS.DOTS_BUTTONS);\n        var beginningDotsButton = root.find(SELECTORS.BEGINNING_DOTS_BUTTON);\n        var endingDotsButton = root.find(SELECTORS.ENDING_DOTS_BUTTON);\n\n        var pages = root.find(SELECTORS.PAGE);\n        var barSize = parseInt(root.attr('data-bar-size'), 10);\n\n        if (barSize && lastPageNumber > barSize) {\n\n            var minpage = Math.max(activePageNumber - Math.round(barSize / 2), 1);\n            var maxpage = minpage + barSize - 1;\n\n            if (maxpage >= lastPageNumber) {\n                maxpage = lastPageNumber;\n                minpage = maxpage - barSize + 1;\n            }\n\n            if (minpage > 1) {\n                show(beginningDotsButton);\n                minpage++;\n            } else {\n                hide(beginningDotsButton);\n            }\n            if (maxpage < lastPageNumber) {\n                show(endingDotsButton);\n                maxpage--;\n            } else {\n                hide(endingDotsButton);\n            }\n            dotsButtons.addClass('disabled');\n            dotsButtons.attr('aria-disabled', true);\n\n            hide(pages);\n\n            pages.each(function(index, page) {\n                page = $(page);\n                if ((index + 1) >= minpage && (index + 1) <= maxpage) {\n                    show(page);\n                }\n            });\n\n        } else {\n            hide(dotsButtons);\n        }\n    };\n\n    /**\n     * Enable the previous and first buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var enablePreviousControlButtons = function(root) {\n        var previousButton = root.find(SELECTORS.PREVIOUS_BUTTON);\n        var firstButton = root.find(SELECTORS.FIRST_BUTTON);\n\n        previousButton.removeClass('disabled');\n        previousButton.removeAttr('aria-disabled');\n        firstButton.removeClass('disabled');\n        firstButton.removeAttr('aria-disabled');\n    };\n\n    /**\n     * Get the components for a get_string request for the aria-label\n     * on a page. The value is a comma separated string of key and\n     * component.\n     *\n     * @param {object} root The root element.\n     * @return {array} First element is the key, second is the component.\n     */\n    var getPageAriaLabelComponents = function(root) {\n        var componentString = root.attr('data-aria-label-components-pagination-item');\n        var components = componentString.split(',').map(function(component) {\n            return component.trim();\n        });\n        return components;\n    };\n\n    /**\n     * Get the components for a get_string request for the aria-label\n     * on an active page. The value is a comma separated string of key and\n     * component.\n     *\n     * @param {object} root The root element.\n     * @return {array} First element is the key, second is the component.\n     */\n    var getActivePageAriaLabelComponents = function(root) {\n        var componentString = root.attr('data-aria-label-components-pagination-active-item');\n        var components = componentString.split(',').map(function(component) {\n            return component.trim();\n        });\n        return components;\n    };\n\n    /**\n     * Set page numbers on each of the given items. Page numbers are set\n     * from 1..n (where n is the number of items).\n     *\n     * Sets the active page number to be the last page found with\n     * an \"active\" class (if any).\n     *\n     * Sets the last page number.\n     *\n     * @param {object} root The root element.\n     * @param {jQuery} items A jQuery list of items.\n     */\n    var generatePageNumbers = function(root, items) {\n        var lastPageNumber = 0;\n        setActivePageNumber(root, 0);\n\n        items.each(function(index, item) {\n            var pageNumber = index + 1;\n            item = $(item);\n            item.attr('data-page-number', pageNumber);\n            lastPageNumber++;\n\n            if (item.hasClass('active')) {\n                setActivePageNumber(root, pageNumber);\n            }\n        });\n\n        setLastPageNumber(root, lastPageNumber);\n    };\n\n    /**\n     * Set the aria-labels on each of the page items in the paging bar.\n     * This includes the next, previous, first, and last items.\n     *\n     * @param {object} root The root element.\n     */\n    var generateAriaLabels = function(root) {\n        var pageAriaLabelComponents = getPageAriaLabelComponents(root);\n        var activePageAriaLabelComponents = getActivePageAriaLabelComponents(root);\n        var activePageNumber = getActivePageNumber(root);\n        var pageItems = root.find(SELECTORS.PAGE_ITEM);\n        // We want to request all of the strings at once rather than\n        // one at a time.\n        var stringRequests = pageItems.map(function(index, page) {\n            page = $(page);\n            var pageNumber = getPageNumber(root, page);\n\n            if (pageNumber === activePageNumber) {\n                return {\n                    key: activePageAriaLabelComponents[0],\n                    component: activePageAriaLabelComponents[1],\n                    param: pageNumber\n                };\n            } else {\n                return {\n                    key: pageAriaLabelComponents[0],\n                    component: pageAriaLabelComponents[1],\n                    param: pageNumber\n                };\n            }\n        });\n\n        Str.get_strings(stringRequests).then(function(strings) {\n            pageItems.each(function(index, page) {\n                page = $(page);\n                var string = strings[index];\n                page.attr('aria-label', string);\n                page.find(SELECTORS.PAGE_LINK).attr('aria-label', string);\n            });\n\n            return strings;\n        })\n        .catch(function() {\n            // No need to interrupt the page if we can't load the aria lang strings.\n            return;\n        });\n    };\n\n    /**\n     * Make the paging bar item for the given page number visible and fire\n     * the SHOW_PAGES paged content event to tell any listening content to\n     * update.\n     *\n     * @param {object} root The root element.\n     * @param {Number} pageNumber The number for the page to show.\n     * @param {string} id A uniqie id for this instance.\n     */\n    var showPage = function(root, pageNumber, id) {\n        var pendingPromise = new Pending('core/paged_content_paging_bar:showPage');\n        var lastPageNumber = getLastPageNumber(root);\n        var isSamePage = pageNumber == getActivePageNumber(root);\n        var limit = getLimit(root);\n        var offset = (pageNumber - 1) * limit;\n\n        if (!isSamePage) {\n            // We only need to toggle the active class if the user didn't click\n            // on the already active page.\n            root.find(SELECTORS.PAGE_ITEM).removeClass('active').removeAttr('aria-current');\n            var page = getPageByNumber(root, pageNumber);\n            page.addClass('active');\n            page.attr('aria-current', true);\n            setActivePageNumber(root, pageNumber);\n\n            adjustPagingBarSize(root);\n        }\n\n        // Make sure the control buttons are disabled as the user navigates\n        // to either end of the limits.\n        if (lastPageNumber && pageNumber >= lastPageNumber) {\n            disableNextControlButtons(root);\n        } else {\n            enableNextControlButtons(root);\n        }\n\n        if (pageNumber > 1) {\n            enablePreviousControlButtons(root);\n        } else {\n            disablePreviousControlButtons(root);\n        }\n\n        generateAriaLabels(root);\n\n        // This event requires a payload that contains a list of all pages that\n        // were activated. In the case of the paging bar we only show one page at\n        // a time.\n        PubSub.publish(id + PagedContentEvents.SHOW_PAGES, [{\n            pageNumber: pageNumber,\n            limit: limit,\n            offset: offset\n        }]);\n\n        pendingPromise.resolve();\n    };\n\n    /**\n     * Add event listeners for interactions with the paging bar as well as listening\n     * for custom paged content events.\n     *\n     * Each event will trigger different logic to update parts of the paging bar's\n     * display.\n     *\n     * @param {object} root The root element.\n     * @param {string} id A uniqie id for this instance.\n     */\n    var registerEventListeners = function(root, id) {\n        var ignoreControlWhileLoading = root.attr('data-ignore-control-while-loading');\n        var loading = false;\n\n        if (ignoreControlWhileLoading == \"\") {\n            // Default to ignoring control while loading if not specified.\n            ignoreControlWhileLoading = true;\n        }\n\n        CustomEvents.define(root, [\n            CustomEvents.events.activate\n        ]);\n\n        root.on(CustomEvents.events.activate, SELECTORS.PAGE_ITEM, function(e, data) {\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n\n            if (ignoreControlWhileLoading && loading) {\n                // Do nothing if configured to ignore control while loading.\n                return;\n            }\n\n            var page = $(e.target).closest(SELECTORS.PAGE_ITEM);\n\n            if (!page.hasClass('disabled')) {\n                var pageNumber = getPageNumber(root, page);\n                showPage(root, pageNumber, id);\n                loading = true;\n            }\n        });\n\n        // This event is fired when all of the items have been loaded. Typically used\n        // in an \"infinite\" pages context when we don't know the exact number of pages\n        // ahead of time.\n        PubSub.subscribe(id + PagedContentEvents.ALL_ITEMS_LOADED, function(pageNumber) {\n            loading = false;\n            var currentLastPage = getLastPageNumber(root);\n\n            if (!currentLastPage || pageNumber < currentLastPage) {\n                // Somehow the value we've got saved is higher than the new\n                // value we just received. Perhaps events came out of order.\n                // In any case, save the lowest value.\n                setLastPageNumber(root, pageNumber);\n            }\n\n            if (pageNumber === 1 && root.attr('data-hide-control-on-single-page')) {\n                // If all items were loaded on the first page then we can hide\n                // the paging bar because there are no other pages to load.\n                hide(root);\n                disableNextControlButtons(root);\n                disablePreviousControlButtons(root);\n            } else {\n                show(root);\n                disableNextControlButtons(root);\n            }\n        });\n\n        // This event is fired after all of the requested pages have been rendered.\n        PubSub.subscribe(id + PagedContentEvents.PAGES_SHOWN, function() {\n            // All pages have been shown so turn off the loading flag.\n            loading = false;\n        });\n\n        // This is triggered when the paging limit is modified.\n        PubSub.subscribe(id + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT, function(limit) {\n            // Update the limit.\n            setLimit(root, limit);\n            setLastPageNumber(root, 0);\n            setActivePageNumber(root, 0);\n            show(root);\n            // Reload the data from page 1 again.\n            showPage(root, 1, id);\n        });\n    };\n\n    /**\n     * Initialise the paging bar.\n     * @param {object} root The root element.\n     * @param {string} id A uniqie id for this instance.\n     */\n    var init = function(root, id) {\n        root = $(root);\n        var pages = root.find(SELECTORS.PAGE);\n        generatePageNumbers(root, pages);\n        registerEventListeners(root, id);\n\n        if (hasActivePageNumber(root)) {\n            var activePageNumber = getActivePageNumber(root);\n            // If the the paging bar was rendered with an active page selected\n            // then make sure we fired off the event to tell the content page to\n            // show.\n            getPageByNumber(root, activePageNumber).click();\n            if (activePageNumber == 1) {\n                // If the first page is active then disable the previous buttons.\n                disablePreviousControlButtons(root);\n            }\n        } else {\n            // There was no active page number so load the first page using\n            // the next button. This allows the infinite pagination to work.\n            getNextButton(root).click();\n        }\n\n        adjustPagingBarSize(root);\n    };\n\n    return {\n        init: init,\n        disableNextControlButtons: disableNextControlButtons,\n        enableNextControlButtons: enableNextControlButtons,\n        disablePreviousControlButtons: disablePreviousControlButtons,\n        enablePreviousControlButtons: enablePreviousControlButtons,\n        showPage: showPage,\n        rootSelector: SELECTORS.ROOT,\n    };\n});\n"],"file":"paged_content_paging_bar.min.js"}