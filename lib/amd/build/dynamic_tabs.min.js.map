{"version":3,"sources":["../src/dynamic_tabs.js"],"names":["SELECTORS","dynamicTabs","activeTab","allActiveTabs","tabContent","tabToggle","tabPane","forTabName","tabName","forTabId","init","on","event","preventDefault","stopPropagation","key","component","then","strChangesMade","strChangesMadeReally","strConfirm","Notification","confirm","target","trigger","type","catch","exception","previousTabName","getActiveTabName","previousTab","document","querySelector","textContent","tab","attr","length","loadTab","openTabFromHash","tabs","openTab","getAttribute","classList","add","element","getFirstTabName","dataset","pendingPromise","Pending","tabjs","tabArgs","tabClass","JSON","stringify","data","javascript","Templates","render","template","parse","content","html","js","replaceNodeContents","resolve","getTab","getTabPane","getElementById","hash","location","match","replace"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Dynamic Tabs UI element with AJAX loading of tabs content\n *\n * @module      core/dynamic_tabs\n * @copyright   2021 David Matamoros <davidmc@moodle.com> based on code from Marina Glancy\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport {addIconToContainer} from 'core/loadingicon';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {get_strings as getStrings} from 'core/str';\nimport {getContent} from 'core/local/repository/dynamic_tabs';\nimport {isAnyWatchedFormDirty, resetAllFormDirtyStates} from 'core_form/changechecker';\n\nconst SELECTORS = {\n    dynamicTabs: '.dynamictabs',\n    activeTab: '.dynamictabs .nav-link.active',\n    allActiveTabs: '.dynamictabs .nav-link[data-toggle=\"tab\"]:not(.disabled)',\n    tabContent: '.dynamictabs .tab-pane [data-tab-content]',\n    tabToggle: 'a[data-toggle=\"tab\"]',\n    tabPane: '.dynamictabs .tab-pane',\n};\n\nSELECTORS.forTabName = tabName => `.dynamictabs [data-tab-content=\"${tabName}\"]`;\nSELECTORS.forTabId = tabName => `.dynamictabs [data-toggle=\"tab\"][href=\"#${tabName}\"]`;\n\n/**\n * Initialises the tabs view on the page (only one tabs view per page is supported)\n */\nexport const init = () => {\n    const tabToggle = $(SELECTORS.tabToggle);\n\n    // Listen to click, warn user if they are navigating away with unsaved form changes.\n    tabToggle.on('click', (event) => {\n        if (!isAnyWatchedFormDirty()) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        getStrings([\n            {key: 'changesmade', component: 'moodle'},\n            {key: 'changesmadereallygoaway', component: 'moodle'},\n            {key: 'confirm', component: 'moodle'},\n        ]).then(([strChangesMade, strChangesMadeReally, strConfirm]) =>\n            // Reset form dirty state on confirmation, re-trigger the event.\n            Notification.confirm(strChangesMade, strChangesMadeReally, strConfirm, null, () => {\n                resetAllFormDirtyStates();\n                $(event.target).trigger(event.type);\n            })\n        ).catch(Notification.exception);\n    });\n\n    // This code listens to Bootstrap events 'show.bs.tab' and 'shown.bs.tab' which is triggered using JQuery and\n    // can not be converted yet to native events.\n    tabToggle\n        .on('show.bs.tab', function() {\n            // Clean content from previous tab.\n            const previousTabName = getActiveTabName();\n            if (previousTabName) {\n                const previousTab = document.querySelector(SELECTORS.forTabName(previousTabName));\n                previousTab.textContent = '';\n            }\n        })\n        .on('shown.bs.tab', function() {\n            const tab = $($(this).attr('href'));\n            if (tab.length !== 1) {\n                return;\n            }\n            loadTab(tab.attr('id'));\n        });\n\n    if (!openTabFromHash()) {\n        const tabs = document.querySelector(SELECTORS.allActiveTabs);\n        if (tabs) {\n            openTab(tabs.getAttribute('aria-controls'));\n        } else {\n            // We may hide tabs if there is only one available, just load the contents of the first tab.\n            const tabPane = document.querySelector(SELECTORS.tabPane);\n            if (tabPane) {\n                tabPane.classList.add('active', 'show');\n                loadTab(tabPane.getAttribute('id'));\n            }\n        }\n    }\n};\n\n/**\n * Returns id/name of the currently active tab\n *\n * @return {String|null}\n */\nconst getActiveTabName = () => {\n    const element = document.querySelector(SELECTORS.activeTab);\n    return element?.getAttribute('aria-controls') || null;\n};\n\n/**\n * Returns the id/name of the first tab\n *\n * @return {String|null}\n */\nconst getFirstTabName = () => {\n    const element = document.querySelector(SELECTORS.tabContent);\n    return element?.dataset.tabContent || null;\n};\n\n/**\n * Loads contents of a tab using an AJAX request\n *\n * @param {String} tabName\n */\nconst loadTab = (tabName) => {\n    // If tabName is not specified find the active tab, or if is not defined, the first available tab.\n    tabName = tabName ?? getActiveTabName() ?? getFirstTabName();\n    const tab = document.querySelector(SELECTORS.forTabName(tabName));\n    if (!tab) {\n        return;\n    }\n\n    const pendingPromise = new Pending('core/dynamic_tabs:loadTab:' + tabName);\n    let tabjs = '';\n\n    addIconToContainer(tab)\n    .then(() => {\n        let tabArgs = {...tab.dataset};\n        delete tabArgs.tabClass;\n        delete tabArgs.tabContent;\n        return getContent(tab.dataset.tabClass, JSON.stringify(tabArgs));\n    })\n    .then((data) => {\n        tabjs = data.javascript;\n        return Templates.render(data.template, JSON.parse(data.content));\n    })\n    .then((html, js) => {\n        return Templates.replaceNodeContents(tab, html, js + tabjs);\n    })\n    .then(() => {\n        pendingPromise.resolve();\n        return null;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Return the tab given the tab name\n *\n * @param {String} tabName\n * @return {HTMLElement}\n */\nconst getTab = (tabName) => {\n    return document.querySelector(SELECTORS.forTabId(tabName));\n};\n\n/**\n * Return the tab pane given the tab name\n *\n * @param {String} tabName\n * @return {HTMLElement}\n */\nconst getTabPane = (tabName) => {\n    return document.getElementById(tabName);\n};\n\n/**\n * Open the tab on page load. If this script loads before theme_boost/tab we need to open tab ourselves\n *\n * @param {String} tabName\n * @return {Boolean}\n */\nconst openTab = (tabName) => {\n    const tab = getTab(tabName);\n    if (!tab) {\n        return false;\n    }\n\n    loadTab(tabName);\n    tab.classList.add('active');\n    getTabPane(tabName).classList.add('active', 'show');\n    return true;\n};\n\n/**\n * If there is a location hash that is the same as the tab name - open this tab.\n *\n * @return {Boolean}\n */\nconst openTabFromHash = () => {\n    const hash = document.location.hash;\n    if (hash.match(/^#\\w+$/g)) {\n        return openTab(hash.replace(/^#/g, ''));\n    }\n\n    return false;\n};\n"],"file":"dynamic_tabs.min.js"}