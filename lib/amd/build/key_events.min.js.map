{"version":3,"sources":["../src/key_events.js"],"names":["eventTypes","activated","arrowDownPressed","arrowUpPressed","asterixKeyPressed","endKeyPressed","enterKeyPressed","escapeKeyPressed","homeKeyPressed","keyboardActivated","metaPageDown","metaPageUp","nextKeyPressed","previousKeyPressed","isModifierPressed","e","shiftKey","metaKey","altKey","ctrlKey","eventMap","keydown","customEventName","filter","code","key","customEventNameFunction","document","querySelector","dir","click","legacyEventMap","eventsRegistered","eventType","eventTypeDetails","addEventListener","forEach","eventDetails","hasOwnProperty","customEvent","target","cancelable","defaultPrevented","preventDefault","Object","entries","define","elementList","legacyEventNames","length","window","console","warn","join","legacyEventName","newEventName","off","on","trigger","originalEvent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Key Events.\n *\n * @module     core/key_events\n * @package    core\n * @class      key_events\n * @copyright  2021 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.11\n */\n\nimport jQuery from 'jquery';\nimport {dispatchEvent} from 'core/local/event/dispatcher';\n\nexport const eventTypes = {\n  activated: 'core/key_events:activated',\n  arrowDownPressed: 'core/key_events:arrowDownPressed',\n  arrowUpPressed: 'core/key_events:arrowUpPressed',\n  asterixKeyPressed: 'core/key_events:asterixKeyPressed',\n  endKeyPressed: 'core/key_events:endKeyPressed',\n  enterKeyPressed: 'core/key_events:enterKeyPressed',\n  escapeKeyPressed: 'core/key_events:escapeKeyPressed',\n  homeKeyPressed: 'core/key_events:homeKeyPressed',\n  keyboardActivated: 'core/key_events:keyboardActivated',\n  metaPageDown: 'core/key_events:metaPageDown',\n  metaPageUp: 'core/key_events:metaPageUp',\n  nextKeyPressed: 'core/key_events:nextKeyPressed',\n  previousKeyPressed: 'core/key_events:previousKeyPressed',\n};\n\n/**\n * Check if any of the modifier keys have been pressed on the event.\n *\n * @method  isModifierPressed\n * @param   {Event} e\n * @returns {bool}\n */\nconst isModifierPressed = e => {\n    return (e.shiftKey || e.metaKey || e.altKey || e.ctrlKey);\n};\n\nconst eventMap = {\n    keydown: [\n        {\n            // This event is triggered when the escape key key is pressed.\n            customEventName: eventTypes.homeKeyPressed,\n            filter: e => e.code === 'Home',\n        },\n        {\n            // This event is triggered when the end key key is pressed.\n            customEventName: eventTypes.endKeyPressed,\n            filter: e => e.code === 'End',\n        },\n        {\n            // This event is triggered when the escape key key is pressed.\n            customEventName: eventTypes.escapeKeyPressed,\n            filter: e => e.code === 'Escape',\n        },\n        {\n            // This event is triggered when asterix key is pressed.\n            customEventName: eventTypes.asterixKeyPressed,\n            filter: e => e.key === '*',\n        },\n        {\n            // This event is triggered when enter or space are pressed without a modifier key.\n            customEventName: eventTypes.keyboardActivated,\n            filter: e => {\n                if (isModifierPressed(e)) {\n                    return false;\n                }\n\n                if (e.code === 'Enter') {\n                    return true;\n                }\n\n                if (e.code === 'Space') {\n                    return true;\n                }\n\n                return false;\n            },\n        },\n        {\n            // This event is triggered on click.\n            customEventName: eventTypes.enterKeyPressed,\n            filter: e => {\n                return e.code === 'Enter' && !isModifierPressed(e);\n            },\n        },\n        {\n            // This event is triggered when down key is pressed without a modifier key.\n            customEventName: eventTypes.arrowDownPressed,\n            filter: e => {\n                return e.code === 'ArrowDown' && !isModifierPressed(e);\n            },\n        },\n        {\n            // This event is triggered when up key is pressed without a modifier key.\n            customEventName: eventTypes.arrowUpPressed,\n            filter: e => {\n                return e.code === 'ArrowUp' && !isModifierPressed(e);\n            },\n        },\n        {\n            // This event is triggered when left key is pressed without a modifier key.\n            filter: e => {\n                return e.code === 'ArrowLeft' && !isModifierPressed(e);\n            },\n            customEventNameFunction: () => {\n                if (document.querySelector('html').dir === 'ltr') {\n                    return eventTypes.previousKeyPressed;\n                } else {\n                    return eventTypes.nextKeyPressed;\n                }\n            },\n        },\n        {\n            // This event is triggered when right key is pressed without a modifier key.\n            filter: e => {\n                return e.code === 'ArrowRight' && !isModifierPressed(e);\n            },\n            customEventNameFunction: () => {\n                if (document.querySelector('html').dir === 'ltr') {\n                    return eventTypes.nextKeyPressed;\n                } else {\n                    return eventTypes.previousKeyPressed;\n                }\n            },\n        },\n        {\n            // This event is triggered when PageUp key is pressed with the Control modifier key.\n            customEventName: eventTypes.metaPageUp,\n            filter: e => {\n                if (e.code !== 'PageUp') {\n                    return false;\n                }\n\n                return e.ctrlKey;\n            },\n        },\n        {\n            // This event is triggered when PageDown key is pressed with the Control modifier key.\n            customEventName: eventTypes.metaPageDown,\n            filter: e => {\n                if (e.code !== 'PageDown') {\n                    return false;\n                }\n\n                return e.ctrlKey;\n            },\n        },\n    ],\n    'core/key_events:keyboardActivated': [\n        {\n            // This event is triggered when enter or space are pressed without a modifier key.\n            customEventName: eventTypes.activated,\n            filter: () => true,\n        },\n    ],\n    click: [\n        {\n            // This event is triggered when the keyboardActivated event is triggered.\n            customEventName: eventTypes.activated,\n            filter: () => true,\n        },\n    ],\n};\n\nexport const legacyEventMap = {\n    'cie:activate': eventTypes.activated,\n    'cie:asterix': eventTypes.asterixKeyPressed,\n    'cie:ctrlPageDown': eventTypes.metaPageDown,\n    'cie:ctrlPageUp': eventTypes.metaPageUp,\n    'cie:down': eventTypes.arrowDownPressed,\n    'cie:end': eventTypes.endKeyPressed,\n    'cie:enter': eventTypes.enterKeyPressed,\n    'cie:escape': eventTypes.escapeKeyPressed,\n    'cie:home': eventTypes.homeKeyPressed,\n    'cie:keyboardactivate': eventTypes.keyboardActivated,\n    'cie:next': eventTypes.nextKeyPressed,\n    'cie:previous': eventTypes.previousKeyPressed,\n    'cie:up': eventTypes.arrowUpPressed,\n};\n\n\nlet eventsRegistered = false;\n\nif (!eventsRegistered) {\n    eventsRegistered = true;\n\n    for (const [eventType, eventTypeDetails] of Object.entries(eventMap)) {\n        // Only register each event listener once.\n        document.addEventListener(eventType, e => {\n            eventTypeDetails.forEach(eventDetails => {\n                if (!eventDetails.filter(e)) {\n                    // This event does not meet the filter requirements.\n                    return;\n                }\n\n                let customEventName = eventDetails.customEventName;\n                if (eventDetails.hasOwnProperty(eventDetails.customEventNameFunction)) {\n                    customEventName = eventDetails.customEventNameFunction(e);\n                }\n\n                // Fire the custom event.\n                const customEvent = dispatchEvent(customEventName, {}, e.target, {\n                    cancelable: e.cancelable,\n                });\n\n                if (customEvent.defaultPrevented) {\n                    e.preventDefault();\n                }\n\n                return;\n            });\n        });\n    }\n}\n\nexport const define = (elementList, legacyEventNames) => {\n    if (!legacyEventNames.length) {\n        // No events requested.\n        return;\n    }\n\n    window.console.warn(\n        `The custom_interaction_events::define() function has been deprecated. ` +\n        `The use of ${legacyEventNames.join(', ')} events should be updated.`\n    );\n\n    legacyEventNames.forEach(legacyEventName => {\n        if (!legacyEventMap.hasOwnProperty(legacyEventName)) {\n            // Unknown event.\n            return;\n        }\n\n        const newEventName = `${legacyEventMap[legacyEventName]}.cie`;\n\n        jQuery(elementList)\n\n        // Ensure that there is only one listener.\n        .off(newEventName)\n\n        // Listen to the new event and trigger the legacy one.\n        .on(newEventName, e => {\n            jQuery(e.target).trigger(legacyEventName, [{originalEvent: e}]);\n        });\n    });\n};\n"],"file":"key_events.min.js"}