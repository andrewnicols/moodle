{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * Description of import into Moodle:\n *\n * - Download Chartjs source code (zip) file from https://github.com/chartjs/Chart.js/releases/latest.\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\n * - Copy /dist/chart.js content to lib/amd/src/chartjs-lazy.js.\n * - Convert line endings to LF-Unix format.\n * - Keep these instructions to the file.\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\n */\n\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone$1(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone$1(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\nisPatternOrGradient: isPatternOrGradient,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));"],"names":["global","factory","this","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","_len","arguments","length","rest","_key","apply","debounce","delay","timeout","_len2","_key2","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_refresh","_update","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","range","hueValue","calln","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$2","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","hexParse","ret","len","_rgb","_valid","valid","obj","rgbString","concat","hexString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","interpolate$1","clone","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","value","toString","getHoverColor","noop","uid","id","isNullOrUndef","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","_isClickEvent","overrides","descriptors","getScope$1","node","split","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","array","listener","_chartjs","defineProperty","configurable","method","base","_len3","_key3","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","Set","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","roundedRange","almostEquals","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","width","height","top","bottom","useOffsetPos","shadowRoot","getRelativePosition","evt","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","proxy","prefix","readKey","needsSubResolver","createSubResolver","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","_resolveScriptable","Error","join","_resolveArray","isIndexable","arr","filter","resolver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","getNumberFormat","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","format","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","bounds","startBound","endBound","getSegment","inside","prevValue","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","last","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","freeze","__proto__","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","binarySearch","metaset","axis","controller","_sorted","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","minDistance","center","getCenterPoint","getNearestItems","getNearestRadialItems","startAngle","endAngle","getProps","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","buildStacks","wrap","stack","stackWeight","placed","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","buildLayoutBoxes","layoutBoxes","wrapBoxes","isHorizontal","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","handleMaxPadding","updatePos","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","animationOptions","colors","properties","numbers","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","convertObjectDataToArray","adata","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","getUserBounds","minDefined","maxDefined","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","toClip","disabled","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","offset","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","ceil","evenMajorSpacing","getEvenSpacing","diff","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","widestLabelSize","tickFont","nestedLabel","highestLabelSize","_resolveTickFontOptions","valueAt","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_len4","_key4","_each","_len5","_key5","addControllers","_len6","_key6","_len7","_key7","addPlugins","_len8","_key8","addScales","_len9","_key9","getController","_get","getElement","getPlugin","getScale","removeControllers","_len10","_key10","removeElements","_len11","_key11","removePlugins","_len12","_key12","removeScales","_len13","_key13","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","getOpts","pluginOpts","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","axisFromPosition","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref2","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","invalidatePlugins","abstract","version","DateAdapter","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","_ref3","inflateAmount","BarController","iAxisKey","vAxisKey","bars","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","skipNull","maxBarThickness","Infinity","computeFlexCategoryTraits","percent","chunk","computeFitCategoryTraits","thickness","stackIndex","rects","_index_","_value_","BubbleController","tooltip","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","scaleRangesChanged","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","getLineMethod","stepped","fastPathSegment","avgX","prevX","lastY","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","strokePathWithCache","path","_path","strokePathDirect","segmentMethod","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","hasRadius","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","lttbDecimation","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref4","_pointsFromSegments","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","fillOption","decodeTargetIndex","firstCh","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","_buildStackLine","sourcePoints","below","getLinesBelow","computeBoundary","computeCircularBoundary","_getTargetValue","computeLinearBoundary","_getTargetPixel","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","doesNotFitWithAlign","caret","caretSize","caretPadding","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref5","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","CategoryScale","_startValue","_valueRange","_addedLabels","added","findOrAddLabel","lastIndexOf","relativeLabelSize","minSpacing","_ref6","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","drawRadiusLine","gridLineOpts","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","exports","module","define","amd","globalThis","self"],"mappings":"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"}