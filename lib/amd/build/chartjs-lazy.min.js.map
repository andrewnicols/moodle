{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * Description of import into Moodle:\n *\n * - Download Chart.js from https://github.com/chartjs/Chart.js/releases/latest.\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\n * - Copy /dist/chart.js content to lib/amd/src/chartjs-lazy.js.\n * - Convert line endings to LF-Unix format.\n * - Keep these instructions to the file.\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\n */\n\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone$1(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone$1(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition$1(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition$1,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));"],"names":["global","factory","this","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_refresh","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","v","r","g","isShort","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$1$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","me","c1","c2","w2","p","w1","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","_isClickEvent","overrides","descriptors","getScope$1","node","split","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","from","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","getRelativePosition$1","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","handler","metasets","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","chartArea","_minPadding","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","meta","dataset","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","includes","_stack","count","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","updatePos","handleMaxPadding","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","isScriptable","Error","join","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","t","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","last","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","animationOptions","colors","properties","numbers","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","offset","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref2","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","invalidatePlugins","abstract","version","DateAdapter","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","super","tooltip","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","linePoints","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","createBoundaryLine","buildStackLine","boundary","_ref4","pointsFromSegments","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","targetLoop","drawfill","lineOpts","above","doFill","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref5","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","exports","module","define","amd","globalThis","self"],"mappings":"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"}