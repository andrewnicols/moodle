define("core/ajax",["exports","jquery","./fetch"],(function(_exports,_jquery,_fetch){var obj;
/**
   * Standard Ajax wrapper for Moodle. It calls the central Ajax script,
   * which can call any existing webservice using the current session.
   * In addition, it can batch multiple requests and return multiple responses.
   *
   * @module     core/ajax
   * @copyright  2015 Damyon Wiese <damyon@moodle.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since      2.9
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_jquery=(obj=_jquery)&&obj.__esModule?obj:{default:obj};var _default={call:function(requests){let async=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],loginRequired=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],noSessionUpdate=arguments.length>3&&void 0!==arguments[3]&&arguments[3],timeout=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,cacheKey=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;if(window.console.warn("The core/ajax:call function has been deprecated. Please update your call to use either fetchOne, or fetchMany from the core/fetch module."),!async)throw new Error("The async flag has been deprecated. Please update your code.");const promises=(0,_fetch.fetchMany)(requests,loginRequired,{updateSession:!noSessionUpdate,timeout:timeout,cacheKey:cacheKey}),jQueryPromises=promises.map((promise=>_jquery.default.Deferred().resolve(promise).catch((value=>_jquery.default.Deferred().reject(value)))));return jQueryPromises.map(((promise,index)=>(requests[index].done&&(window.console.warn("The use of the done and fail callbacks has been deprecated."),promise.done(requests[index].done)),requests[index].fail&&(window.console.warn("The use of the done and fail callbacks has been deprecated."),promise.fail(requests[index].fail)),promise)))}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=ajax.min.js.map