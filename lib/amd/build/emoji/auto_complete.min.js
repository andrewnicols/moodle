define ("core/emoji/auto_complete",["exports","core/emoji/data","core/templates","core/utils","core/localstorage","core/key_codes"],function(_exports,EmojiData,_templates,_utils,_localstorage,_key_codes){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;EmojiData=_interopRequireWildcard(EmojiData);_localstorage=_interopRequireDefault(_localstorage);_key_codes=_interopRequireDefault(_key_codes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(null===obj||"object"!=typeof obj&&"function"!=typeof obj){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if("default"!=key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}const RECENT_EMOJIS_STORAGE_KEY="moodle-recent-emojis",SELECTORS={EMOJI_BUTTON:"[data-region=\"emoji-button\"]",ACTIVE_EMOJI_BUTTON:"[data-region=\"emoji-button\"].active"},getRecentEmojis=()=>{const storedData=_localstorage.default.get(RECENT_EMOJIS_STORAGE_KEY);return storedData?JSON.parse(storedData):[]},addRecentEmoji=(unified,shortName)=>{const newEmoji={unified,shortnames:[shortName]},recentEmojis=getRecentEmojis();let newRecentEmojis=[newEmoji,...recentEmojis.filter(emoji=>emoji.unified!=newEmoji.unified)];newRecentEmojis=newRecentEmojis.slice(0,27);_localstorage.default.set(RECENT_EMOJIS_STORAGE_KEY,JSON.stringify(newRecentEmojis))},getEmojiTextFromShortName=shortName=>{const unified=EmojiData.byShortName[shortName];if(unified){const charCodes=unified.split("-").map(code=>"0x".concat(code));return String.fromCodePoint.apply(null,charCodes)}else{return null}},render=async(root,shortNames)=>{const renderContext={emojis:shortNames.map((shortName,index)=>{return{active:0===index,emojitext:getEmojiTextFromShortName(shortName),displayshortname:":".concat(shortName,":"),shortname:shortName,unified:EmojiData.byShortName[shortName]}})},html=await(0,_templates.render)("core/emoji/auto_complete",renderContext);root.innerHTML=html},searchEmojis=(searchTerm,limit)=>{if(""===searchTerm){return getRecentEmojis().map(data=>data.shortnames[0]).slice(0,limit)}else{searchTerm=searchTerm.toLowerCase();return Object.keys(EmojiData.byShortName).filter(shortName=>shortName.includes(searchTerm)).slice(0,limit)}},getWordFromPosition=(text,position)=>{const startMatches=text.slice(0,position).match(/(\S*)$/),endMatches=text.slice(position).match(/^(\S*)/);let startText="",endText="";if(startMatches){startText=startMatches[startMatches.length-1]}if(endMatches){endText=endMatches[endMatches.length-1]}return"".concat(startText).concat(endText)},isCompleteShortName=text=>/^:[^:\s]+:$/.test(text),isPartialShortName=text=>/^:[^:\s]*$/.test(text),getShortNameFromText=text=>text.replace(/:/g,""),getActiveEmojiSuggestion=root=>{return root.querySelector(SELECTORS.ACTIVE_EMOJI_BUTTON)},selectPreviousEmojiSuggestion=root=>{const activeEmojiSuggestion=getActiveEmojiSuggestion(root),previousSuggestion=activeEmojiSuggestion.previousElementSibling;if(previousSuggestion){activeEmojiSuggestion.classList.remove("active");previousSuggestion.classList.add("active");previousSuggestion.scrollIntoView({behaviour:"smooth",inline:"center"})}},selectNextEmojiSuggestion=root=>{const activeEmojiSuggestion=getActiveEmojiSuggestion(root),nextSuggestion=activeEmojiSuggestion.nextElementSibling;if(nextSuggestion){activeEmojiSuggestion.classList.remove("active");nextSuggestion.classList.add("active");nextSuggestion.scrollIntoView({behaviour:"smooth",inline:"center"})}},selectEmojiElement=(element,selectCallback)=>{const shortName=element.getAttribute("data-short-name"),unified=element.getAttribute("data-unified");addRecentEmoji(unified,shortName);selectCallback(element.innerHTML.trim())};_exports.default=(root,textArea,hasSuggestionCallback,selectCallback)=>{let hasSuggestions=!1,previousSearchText="";textArea.addEventListener("keyup",(0,_utils.debounce)(()=>{const text=textArea.value,cursorPos=textArea.selectionStart,searchText=getWordFromPosition(text,cursorPos);if(searchText===previousSearchText){return}else{previousSearchText=searchText}if(isCompleteShortName(searchText)){const shortName=getShortNameFromText(searchText),emojiText=getEmojiTextFromShortName(shortName);hasSuggestions=!1;if(emojiText){addRecentEmoji(EmojiData.byShortName[shortName],shortName);selectCallback(emojiText)}}else if(isPartialShortName(searchText)){const suggestions=searchEmojis(getShortNameFromText(searchText),50);if(suggestions.length){render(root,suggestions);hasSuggestions=!0}else{hasSuggestions=!1}}else{hasSuggestions=!1}hasSuggestionCallback(hasSuggestions)},200));textArea.addEventListener("keydown",e=>{if(hasSuggestions){const isModifierPressed=e.shiftKey||e.metaKey||e.altKey||e.ctrlKey;if(!isModifierPressed){switch(e.which){case _key_codes.default.escape:hasSuggestions=!1;hasSuggestionCallback(!1);break;case _key_codes.default.arrowLeft:selectPreviousEmojiSuggestion(root);e.preventDefault();break;case _key_codes.default.arrowRight:selectNextEmojiSuggestion(root);e.preventDefault();break;case _key_codes.default.enter:selectEmojiElement(getActiveEmojiSuggestion(root),selectCallback);e.preventDefault();e.stopPropagation();break;}}}});root.addEventListener("click",e=>{const target=e.target;if(target.matches(SELECTORS.EMOJI_BUTTON)){selectEmojiElement(target,selectCallback)}})};return _exports.default});
//# sourceMappingURL=auto_complete.min.js.map
