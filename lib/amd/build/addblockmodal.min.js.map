{"version":3,"file":"addblockmodal.min.js","sources":["../src/addblockmodal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Show an add block modal instead of doing it on a separate page.\n *\n * @module     core/addblockmodal\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {fetchOne} from 'core/fetch';\nimport MoodleConfig from 'core/config';\n\nconst SELECTORS = {\n    ADD_BLOCK: '[data-key=\"addblock\"]'\n};\n\n// Ensure we only add our listeners once.\nlet listenerEventsRegistered = false;\n\n/**\n * Register related event listeners.\n *\n * @method registerListenerEvents\n * @param {String} pageType The type of the page\n * @param {String} pageLayout The layout of the page\n * @param {String|null} addBlockUrl The add block URL\n * @param {String} subPage The subpage identifier\n */\nconst registerListenerEvents = (pageType, pageLayout, addBlockUrl, subPage) => {\n    document.addEventListener('click', e => {\n\n        const addBlock = e.target.closest(SELECTORS.ADD_BLOCK);\n        if (addBlock) {\n            e.preventDefault();\n\n            let addBlockModal = null;\n            let addBlockModalUrl = addBlockUrl ?? addBlock.dataset.url;\n\n            buildAddBlockModal()\n                .then(modal => {\n                    addBlockModal = modal;\n                    const modalBody = renderBlocks(addBlockModalUrl, pageType, pageLayout, subPage);\n                    modal.setBody(modalBody);\n                    modal.show();\n\n                    return modalBody;\n                })\n                .catch(() => {\n                    addBlockModal.destroy();\n                });\n        }\n    });\n};\n\n/**\n * Method that creates the 'add block' modal.\n *\n * @method buildAddBlockModal\n * @returns {Promise} The modal promise (modal's body will be rendered later).\n */\nconst buildAddBlockModal = () => {\n    return ModalFactory.create({\n        type: ModalFactory.types.CANCEL,\n        title: getString('addblock')\n    });\n};\n\n/**\n * Method that renders the list of available blocks.\n *\n * @method renderBlocks\n * @param {String} url The add block URL\n * @param {String} pageType The type of the page\n * @param {String} pageLayout The layout of the page\n * @param {String} subPage The subpage identifier\n * @return {Promise}\n */\nconst renderBlocks = async(url, pageType, pageLayout, subPage) => {\n    // Fetch all addable blocks in the given page.\n    const blocks = await getAddableBlocks(pageType, pageLayout, subPage);\n\n    return Templates.render('core/add_block_body', {\n        blocks,\n        url,\n    });\n};\n\n/**\n * Method that fetches all addable blocks in a given page.\n *\n * @method getAddableBlocks\n * @param {String} pagetype The type of the page\n * @param {String} pagelayout The layout of the page\n * @param {String} subpage The subpage identifier\n * @return {Promise}\n */\nconst getAddableBlocks = (pagetype, pagelayout, subpage) => fetchOne(\n    'core_block_fetch_addable_blocks',\n    {\n        pagecontextid: MoodleConfig.contextid,\n        pagetype,\n        pagelayout,\n        subpage,\n    },\n);\n\n/**\n * Set up the actions.\n *\n * @method init\n * @param {String} pageType The type of the page\n * @param {String} pageLayout The layout of the page\n * @param {String|null} addBlockUrl The add block URL\n * @param {String} subPage The subpage identifier\n */\nexport const init = (pageType, pageLayout, addBlockUrl = null, subPage = '') => {\n    if (!listenerEventsRegistered) {\n        registerListenerEvents(pageType, pageLayout, addBlockUrl, subPage);\n        listenerEventsRegistered = true;\n    }\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_modal_factory","_templates","_config","SELECTORS","listenerEventsRegistered","registerListenerEvents","pageType","pageLayout","addBlockUrl","subPage","document","addEventListener","e","addBlock","target","closest","preventDefault","addBlockModal","addBlockModalUrl","dataset","url","buildAddBlockModal","then","modal","modalBody","renderBlocks","setBody","show","catch","destroy","ModalFactory","create","type","types","CANCEL","title","getString","get_string","async","blocks","getAddableBlocks","Templates","render","pagetype","pagelayout","subpage","fetchOne","pagecontextid","MoodleConfig","contextid","_exports","init","arguments","length","undefined"],"mappings":"sLA2BuC,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA;;;;;;;kFAJvCG,eAAAJ,uBAAAI,gBACAC,WAAAL,uBAAAK,YAGAC,QAAAN,uBAAAM,SAEA,MAAMC,oBACS,wBAIf,IAAIC,0BAA2B,EAW/B,MAAMC,uBAAyBA,CAACC,SAAUC,WAAYC,YAAaC,WAC/DC,SAASC,iBAAiB,SAASC,IAE/B,MAAMC,SAAWD,EAAEE,OAAOC,QAAQZ,qBAClC,GAAIU,SAAU,CACVD,EAAEI,iBAEF,IAAIC,cAAgB,KAChBC,iBAAmBV,kBAAAA,YAAeK,SAASM,QAAQC,IAEvDC,qBACKC,MAAKC,QACFN,cAAgBM,MAChB,MAAMC,UAAYC,aAAaP,iBAAkBZ,SAAUC,WAAYE,SAIvE,OAHAc,MAAMG,QAAQF,WACdD,MAAMI,OAECH,SAAS,IAEnBI,OAAM,KACHX,cAAcY,SAAS,GAEnC,IACF,EASAR,mBAAqBA,IAChBS,eAAAA,QAAaC,OAAO,CACvBC,KAAMF,eAAAA,QAAaG,MAAMC,OACzBC,OAAO,EAAAC,KAASC,YAAC,cAcnBZ,aAAea,MAAMlB,IAAKd,SAAUC,WAAYE,WAElD,MAAM8B,aAAeC,iBAAiBlC,SAAUC,WAAYE,SAE5D,OAAOgC,WAAS1C,QAAC2C,OAAO,sBAAuB,CAC3CH,cACAnB,SACF,EAYAoB,iBAAmBA,CAACG,SAAUC,WAAYC,WAAY,EAAAC,OAAQA,UAChE,kCACA,CACIC,cAAeC,QAAYjD,QAACkD,UAC5BN,kBACAC,sBACAC,kBAkBNK,SAAAC,KALkB,SAAC7C,SAAUC,YACtBH,2BACDC,uBAAuBC,SAAUC,WAFa6C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAaA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAGjEhD,0BAA2B,GAEjC"}