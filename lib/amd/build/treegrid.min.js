define("core/treegrid",["exports","core/local/aria/selectors"],(function(_exports,_selectors){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};class TreeGrid{static createTreeGrid(treeElement){return new TreeGrid(treeElement)}constructor(treeElement){!function(obj,key,value){key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value}(this,"treeElement",void 0),this.treeElement=treeElement,this.registerEventListeners(),this.initialiseAttributes()}initialiseAttributes(){this.treeElement.querySelectorAll(_selectors.default.elements.focusable).forEach((element=>{element.setAttribute("tabindex","-1")})),Array.from(this.treeElement.querySelectorAll("tr")).reverse().forEach((rowElement=>{rowElement.setAttribute("tabindex","-1")})),this.getFirstRow().setAttribute("tabindex","0")}registerEventListeners(){this.treeElement.addEventListener("keydown",this.handleKeyDown.bind(this)),this.treeElement.addEventListener("click",this.handleClick.bind(this)),this.treeElement.addEventListener("focusin",this.handleFocusIn.bind(this))}shouldHandleEvent(eventTarget){return eventTarget.closest("[role]")===this.treeElement}handleFocusIn(event){const focusedItem=event.target;if(!this.shouldHandleEvent(focusedItem))return;Array.from(this.treeElement.querySelectorAll('[tabindex="0"]')).filter((item=>item!==focusedItem)).forEach((item=>{item.setAttribute("tabindex",-1)}))}handleClick(event){const clickedItem=event.target;if(!this.shouldHandleEvent(clickedItem))return;const focusableParent=clickedItem.closest('input:not([type="hidden"]), a[href], button, textarea, select');if(focusableParent)return void this.focus(focusableParent);const tabbableParent=clickedItem.closest(_selectors.default.elements.tabbable);tabbableParent&&this.focus(tabbableParent)}handleKeyDown(event){if(this.shouldHandleEvent(event.target))if("Enter"!==event.key)if("Tab"!==event.key)if("ArrowRight"!==event.key)if("ArrowLeft"!==event.key)if("ArrowUp"!==event.key){if("ArrowDown"!==event.key)return"Home"===event.key?event.ctrlKey?void this.handleKeyControlHome(event):void this.handleKeyHome(event):"End"===event.key?event.ctrlKey?void this.handleKeyControlEnd(event):void this.handleKeyEnd(event):void 0;this.handleKeyArrowDown(event)}else this.handleKeyArrowUp(event);else this.handleKeyArrowLeft(event);else this.handleKeyArrowRight(event);else this.handleKeyTab(event);else this.handleKeyEnter(event)}handleKeyEnter(event){this.cellOnlyFocusEnabled()&&event.preventDefault()}handleKeyTab(event){const focusedItem=this.getFocusedItem(),row=this.getRowForItem(focusedItem),focusableRowElements=this.getFocusableElements(row);if(focusableRowElements.length>0){const focusedItem=this.getFocusedItem(),focusedItemIndex=focusableRowElements.indexOf(focusedItem);if(-1!==focusedItemIndex){const nextItem=(()=>event.shiftKey?focusableRowElements.slice(0,focusedItemIndex).reverse():focusableRowElements.slice(focusedItemIndex+1))().find((item=>item.matches('input:not([type="hidden"]), a[href], button, textarea, select')));if(nextItem)return event.preventDefault(),void this.focus(nextItem)}}else;}handleKeyArrowRight(event){const focusedItem=this.getFocusedItem(),isRow=this.isRow(focusedItem),isCell=this.isCell(focusedItem);if(isRow){if(this.isRowCollapsed(focusedItem))return event.preventDefault(),void this.expandRow(focusedItem);if(this.isRowExpanded(focusedItem)||this.isRow(focusedItem))return event.preventDefault(),void this.focusFirstCell(focusedItem)}if(isCell){const cell=this.getCellWithItem(focusedItem);if(!cell.nextElementSibling)return;this.focusNextCell(cell),event.preventDefault()}}handleKeyArrowLeft(event){const focusedItem=this.getFocusedItem(),isRow=this.isRow(focusedItem),isCell=this.isCell(focusedItem);if(isRow){if(this.isRowExpanded(focusedItem))return event.preventDefault(),void this.collapseRow(focusedItem);if(this.isRowCollapsed(focusedItem)||!this.isRowCollapseSupported(focusedItem)){const parentRow=this.getParentRow(focusedItem);return void(parentRow&&(event.preventDefault(),this.focus(parentRow)))}}if(isCell){const cell=this.getCellWithItem(focusedItem);if(null===cell.previousElementSibling)return this.rowFocusSupported()?(event.preventDefault(),void this.focusCurrentRow(focusedItem)):void 0;this.focusPreviousCell(cell),event.preventDefault()}}handleKeyArrowUp(event){const focusedItem=this.getFocusedItem();if(this.isRow(focusedItem)){if(null===focusedItem.previousElementSibling)return;return this.focusRowAbove(focusedItem),void event.preventDefault()}if(this.isCell(focusedItem)){if(null===this.getRowForItem(focusedItem).previousElementSibling)return;this.focusCellAbove(focusedItem),event.preventDefault()}}handleKeyArrowDown(event){const focusedItem=this.getFocusedItem();if(this.isRow(focusedItem)){if(null===focusedItem.nextElementSibling)return;return this.focusRowBelow(focusedItem),void event.preventDefault()}if(this.isCell(focusedItem)){if(null===this.getRowForItem(focusedItem).nextElementSibling)return;this.focusCellBelow(focusedItem),event.preventDefault()}}handleKeyHome(event){const focusedItem=this.getFocusedItem();if(this.isRow(focusedItem)){if(null===this.getRowForItem(focusedItem).previousElementSibling)return;return this.focusFirstRow(focusedItem),void event.preventDefault()}if(this.isCell(focusedItem)){if(null===this.getCellWithItem(focusedItem).previousElementSibling)return;this.focusFirstCell(focusedItem),event.preventDefault()}}handleKeyEnd(event){const focusedItem=this.getFocusedItem();if(this.isRow(focusedItem)){if(null===this.getRowForItem(focusedItem).nextElementSibling)return;return this.focusLastRow(focusedItem),void event.preventDefault()}if(this.isCell(focusedItem)){if(null===this.getCellWithItem(focusedItem).nextElementSibling)return;this.focusLastCell(focusedItem),event.preventDefault()}}handleKeyControlHome(event){const focusedItem=this.getFocusedItem();if(this.isRow(focusedItem)){if(null===this.getRowForItem(focusedItem).previousElementSibling)return;return this.focusFirstRow(focusedItem),void event.preventDefault()}if(this.isCell(focusedItem)){if(this.isFirstRow(focusedItem))return;this.focusSameCellInRow(focusedItem,this.getFirstRow()),event.preventDefault()}}handleKeyControlEnd(event){const focusedItem=this.getFocusedItem();if(this.isRow(focusedItem)){if(null===this.getRowForItem(focusedItem).nextElementSibling)return;return this.focusLastRow(focusedItem),void event.preventDefault()}if(this.isCell(focusedItem)){if(this.isLastRow(focusedItem))return;this.focusSameCellInRow(focusedItem,this.getLastRow()),event.preventDefault()}}getFocusedItem(){return document.activeElement}getFocusableElements(parent){let{includeTabIndex:includeTabIndex=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return includeTabIndex?Array.from(parent.querySelectorAll('input:not([type="hidden"]), a[href], button, textarea, select, [tabindex]')):Array.from(parent.querySelectorAll('input:not([type="hidden"]), a[href], button, textarea, select'))}isRow(item){return!!item.matches("tr")}isFirstRow(item){return this.getRowForItem(item)===this.getFirstRow()}isLastRow(item){return this.getRowForItem(item)===this.getLastRow()}isCell(item){return!!this.getCellWithItem(item)}focusCell(cell){const focusableChildren=this.getFocusableElements(cell);this.focus(focusableChildren[0]||cell)}focus(item){item.tabIndex=0,item.focus({focusVisible:!0})}getRowForItem(item){return item.closest("tr")}isRowExpanded(item){return"true"===this.getRowForItem(item).getAttribute("aria-expanded")}isRowCollapsed(item){return"false"===this.getRowForItem(item).getAttribute("aria-expanded")}isRowCollapseSupported(item){return null!==this.getRowForItem(item).getAttribute("aria-expanded")}expandRow(item){const row=this.getRowForItem(item);row.setAttribute("aria-expanded",!0),this.getChildRows(row).forEach((childRow=>{childRow.setAttribute("aria-hidden",!1)}))}collapseRow(item){const row=this.getRowForItem(item);this.getChildRows(row).forEach((childRow=>{childRow.setAttribute("aria-hidden",!0)})),row.setAttribute("aria-expanded",!1)}getChildRows(parent){const parentRow=this.getRowForItem(parent),parentRowLevel=this.getRowLevel(parentRow),allRows=this.getAllRows(),parentRowIndex=allRows.indexOf(parentRow),possibleChildren=allRows.slice(parentRowIndex+1),childRows=[];for(const childRow of possibleChildren){if(this.getRowLevel(childRow)!==parentRowLevel+1)break;childRows.push(childRow)}return childRows}getParentRow(child){const childRow=this.getRowForItem(child),childRowLevel=this.getRowLevel(childRow),allRows=this.getAllRows(),childRowIndex=allRows.indexOf(childRow),possibleParents=allRows.slice(0,childRowIndex).reverse();for(const parentRow of possibleParents)if(this.getRowLevel(parentRow)===childRowLevel-1)return parentRow;return null}getCellWithItem(item){return item.closest("td")}getNavigableRows(){return this.getAllRows().filter((row=>row.matches(':not([aria-hidden="true"]')))}getAllRows(){return Array.from(this.treeElement.querySelectorAll("tr")).filter((row=>!row.closest("thead")))}getNavigableColumns(row){return Array.from(row.getElementsByTagName("td"))}getFirstRow(){var _this$getNavigableRow;return null===(_this$getNavigableRow=this.getNavigableRows())||void 0===_this$getNavigableRow?void 0:_this$getNavigableRow.shift()}getLastRow(){var _this$getNavigableRow2;return null===(_this$getNavigableRow2=this.getNavigableRows())||void 0===_this$getNavigableRow2?void 0:_this$getNavigableRow2.pop()}getPreviousRow(item){const allRows=this.getNavigableRows(),currentRow=this.getRowForItem(item),index=allRows.indexOf(currentRow);return 0===index?null:allRows[index-1]}getNextRow(item){const allRows=this.getNavigableRows(),currentRow=this.getRowForItem(item),index=allRows.indexOf(currentRow);return index>=allRows.length-1?null:allRows[index+1]}focusSameCellInRow(currentItem,targetRow){if(!targetRow)return;const currentRow=this.getRowForItem(currentItem),currentIndex=this.getNavigableColumns(currentRow).indexOf(this.getCellWithItem(currentItem)),targetCols=this.getNavigableColumns(targetRow);this.focusCell(targetCols[currentIndex])}focusCellAbove(item){this.focusSameCellInRow(item,this.getPreviousRow(item))}focusCellBelow(item){this.focusSameCellInRow(item,this.getNextRow(item))}focusCurrentRow(rowChild){this.focus(this.getRowForItem(rowChild))}focusRowAbove(item){this.focus(this.getPreviousRow(item))}focusRowBelow(item){this.focus(this.getNextRow(item))}focusFirstRow(){this.focus(this.getFirstRow())}focusLastRow(){this.focus(this.getLastRow())}focusFirstCell(item){const row=this.getRowForItem(item);this.focusCell(row.querySelector("td"))}focusLastCell(item){const row=this.getRowForItem(item),cells=this.getNavigableColumns(row);this.focusCell(cells[cells.length-1])}focusFirstCellInRow(item){const row=this.getRowForItem(item),cells=this.getNavigableColumns(row);this.focusCell(cells[0])}focusLastCellInRow(item){this.focusLastCell(this.getRowForItem(item))}focusNextCell(item){this.focusCell(item.nextElementSibling)}focusPreviousCell(item){this.focusCell(item.previousElementSibling)}cellOnlyFocusEnabled(){return!1}rowFocusSupported(){return!("focusRows"in this.treeElement.dataset)||"false"!==this.treeElement.dataset.focusRows}getRowLevel(row){return parseInt(row.getAttribute("aria-level"))}}return _exports.default=TreeGrid,_exports.default}));

//# sourceMappingURL=treegrid.min.js.map