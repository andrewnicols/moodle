define ("core/chart_output_htmltable",["jquery","core/chart_output_base"],function($,Base){function Output(){Base.prototype.constructor.apply(this,arguments);this._build()}Output.prototype=Object.create(Base.prototype);Output.prototype._build=function(){this._node.empty();this._node.append(this._makeTable())};Output.prototype._makeTable=function(){var tbl=$("<table>"),c=this._chart,node,value,labels=c.getLabels(),hasLabel=0<labels.length,series=c.getSeries(),seriesLabels,rowCount=series[0].getCount();tbl.addClass("chart-output-htmltable generaltable");if(null!==c.getTitle()){tbl.append($("<caption>").text(c.getTitle()))}node=$("<tr>");if(hasLabel){node.append($("<td>"))}series.forEach(function(serie){node.append($("<th>").text(serie.getLabel()).attr("scope","col"))});tbl.append(node);for(var rowId=0;rowId<rowCount;rowId++){node=$("<tr>");if(0<labels.length){node.append($("<th>").text(labels[rowId]).attr("scope","row"))}for(var serieId=0;serieId<series.length;serieId++){value=series[serieId].getValues()[rowId];seriesLabels=series[serieId].getLabels();if(null!==seriesLabels){value=series[serieId].getLabels()[rowId]}node.append($("<td>").text(value))}tbl.append(node)}return tbl};Output.prototype.update=function(){this._build()};return Output});
//# sourceMappingURL=chart_output_htmltable.min.js.map
