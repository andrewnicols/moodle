define("core/utils",["exports","core/pending"],(function(_exports,_pending){var obj;
/**
   * Utility functions.
   *
   * @module core/utils
   * @copyright  2019 Ryan Wyllie <ryan@moodle.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.throttle=_exports.debounce=void 0,_pending=(obj=_pending)&&obj.__esModule?obj:{default:obj};_exports.throttle=(func,wait)=>{let onCooldown=!1,runAgain=null;const run=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];runAgain=null!==runAgain,onCooldown||(func.apply(this,args),onCooldown=!0,setTimeout((()=>{const recurse=runAgain;onCooldown=!1,runAgain=null,recurse&&run(args)}),wait))};return run};const debounceMap=new Map;_exports.debounce=(func,wait)=>{let timeout=null;return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];debounceMap.has(func)||debounceMap.set(func,new _pending.default("core/utils:debounce")),clearTimeout(timeout),timeout=setTimeout((()=>{func.apply(this,args),debounceMap.get(func).resolve(),debounceMap.delete(func)}),wait)}}}));

//# sourceMappingURL=utils.min.js.map