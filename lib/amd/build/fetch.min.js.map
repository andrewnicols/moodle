{"version":3,"file":"fetch.min.js","sources":["../src/fetch.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module fetch\n *\n * @module     core/fetch\n * @copyright  2023 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Cfg from 'core/config';\n\nconst normaliseComponent = (component) => component.replace(/^core_/, '');\n\nconst getRequest = (\n    component,\n    endpoint,\n    params,\n    method,\n) => {\n    const url = new URL(`${Cfg.apibase}rest/v2/${component}/${endpoint}`);\n    const options = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    if (method === 'GET') {\n        Object.entries(params).forEach(([key, value]) => {\n            url.searchParams.append(key, value);\n        });\n    }\n    if (method === 'POST') {\n        options.body = JSON.stringify(params);\n    }\n\n    return new Request(url, options);\n};\n\nexport default async (\n    component,\n    action,\n    params = {},\n    method = 'GET',\n) => {\n    const result = await fetch(\n        getRequest(\n            normaliseComponent(component),\n            action,\n            params,\n            method,\n        ),\n    );\n\n    if (result.ok) {\n        return result.json();\n    }\n};\n"],"names":["normaliseComponent","component","replace","getRequest","endpoint","params","method","url","URL","Cfg","apibase","options","headers","Object","entries","forEach","_ref","key","value","searchParams","append","body","JSON","stringify","Request","async","action","result","fetch","ok","json"],"mappings":";;;;;;;mJAyBMA,mBAAsBC,WAAcA,UAAUC,QAAQ,SAAU,IAEhEC,WAAa,CACfF,UACAG,SACAC,OACAC,gBAEMC,IAAM,IAAIC,cAAOC,gBAAIC,2BAAkBT,sBAAaG,WACpDO,QAAU,CACZL,OAAAA,OACAM,QAAS,gBACW,2BAIT,QAAXN,QACAO,OAAOC,QAAQT,QAAQU,SAAQC,WAAEC,IAAKC,YAClCX,IAAIY,aAAaC,OAAOH,IAAKC,UAGtB,SAAXZ,SACAK,QAAQU,KAAOC,KAAKC,UAAUlB,SAG3B,IAAImB,QAAQjB,IAAKI,kCAGbc,eACXxB,UACAyB,YACArB,8DAAS,GACTC,8DAAS,YAEHqB,aAAeC,MACjBzB,WACIH,mBAAmBC,WACnByB,OACArB,OACAC,YAIJqB,OAAOE,UACAF,OAAOG"}