define ("core/modal_factory",["jquery","core/modal_events","core/modal_registry","core/modal","core/modal_save_cancel","core/modal_cancel","core/local/modal/alert","core/templates","core/notification","core/custom_interaction_events","core/pending"],function($,ModalEvents,ModalRegistry,Modal,ModalSaveCancel,ModalCancel,ModalAlert,Templates,Notification,CustomEvents,Pending){var TEMPLATES={DEFAULT:"core/modal",SAVE_CANCEL:"core/modal_save_cancel",CANCEL:"core/modal_cancel",ALERT:"core/local/modal/alert"},TYPES={DEFAULT:"DEFAULT",SAVE_CANCEL:"SAVE_CANCEL",CANCEL:"CANCEL",ALERT:"ALERT"};ModalRegistry.register(TYPES.DEFAULT,Modal,TEMPLATES.DEFAULT);ModalRegistry.register(TYPES.SAVE_CANCEL,ModalSaveCancel,TEMPLATES.SAVE_CANCEL);ModalRegistry.register(TYPES.CANCEL,ModalCancel,TEMPLATES.CANCEL);ModalRegistry.register(TYPES.ALERT,ModalAlert,TEMPLATES.ALERT);var setUpTrigger=function(modalPromise,triggerElement,modalConfig){var actualTriggerElement=null,hasPreShowCallback="function"==typeof modalConfig.preShowCallback,triggeredCallback=function(e,data){var pendingPromise=new Pending("core/modal_factory:setUpTrigger:triggeredCallback");actualTriggerElement=$(e.currentTarget);modalPromise.then(function(modal){if(hasPreShowCallback){modalConfig.preShowCallback(actualTriggerElement,modal)}modal.show();return modal}).then(pendingPromise.resolve);data.originalEvent.preventDefault()};if(Array.isArray(triggerElement)){var selector=triggerElement[1];triggerElement=triggerElement[0];CustomEvents.define(triggerElement,[CustomEvents.events.activate]);triggerElement.on(CustomEvents.events.activate,selector,triggeredCallback)}else{CustomEvents.define(triggerElement,[CustomEvents.events.activate]);triggerElement.on(CustomEvents.events.activate,triggeredCallback)}modalPromise.then(function(modal){modal.getRoot().on(ModalEvents.hidden,function(){if(null!==actualTriggerElement){actualTriggerElement.focus()}});return modal})},createFromElement=function(registryConf,modalElement){modalElement=$(modalElement);var Module=registryConf.module,modal=new Module(modalElement);return modal},createFromType=function(registryConf,templateContext){var templateName=registryConf.template,modalPromise=Templates.render(templateName,templateContext).then(function(html){var modalElement=$(html);return createFromElement(registryConf,modalElement)}).fail(Notification.exception);return modalPromise};return{create:function(modalConfig,triggerElement){var type=modalConfig.type||TYPES.DEFAULT,isLarge=modalConfig.large?!0:!1,isScrollable=modalConfig.hasOwnProperty("scrollable")?modalConfig.scrollable:!0,registryConf=null,templateContext={};registryConf=ModalRegistry.get(type);if(!registryConf){Notification.exception({message:"Unable to find modal of type: "+type})}if("undefined"!=typeof modalConfig.templateContext){templateContext=modalConfig.templateContext}var modalPromise=createFromType(registryConf,templateContext).then(function(modal){if("undefined"!=typeof modalConfig.title){modal.setTitle(modalConfig.title)}if("undefined"!=typeof modalConfig.body){modal.setBody(modalConfig.body)}if("undefined"!=typeof modalConfig.footer){modal.setFooter(modalConfig.footer)}if(modalConfig.buttons){Object.entries(modalConfig.buttons).forEach(function(_ref){let[key,value]=_ref;modal.setButtonText(key,value)})}if(isLarge){modal.setLarge()}if("undefined"!=typeof modalConfig.removeOnClose){modal.setRemoveOnClose(modalConfig.removeOnClose)}modal.setScrollable(isScrollable);return modal});if("undefined"!=typeof triggerElement){setUpTrigger(modalPromise,triggerElement,modalConfig)}return modalPromise},types:TYPES}});
//# sourceMappingURL=modal_factory.min.js.map
