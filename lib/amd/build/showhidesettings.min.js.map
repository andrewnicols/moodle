{"version":3,"sources":["../src/showhidesettings.js"],"names":["define","$","dependencies","isCheckboxHiddenElement","$el","is","siblings","attr","length","isWrongRadioButton","value","isCheckedRelevant","isUncheckedRadioButton","prop","isUncheckedCheckbox","isMultiSelect","multiSelectMatches","values","selected","val","i","hasOwnProperty","indexOf","depFns","notchecked","$dependon","hide","each","idx","el","checked","noitemselected","eq","hiddenVal","split","defaultCondition","getElementsByName","name","checkDependency","condition","updateDependencies","toHide","dependonname","dependon","elements","elToHide","$parent","closest","show","initHandlers","depname","on","hideDependencyInfo","init","opts"],"mappings":"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","sourcesContent":["/**\n * Show/hide admin settings based on other settings selected\n *\n * @copyright 2018 Davo Smith, Synergy Learning\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    var dependencies;\n\n    // -------------------------------------------------\n    // Support functions, used by dependency functions.\n    // -------------------------------------------------\n\n    /**\n     * Check to see if the given element is the hidden element that makes sure checkbox\n     * elements always submit a value.\n     * @param {jQuery} $el\n     * @returns {boolean}\n     */\n    function isCheckboxHiddenElement($el) {\n        return ($el.is('input[type=hidden]') && $el.siblings('input[type=checkbox][name=\"' + $el.attr('name') + '\"]').length);\n    }\n\n    /**\n     * Check to see if this is a radio button with the wrong value (i.e. a radio button from\n     * the group we are interested in, but not the specific one we wanted).\n     * @param {jQuery} $el\n     * @param {string} value\n     * @returns {boolean}\n     */\n    function isWrongRadioButton($el, value) {\n        return ($el.is('input[type=radio]') && $el.attr('value') !== value);\n    }\n\n    /**\n     * Is this element relevant when we're looking for checked / not checked status?\n     * @param {jQuery} $el\n     * @param {string} value\n     * @returns {boolean}\n     */\n    function isCheckedRelevant($el, value) {\n        return (!isCheckboxHiddenElement($el) && !isWrongRadioButton($el, value));\n    }\n\n    /**\n     * Is this an unchecked radio button? (If it is, we want to skip it, as\n     * we're only interested in the value of the radio button that is checked)\n     * @param {jQuery} $el\n     * @returns {boolean}\n     */\n    function isUncheckedRadioButton($el) {\n        return ($el.is('input[type=radio]') && !$el.prop('checked'));\n    }\n\n    /**\n     * Is this an unchecked checkbox?\n     * @param {jQuery} $el\n     * @returns {boolean}\n     */\n    function isUncheckedCheckbox($el) {\n        return ($el.is('input[type=checkbox]') && !$el.prop('checked'));\n    }\n\n    /**\n     * Is this a multi-select select element?\n     * @param {jQuery} $el\n     * @returns {boolean}\n     */\n    function isMultiSelect($el) {\n        return ($el.is('select') && $el.prop('multiple'));\n    }\n\n    /**\n     * Does the multi-select exactly match the list of values provided?\n     * @param {jQuery} $el\n     * @param {array} values\n     * @returns {boolean}\n     */\n    function multiSelectMatches($el, values) {\n        var selected = $el.val() || [];\n        if (!values.length) {\n            // No values - nothing to match against.\n            return false;\n        }\n        if (selected.length !== values.length) {\n            // Different number of expected and actual values - cannot possibly be a match.\n            return false;\n        }\n        for (var i in selected) {\n            if (selected.hasOwnProperty(i)) {\n                if (values.indexOf(selected[i]) === -1) {\n                    return false; // Found a non-matching value - give up immediately.\n                }\n            }\n        }\n        // Didn't find a non-matching value, so we have a match.\n        return true;\n    }\n\n    // -------------------------------\n    // Specific dependency functions.\n    // -------------------------------\n\n    var depFns = {\n        notchecked: function($dependon, value) {\n            var hide = false;\n            value = String(value);\n            $dependon.each(function(idx, el) {\n                var $el = $(el);\n                if (isCheckedRelevant($el, value)) {\n                    hide = hide || !$el.prop('checked');\n                }\n            });\n            return hide;\n        },\n\n        checked: function($dependon, value) {\n            var hide = false;\n            value = String(value);\n            $dependon.each(function(idx, el) {\n                var $el = $(el);\n                if (isCheckedRelevant($el, value)) {\n                    hide = hide || $el.prop('checked');\n                }\n            });\n            return hide;\n        },\n\n        noitemselected: function($dependon) {\n            var hide = false;\n            $dependon.each(function(idx, el) {\n                var $el = $(el);\n                hide = hide || ($el.prop('selectedIndex') === -1);\n            });\n            return hide;\n        },\n\n        eq: function($dependon, value) {\n            var hide = false;\n            var hiddenVal = false;\n            value = String(value);\n            $dependon.each(function(idx, el) {\n                var $el = $(el);\n                if (isUncheckedRadioButton($el)) {\n                    // For radio buttons, we're only interested in the one that is checked.\n                    return;\n                }\n                if (isCheckboxHiddenElement($el)) {\n                    // This is the hidden input that is part of the checkbox setting.\n                    // We will use this value, if the associated checkbox is unchecked.\n                    hiddenVal = ($el.val() === value);\n                    return;\n                }\n                if (isUncheckedCheckbox($el)) {\n                    // Checkbox is not checked - hide depends on the 'unchecked' value stored in\n                    // the associated hidden element, which we have already found, above.\n                    hide = hide || hiddenVal;\n                    return;\n                }\n                if (isMultiSelect($el)) {\n                    // Expect a list of values to match, separated by '|' - all of them must\n                    // match the values selected.\n                    var values = value.split('|');\n                    hide = multiSelectMatches($el, values);\n                    return;\n                }\n                // All other element types - just compare the value directly.\n                hide = hide || ($el.val() === value);\n            });\n            return hide;\n        },\n\n        'in': function($dependon, value) {\n            var hide = false;\n            var hiddenVal = false;\n            var values = value.split('|');\n            $dependon.each(function(idx, el) {\n                var $el = $(el);\n                if (isUncheckedRadioButton($el)) {\n                    // For radio buttons, we're only interested in the one that is checked.\n                    return;\n                }\n                if (isCheckboxHiddenElement($el)) {\n                    // This is the hidden input that is part of the checkbox setting.\n                    // We will use this value, if the associated checkbox is unchecked.\n                    hiddenVal = (values.indexOf($el.val()) > -1);\n                    return;\n                }\n                if (isUncheckedCheckbox($el)) {\n                    // Checkbox is not checked - hide depends on the 'unchecked' value stored in\n                    // the associated hidden element, which we have already found, above.\n                    hide = hide || hiddenVal;\n                    return;\n                }\n                if (isMultiSelect($el)) {\n                    // For multiselect, we check to see if the list of values provided matches the list selected.\n                    hide = multiSelectMatches($el, values);\n                    return;\n                }\n                // All other element types - check to see if the value is in the list.\n                hide = hide || (values.indexOf($el.val()) > -1);\n            });\n            return hide;\n        },\n\n        defaultCondition: function($dependon, value) { // Not equal.\n            var hide = false;\n            var hiddenVal = false;\n            value = String(value);\n            $dependon.each(function(idx, el) {\n                var $el = $(el);\n                if (isUncheckedRadioButton($el)) {\n                    // For radio buttons, we're only interested in the one that is checked.\n                    return;\n                }\n                if (isCheckboxHiddenElement($el)) {\n                    // This is the hidden input that is part of the checkbox setting.\n                    // We will use this value, if the associated checkbox is unchecked.\n                    hiddenVal = ($el.val() !== value);\n                    return;\n                }\n                if (isUncheckedCheckbox($el)) {\n                    // Checkbox is not checked - hide depends on the 'unchecked' value stored in\n                    // the associated hidden element, which we have already found, above.\n                    hide = hide || hiddenVal;\n                    return;\n                }\n                if (isMultiSelect($el)) {\n                    // Expect a list of values to match, separated by '|' - all of them must\n                    // match the values selected to *not* hide the element.\n                    var values = value.split('|');\n                    hide = !multiSelectMatches($el, values);\n                    return;\n                }\n                // All other element types - just compare the value directly.\n                hide = hide || ($el.val() !== value);\n            });\n            return hide;\n        }\n    };\n\n    /**\n     * Find the element with the given name\n     * @param {String} name\n     * @returns {*|jQuery|HTMLElement}\n     */\n    function getElementsByName(name) {\n        // For the array elements, we use [name^=\"something[\"] to find the elements that their name begins with 'something['/\n        // This is to find both name = 'something[]' and name='something[index]'.\n        return $('[name=\"' + name + '\"],[name^=\"' + name + '[\"]');\n    }\n\n    /**\n     * Check to see whether a particular condition is met\n     * @param {*|jQuery|HTMLElement} $dependon\n     * @param {String} condition\n     * @param {mixed} value\n     * @returns {Boolean}\n     */\n    function checkDependency($dependon, condition, value) {\n        if (typeof depFns[condition] === \"function\") {\n            return depFns[condition]($dependon, value);\n        }\n        return depFns.defaultCondition($dependon, value);\n    }\n\n    /**\n     * Show / hide the elements that depend on some elements.\n     */\n    function updateDependencies() {\n        // Process all dependency conditions.\n        var toHide = {};\n        $.each(dependencies, function(dependonname) {\n            var dependon = getElementsByName(dependonname);\n            $.each(dependencies[dependonname], function(condition, values) {\n                $.each(values, function(value, elements) {\n                    var hide = checkDependency(dependon, condition, value);\n                    $.each(elements, function(idx, elToHide) {\n                        if (toHide.hasOwnProperty(elToHide)) {\n                            toHide[elToHide] = toHide[elToHide] || hide;\n                        } else {\n                            toHide[elToHide] = hide;\n                        }\n                    });\n                });\n            });\n        });\n\n        // Update the hidden status of all relevant elements.\n        $.each(toHide, function(elToHide, hide) {\n            getElementsByName(elToHide).each(function(idx, el) {\n                var $parent = $(el).closest('.form-item');\n                if ($parent.length) {\n                    if (hide) {\n                        $parent.hide();\n                    } else {\n                        $parent.show();\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Initialise the event handlers.\n     */\n    function initHandlers() {\n        $.each(dependencies, function(depname) {\n            var $el = getElementsByName(depname);\n            if ($el.length) {\n                $el.on('change', updateDependencies);\n            }\n        });\n        updateDependencies();\n    }\n\n    /**\n     * Hide the 'this setting may be hidden' messages.\n     */\n    function hideDependencyInfo() {\n        $('.form-dependenton').hide();\n    }\n\n    return {\n        init: function(opts) {\n            dependencies = opts.dependencies;\n            initHandlers();\n            hideDependencyInfo();\n        }\n    };\n});"],"file":"showhidesettings.min.js"}