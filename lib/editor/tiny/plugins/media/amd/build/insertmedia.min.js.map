{"version":3,"file":"insertmedia.min.js","sources":["../src/insertmedia.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin for Moodle.\n *\n * @module      tiny/media\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {\n    exception as displayException,\n    saveCancel,\n} from 'core/notification';\n\nconst askTheQuestion = (editor, question) => {\n    saveCancel('Title', question, 'Yes', () => {\n        editor.setContent('<span data-identifier=\"SOMEVALUE\">' + editor.getContent() + '</span>');\n        editor.insertContent('Inserted some content! :)');\n    });\n};\n\nconst plugin = class {\n    constructor(editor) {\n        // Add a button which asks the question.\n        editor.ui.registry.addButton('editor_tiny/image', {\n            text: 'Insert image',\n            onAction: function() {\n                askTheQuestion(editor, 'Did you click the button?');\n            }\n        });\n\n        // Add a menu item which asks the question.\n        editor.ui.registry.addMenuItem('editor_tiny/image', {\n            text: 'Insert image',\n            onAction: function() {\n                askTheQuestion(editor, 'Did you click the Menu item?');\n            }\n        });\n\n        return {\n            getMetadata: function() {\n                return {\n                    name: 'Moodle Media plugin',\n                    url: 'https://docs.moodle.org/410/en/tiny_media'\n                };\n            }\n        };\n    }\n\n    getDialogue() {\n        return;\n    }\n};\n\nexport default new Promise((resolve) => {\n    getTinyMCE()\n    .then(tinyMCE => {\n        tinyMCE.PluginManager.add('editor_tiny/insertmedia', plugin);\n\n        resolve('editor_tiny/insertmedia');\n\n        return tinyMCE;\n    })\n    .catch(displayException);\n});\n"],"names":["askTheQuestion","editor","question","setContent","getContent","insertContent","Promise","resolve","then","tinyMCE","PluginManager","add","constructor","ui","registry","addButton","text","onAction","addMenuItem","getMetadata","name","url","getDialogue","catch","displayException"],"mappings":";;;;;;;;MA4BMA,eAAiB,CAACC,OAAQC,yCACjB,QAASA,SAAU,OAAO,KACjCD,OAAOE,WAAW,qCAAuCF,OAAOG,aAAe,WAC/EH,OAAOI,cAAc,8CAqCd,IAAIC,SAASC,mCAEvBC,MAAKC,UACFA,QAAQC,cAAcC,IAAI,0BApCnB,MACXC,YAAYX,eAERA,OAAOY,GAAGC,SAASC,UAAU,oBAAqB,CAC9CC,KAAM,eACNC,SAAU,WACNjB,eAAeC,OAAQ,gCAK/BA,OAAOY,GAAGC,SAASI,YAAY,oBAAqB,CAChDF,KAAM,eACNC,SAAU,WACNjB,eAAeC,OAAQ,mCAIxB,CACHkB,YAAa,iBACF,CACHC,KAAM,sBACNC,IAAK,+CAMrBC,kBAUIf,QAAQ,2BAEDE,WAEVc,MAAMC"}