{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Premium configuration.\n *\n * @module      tiny_premium/configuration\n * @copyright   2023 David Woloszyn <david.woloszyn@moodle.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    addToolbarButton,\n    addToolbarSection\n} from 'editor_tiny/utils';\nimport {getInitialPluginConfiguration, getPluginOptionName} from 'editor_tiny/options';\n\nconst configureToolbar = (toolbar) => {\n    // Add premium toolbar sections to house all the plugins with no natural home.\n    toolbar = addToolbarSection(toolbar, 'premium_a', 'advanced', true);\n    toolbar = addToolbarSection(toolbar, 'premium_b', 'formatting', true);\n    return toolbar;\n};\n\nexport const configure = (instanceConfig, options) => {\n    const pluginOptions = getInitialPluginConfiguration(options);\n    window.console.log(pluginOptions);\n    const enabledPlugins = pluginOptions[getPluginOptionName('tiny_premium/plugin', 'premiumplugins')].split(',');\n    window.console.log(enabledPlugins);\n\n    let plugins = instanceConfig.plugins;\n    let menu = instanceConfig.menu;\n    let toolbar = configureToolbar(instanceConfig.toolbar);\n    let contextmenu = instanceConfig.contextmenu;\n    let pluginsettings = {};\n\n    if (enabledPlugins.indexOf('typography') !== -1) {\n        // Advanced Typography.\n        plugins += ` typography`;\n        toolbar = addToolbarButton(toolbar, 'premium_b', 'typography');\n    }\n\n    if (enabledPlugins.indexOf('casechange') !== -1) {\n        // Case Change.\n        plugins += ` casechange`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'casechange');\n    }\n\n    if (enabledPlugins.indexOf('checklist') !== -1) {\n        // Checklist.\n        plugins += ` checklist`;\n        toolbar = addToolbarButton(toolbar, 'lists', 'checklist');\n    }\n\n    return {\n        plugins,\n        toolbar,\n        menu,\n        contextmenu,\n        ...pluginsettings\n    };\n};\n"],"names":["instanceConfig","options","pluginOptions","window","console","log","enabledPlugins","split","plugins","menu","toolbar","configureToolbar","contextmenu","indexOf"],"mappings":"mOAoCyB,CAACA,eAAgBC,iBAChCC,eAAgB,0CAA8BD,SACpDE,OAAOC,QAAQC,IAAIH,qBACbI,eAAiBJ,eAAc,gCAAoB,sBAAuB,mBAAmBK,MAAM,KACzGJ,OAAOC,QAAQC,IAAIC,oBAEfE,QAAUR,eAAeQ,QACzBC,KAAOT,eAAeS,KACtBC,QAfkBA,CAAAA,UAEtBA,SAAU,4BAAkBA,QAAS,YAAa,YAAY,IACpD,4BAAkBA,QAAS,YAAa,cAAc,IAYlDC,CAAiBX,eAAeU,SAC1CE,YAAcZ,eAAeY,mBAGa,IAA1CN,eAAeO,QAAQ,gBAEvBL,uBACAE,SAAU,2BAAiBA,QAAS,YAAa,gBAGP,IAA1CJ,eAAeO,QAAQ,gBAEvBL,uBACAE,SAAU,2BAAiBA,QAAS,YAAa,gBAGR,IAAzCJ,eAAeO,QAAQ,eAEvBL,sBACAE,SAAU,2BAAiBA,QAAS,QAAS,cAG1C,CACHF,QAAAA,QACAE,QAAAA,QACAD,KAAAA,KACAG,YAAAA"}