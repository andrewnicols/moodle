{"version":3,"file":"commands_audio.min.js","sources":["../src/commands_audio.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Record RTC - record audio command.\n *\n * @module      tiny_recordrtc/recordAudioCommands\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {\n    audioButtonName,\n    component\n} from './common';\nimport Recorder from './audio_recorder';\nimport {isAudioAllowed} from './options';\n\nexport default async() => {\n    if (!Recorder.isBrowserCompatible()) {\n        // The browser doesn't support the plugin, so just don't show it.\n        return () => false;\n    }\n\n    const [\n        audioButtonTitle,\n        audio,\n    ] = await Promise.all([\n        getString('audiobuttontitle', component),\n        getButtonImage('audio', component),\n    ]);\n\n    return (editor) => {\n        if (!isAudioAllowed(editor)) {\n            return;\n        }\n\n        const icon = 'audio';\n        editor.ui.registry.addIcon(icon, audio.html);\n\n        editor.ui.registry.addButton(audioButtonName, {\n            icon,\n            tooltip: audioButtonTitle,\n            onAction: () => Recorder.display(editor),\n        });\n\n        editor.ui.registry.addMenuItem(audioButtonName, {\n            icon,\n            text: audioButtonTitle,\n            onAction: () => Recorder.display(editor),\n        });\n    };\n};\n"],"names":["_audio_recorder","async","Recorder","isBrowserCompatible","audioButtonTitle","audio","Promise","all","component","_utils","getButtonImage","editor","_options","isAudioAllowed","ui","registry","addIcon","html","addButton","audioButtonName","icon","tooltip","onAction","display","addMenuItem","text"],"mappings":";;;;;;;qFA6BAA,qBAAAA,2EAGeC,UACX,IAAKC,gBAAAA,QAASC,sBAEV,MAAO,KAAM,EAGX,MACFC,iBACAC,aACMC,QAAQC,IAAI,EAClB,mBAAU,mBAAoBC,QAA9BA,YACA,EAAAC,OAAAC,gBAAe,QAASF,QAAAA,aAG5B,OAAQG,SACJ,KAAK,EAAAC,SAAAC,gBAAeF,QAChB,OAIJA,OAAOG,GAAGC,SAASC,QADN,QACoBX,MAAMY,MAEvCN,OAAOG,GAAGC,SAASG,UAAUC,QAAAA,gBAAiB,CAC1CC,KAJS,QAKTC,QAASjB,iBACTkB,SAAU,IAAMpB,gBAASqB,QAAAA,QAAQZ,UAGrCA,OAAOG,GAAGC,SAASS,YAAYL,QAAAA,gBAAiB,CAC5CC,KAVS,QAWTK,KAAMrB,iBACNkB,SAAU,IAAMpB,gBAASqB,QAAAA,QAAQZ,SAHrC,CAdJ"}