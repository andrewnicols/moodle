{"version":3,"file":"testplugin.min.js","sources":["../src/testplugin.js"],"sourcesContent":["import {getTinyMCE} from './loader';\nimport {\n    exception as displayException,\n    saveCancel,\n} from 'core/notification';\n\nconst askTheQuestion = (editor, question) => {\n    saveCancel('Title', question, 'Yes', () => {\n        editor.setContent('<span data-identifier=\"SOMEVALUE\">' + editor.getContent() + '</span>');\n        editor.insertContent('Inserted some content! :)');\n    });\n};\n\nconst plugin = (editor) => {\n    // Add a button which asks the question.\n    editor.ui.registry.addButton('editor_tiny/testplugin', {\n        text: 'My button',\n        onAction: function() {\n            askTheQuestion(editor, 'Did you click the button?');\n        }\n    });\n\n    // Add a menu item which asks the question.\n    editor.ui.registry.addMenuItem('editor_tiny/testplugin', {\n        text: 'Example plugin',\n        onAction: function() {\n            askTheQuestion(editor, 'Did you click the Menu item?');\n        }\n    });\n\n    return {\n        name: 'Custom plugin',\n        url: 'https://example.com/docs/customplugin'\n    };\n};\n\nexport default new Promise((resolve) => {\n    getTinyMCE()\n    .then(tinyMCE => {\n        tinyMCE.PluginManager.add('editor_tiny/testplugin', plugin);\n\n        resolve('editor_tiny/testplugin');\n\n        return tinyMCE;\n    })\n    .catch(displayException);\n});\n"],"names":["askTheQuestion","editor","question","setContent","getContent","insertContent","plugin","ui","registry","addButton","text","onAction","addMenuItem","name","url","Promise","resolve","then","tinyMCE","PluginManager","add","catch","displayException"],"mappings":"2MAMMA,eAAiB,CAACC,OAAQC,yCACjB,QAASA,SAAU,OAAO,KACjCD,OAAOE,WAAW,qCAAuCF,OAAOG,aAAe,WAC/EH,OAAOI,cAAc,iCAIvBC,OAAUL,SAEZA,OAAOM,GAAGC,SAASC,UAAU,yBAA0B,CACnDC,KAAM,YACNC,SAAU,WACNX,eAAeC,OAAQ,gCAK/BA,OAAOM,GAAGC,SAASI,YAAY,yBAA0B,CACrDF,KAAM,iBACNC,SAAU,WACNX,eAAeC,OAAQ,mCAIxB,CACHY,KAAM,gBACNC,IAAK,uDAIE,IAAIC,SAASC,mCAEvBC,MAAKC,UACFA,QAAQC,cAAcC,IAAI,yBAA0Bd,QAEpDU,QAAQ,0BAEDE,WAEVG,MAAMC"}