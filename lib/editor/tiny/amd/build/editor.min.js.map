{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Utility functions.\n *\n * @module editor_tiny/editor\n * @copyright  2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {\n    getTinyMCE,\n} from './loader';\n\nconst instanceMap = new Map();\n\n/**\n * Require the modules for the named set of TinyMCE plugins.\n *\n * @param {string[]} pluginList The list of plugins\n * @return {Promise[]} A matching set of Promises relating to the requested plugins\n * @private\n */\nconst importPluginList = pluginList => {\n    return pluginList.map(pluginPath => {\n        if (pluginPath.indexOf('/') === -1) {\n            // A standard TinyMCE Plugin.\n            return pluginPath;\n        }\n\n        return import(pluginPath);\n    });\n};\n\n/**\n * Get the TinyMCE instance for the specified Node ID.\n *\n * @param {string} elementId\n * @returns {TinyMCE|undefined}\n */\nexport const getInstanceForElementId = elementId => getInstanceForElement(document.getElementById(elementId));\n\n/**\n * Get the TinyMCE instance for the specified HTMLElement.\n *\n * @param {HTMLElement} element\n * @returns {TinyMCE|undefined}\n */\nexport const getInstanceForElement = element => instanceMap.get(element);\n\n/**\n * Set up TinyMCE for the selector at the specified HTML Node id.\n *\n * @param {string} elementId The HTML Node ID\n * @return {Promise<TinyMCE>} The TinyMCE instance\n */\nexport const setupForElementId = ({elementId}) => {\n    return setupForTarget(document.querySelector(`#${elementId}`));\n};\n\ngetTinyMCE()\n.then(tinyMCE => {\n    tinyMCE.OEMWindowManager = tinyMCE.WindowManager;\n    tinyMCE.WindowManager = function(editor) {\n        window.console.log(editor);\n\n        return {\n            open: function(args, params) {\n                window.console.log(args, params);\n                return tinyMCE.OEMWindowManager.open(args, params);\n            },\n\n            openUrl: tinyMCE.OEMWindowManager.openUrl,\n            alert: tinyMCE.OEMWindowManager.alert,\n            confirm: tinyMCE.OEMWindowManager.confirm,\n            close: tinyMCE.OEMWindowManager.close,\n        };\n    };\n\n    tinyMCE.OEMNotificationManager = tinyMCE.NotificationManager;\n    tinyMCE.NotificationManager = function(editor) {\n        window.console.log(editor);\n\n        return tinyMCE.OEMNotificationManager(editor);\n    };\n\n    return tinyMCE;\n})\n.catch(() => {\n    // eslint-disable-line\n});\n\n/**\n * Set up TinyMCE for the HTML Element.\n *\n * @param {HTMLElement} target\n * @return {Promise<TinyMCE>} The TinyMCE instance\n */\nexport const setupForTarget = (target) => {\n    if (instanceMap.has(target)) {\n        return Promise.resolve(target);\n    }\n\n    const plugins = JSON.parse(target.dataset.pluginlist);\n    const pluginList = Object.keys(plugins);\n\n    return getTinyMCE()\n    .then(tinyMCE => Promise.all([tinyMCE, ...importPluginList(pluginList)]))\n    .then(([tinyMCE, ...pluginList]) => {\n        return tinyMCE.init({\n            target,\n\n            // TODO Configure the Language:\n            // lang,\n\n            // TODO Configure the toolbar somehow.\n            toolbar: [\n                //'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | ' +\n                'formatselect bold italic | bullist numlist outdent indent | link unlink | ' +\n                    'tiny_emojipicker/plugin',\n                'underline strikethrough subscript superscript | alignleft aligncenter alignright alignjustify | ' +\n                    'charmap table | formatpainter table | undo redo | source',\n                'editor_tiny/testplugin',\n                'tiny_media/insertmedia',\n            ],\n\n            menu: {\n                file: {\n                    title: 'File',\n                    items: 'editor_tiny/testplugin',\n                },\n            },\n\n            // TODO Configure this plugin list somehow.\n            plugins: [\n                'wordcount',\n                ...pluginList,\n            ].join(' '),\n        });\n    })\n    .then(tinyMCE => {\n        instanceMap.set(target, tinyMCE);\n        return tinyMCE;\n    });\n};\n"],"names":["instanceMap","Map","importPluginList","pluginList","map","pluginPath","indexOf","elementId","getInstanceForElement","document","getElementById","element","get","_ref","setupForTarget","querySelector","then","tinyMCE","OEMWindowManager","WindowManager","editor","window","console","log","open","args","params","openUrl","alert","confirm","close","OEMNotificationManager","NotificationManager","catch","target","has","Promise","resolve","plugins","JSON","parse","dataset","pluginlist","Object","keys","all","_ref2","init","toolbar","menu","file","title","items","join","set"],"mappings":"yZA0BMA,YAAc,IAAIC,IASlBC,iBAAmBC,YACdA,WAAWC,KAAIC,aACe,IAA7BA,WAAWC,QAAQ,KAEZD,2NAGGA,4WAAAA,gDAUiBE,WAAaC,sBAAsBC,SAASC,eAAeH,kBAQrFC,sBAAwBG,SAAWX,YAAYY,IAAID,yFAQ/BE,WAACN,UAACA,uBACxBO,eAAeL,SAASM,yBAAkBR,uCAIpDS,MAAKC,UACFA,QAAQC,iBAAmBD,QAAQE,cACnCF,QAAQE,cAAgB,SAASC,eAC7BC,OAAOC,QAAQC,IAAIH,QAEZ,CACHI,KAAM,SAASC,KAAMC,eACjBL,OAAOC,QAAQC,IAAIE,KAAMC,QAClBT,QAAQC,iBAAiBM,KAAKC,KAAMC,SAG/CC,QAASV,QAAQC,iBAAiBS,QAClCC,MAAOX,QAAQC,iBAAiBU,MAChCC,QAASZ,QAAQC,iBAAiBW,QAClCC,MAAOb,QAAQC,iBAAiBY,QAIxCb,QAAQc,uBAAyBd,QAAQe,oBACzCf,QAAQe,oBAAsB,SAASZ,eACnCC,OAAOC,QAAQC,IAAIH,QAEZH,QAAQc,uBAAuBX,SAGnCH,WAEVgB,OAAM,eAUMnB,eAAkBoB,YACvBlC,YAAYmC,IAAID,eACTE,QAAQC,QAAQH,cAGrBI,QAAUC,KAAKC,MAAMN,OAAOO,QAAQC,YACpCvC,WAAawC,OAAOC,KAAKN,gBAExB,wBACNtB,MAAKC,SAAWmB,QAAQS,IAAI,CAAC5B,WAAYf,iBAAiBC,gBAC1Da,MAAK8B,YAAE7B,WAAYd,yBACTc,QAAQ8B,KAAK,CAChBb,OAAAA,OAMAc,QAAS,CAEL,oGAEA,2JAEA,yBACA,0BAGJC,KAAM,CACFC,KAAM,CACFC,MAAO,OACPC,MAAO,2BAKfd,QAAS,CACL,eACGnC,YACLkD,KAAK,UAGdrC,MAAKC,UACFjB,YAAYsD,IAAIpB,OAAQjB,SACjBA"}