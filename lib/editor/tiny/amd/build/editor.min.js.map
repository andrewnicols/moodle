{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["import {\n    getTinyMCE,\n} from './loader';\n\nconst importPluginList = pluginList => {\n    return pluginList.map(pluginPath => {\n        if (pluginPath.indexOf('/') === -1) {\n            // A standard TinyMCE Plugin.\n            return pluginPath;\n        }\n\n        return import(pluginPath);\n    });\n};\n\nexport const setupForElementId = ({elementId}) => {\n    return setupForTarget(document.querySelector(`#${elementId}`));\n};\n\nexport const setupForTarget = (target) => {\n    const pluginList = [\n        'anchor',\n        'advlist',\n        'link',\n        'image',\n        'lists',\n        'editor_tiny/testplugin',\n    ];\n\n    return getTinyMCE()\n    .then(tinyMCE => Promise.all([tinyMCE, ...importPluginList(pluginList)]))\n    .then(([tinyMCE, ...pluginList]) => {\n        return tinyMCE.init({\n            target,\n            toolbar: [\n                'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | ' +\n                    'outdent indent',\n                'editor_tiny/testplugin',\n            ],\n            plugins: [\n                'wordcount',\n                ...pluginList,\n            ].join(' '),\n        });\n    })\n    .catch(err => {\n        window.console.log(err);\n    });\n};\n"],"names":["importPluginList","pluginList","map","pluginPath","indexOf","_ref","elementId","setupForTarget","document","querySelector","target","then","tinyMCE","Promise","all","_ref2","init","toolbar","plugins","join","catch","err","window","console","log"],"mappings":"yVAIMA,iBAAmBC,YACdA,WAAWC,KAAIC,aACe,IAA7BA,WAAWC,QAAQ,KAEZD,2NAGGA,4WAAAA,0CAIWE,WAACC,UAACA,uBACxBC,eAAeC,SAASC,yBAAkBH,oBAGxCC,eAAkBG,eACrBT,WAAa,CACf,SACA,UACA,OACA,QACA,QACA,iCAGG,wBACNU,MAAKC,SAAWC,QAAQC,IAAI,CAACF,WAAYZ,iBAAiBC,gBAC1DU,MAAKI,YAAEH,WAAYX,yBACTW,QAAQI,KAAK,CAChBN,OAAAA,OACAO,QAAS,CACL,yGAEA,0BAEJC,QAAS,CACL,eACGjB,YACLkB,KAAK,UAGdC,OAAMC,MACHC,OAAOC,QAAQC,IAAIH"}