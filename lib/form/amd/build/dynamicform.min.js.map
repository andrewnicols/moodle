{"version":3,"file":"dynamicform.min.js","sources":["../src/dynamicform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display an embedded form, it is only loaded and reloaded inside its container\n *\n *\n * @module     core_form/dynamicform\n * @copyright  2019 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * See also https://docs.moodle.org/dev/Modal_and_AJAX_forms\n *\n * @example\n *    import DynamicForm from 'core_form/dynamicform';\n *\n *    const dynamicForm = new DynamicForm(document.querySelector('#mycontainer', 'pluginname\\\\form\\\\formname');\n *    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n *        e.preventDefault();\n *        window.console.log(e.detail);\n *        dynamicForm.container.innerHTML = 'Thank you, your form is submitted!';\n *    });\n *    dynamicForm.load();\n *\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Event from 'core/event';\nimport {get_strings as getStrings} from 'core/str';\nimport Y from 'core/yui';\nimport Fragment from 'core/fragment';\nimport Pending from 'core/pending';\nimport {serialize} from './util';\n\n/**\n * @class core_form/dynamicform\n */\nexport default class DynamicForm {\n\n    /**\n     * Various events that can be observed.\n     *\n     * @type {Object}\n     */\n    events = {\n        // Form was successfully submitted - the response is passed to the event listener.\n        // Cancellable (in order to prevent default behavior to clear the container).\n        FORM_SUBMITTED: 'core_form_dynamicform_formsubmitted',\n        // Cancel button was pressed.\n        // Cancellable (in order to prevent default behavior to clear the container).\n        FORM_CANCELLED: 'core_form_dynamicform_formcancelled',\n        // User attempted to submit the form but there was client-side validation error.\n        CLIENT_VALIDATION_ERROR: 'core_form_dynamicform_clientvalidationerror',\n        // User attempted to submit the form but server returned validation error.\n        SERVER_VALIDATION_ERROR: 'core_form_dynamicform_validationerror',\n        // Error occurred while performing request to the server.\n        // Cancellable (by default calls Notification.exception).\n        ERROR: 'core_form_dynamicform_error',\n        // Right after user pressed no-submit button,\n        // listen to this event if you want to add JS validation or processing for no-submit button.\n        // Cancellable.\n        NOSUBMIT_BUTTON_PRESSED: 'core_form_dynamicform_nosubmitbutton',\n        // Right after user pressed submit button,\n        // listen to this event if you want to add additional JS validation or confirmation dialog.\n        // Cancellable.\n        SUBMIT_BUTTON_PRESSED: 'core_form_dynamicform_submitbutton',\n        // Right after user pressed cancel button,\n        // listen to this event if you want to add confirmation dialog.\n        // Cancellable.\n        CANCEL_BUTTON_PRESSED: 'core_form_dynamicform_cancelbutton',\n    };\n\n    /**\n     * Constructor\n     *\n     * Creates an instance\n     *\n     * @param {Element} container - the parent element for the form\n     * @param {string} formClass full name of the php class that extends \\core_form\\modal , must be in autoloaded location\n     */\n    constructor(container, formClass) {\n        this.formClass = formClass;\n        this.container = container;\n\n        // Ensure strings required for shortforms are always available.\n        getStrings([\n            {key: 'collapseall', component: 'moodle'},\n            {key: 'expandall', component: 'moodle'}\n        ]).catch(Notification.exception);\n\n        // Register delegated events handlers in vanilla JS.\n        this.container.addEventListener('click', e => {\n            if (e.target.matches('form input[type=submit][data-cancel]')) {\n                e.preventDefault();\n                const event = this.trigger(this.events.CANCEL_BUTTON_PRESSED, e.target);\n                if (!event.defaultPrevented) {\n                    this.processCancelButton();\n                }\n            } else if (e.target.matches('form input[type=submit][data-no-submit=\"1\"]')) {\n                e.preventDefault();\n                const event = this.trigger(this.events.NOSUBMIT_BUTTON_PRESSED, e.target);\n                if (!event.defaultPrevented) {\n                    this.processNoSubmitButton(e.target);\n                }\n            }\n        });\n\n        this.container.addEventListener('submit', e => {\n            if (e.target.matches('form')) {\n                e.preventDefault();\n                const event = this.trigger(this.events.SUBMIT_BUTTON_PRESSED);\n                if (!event.defaultPrevented) {\n                    this.submitFormAjax();\n                }\n            }\n        });\n    }\n\n    /**\n     * Loads the form via AJAX and shows it inside a given container\n     *\n     * @param {Object} args\n     * @return {Promise}\n     * @public\n     */\n    load(args = null) {\n        const formData = serialize(args || {});\n        const pendingPromise = new Pending('core_form/dynamicform:load');\n        return this.getBody(formData)\n        .then((resp) => this.updateForm(resp))\n        .then(pendingPromise.resolve);\n    }\n\n    /**\n     * Triggers a custom event\n     *\n     * @private\n     * @param {String} eventName\n     * @param {*} detail\n     * @param {Boolean} cancelable\n     * @return {CustomEvent<unknown>}\n     */\n    trigger(eventName, detail = null, cancelable = true) {\n        const e = new CustomEvent(eventName, {detail, cancelable});\n        this.container.dispatchEvent(e);\n        return e;\n    }\n\n    /**\n     * Add listener for an event\n     *\n     * @param {array} args\n     * @example:\n     *    const dynamicForm = new DynamicForm(...);\n     *    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n     *        e.preventDefault();\n     *        window.console.log(e.detail);\n     *        dynamicForm.container.innerHTML = 'Thank you, your form is submitted!';\n     *    });\n     */\n    addEventListener(...args) {\n        this.container.addEventListener(...args);\n    }\n\n    /**\n     * Get form body\n     *\n     * @param {String} formDataString form data in format of a query string\n     * @private\n     * @return {Promise}\n     */\n    getBody(formDataString) {\n        return Ajax.call([{\n            methodname: 'core_form_dynamic_form',\n            args: {\n                formdata: formDataString,\n                form: this.formClass,\n            }\n        }])[0]\n        .then(response => {\n            return {html: response.html, js: Fragment.processCollectedJavascript(response.javascript)};\n        });\n    }\n\n    /**\n     * On form submit\n     *\n     * @param {*} response Response received from the form's \"process\" method\n     */\n    onSubmitSuccess(response) {\n        const event = this.trigger(this.events.FORM_SUBMITTED, response);\n        if (event.defaultPrevented) {\n            return;\n        }\n\n        // Default implementation is to remove the form. Event listener should either remove or reload the form\n        // since its contents is no longer correct. For example, if an element was created as a result of\n        // form submission, the \"id\" in the form would be still zero. Also the server-side validation\n        // errors from the previous submission may still be present.\n        this.container.innerHTML = '';\n    }\n\n    /**\n     * On exception during form processing\n     *\n     * @private\n     * @param {Object} exception\n     */\n    onSubmitError(exception) {\n        const event = this.trigger(this.events.ERROR, exception);\n        if (event.defaultPrevented) {\n            return;\n        }\n\n        Notification.exception(exception);\n    }\n\n    /**\n     * Click on a \"submit\" button that is marked in the form as registerNoSubmitButton()\n     *\n     * @method submitButtonPressed\n     * @param {Element} button that was pressed\n     */\n    processNoSubmitButton(button) {\n        const pendingPromise = new Pending('core_form/dynamicform:nosubmit');\n        const form = this.container.querySelector('form');\n        const formData = new URLSearchParams([...(new FormData(form)).entries()]);\n        formData.append(button.getAttribute('name'), button.getAttribute('value'));\n\n        this.notifyFormSubmitAjax(true)\n        .then(() => {\n            // Add the button name to the form data and submit it.\n            this.disableButtons();\n            return this.getBody(formData.toString());\n        })\n        .then((resp) => this.updateForm(resp))\n        .finally(pendingPromise.resolve)\n        .catch(exception => this.onSubmitError(exception));\n    }\n\n    /**\n     * Wrapper for Event.notifyFormSubmitAjax that waits for the module to load\n     *\n     * We often destroy the form right after calling this function and we need to make sure that it actually\n     * completes before it, or otherwise it will try to work with a form that does not exist.\n     *\n     * @param {Boolean} skipValidation\n     * @return {Promise}\n     */\n    notifyFormSubmitAjax(skipValidation = false) {\n        const form = this.container.querySelector('form');\n        return new Promise(resolve => {\n            Y.use('event', 'moodle-core-event', 'moodle-core-formchangechecker', function() {\n                Event.notifyFormSubmitAjax(form, skipValidation);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Notifies listeners that form dirty state should be reset.\n     *\n     * @return {Promise<unknown>}\n     */\n    notifyResetFormChanges() {\n        const form = this.container.querySelector('form');\n        return new Promise(resolve => {\n            Y.use('event', 'moodle-core-event', 'moodle-core-formchangechecker', () => {\n                Event.notifyFormSubmitAjax(form, true);\n                M.core_formchangechecker.reset_form_dirty_state();\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Click on a \"cancel\" button\n     */\n    processCancelButton() {\n        // Notify listeners that the form is about to be submitted (this will reset atto autosave).\n        this.notifyResetFormChanges()\n        .then(() => {\n            const event = this.trigger(this.events.FORM_CANCELLED);\n            if (!event.defaultPrevented) {\n                // By default removes the form from the DOM.\n                this.container.innerHTML = '';\n            }\n            return null;\n        })\n        .catch(null);\n    }\n\n    /**\n     * Update form contents\n     *\n     * @param {object} param\n     * @param {string} param.html\n     * @param {string} param.js\n     */\n    updateForm({html, js}) {\n        Templates.replaceNodeContents(this.container, html, js);\n    }\n\n    /**\n     * Validate form elements\n     * @return {Promise} promise that returns true if client-side validation has passed, false if there are errors\n     */\n    validateElements() {\n        // Notify listeners that the form is about to be submitted (this will reset atto autosave).\n        return this.notifyFormSubmitAjax()\n        .then(() => {\n            // Now the change events have run, see if there are any \"invalid\" form fields.\n            const invalid = [...this.container.querySelectorAll('[aria-invalid=\"true\"], .error')];\n\n            // If we found invalid fields, focus on the first one and do not submit via ajax.\n            if (invalid.length) {\n                invalid[0].focus();\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * Disable buttons during form submission\n     */\n    disableButtons() {\n        this.container.querySelectorAll('form input[type=\"submit\"]')\n            .forEach(el => el.setAttribute('disabled', true));\n    }\n\n    /**\n     * Enable buttons after form submission (on validation error)\n     */\n    enableButtons() {\n        this.container.querySelectorAll('form input[type=\"submit\"]')\n            .forEach(el => el.removeAttribute('disabled'));\n    }\n\n    /**\n     * Submit the form via AJAX call to the core_form_dynamic_form WS\n     */\n    async submitFormAjax() {\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (!(await this.validateElements())) {\n            this.trigger(this.events.CLIENT_VALIDATION_ERROR, null, false);\n            return;\n        }\n        this.disableButtons();\n\n        // Convert all the form elements values to a serialised string.\n        const form = this.container.querySelector('form');\n        const formData = new URLSearchParams([...(new FormData(form)).entries()]);\n\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'core_form_dynamic_form',\n            args: {\n                formdata: formData.toString(),\n                form: this.formClass\n            }\n        }])[0]\n        .then((response) => {\n            if (!response.submitted) {\n                // Form was not submitted, it could be either because validation failed or because no-submit button was pressed.\n                this.updateForm({html: response.html, js: Fragment.processCollectedJavascript(response.javascript)});\n                this.enableButtons();\n                this.trigger(this.events.SERVER_VALIDATION_ERROR, null, false);\n            } else {\n                // Form was submitted properly.\n                const data = JSON.parse(response.data);\n                this.enableButtons();\n                this.notifyResetFormChanges()\n                .then(() => this.onSubmitSuccess(data))\n                .catch();\n            }\n            return null;\n        })\n        .catch(exception => this.onSubmitError(exception));\n    }\n}\n"],"names":["_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","_arrayLikeToArray","from","_iterableToArray","o","minLen","n","toString","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","_defineProperties","target","props","descriptor","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_ajax","_notification","_templates","_event2","_yui","_fragment","_pending","DynamicForm","container","formClass","_this","instance","Constructor","_classCallCheck","FORM_SUBMITTED","FORM_CANCELLED","CLIENT_VALIDATION_ERROR","SERVER_VALIDATION_ERROR","ERROR","NOSUBMIT_BUTTON_PRESSED","SUBMIT_BUTTON_PRESSED","CANCEL_BUTTON_PRESSED","getStrings","component","Notification","addEventListener","e","matches","preventDefault","trigger","events","defaultPrevented","processCancelButton","processNoSubmitButton","submitFormAjax","protoProps","staticProps","_submitFormAjax","_this2","args","arguments","formData","serialize","pendingPromise","Pending","getBody","resp","updateForm","eventName","CustomEvent","detail","cancelable","dispatchEvent","_this$container","apply","formDataString","Ajax","methodname","formdata","form","response","html","js","Fragment","processCollectedJavascript","javascript","innerHTML","button","_this3","querySelector","URLSearchParams","FormData","entries","append","getAttribute","notifyFormSubmitAjax","disableButtons","finally","onSubmitError","skipValidation","Y","use","Event","M","core_formchangechecker","reset_form_dirty_state","_this4","notifyResetFormChanges","_ref","Templates","replaceNodeContents","_this5","invalid","querySelectorAll","focus","el","setAttribute","removeAttribute","_callee","_this6","_context","validateElements","submitted","data","JSON","parse","enableButtons","onSubmitSuccess","_exports"],"mappings":"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"}