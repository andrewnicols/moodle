{"version":3,"file":"modalform.min.js","sources":["../src/modalform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display a form in a modal dialogue\n *\n * Example:\n *    import ModalForm from 'core_form/modalform';\n *\n *    const modalForm = new ModalForm({\n *        formClass: 'pluginname\\\\form\\\\formname',\n *        modalConfig: {title: 'Here comes the title'},\n *        args: {categoryid: 123},\n *        returnFocus: e.target,\n *    });\n *    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (c) => window.console.log(c.detail));\n *    modalForm.show();\n *\n * See also https://docs.moodle.org/dev/Modal_and_AJAX_forms\n *\n * @module     core_form/modalform\n * @copyright  2018 Mitxel Moriana <mitxel@tresipunt.>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Y from 'core/yui';\nimport Event from 'core/event';\nimport Fragment from 'core/fragment';\nimport Pending from 'core/pending';\nimport {serialize} from './util';\n\nexport default class ModalForm {\n\n    /**\n     * Various events that can be observed.\n     *\n     * @type {Object}\n     */\n    events = {\n        // Form was successfully submitted - the response is passed to the event listener.\n        // Cancellable (but it's hardly ever needed to cancel this event).\n        FORM_SUBMITTED: 'core_form_modalform_formsubmitted',\n        // Cancel button was pressed.\n        // Cancellable (but it's hardly ever needed to cancel this event).\n        FORM_CANCELLED: 'core_form_modalform_formcancelled',\n        // User attempted to submit the form but there was client-side validation error.\n        CLIENT_VALIDATION_ERROR: 'core_form_modalform_clientvalidationerror',\n        // User attempted to submit the form but server returned validation error.\n        SERVER_VALIDATION_ERROR: 'core_form_modalform_validationerror',\n        // Error occurred while performing request to the server.\n        // Cancellable (by default calls Notification.exception).\n        ERROR: 'core_form_modalform_error',\n        // Right after user pressed no-submit button,\n        // listen to this event if you want to add JS validation or processing for no-submit button.\n        // Cancellable.\n        NOSUBMIT_BUTTON_PRESSED: 'core_form_modalform_nosubmitbutton',\n        // Right after user pressed submit button,\n        // listen to this event if you want to add additional JS validation or confirmation dialog.\n        // Cancellable.\n        SUBMIT_BUTTON_PRESSED: 'core_form_modalform_submitbutton',\n        // Right after user pressed cancel button,\n        // listen to this event if you want to add confirmation dialog.\n        // Cancellable.\n        CANCEL_BUTTON_PRESSED: 'core_form_modalform_cancelbutton',\n        // Modal was loaded and this.modal is available (but the form content may not be loaded yet).\n        LOADED: 'core_form_modalform_loaded',\n    };\n\n    /**\n     * Constructor\n     *\n     * Shows the required form inside a modal dialogue\n     *\n     * @param {Object} config parameters for the form and modal dialogue:\n     * @paramy {String} config.formClass PHP class name that handles the form (should extend \\core_form\\modal )\n     * @paramy {Object} config.modalConfig modal config - title, type, etc.\n     *              Default: {removeOnClose: true, type: ModalFactory.types.SAVE_CANCEL}\n     * @paramy {Object} config.args Arguments for the initial form rendering (for example, id of the edited entity)\n     * @paramy {String} config.saveButtonText the text to display on the Modal \"Save\" button (optional)\n     * @paramy {String} config.saveButtonClasses additional CSS classes for the Modal \"Save\" button\n     * @paramy {HTMLElement} config.returnFocus element to return focus to after the dialogue is closed\n     */\n    constructor(config) {\n        this.modal = null;\n        this.config = config;\n        this.config.modalConfig = {\n            removeOnClose: true,\n            type: ModalFactory.types.SAVE_CANCEL,\n            large: true,\n            ...(this.config.modalConfig || {}),\n        };\n        this.config.args = this.config.args || {};\n        this.futureListeners = [];\n    }\n\n    /**\n     * Initialise the modal and shows it\n     *\n     * @return {Promise}\n     */\n    show() {\n        const pendingPromise = new Pending('core_form/modalform:init');\n\n        return ModalFactory.create(this.config.modalConfig)\n        .then((modal) => {\n            this.modal = modal;\n\n            // Retrieve the form and set the modal body. We can not set the body in the modalConfig,\n            // we need to make sure that the modal already exists when we render the form. Some form elements\n            // such as date_selector inspect the existing elements on the page to find the highest z-index.\n            const formParams = serialize(this.config.args || {});\n            const bodyContent = this.getBody(formParams);\n            this.modal.setBodyContent(bodyContent);\n            bodyContent.catch(Notification.exception);\n\n            // After successfull submit, when we press \"Cancel\" or close the dialogue by clicking on X in the top right corner.\n            this.modal.getRoot().on(ModalEvents.hidden, () => {\n                this.notifyResetFormChanges()\n                .then(() => {\n                    this.modal.destroy();\n                    // Focus on the element that actually launched the modal.\n                    if (this.config.returnFocus) {\n                        this.config.returnFocus.focus();\n                    }\n                    return null;\n                })\n                .catch(() => null);\n            });\n\n            // Add the class to the modal dialogue.\n            this.modal.getModal().addClass('modal-form-dialogue');\n\n            // We catch the press on submit buttons in the forms.\n            this.modal.getRoot().on('click', 'form input[type=submit][data-no-submit]',\n                (e) => {\n                    e.preventDefault();\n                    const event = this.trigger(this.events.NOSUBMIT_BUTTON_PRESSED, e.target);\n                    if (!event.defaultPrevented) {\n                        this.processNoSubmitButton(e.target);\n                    }\n                });\n\n            // We catch the form submit event and use it to submit the form with ajax.\n            this.modal.getRoot().on('submit', 'form', (e) => {\n                e.preventDefault();\n                const event = this.trigger(this.events.SUBMIT_BUTTON_PRESSED);\n                if (!event.defaultPrevented) {\n                    this.submitFormAjax();\n                }\n            });\n\n            // Change the text for the save button.\n            if (typeof this.config.saveButtonText !== 'undefined' &&\n                typeof this.modal.setSaveButtonText !== 'undefined') {\n                this.modal.setSaveButtonText(this.config.saveButtonText);\n            }\n            // Set classes for the save button.\n            if (typeof this.config.saveButtonClasses !== 'undefined') {\n                this.setSaveButtonClasses(this.config.saveButtonClasses);\n            }\n            // When Save button is pressed - submit the form.\n            this.modal.getRoot().on(ModalEvents.save, (e) => {\n                e.preventDefault();\n                this.modal.getRoot().find('form').submit();\n            });\n\n            // When Cancel button is pressed - allow to intercept.\n            this.modal.getRoot().on(ModalEvents.cancel, (e) => {\n                const event = this.trigger(this.events.CANCEL_BUTTON_PRESSED);\n                if (event.defaultPrevented) {\n                    e.preventDefault();\n                }\n            });\n            this.futureListeners.forEach(args => this.modal.getRoot()[0].addEventListener(...args));\n            this.futureListeners = [];\n            this.trigger(this.events.LOADED, null, false);\n            return this.modal.show();\n        })\n        .then(pendingPromise.resolve);\n    }\n\n    /**\n     * Triggers a custom event\n     *\n     * @private\n     * @param {String} eventName\n     * @param {*} detail\n     * @param {Boolean} cancelable\n     * @return {CustomEvent<unknown>}\n     */\n    trigger(eventName, detail = null, cancelable = true) {\n        const e = new CustomEvent(eventName, {detail, cancelable});\n        this.modal.getRoot()[0].dispatchEvent(e);\n        return e;\n    }\n\n    /**\n     * Add listener for an event\n     *\n     * @param {array} args\n     * @example:\n     *    const modalForm = new ModalForm(...);\n     *    dynamicForm.addEventListener(modalForm.events.FORM_SUBMITTED, e => {\n     *        window.console.log(e.detail);\n     *    });\n     */\n    addEventListener(...args) {\n        if (!this.modal) {\n            this.futureListeners.push(args);\n        } else {\n            this.modal.getRoot()[0].addEventListener(...args);\n        }\n    }\n\n    /**\n     * Get form contents (to be used in ModalForm.setBodyContent())\n     *\n     * @param {String} formDataString form data in format of a query string\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    getBody(formDataString) {\n        const params = {\n            formdata: formDataString,\n            form: this.config.formClass\n        };\n        const pendingPromise = new Pending('core_form/modalform:form_body');\n        return Ajax.call([{\n            methodname: 'core_form_dynamic_form',\n            args: params\n        }])[0]\n        .then(response => {\n            pendingPromise.resolve();\n            return {html: response.html, js: Fragment.processCollectedJavascript(response.javascript)};\n        });\n    }\n\n    /**\n     * On exception during form processing. Caller may override\n     *\n     * @param {Object} exception\n     */\n    onSubmitError(exception) {\n        const event = this.trigger(this.events.ERROR, exception);\n        if (event.defaultPrevented) {\n            return;\n        }\n\n        Notification.exception(exception);\n    }\n\n    /**\n     * Notifies listeners that form dirty state should be reset.\n     *\n     * @return {Promise<unknown>}\n     */\n    notifyResetFormChanges() {\n        return new Promise(resolve => {\n            Y.use('event', 'moodle-core-event', 'moodle-core-formchangechecker', () => {\n                // Ensure that modal contains a form element (it may not if the form class threw an early exception).\n                const form = this.modal.getRoot().find('form')[0];\n                if (form) {\n                    Event.notifyFormSubmitAjax(form, true);\n                    M.core_formchangechecker.reset_form_dirty_state();\n                }\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Wrapper for Event.notifyFormSubmitAjax that waits for the module to load\n     *\n     * We often destroy the form right after calling this function and we need to make sure that it actually\n     * completes before it, or otherwise it will try to work with a form that does not exist.\n     *\n     * @param {Boolean} skipValidation\n     * @return {Promise}\n     */\n    notifyFormSubmitAjax(skipValidation = false) {\n        return new Promise(resolve => {\n            Y.use('event', 'moodle-core-event', 'moodle-core-formchangechecker', () => {\n                Event.notifyFormSubmitAjax(this.modal.getRoot().find('form')[0], skipValidation);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Click on a \"submit\" button that is marked in the form as registerNoSubmitButton()\n     *\n     * @param {Element} button button that was pressed\n     */\n    processNoSubmitButton(button) {\n        this.notifyFormSubmitAjax(true)\n        .then(() => {\n            // Add the button name to the form data and submit it.\n            let formData = this.modal.getRoot().find('form').serialize();\n            formData = formData + '&' + encodeURIComponent(button.getAttribute('name')) + '=' +\n                encodeURIComponent(button.getAttribute('value'));\n\n            const bodyContent = this.getBody(formData);\n            this.modal.setBodyContent(bodyContent);\n            bodyContent.catch(Notification.exception);\n\n            return null;\n        })\n        .catch(null);\n    }\n\n    /**\n     * Validate form elements\n     * @return {Promise} promise that returns true if client-side validation has passed, false if there are errors\n     */\n    validateElements() {\n        return this.notifyFormSubmitAjax()\n        .then(() => {\n            // Now the change events have run, see if there are any \"invalid\" form fields.\n            /** @var {jQuery} list of elements with errors */\n            const invalid = this.modal.getRoot().find('[aria-invalid=\"true\"], .error');\n\n            // If we found invalid fields, focus on the first one and do not submit via ajax.\n            if (invalid.length) {\n                invalid.first().focus();\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * Disable buttons during form submission\n     */\n    disableButtons() {\n        this.modal.getFooter().find('[data-action]').attr('disabled', true);\n    }\n\n    /**\n     * Enable buttons after form submission (on validation error)\n     */\n    enableButtons() {\n        this.modal.getFooter().find('[data-action]').removeAttr('disabled');\n    }\n\n    /**\n     * Submit the form via AJAX call to the core_form_dynamic_form WS\n     */\n    async submitFormAjax() {\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (!await this.validateElements()) {\n            this.trigger(this.events.CLIENT_VALIDATION_ERROR, null, false);\n            return;\n        }\n        this.disableButtons();\n\n        // Convert all the form elements values to a serialised string.\n        const formData = this.modal.getRoot().find('form').serialize();\n\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'core_form_dynamic_form',\n            args: {\n                formdata: formData,\n                form: this.config.formClass\n            }\n        }])[0]\n        .then((response) => {\n            if (!response.submitted) {\n                // Form was not submitted because validation failed.\n                const promise = new Promise(\n                    resolve => resolve({html: response.html, js: Fragment.processCollectedJavascript(response.javascript)}));\n                this.modal.setBodyContent(promise);\n                this.enableButtons();\n                this.trigger(this.events.SERVER_VALIDATION_ERROR);\n            } else {\n                // Form was submitted properly. Hide the modal and execute callback.\n                const data = JSON.parse(response.data);\n                return this.notifyResetFormChanges()\n                .then(() => {\n                    const event = this.trigger(this.events.FORM_SUBMITTED, data);\n                    if (!event.defaultPrevented) {\n                        this.modal.hide();\n                    }\n                    return null;\n                });\n            }\n            return null;\n        })\n        .catch(exception => this.onSubmitError(exception));\n    }\n\n    /**\n     * Set the classes for the 'save' button.\n     *\n     * @method setSaveButtonClasses\n     * @param {(String)} value The 'save' button classes.\n     */\n    setSaveButtonClasses(value) {\n        const button = this.modal.getFooter().find(\"[data-action='save']\");\n        if (!button) {\n            throw new Error(\"Unable to find the 'save' button\");\n        }\n        button.removeClass().addClass(value);\n    }\n}\n"],"names":["_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","_arrayLikeToArray","from","_iterableToArray","o","minLen","n","toString","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_defineProperties","target","props","descriptor","_toPropertyKey","_defineProperty","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_modal_factory","_modal_events","_ajax","_notification","_yui","_event","_fragment","_pending","ModalForm","config","instance","Constructor","_classCallCheck","FORM_SUBMITTED","FORM_CANCELLED","CLIENT_VALIDATION_ERROR","SERVER_VALIDATION_ERROR","ERROR","NOSUBMIT_BUTTON_PRESSED","SUBMIT_BUTTON_PRESSED","CANCEL_BUTTON_PRESSED","LOADED","modal","modalConfig","arguments","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","removeOnClose","ModalFactory","types","SAVE_CANCEL","large","args","futureListeners","protoProps","staticProps","_submitFormAjax","_this","pendingPromise","Pending","formParams","serialize","bodyContent","getBody","setBodyContent","Notification","getRoot","on","ModalEvents","hidden","notifyResetFormChanges","destroy","returnFocus","focus","getModal","addClass","e","preventDefault","trigger","events","defaultPrevented","processNoSubmitButton","submitFormAjax","saveButtonText","setSaveButtonText","saveButtonClasses","setSaveButtonClasses","save","find","submit","cancel","_this$modal$getRoot$","addEventListener","show","eventName","CustomEvent","detail","cancelable","dispatchEvent","_len","_key","_this$modal$getRoot$2","formDataString","params","formdata","form","formClass","Ajax","methodname","response","html","js","Fragment","processCollectedJavascript","javascript","_this2","Y","use","Event","notifyFormSubmitAjax","M","core_formchangechecker","reset_form_dirty_state","_this3","skipValidation","button","_this4","formData","encodeURIComponent","getAttribute","_this5","invalid","first","getFooter","attr","removeAttr","_callee","_this6","_context","validateElements","disableButtons","submitted","data","JSON","parse","hide","promise","enableButtons","onSubmitError","removeClass","_exports"],"mappings":"4RA4CmC,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA,CAAA,SAAAG,QAAAH,KAAA,OAAAG,QAAA,mBAAAC,QAAAA,iBAAAA,OAAAC,kBAAAL,KAAA,cAAAA,KAAA,SAAAA,KAAAA,OAAAA,KAAAI,mBAAAA,QAAAJ,IAAAM,cAAAF,QAAAJ,MAAAI,OAAAG,UAAA,gBAAAP,GAAAG,EAAAA,QAAAH,IAAA,CAAA,SAAAQ,sBAAAA,oBAAA,WAAAC,OAAAA,OAAAA,EAAAA,IAAAA,QAAAC,GAAAA,GAAAC,OAAAJ,UAAAK,OAAAF,GAAAG,eAAAC,eAAAH,OAAAG,gBAAA,SAAAd,IAAAe,IAAAC,MAAAhB,IAAAe,KAAAC,KAAAC,KAAA,EAAAC,QAAA,mBAAAd,OAAAA,OAAAe,CAAAA,EAAAA,eAAAD,QAAAb,uBAAAe,oBAAAF,QAAAG,eAAA,kBAAAC,kBAAAJ,QAAAK,aAAAC,gBAAAA,SAAAA,OAAAxB,IAAAe,IAAAE,OAAAN,OAAAA,OAAAG,eAAAd,IAAAe,IAAA,CAAAE,MAAAA,MAAAQ,YAAAC,EAAAA,gBAAAC,UAAA,IAAA3B,IAAAe,IAAA,CAAA,IAAAS,OAAAI,CAAAA,EAAAA,GAAAA,CAAAA,MAAAA,KAAAJ,OAAAA,SAAAxB,IAAAe,IAAAE,OAAAjB,OAAAA,IAAAe,KAAAE,KAAAY,EAAAA,SAAAA,KAAAC,QAAAC,QAAAC,KAAAC,iBAAAC,eAAAH,SAAAA,QAAAxB,qBAAA4B,UAAAJ,QAAAI,UAAAC,UAAAzB,OAAA0B,OAAAH,eAAA3B,WAAA+B,QAAAC,IAAAA,QAAAN,aAAA,IAAA,OAAAnB,eAAAsB,UAAA,UAAA,CAAAnB,MAAAuB,iBAAAV,QAAAE,KAAAM,WAAAF,SAAA,CAAA,SAAAK,SAAAC,GAAA1C,IAAA2C,KAAA,IAAA,MAAA,CAAAC,KAAA,SAAAD,IAAAD,GAAAG,KAAA7C,IAAA2C,KAAA,CAAA,MAAAf,KAAA,MAAA,CAAAgB,KAAA,QAAAD,IAAAf,KAAAnB,CAAAA,QAAAoB,KAAAA,KAAA,IAAAiB,iBAAA,CAAA,EAAA,SAAAX,aAAA,SAAAY,oBAAAC,CAAAA,SAAAA,6BAAAC,CAAAA,IAAAA,kBAAAzB,CAAAA,EAAAA,OAAAyB,kBAAA9B,gBAAA,WAAA,OAAA+B,QAAA,IAAAC,SAAAxC,OAAAyC,eAAAC,wBAAAF,UAAAA,SAAAA,SAAAG,aAAAD,yBAAAA,0BAAA3C,IAAAE,OAAAiC,KAAAQ,wBAAAlC,kBAAA8B,kBAAAI,yBAAA,IAAAE,GAAAP,2BAAAzC,UAAA4B,UAAA5B,UAAAI,OAAA0B,OAAAY,mBAAA,SAAAO,sBAAAjD,WAAA,CAAA,OAAA,QAAA,UAAAkD,SAAA,SAAAC,QAAAlC,OAAAjB,UAAAmD,QAAAf,SAAAA,iBAAAgB,QAAAD,OAAAf,IAAA,GAAA,GAAA,CAAA,SAAAiB,cAAAxB,UAAAyB,aAAA,SAAAC,OAAAJ,OAAAf,IAAAoB,QAAAC,QAAA,IAAAC,OAAAxB,SAAAL,UAAAsB,QAAAtB,UAAAO,KAAA,GAAA,UAAAsB,OAAArB,KAAAsB,CAAAA,IAAAA,OAAAD,OAAAtB,IAAA1B,MAAAiD,OAAAjD,MAAA,OAAAA,OAAAd,UAAAA,QAAAc,QAAAL,OAAAiC,KAAA5B,MAAA,WAAA4C,YAAAE,QAAA9C,MAAAkD,SAAAC,eAAAnD,OAAA6C,OAAA,OAAA7C,MAAA8C,QAAAC,WAAApC,SAAAA,KAAAkC,eAAAlC,IAAAmC,QAAAC,WAAAH,YAAAE,QAAA9C,OAAAmD,eAAAC,WAAAH,OAAAjD,MAAAoD,UAAAN,QAAAG,OAAAI,IAAAA,SAAAA,cAAAR,OAAA,QAAAQ,MAAAP,QAAAC,UAAAA,CAAAA,OAAAC,OAAAtB,SAAA4B,gBAAAzD,eAAAoC,KAAA,UAAA,CAAAjC,MAAA,SAAAyC,OAAAf,KAAA,SAAA6B,6BAAA,OAAA,IAAAX,aAAAE,SAAAA,QAAAC,QAAAF,OAAAJ,OAAAf,IAAAoB,QAAAC,OAAAO,GAAAA,CAAAA,OAAAA,gBAAAA,gBAAAA,gBAAAH,KAAAI,2BAAAA,4BAAAA,4BAAA,GAAA,CAAA,SAAAhC,iBAAAV,QAAAE,KAAAM,SAAA,IAAAmC,MAAA,iBAAA,OAAA,SAAAf,OAAAf,KAAA8B,GAAAA,cAAAA,MAAAC,MAAAA,IAAAA,MAAAD,gCAAAA,GAAAA,cAAAA,oBAAAf,OAAA,MAAAf,IAAA,OAAAgC,YAAA,CAAA,IAAArC,QAAAoB,OAAAA,OAAApB,QAAAK,IAAAA,MAAA,CAAA,IAAAiC,SAAAtC,QAAAsC,SAAAA,GAAAA,SAAAC,CAAAA,IAAAA,eAAAC,oBAAAF,SAAAtC,SAAA,GAAAuC,eAAAA,CAAAA,GAAAA,iBAAA/B,iBAAA+B,SAAAA,OAAAA,4BAAAvC,QAAAoB,OAAApB,QAAAyC,KAAAzC,QAAA0C,MAAA1C,QAAAK,SAAA,GAAA,UAAAL,QAAAoB,OAAA,CAAA,GAAA,mBAAAe,MAAAA,MAAAA,MAAAnC,YAAAA,QAAAK,IAAAL,QAAA2C,kBAAA3C,QAAAK,IAAAL,KAAAA,WAAAA,QAAAoB,QAAApB,QAAA4C,OAAA,SAAA5C,QAAAK,KAAA8B,MAAA,YAAA,IAAAR,OAAAxB,SAAAX,QAAAE,KAAAM,SAAA2B,GAAAA,WAAAA,OAAArB,KAAA,CAAA,GAAA6B,MAAAnC,QAAA6C,KAAAlB,YAAAA,iBAAAA,OAAAtB,MAAAG,iCAAA7B,MAAAgD,OAAAtB,IAAAwC,KAAA7C,QAAA6C,KAAAlB,CAAAA,UAAAA,OAAArB,OAAA6B,MAAA,YAAAnC,QAAAoB,OAAApB,QAAAA,QAAAK,IAAAsB,OAAAtB,IAAA,EAAA,CAAA,SAAAmC,oBAAAF,SAAAtC,aAAA8C,WAAA9C,QAAAoB,OAAAA,OAAAkB,SAAAvE,SAAA+E,oBAAAC,IAAA3B,OAAA,OAAApB,QAAAsC,SAAAQ,KAAAA,UAAAA,YAAAR,SAAAvE,SAAAiF,SAAAhD,QAAAoB,OAAA,SAAApB,QAAAK,SAAA0C,EAAAP,oBAAAF,SAAAtC,SAAAA,UAAAA,QAAAoB,SAAA,WAAA0B,aAAA9C,QAAAoB,OAAApB,QAAAA,QAAAK,IAAA4C,IAAAA,8CAAAH,WAAA,aAAAtC,iBAAA,IAAAmB,OAAAxB,SAAAiB,OAAAkB,SAAAvE,SAAAiC,QAAAK,KAAA,GAAA,UAAAsB,OAAArB,KAAAN,OAAAA,QAAAoB,OAAApB,QAAAA,QAAAK,IAAAsB,OAAAtB,IAAAL,QAAAsC,SAAA9B,KAAAA,iBAAA0C,IAAAA,KAAAvB,OAAAtB,IAAA,OAAA6C,KAAAA,KAAAL,MAAA7C,QAAAsC,SAAAa,YAAAD,KAAAvE,MAAAqB,QAAAoD,KAAAd,SAAAe,mBAAArD,QAAAoB,SAAApB,QAAAoB,OAAApB,OAAAA,QAAAK,SAAA0C,GAAA/C,QAAAsC,SAAA,KAAA9B,kBAAA0C,MAAAlD,QAAAoB,OAAApB,QAAAA,QAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,QAAAsC,SAAA9B,KAAAA,iBAAA8C,CAAAA,SAAAA,aAAAC,MAAA,IAAAC,MAAAC,CAAAA,OAAAF,KAAAA,IAAAA,KAAAA,OAAAC,MAAAE,SAAAH,KAAA,IAAA,KAAAA,OAAAC,MAAAG,WAAAJ,QAAAC,MAAAI,SAAAL,KAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,OAAAO,SAAAA,cAAAP,OAAA7B,IAAAA,OAAA6B,MAAAQ,eAAArC,OAAArB,KAAA,gBAAAqB,OAAAtB,IAAAmD,MAAAQ,WAAArC,gBAAA1B,QAAAN,aAAAkE,KAAAA,WAAAJ,CAAAA,CAAAA,gBAAA9D,YAAAwB,QAAAmC,aAAA1C,MAAAA,KAAAqD,OAAAjD,EAAAA,CAAAA,SAAAA,OAAAkD,UAAA,GAAAA,SAAA,CAAA,IAAAC,eAAAD,SAAArF,gBAAAsF,GAAAA,sBAAAA,eAAA5D,KAAA2D,UAAA,GAAA,mBAAAA,SAAAd,YAAAc,SAAA,IAAAE,MAAAF,SAAAG,QAAAC,CAAAA,IAAAA,KAAAlB,KAAA,SAAAA,OAAA,OAAAkB,EAAAJ,SAAAG,QAAA/F,GAAAA,OAAAiC,KAAA2D,SAAAI,GAAA,OAAAlB,KAAAzE,MAAAuF,SAAAI,GAAAlB,KAAAP,MAAA,EAAAO,KAAA,OAAAA,KAAAzE,WAAAoE,EAAAK,KAAAP,QAAAO,MAAA,OAAAA,KAAAA,KAAAA,IAAAA,EAAAA,MAAAA,CAAAA,KAAAf,YAAAA,SAAAA,oBAAA1D,WAAAoE,EAAAF,MAAA,EAAA,CAAA,OAAApC,kBAAAxC,UAAAyC,2BAAAlC,eAAAyC,GAAA,cAAA,CAAAtC,MAAA+B,2BAAAtB,cAAAZ,IAAAA,eAAAkC,2BAAA/B,cAAAA,CAAAA,MAAA8B,kBAAArB,cAAA,IAAAqB,kBAAA8D,YAAArF,OAAAwB,2BAAA1B,uCAAAb,QAAAqG,oBAAAC,SAAAA,YAAAC,KAAA,mBAAAD,QAAAA,OAAAzG,YAAA0G,QAAAA,OAAAA,OAAAjE,0CAAAiE,KAAAH,aAAAG,KAAAC,QAAAxG,QAAAyG,KAAAH,SAAAA,eAAApG,OAAAwG,eAAAxG,OAAAwG,eAAAJ,OAAA/D,6BAAA+D,OAAAK,UAAApE,2BAAAxB,OAAAuF,OAAAzF,kBAAAyF,sBAAAA,OAAAxG,UAAAI,OAAA0B,OAAAkB,IAAAwD,QAAAtG,QAAA4G,MAAA1E,SAAAA,YAAAwB,QAAAxB,IAAA,EAAAa,sBAAAI,cAAArD,WAAAiB,OAAAoC,cAAArD,UAAAa,qBAAA,WAAA,OAAA8B,IAAA,IAAAzC,QAAAmD,cAAAA,cAAAnD,QAAA6G,eAAAxF,QAAAC,QAAAC,KAAAC,YAAA4B,sBAAAA,cAAAA,YAAA0D,SAAAC,IAAAA,KAAA5D,IAAAA,cAAA/B,KAAAC,QAAAC,QAAAC,KAAAC,aAAA4B,aAAApD,OAAAA,QAAAqG,oBAAA/E,SAAAyF,KAAAA,KAAA9B,OAAAtB,MAAAF,SAAAA,eAAAA,OAAAiB,KAAAjB,OAAAjD,MAAAuG,KAAA9B,MAAAlC,GAAAA,EAAAA,sBAAAD,IAAA/B,OAAA+B,GAAAjC,kBAAAE,aAAAA,OAAA+B,GAAApC,0CAAAK,OAAA+B,GAAA,YAAA,WAAA,MAAA,oBAAA,IAAA9C,QAAAgH,KAAAC,SAAAA,KAAAC,IAAAA,OAAAhH,OAAA+G,KAAAD,KAAA,GAAA,IAAA,IAAA1G,OAAA4G,OAAAF,KAAArB,KAAArF,YAAA0G,KAAAG,UAAA,SAAAlC,OAAA,KAAA+B,KAAAd,QAAA5F,CAAAA,IAAAA,IAAA0G,KAAAI,MAAA,GAAA9G,OAAA4G,OAAA,OAAAjC,KAAAzE,MAAAF,IAAA2E,KAAAP,MAAA,EAAAO,IAAA,CAAA,OAAAA,KAAAP,MAAAO,EAAAA,IAAAjF,CAAAA,EAAAA,QAAA6C,OAAAA,OAAAf,QAAAhC,UAAA,CAAAD,YAAAiC,QAAAgE,MAAAA,SAAAuB,eAAAC,GAAAA,KAAAA,KAAArC,EAAAA,KAAAA,KAAAX,EAAAA,KAAAA,UAAAC,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAAlB,KAAAA,KAAAA,OAAAf,OAAAA,KAAAA,SAAA0C,OAAAc,WAAA1C,QAAA4C,gBAAAyB,cAAAb,IAAAA,IAAAA,QAAAA,KAAAA,MAAAA,KAAAe,WAAApH,OAAAiC,KAAAK,KAAA+D,QAAAP,OAAAO,KAAAgB,MAAAhB,MAAAA,KAAAA,WAAA5B,EAAA,EAAA6C,KAAA,WAAAhF,KAAAiC,MAAAgD,EAAAA,IAAAA,WAAAhC,KAAAA,WAAAG,GAAAA,wBAAA6B,WAAAvF,KAAA,MAAAuF,WAAAxF,IAAAyF,OAAAA,KAAAA,MAAAnD,kBAAA,SAAAoD,WAAA,GAAAnF,KAAAiC,KAAA,MAAAkD,UAAA,IAAA/F,QAAAgG,KAAAA,SAAAA,OAAAC,IAAAC,QAAA,OAAAvE,OAAArB,KAAAqB,QAAAA,OAAAtB,IAAA0F,UAAA/F,QAAAoD,KAAA6C,IAAAC,SAAAlG,QAAAoB,cAAApB,QAAAK,SAAA0C,KAAAmD,MAAA5B,CAAAA,IAAAA,IAAAA,EAAAT,KAAAA,WAAAQ,SAAAC,GAAA,IAAAA,EAAA,CAAA,IAAAd,MAAA5C,KAAAiD,WAAAS,GAAA3C,OAAA6B,MAAAQ,WAAA,GAAA,SAAAR,MAAAC,OAAA,OAAAuC,OAAAxC,OAAAA,GAAAA,MAAAC,QAAAgC,KAAAA,UAAAU,SAAA7H,OAAAiC,KAAAiD,MAAA4C,YAAAA,WAAA9H,OAAAiC,KAAAiD,MAAA,cAAA,GAAA2C,UAAAC,WAAA,CAAA,GAAAxF,KAAA6E,KAAAjC,MAAAE,SAAAsC,OAAAA,OAAAxC,MAAAE,UAAA+B,GAAAA,GAAAA,KAAAA,KAAAjC,MAAAG,WAAA,OAAAqC,OAAAxC,MAAAG,iBAAAwC,GAAAA,UAAAV,GAAAA,KAAAA,KAAAjC,MAAAE,SAAA,OAAAsC,OAAAxC,MAAAE,UAAA0C,OAAAA,CAAAA,IAAAA,WAAAhE,MAAAA,IAAAA,wDAAAqD,KAAAjC,MAAAG,WAAA,OAAAqC,OAAAxC,MAAAG,WAAAf,EAAAA,CAAAA,EAAAA,gBAAAtC,KAAAD,KAAAiE,IAAAA,IAAAA,OAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAAd,CAAAA,IAAAA,MAAAK,KAAAA,WAAAS,MAAAd,MAAAC,QAAA7C,KAAA6E,MAAAnH,OAAAiC,KAAAiD,MAAAiC,eAAAA,KAAAA,KAAAjC,MAAAG,WAAA,CAAA,IAAA0C,aAAA7C,MAAA6C,MAAAA,CAAAA,eAAA/F,UAAAA,MAAAA,aAAAA,OAAA+F,aAAA5C,QAAApD,KAAAA,KAAAgG,aAAA1C,aAAA0C,uBAAA1E,OAAA0E,aAAAA,aAAArC,WAAA,CAAA,EAAA,OAAArC,OAAArB,KAAAA,KAAAqB,OAAAtB,IAAAA,IAAAgG,cAAAzF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAiD,aAAA1C,WAAAnD,kBAAA8F,KAAAA,SAAA3E,OAAA,EAAA2E,SAAA,SAAA3E,OAAAiC,UAAA,GAAA,UAAAjC,OAAArB,KAAA,MAAAqB,OAAAtB,IAAAsB,MAAAA,UAAAA,OAAArB,mBAAAqB,OAAArB,KAAAM,KAAAwC,KAAAzB,OAAAtB,IAAAsB,WAAAA,OAAArB,WAAAwF,KAAAlF,KAAAP,IAAAsB,OAAAtB,IAAAe,KAAAA,OAAAgC,SAAAA,KAAAA,KAAAzB,OAAAA,WAAAA,OAAArB,MAAAsD,WAAAhD,KAAAwC,KAAAQ,UAAApD,gBAAA+F,EAAAA,OAAAA,SAAA5C,YAAAW,IAAAA,IAAAA,EAAAT,KAAAA,WAAAQ,SAAAC,GAAA,IAAAA,EAAA,CAAA,IAAAd,MAAA5C,KAAAiD,WAAAS,GAAAd,GAAAA,MAAAG,aAAAA,WAAA,OAAA/C,KAAA0F,SAAA9C,MAAAQ,WAAAR,MAAAI,UAAAG,cAAAP,OAAAhD,gBAAA,CAAA,EAAAgG,MAAA,SAAA/C,QAAA,IAAA,IAAAa,EAAA1D,KAAAiD,WAAAQ,OAAAC,EAAAA,GAAAA,IAAAA,EAAAd,CAAAA,IAAAA,WAAAK,WAAAS,GAAA,GAAAd,MAAAC,SAAAA,OAAA9B,CAAAA,IAAAA,OAAA6B,MAAAQ,WAAA,GAAA,UAAArC,OAAArB,KAAA,CAAA,IAAAmG,OAAA9E,OAAAtB,IAAA0D,cAAAP,MAAA,CAAA,OAAAiD,MAAA,CAAA,CAAA,MAAA,IAAArE,MAAA,wBAAA,EAAAsE,cAAAA,SAAAxC,SAAAf,WAAAE,SAAAf,OAAAA,KAAAA,SAAAvE,CAAAA,SAAAiD,OAAAkD,UAAAf,WAAAA,WAAAE,QAAAA,SAAAjC,SAAAA,KAAAA,SAAAf,KAAAA,SAAA0C,GAAAvC,gBAAA,GAAArC,OAAA,CAAA,SAAAwI,mBAAAC,IAAAnF,QAAAC,OAAAmF,MAAAC,OAAArI,IAAA4B,KAAA,IAAA,IAAA6C,KAAA0D,IAAAnI,KAAA4B,KAAA1B,MAAAuE,KAAAvE,KAAA,CAAA,MAAAqD,OAAAkB,YAAAxB,OAAAM,MAAAkB,CAAAA,KAAAL,KAAApB,QAAA9C,OAAAsG,QAAAxD,QAAA9C,OAAAmD,KAAA+E,MAAAC,OAAA,CAAA,SAAAC,mBAAAC,KAAAC,OAAA,SAAAD,KAAA,GAAAE,MAAAC,QAAAH,KAAA,OAAAI,kBAAAJ,IAAA,CAAAC,CAAAD,MAAA,SAAA9B,MAAA,GAAA,oBAAApH,cAAAoH,KAAApH,OAAAC,WAAA,MAAAmH,KAAA,cAAA,OAAAgC,MAAAG,KAAAnC,KAAA,CAAAoC,CAAAN,MAAA,SAAAO,EAAAC,QAAAD,IAAAA,EAAAA,OAAAA,GAAAH,iBAAAG,EAAAH,OAAAA,kBAAAG,EAAAC,QAAAC,IAAAA,EAAApJ,OAAAJ,UAAAyJ,SAAAnH,KAAAgH,GAAA5B,YAAA,WAAA8B,GAAAF,EAAAvJ,cAAAyJ,EAAAF,EAAAvJ,YAAA2G,MAAA,GAAA,QAAA8C,GAAAP,QAAAO,EAAAP,OAAAA,MAAAG,KAAAE,GAAAE,GAAAE,cAAAF,GAAAE,2CAAAA,KAAAF,GAAAL,OAAAA,kBAAAG,EAAAC,OAAA,CAAAI,CAAAZ,MAAA,qBAAA/D,UAAA,uIAAA,CAAA4E,EAAA,CAAA,SAAAT,kBAAAJ,IAAAc,YAAAA,KAAAA,IAAAd,IAAA3C,UAAAyD,IAAAd,IAAA3C,QAAAC,IAAAA,IAAAA,EAAAyD,EAAAA,SAAAb,MAAAY,KAAAxD,EAAAwD,IAAAxD,IAAAyD,KAAAzD,GAAA0C,IAAA1C,UAAAyD,IAAA,CAAA,SAAAC,QAAA3C,OAAA4C,gBAAA,IAAA9C,KAAA9G,OAAA8G,KAAAE,WAAAhH,OAAA6J,sBAAA,CAAA,IAAAC,QAAA9J,OAAA6J,sBAAA7C,QAAA4C,iBAAAE,QAAAA,QAAAC,QAAAC,SAAAA,KAAAhK,OAAAA,OAAAiK,yBAAAjD,OAAAgD,KAAAlJ,UAAA,KAAAgG,KAAArB,KAAAyE,MAAApD,KAAAgD,QAAA,CAAA,OAAAhD,IAAA,CAAA,SAAAqD,kBAAAC,OAAAC,eAAApE,EAAA,EAAAA,EAAAoE,MAAArE,OAAAC,IAAAqE,CAAAA,IAAAA,WAAAD,MAAApE,GAAAqE,WAAAxJ,WAAAwJ,WAAAxJ,aAAAwJ,EAAAA,WAAAvJ,0BAAAuJ,aAAAA,WAAAtJ,UAAA,GAAAhB,OAAAG,eAAAiK,OAAAG,eAAAD,WAAAlK,KAAAkK,YAAA,CAAA,SAAAE,gBAAAnL,IAAAe,IAAAE,cAAAF,IAAAmK,eAAAnK,QAAAf,IAAAW,OAAAG,eAAAd,IAAAe,IAAA,CAAAE,MAAAA,MAAAQ,YAAA,EAAAC,cAAAC,EAAAA,cAAA3B,IAAAe,KAAAE,MAAAjB,GAAA,CAAA,SAAAkL,eAAAvI,KAAA,IAAA5B,IAAA,SAAAqK,MAAAC,SAAA,WAAAlL,QAAAiL,QAAA,OAAAA,MAAA,OAAAA,MAAAE,IAAAA,KAAAF,MAAAhL,OAAAmL,aAAAD,QAAAjG,IAAAiG,UAAAE,IAAAF,KAAAzI,KAAAuI,MAAAC,MAAA,WAAA,GAAAG,WAAArL,QAAAqL,KAAAA,OAAAA,IAAAjG,MAAAA,IAAAA,UAAA8F,+CAAAA,CAAAA,kBAAAA,KAAAI,OAAAC,QAAAN,MAAA,CAAAO,CAAAhJ,IAAAxC,UAAAA,MAAA,WAAAA,QAAAY,KAAAA,IAAA0K,OAAA1K,IAAA,iFAPnC6K,eAAA7L,uBAAA6L,gBACAC,cAAA9L,uBAAA8L,eACAC,MAAA/L,uBAAA+L,OACAC,cAAAhM,uBAAAgM,eACAC,KAAAjM,uBAAAiM,MACAC,OAAAlM,uBAAAkM,QACAC,UAAAnM,uBAAAmM,WACAC,SAAApM,uBAAAoM,UAAmC,IAGdC,UAAS,WAmD1B,SAAAA,UAAYC,SAtDmB,SAAAC,SAAAC,kBAAAD,oBAAAC,aAAA,MAAA,IAAAhH,UAAA,oCAAA,CAsDXiH,MAAAJ,WAAAjB,gBA5CXjI,KAAA,SAAA,CAGLuJ,eAAgB,oCAGhBC,eAAgB,oCAEhBC,wBAAyB,4CAEzBC,wBAAyB,sCAGzBC,MAAO,4BAIPC,wBAAyB,qCAIzBC,sBAAuB,mCAIvBC,sBAAuB,mCAEvBC,OAAQ,+BAkBR/J,KAAKgK,MAAQ,KACbhK,KAAKmJ,OAASA,OACdnJ,KAAKmJ,OAAOc,YAzDe,SAAApC,QAAA,IAAA,IAAAnE,EAAAA,EAAAA,EAAAwG,UAAAzG,OAAAC,IAAAyG,CAAAA,IAAAA,aAAAD,UAAAxG,GAAAwG,UAAAxG,MAAAA,EAAA,EAAA0D,QAAA3J,OAAA0M,SAAA,GAAA5J,SAAA1C,SAAAA,KAAAoK,gBAAAJ,OAAAhK,IAAAsM,OAAAtM,KAAA,IAAAJ,OAAA2M,0BAAA3M,OAAA4M,iBAAAxC,OAAApK,OAAA2M,0BAAAD,SAAA/C,QAAA3J,OAAA0M,SAAA5J,kBAAA1C,KAAAJ,OAAAG,eAAAiK,OAAAhK,IAAAJ,OAAAiK,yBAAAyC,OAAAtM,gBAAAgK,MAAA,CAyDJyC,CAAA,CACnBC,eAAe,EACf7K,KAAM8K,eAAAA,QAAaC,MAAMC,YACzBC,OAAO,GACH3K,KAAKmJ,OAAOc,aAAe,CAAE,GAErCjK,KAAKmJ,OAAOyB,KAAO5K,KAAKmJ,OAAOyB,MAAQ,GACvC5K,KAAK6K,gBAAkB,EAC3B,CAjE+B,IAAAxB,YAAAyB,WAAAC,YAAAvL,GA4T9BwL,gBA6DA,OAzX8B3B,YAiE9BH,UAjE8B4B,WAiE9B,CAAA,CAAAjN,IAAA,OAAAE,MAOD,WAAO,IAAAkN,MAAAjL,KACGkL,eAAiB,IAAIC,SAAOnO,QAAC,4BAEnC,OAAOwN,eAAYxN,QAACmC,OAAOa,KAAKmJ,OAAOc,aACtC/I,MAAK,SAAC8I,OACHiB,MAAKjB,MAAQA,MAKb,IAAMoB,YAAa,EAAAC,MAAAA,WAAUJ,MAAK9B,OAAOyB,MAAQ,CAAA,GAC3CU,YAAcL,MAAKM,QAAQH,YAiEjC,OAhEAH,MAAKjB,MAAMwB,eAAeF,aAC1BA,YAAY1F,MAAM6F,cAAYzO,QAACmI,WAG/B8F,MAAKjB,MAAM0B,UAAUC,GAAGC,cAAW5O,QAAC6O,QAAQ,WACxCZ,MAAKa,yBACJ5K,MAAK,WAMF,OALA+J,MAAKjB,MAAM+B,UAEPd,MAAK9B,OAAO6C,aACZf,MAAK9B,OAAO6C,YAAYC,QAErB,QAEVrG,OAAM,WAAA,OAAM,OACjB,IAGAqF,MAAKjB,MAAMkC,WAAWC,SAAS,uBAG/BlB,MAAKjB,MAAM0B,UAAUC,GAAG,QAAS,2CAC7B,SAACS,GACGA,EAAEC,iBACYpB,MAAKqB,QAAQrB,MAAKsB,OAAO3C,wBAAyBwC,EAAEvE,QACvD2E,kBACPvB,MAAKwB,sBAAsBL,EAAEvE,OAErC,IAGJoD,MAAKjB,MAAM0B,UAAUC,GAAG,SAAU,QAAQ,SAACS,GACvCA,EAAEC,iBACYpB,MAAKqB,QAAQrB,MAAKsB,OAAO1C,uBAC5B2C,kBACPvB,MAAKyB,gBAEb,SAG0C,IAA/BzB,MAAK9B,OAAOwD,qBACqB,IAAjC1B,MAAKjB,MAAM4C,mBAClB3B,MAAKjB,MAAM4C,kBAAkB3B,MAAK9B,OAAOwD,qBAGA,IAAlC1B,MAAK9B,OAAO0D,mBACnB5B,MAAK6B,qBAAqB7B,MAAK9B,OAAO0D,mBAG1C5B,MAAKjB,MAAM0B,UAAUC,GAAGC,cAAAA,QAAYmB,MAAM,SAACX,GACvCA,EAAEC,iBACFpB,MAAKjB,MAAM0B,UAAUsB,KAAK,QAAQC,QACtC,IAGAhC,MAAKjB,MAAM0B,UAAUC,GAAGC,cAAAA,QAAYsB,QAAQ,SAACd,GAC3BnB,MAAKqB,QAAQrB,MAAKsB,OAAOzC,uBAC7B0C,kBACNJ,EAAEC,gBAEV,IACApB,MAAKJ,gBAAgBtK,SAAQ,SAAAqK,MAAI,IAAAuC,qBAAA,OAAIA,qBAAAlC,MAAKjB,MAAM0B,UAAU,IAAG0B,iBAAgBzF,MAAAwF,qBAAAhH,mBAAIyE,UACjFK,MAAKJ,gBAAkB,GACvBI,MAAKqB,QAAQrB,MAAKsB,OAAOxC,OAAQ,MAAM,GAChCkB,MAAKjB,MAAMqD,MACrB,IACAnM,KAAKgK,eAAerK,QACzB,GAAC,CAAAhD,IAAA,UAAAE,MAWD,SAAQuP,WAA6C,IAC3ClB,EAAI,IAAImB,YAAYD,UAAW,CAACE,OADjBtD,UAAAzG,OAAA,QAAAtB,IAAA+H,UAAA,GAAAA,UAAA,GAAG,KACsBuD,aADNvD,UAAAzG,OAAA,QAAAtB,IAAA+H,UAAA,KAAAA,UAAA,KAGxC,OADAlK,KAAKgK,MAAM0B,UAAU,GAAGgC,cAActB,GAC/BA,CACX,GAAC,CAAAvO,IAAA,mBAAAE,MAYD,WAA0B,IAAA,IAAA4P,KAAAzD,UAAAzG,OAANmH,KAAItE,IAAAA,MAAAqH,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAJhD,KAAIgD,MAAA1D,UAAA0D,MAGb,IAAAC,sBAFF7N,KAAKgK,OAGN6D,sBAAI7N,KAACgK,MAAM0B,UAAU,IAAG0B,iBAAgBzF,MAAAkG,sBAAIjD,MAF5C5K,KAAK6K,gBAAgB3H,KAAK0H,KAIlC,GAAC,CAAA/M,IAAA,UAAAE,MAUD,SAAQ+P,gBACJ,IAAMC,OAAS,CACXC,SAAUF,eACVG,KAAMjO,KAAKmJ,OAAO+E,WAEhBhD,eAAiB,IAAIC,SAAOnO,QAAC,iCACnC,OAAOmR,MAAInR,QAAC2C,KAAK,CAAC,CACdyO,WAAY,yBACZxD,KAAMmD,UACN,GACH7M,MAAK,SAAAmN,UAEF,OADAnD,eAAerK,UACR,CAACyN,KAAMD,SAASC,KAAMC,GAAIC,UAAQxR,QAACyR,2BAA2BJ,SAASK,YAClF,GACJ,GAAC,CAAA7Q,IAAA,gBAAAE,MAOD,SAAcoH,WACInF,KAAKsM,QAAQtM,KAAKuM,OAAO5C,MAAOxE,WACpCqH,kBAIVf,cAAAA,QAAatG,UAAUA,UAC3B,GAAC,CAAAtH,IAAA,yBAAAE,MAOD,WAAyB,IAAA4Q,OAAA3O,KACrB,OAAO,IAAIqE,SAAQ,SAAAxD,SACf+N,KAAC5R,QAAC6R,IAAI,QAAS,oBAAqB,iCAAiC,WAEjE,IAAMZ,KAAOU,OAAK3E,MAAM0B,UAAUsB,KAAK,QAAQ,GAC3CiB,OACAa,OAAAA,QAAMC,qBAAqBd,MAAM,GACjCe,EAAEC,uBAAuBC,0BAE7BrO,SACJ,GACJ,GACJ,GAAC,CAAAhD,IAAA,uBAAAE,MAWD,WAA6C,IAAAoR,OAAAnP,KAAxBoP,eAAclF,UAAAzG,OAAA,QAAAtB,IAAA+H,UAAA,IAAAA,UAAA,GAC/B,OAAO,IAAI7F,SAAQ,SAAAxD,SACf+N,KAAC5R,QAAC6R,IAAI,QAAS,oBAAqB,iCAAiC,WACjEC,OAAAA,QAAMC,qBAAqBI,OAAKnF,MAAM0B,UAAUsB,KAAK,QAAQ,GAAIoC,gBACjEvO,SACJ,GACJ,GACJ,GAAC,CAAAhD,IAAA,wBAAAE,MAOD,SAAsBsR,QAAQ,IAAAC,OAAAtP,KAC1BA,KAAK+O,sBAAqB,GACzB7N,MAAK,WAEF,IAAIqO,SAAWD,OAAKtF,MAAM0B,UAAUsB,KAAK,QAAQ3B,YACjDkE,SAAWA,SAAW,IAAMC,mBAAmBH,OAAOI,aAAa,SAAW,IAC1ED,mBAAmBH,OAAOI,aAAa,UAE3C,IAAMnE,YAAcgE,OAAK/D,QAAQgE,UAIjC,OAHAD,OAAKtF,MAAMwB,eAAeF,aAC1BA,YAAY1F,MAAM6F,cAAYzO,QAACmI,WAExB,IACX,IACCS,MAAM,KACX,GAAC,CAAA/H,IAAA,mBAAAE,MAMD,WAAmB,IAAA2R,OAAA1P,KACf,OAAOA,KAAK+O,uBACX7N,MAAK,WAGF,IAAMyO,QAAUD,OAAK1F,MAAM0B,UAAUsB,KAAK,iCAG1C,OAAI2C,QAAQlM,SACRkM,QAAQC,QAAQ3D,SACT,EAIf,GACJ,GAAC,CAAApO,IAAA,iBAAAE,MAKD,WACIiC,KAAKgK,MAAM6F,YAAY7C,KAAK,iBAAiB8C,KAAK,YAAY,EAClE,GAAC,CAAAjS,IAAA,gBAAAE,MAKD,WACIiC,KAAKgK,MAAM6F,YAAY7C,KAAK,iBAAiB+C,WAAW,WAC5D,GAAC,CAAAlS,IAAA,iBAAAE,OA5T8ByB,GA4T9BlC,sBAAA0G,MAKD,SAAAgM,UAAA,IAAAT,SAAAU,OAAAjQ,KAAA,OAAA1C,sBAAAqB,MAAA,SAAAuR,UAAA,cAAAA,SAAArL,KAAAqL,SAAA1N,MAAA,KAAA,EAAA,OAAA0N,SAAA1N,KAAA,EAEexC,KAAKmQ,mBAAkB,KAAA,EAAA,GAAAD,SAAArO,KAAA,CAAAqO,SAAA1N,KAAA,EAAA,KAAA,CACiC,OAA/DxC,KAAKsM,QAAQtM,KAAKuM,OAAO9C,wBAAyB,MAAM,GAAOyG,SAAAlO,OAAA,UAAA,KAAA,EAGnEhC,KAAKoQ,iBAGCb,SAAWvP,KAAKgK,MAAM0B,UAAUsB,KAAK,QAAQ3B,YAGnD8C,MAAInR,QAAC2C,KAAK,CAAC,CACPyO,WAAY,yBACZxD,KAAM,CACFoD,SAAUuB,SACVtB,KAAMjO,KAAKmJ,OAAO+E,cAEtB,GACHhN,MAAK,SAACmN,UACH,GAAKA,SAASgC,UAOP,CAEH,IAAMC,KAAOC,KAAKC,MAAMnC,SAASiC,MACjC,OAAOL,OAAKnE,yBACX5K,MAAK,WAKF,OAJc+O,OAAK3D,QAAQ2D,OAAK1D,OAAOhD,eAAgB+G,MAC5C9D,kBACPyD,OAAKjG,MAAMyG,OAER,IACX,GACJ,CAhBI,IAAMC,QAAU,IAAIrM,SAChB,SAAAxD,SAAO,OAAIA,QAAQ,CAACyN,KAAMD,SAASC,KAAMC,GAAIC,UAAQxR,QAACyR,2BAA2BJ,SAASK,iBAgBlG,OAfIuB,OAAKjG,MAAMwB,eAAekF,SAC1BT,OAAKU,gBACLV,OAAK3D,QAAQ2D,OAAK1D,OAAO7C,yBAatB,IACX,IACC9D,OAAM,SAAAT,WAAS,OAAI8K,OAAKW,cAAczL,cAAY,KAAA,EAAA,IAAA,MAAA,OAAA+K,SAAAlL,OAAA,GAAAgL,QAAAhQ,KACtD,IA/CAgL,gBA5T8BlM,WAAAA,IAAAA,KAAA8L,KAAAA,KAAAV,UAAA7F,OAAAA,IAAAA,SAAAxD,SAAAA,QAAAC,QAAAkF,IAAAA,IAAAxG,GAAAmI,MAAA7I,KAAA8L,MAAA3E,SAAAA,MAAAlI,OAAAgI,mBAAAC,IAAAnF,QAAAC,OAAAmF,MAAAC,OAAA,OAAAnI,MAAA,CAAA,SAAAmI,OAAAxH,KAAAqH,mBAAAC,IAAAnF,QAAAC,OAAAmF,MAAAC,OAAAxH,QAAAA,KAAAuH,WAAA9D,KAAA,EA2W9B,WAAA,OAAA6I,gBAAArD,MAAA3H,KAAAkK,UAAA,IAAA,CAAArM,IAAA,uBAAAE,MAQD,SAAqBA,OACjB,IAAMsR,OAASrP,KAAKgK,MAAM6F,YAAY7C,KAAK,wBAC3C,IAAKqC,OACD,MAAM,IAAI7N,MAAM,oCAEpB6N,OAAOwB,cAAc1E,SAASpO,MAClC,IAzX+B+M,YAAAlD,kBAAAyB,YAAAhM,UAAAyN,YAAAC,aAAAnD,kBAAAyB,YAAA0B,aAAAtN,OAAAG,eAAAyL,YAAA5K,YAAAA,CAAAA,cAyX9ByK,SAAA,CAtXyB,GAsXzB,OAAA4H,SAAA9T,QAAAkM,UAAA4H,SAAA9T,OAAA"}