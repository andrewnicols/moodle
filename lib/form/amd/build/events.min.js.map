{"version":3,"sources":["../src/events.js"],"names":["changesMadeString","then","string","catch","changesMadeCheck","e","returnValue","types","uploadStarted","uploadCompleted","eventTypes","formSubmittedByJavascript","triggerUploadStarted","elementId","window","addEventListener","customEvent","CustomEvent","bubbles","cancellable","element","document","getElementById","dispatchEvent","triggerUploadCompleted","removeEventListener","notifyFormSubmittedByJavascript","form","skipValidation","fallbackHandled","skipClientValidation","legacyEventsRegistered","Y","use","detail","one","target","fire","M","core","event","FORM_SUBMIT_AJAX","currentTarget","formFieldValidationFailed","legacyEvent","jQuery","Event","trigger","message"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `core_form` subsystem.\n *\n * @module core_form/events\n * @package core_form\n * @copyright 2021 Huong Nguyen <huongnv13@gmail.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since 3.10\n */\n\nimport {get_string as getString} from 'core/str';\nimport {dispatchEvent} from 'core/event_dispatcher';\n\nlet changesMadeString;\ngetString('changesmadereallygoaway', 'moodle').then(string => {\n    changesMadeString = string;\n    return string;\n}).catch();\n\n/**\n * Prevent user navigate away when upload progress still running.\n * @param {Event} e The event\n */\nconst changesMadeCheck = e => {\n    if (e) {\n        e.returnValue = changesMadeString;\n    }\n};\n\n/**\n * List of the events.\n **/\nexport const types = {\n    uploadStarted: 'core_form/uploadStarted',\n    uploadCompleted: 'core_form/uploadCompleted',\n};\n\n/**\n * Events for `core_form`.\n *\n * @constant\n * @property {String} formFieldValidationFailed See {@link event:formFieldValidationFailed}\n * @property {String} formSubmittedByJavascript See {@link event:formSubmittedByJavascript}\n */\nexport const eventTypes = {\n    /**\n     * An event triggered when an mform is about to be submitted via javascript.\n     *\n     * @event formSubmittedByJavascript\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The form that was submitted\n     * @property {Boolean} skipValidation Whether the form was submitted without validation (i.e. via a Cancel button)\n     * @property {Boolean} fallbackHandled Whether the legacy YUI event has been handled\n     */\n    formSubmittedByJavascript: 'core_form/submittedByJavascript',\n};\n\n/**\n * Trigger upload start event.\n *\n * @param {String} elementId\n * @returns {CustomEvent<unknown>}\n */\nexport const triggerUploadStarted = elementId => {\n    // Add an additional check for changes made.\n    window.addEventListener('beforeunload', changesMadeCheck);\n    const customEvent = new CustomEvent(types.uploadStarted, {\n        bubbles: true,\n        cancellable: false\n    });\n    const element = document.getElementById(elementId);\n    element.dispatchEvent(customEvent);\n\n    return customEvent;\n};\n\n/**\n * Trigger upload complete event.\n *\n * @param {String} elementId\n * @returns {CustomEvent<unknown>}\n */\nexport const triggerUploadCompleted = elementId => {\n    // Remove the additional check for changes made.\n    window.removeEventListener('beforeunload', changesMadeCheck);\n    const customEvent = new CustomEvent(types.uploadCompleted, {\n        bubbles: true,\n        cancellable: false\n    });\n    const element = document.getElementById(elementId);\n    element.dispatchEvent(customEvent);\n\n    return CustomEvent;\n};\n\n// These are only imported for legacy.\nimport jQuery from 'jquery';\nimport Y from 'core/yui';\n\n/**\n * Trigger an event to indiciate that a form was submitted by Javascript.\n *\n * @method\n * @param {HTMLElement} form The form that was submitted\n * @param {Boolean} skipValidation Submit the form without validation. E.g. \"Cancel\".\n * @param {Boolean} fallbackHandled The legacy YUI event has been handled\n * @returns {CustomEvent}\n * @fires formSubmittedByJavascript\n */\nexport const notifyFormSubmittedByJavascript = (form, skipValidation = false, fallbackHandled = false) => {\n    if (skipValidation) {\n        window.skipClientValidation = true;\n    }\n\n    const customEvent = dispatchEvent(\n        eventTypes.formSubmittedByJavascript,\n        {\n            skipValidation,\n            fallbackHandled,\n        },\n        form\n    );\n\n    if (skipValidation) {\n        window.skipClientValidation = false;\n    }\n\n    return customEvent;\n};\n\nlet legacyEventsRegistered = false;\nif (!legacyEventsRegistered) {\n    // The following event triggers are legacy and will be removed in the future.\n    // The following approach provides a backwards-compatability layer for the new events.\n    // Code should be updated to make use of native events.\n    Y.use('event', 'moodle-core-event', () => {\n\n        // Watch for the new native formSubmittedByJavascript event, and trigger the legacy YUI event.\n        document.addEventListener(eventTypes.formSubmittedByJavascript, e => {\n            if (e.detail.fallbackHandled) {\n                // This event was originally generated by a YUI event.\n                // Do not generate another as this will recurse.\n                return;\n            }\n\n            if (e.skipValidation) {\n                window.skipClientValidation = true;\n            }\n\n            // Trigger the legacy YUI event.\n            const form = Y.one(e.target);\n            form.fire(\n                M.core.event.FORM_SUBMIT_AJAX,\n                {\n                    currentTarget: form,\n                    fallbackHandled: true,\n                }\n            );\n\n            if (e.skipValidation) {\n                window.skipClientValidation = false;\n            }\n        });\n    });\n\n    // Watch for the new native formFieldValidationFailed event, and trigger the legacy jQuery event.\n    document.addEventListener(eventTypes.formFieldValidationFailed, e => {\n        // Note: The \"core_form-field-validation\" event is hard-coded in core/event.\n        // This is not included to prevent cyclic module dependencies.\n        const legacyEvent = jQuery.Event(\"core_form-field-validation\");\n\n        jQuery(e.target).trigger(legacyEvent, e.detail.message);\n    });\n\n    legacyEventsRegistered = true;\n}\n"],"file":"events.min.js"}