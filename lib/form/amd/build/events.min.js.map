{"version":3,"sources":["../src/events.js"],"names":["eventTypes","formSubmittedByJavascript","formFieldValidationFailed","formError","notifyFormError","field","notifyFormSubmittedByJavascript","form","skipValidation","fallbackHandled","window","skipClientValidation","customEvent","notifyFieldValidationFailure","message","legacyEventsRegistered","Y","use","document","addEventListener","e","element","one","target","formElement","closest","Global","fire","M","core","global","FORM_ERROR","formid","generateID","elementid","detail","event","FORM_SUBMIT_AJAX","currentTarget","legacyEvent","jQuery","Event","trigger"],"mappings":"gRAuCA,OACA,O,mDAbO,GAAMA,CAAAA,CAAU,CAAG,CAEtBC,yBAAyB,CAAE,iCAFL,CAKtBC,yBAAyB,CAAE,iCALL,CAQtBC,SAAS,CAAE,iBARW,CAAnB,C,iCAuBwB,QAAlBC,CAAAA,eAAkB,CAAAC,CAAK,QAAI,oBAAcL,CAAU,CAACE,yBAAzB,CAAoD,EAApD,CAAwDG,CAAxD,CAAJ,C,mCAWW,QAAlCC,CAAAA,+BAAkC,CAACC,CAAD,CAA2D,IAApDC,CAAAA,CAAoD,2DAA5BC,CAA4B,2DACtG,GAAID,CAAJ,CAAoB,CAChBE,MAAM,CAACC,oBAAP,GACH,CAED,GAAMC,CAAAA,CAAW,CAAG,oBAChBZ,CAAU,CAACC,yBADK,CAEhB,CACIO,cAAc,CAAdA,CADJ,CAEIC,eAAe,CAAfA,CAFJ,CAFgB,CAMhBF,CANgB,CAApB,CASA,GAAIC,CAAJ,CAAoB,CAChBE,MAAM,CAACC,oBAAP,GACH,CAED,MAAOC,CAAAA,CACV,C,gCAU2C,QAA/BC,CAAAA,4BAA+B,CAACR,CAAD,CAAQS,CAAR,QAAoB,oBAC5Dd,CAAU,CAACE,yBADiD,CAE5D,CACIY,OAAO,CAAPA,CADJ,CAF4D,CAK5DT,CAL4D,CAApB,C,CAQ5C,GAAIU,CAAAA,CAAsB,GAA1B,CACA,GAAI,CAACA,CAAL,CAA6B,CAIzBC,UAAEC,GAAF,CAAM,OAAN,CAAe,mBAAf,CAAoC,UAAM,CAGtCC,QAAQ,CAACC,gBAAT,CAA0BnB,CAAU,CAACG,SAArC,CAAgD,SAAAiB,CAAC,CAAI,IAC3CC,CAAAA,CAAO,CAAGL,UAAEM,GAAF,CAAMF,CAAC,CAACG,MAAR,CADiC,CAE3CC,CAAW,CAAGR,UAAEM,GAAF,CAAMF,CAAC,CAACG,MAAF,CAASE,OAAT,CAAiB,MAAjB,CAAN,CAF6B,CAIjDT,UAAEU,MAAF,CAASC,IAAT,CACIC,CAAC,CAACC,IAAF,CAAOC,MAAP,CAAcC,UADlB,CAEI,CACIC,MAAM,CAAER,CAAW,CAACS,UAAZ,EADZ,CAEIC,SAAS,CAAEb,CAAO,CAACY,UAAR,EAFf,CAFJ,CAOH,CAXD,EAcAf,QAAQ,CAACC,gBAAT,CAA0BnB,CAAU,CAACC,yBAArC,CAAgE,SAAAmB,CAAC,CAAI,CACjE,GAAIA,CAAC,CAACe,MAAF,CAAS1B,eAAb,CAA8B,CAG1B,MACH,CAED,GAAIW,CAAC,CAACZ,cAAN,CAAsB,CAClBE,MAAM,CAACC,oBAAP,GACH,CAGD,GAAMJ,CAAAA,CAAI,CAAGS,UAAEM,GAAF,CAAMF,CAAC,CAACG,MAAR,CAAb,CACAhB,CAAI,CAACoB,IAAL,CACIC,CAAC,CAACC,IAAF,CAAOO,KAAP,CAAaC,gBADjB,CAEI,CACIC,aAAa,CAAE/B,CADnB,CAEIE,eAAe,GAFnB,CAFJ,EAQA,GAAIW,CAAC,CAACZ,cAAN,CAAsB,CAClBE,MAAM,CAACC,oBAAP,GACH,CACJ,CAxBD,CAyBH,CA1CD,EA6CAO,QAAQ,CAACC,gBAAT,CAA0BnB,CAAU,CAACE,yBAArC,CAAgE,SAAAkB,CAAC,CAAI,CAGjE,GAAMmB,CAAAA,CAAW,CAAGC,UAAOC,KAAP,CAAa,4BAAb,CAApB,CAEA,cAAOrB,CAAC,CAACG,MAAT,EAAiBmB,OAAjB,CAAyBH,CAAzB,CAAsCnB,CAAC,CAACe,MAAF,CAASrB,OAA/C,CACH,CAND,EAQAC,CAAsB,GACzB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Form Events.\n *\n * @module     core_form/events\n * @package    core_form\n * @class      events\n * @copyright  2021 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.11\n */\n\nimport {dispatchEvent} from 'core/local/event/dispatcher';\n\nexport const eventTypes = {\n    // This event is triggered when an mform is about to be submitted via javascript.\n    formSubmittedByJavascript: 'core_form/submittedByJavascript',\n\n    // This event is triggered when a form field failed validation.\n    formFieldValidationFailed: 'core_form/fieldValidationFailed',\n\n    // This event is triggered when a form has an error.\n    formError: 'core_form/error',\n};\n\n// These are only imported for legacy.\nimport jQuery from 'jquery';\nimport Y from 'core/yui';\n\n/**\n * Trigger an event to indicate that a form field contained an error.\n *\n * @method notifyFieldValidationFailure\n * @param {DOMElement} field\n * @param {String} message\n * @returns {CustomEvent}\n */\nexport const notifyFormError = field => dispatchEvent(eventTypes.formFieldValidationFailed, {}, field);\n\n/**\n * Trigger an event to indiciate that a form was submitted by Javascript.\n *\n * @method notifyFormSubmitAjax\n * @param {DOMElement} form\n * @param {boolean} skipValidation Submit the form without validation. E.g. \"Cancel\".\n * @param {boolean} fallbackHandled The legacy YUI event has been handled\n * @returns {CustomEvent}\n */\nexport const notifyFormSubmittedByJavascript = (form, skipValidation = false, fallbackHandled = false) => {\n    if (skipValidation) {\n        window.skipClientValidation = true;\n    }\n\n    const customEvent = dispatchEvent(\n        eventTypes.formSubmittedByJavascript,\n        {\n            skipValidation,\n            fallbackHandled,\n        },\n        form\n    );\n\n    if (skipValidation) {\n        window.skipClientValidation = false;\n    }\n\n    return customEvent;\n};\n\n/**\n * Trigger an event to indicate that a form field contained an error.\n *\n * @method notifyFieldValidationFailure\n * @param {DOMElement} field\n * @param {String} message\n * @returns {CustomEvent}\n */\nexport const notifyFieldValidationFailure = (field, message) => dispatchEvent(\n    eventTypes.formFieldValidationFailed,\n    {\n        message,\n    },\n    field\n);\n\nlet legacyEventsRegistered = false;\nif (!legacyEventsRegistered) {\n    // The following event triggers are legacy and will be removed in the future.\n    // The following approach provides a backwards-compatability layer for the new events.\n    // Code should be updated to make use of native events.\n    Y.use('event', 'moodle-core-event', () => {\n\n        // Watch for the new native formError event, and trigger the legacy YUI event.\n        document.addEventListener(eventTypes.formError, e => {\n            const element = Y.one(e.target);\n            const formElement = Y.one(e.target.closest('form'));\n\n            Y.Global.fire(\n                M.core.global.FORM_ERROR,\n                {\n                    formid: formElement.generateID(),\n                    elementid: element.generateID(),\n                }\n            );\n        });\n\n        // Watch for the new native formSubmittedByJavascript event, and trigger the legacy YUI event.\n        document.addEventListener(eventTypes.formSubmittedByJavascript, e => {\n            if (e.detail.fallbackHandled) {\n                // This event was originally generated by a YUI event.\n                // Do not generate another as this will recurse.\n                return;\n            }\n\n            if (e.skipValidation) {\n                window.skipClientValidation = true;\n            }\n\n            // Trigger the legacy YUI event.\n            const form = Y.one(e.target);\n            form.fire(\n                M.core.event.FORM_SUBMIT_AJAX,\n                {\n                    currentTarget: form,\n                    fallbackHandled: true,\n                }\n            );\n\n            if (e.skipValidation) {\n                window.skipClientValidation = false;\n            }\n        });\n    });\n\n    // Watch for the new native formFieldValidationFailed event, and trigger the legacy jQuery event.\n    document.addEventListener(eventTypes.formFieldValidationFailed, e => {\n        // Note: The \"core_form-field-validation\" event is hard-coded in core/event.\n        // This is not included to prevent cyclic module dependencies.\n        const legacyEvent = jQuery.Event(\"core_form-field-validation\");\n\n        jQuery(e.target).trigger(legacyEvent, e.detail.message);\n    });\n\n    legacyEventsRegistered = true;\n}\n"],"file":"events.min.js"}