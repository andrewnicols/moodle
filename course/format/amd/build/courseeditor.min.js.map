{"version":3,"sources":["../src/courseeditor.js"],"names":["courseEditorMap","Map","dispatchStateChangedEvent","detail","target","document","dispatchEvent","CustomEvent","events","stateChanged","bubbles","courseId","setup","editor","getCourseEditor","setViewFormat","parseInt","has","set","CourseEditor","name","eventName","eventDispatch","mutations","DefaultMutations","get","loadCourse","M","cfg"],"mappings":"+XAuBA,8CACA,oDACA,wC,kFAGA,KAAMA,CAAAA,eAAe,CAAG,GAAIC,CAAAA,GAA5B,CAYA,QAASC,CAAAA,yBAAT,CAAmCC,MAAnC,CAA2CC,MAA3C,CAAmD,CAC/C,GAAIA,MAAM,SAAV,CAA0B,CACtBA,MAAM,CAAGC,QACZ,CACDD,MAAM,CAACE,aAAP,CAAqB,GAAIC,CAAAA,WAAJ,CAAgBC,gBAAOC,YAAvB,CAAqC,CACtDC,OAAO,GAD+C,CAEtDP,MAAM,CAAEA,MAF8C,CAArC,CAArB,CAIH,C,uBAU4B,CAACQ,QAAD,CAAWC,KAAX,GAAqB,CAC9C,KAAMC,CAAAA,MAAM,CAAGC,eAAe,CAACH,QAAD,CAA9B,CACAE,MAAM,CAACE,aAAP,CAAqBH,KAArB,CACH,C,CAQM,KAAME,CAAAA,eAAe,CAAIH,QAAD,EAAc,CACzCA,QAAQ,CAAGK,QAAQ,CAACL,QAAD,CAAnB,CAEA,GAAI,CAACX,eAAe,CAACiB,GAAhB,CAAoBN,QAApB,CAAL,CAAoC,CAChCX,eAAe,CAACkB,GAAhB,CACIP,QADJ,CAEI,GAAIQ,sBAAJ,CAAiB,CACbC,IAAI,uBAAiBT,QAAjB,CADS,CAEbU,SAAS,CAAEb,gBAAOC,YAFL,CAGba,aAAa,CAAEpB,yBAHF,CAMbqB,SAAS,CAAE,GAAIC,mBANF,CAAjB,CAFJ,EAWAxB,eAAe,CAACyB,GAAhB,CAAoBd,QAApB,EAA8Be,UAA9B,CAAyCf,QAAzC,CACH,CACD,MAAOX,CAAAA,eAAe,CAACyB,GAAhB,CAAoBd,QAApB,CACV,CAlBM,C,yEAyB+B,IAAMG,eAAe,CAACa,CAAC,CAACC,GAAF,CAAMjB,QAAP,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generic reactive module used in the course editor.\n *\n * @module     core_courseformat/courseeditor\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DefaultMutations from 'core_courseformat/local/courseeditor/mutations';\nimport CourseEditor from 'core_courseformat/local/courseeditor/courseeditor';\nimport events from 'core_course/events';\n\n// A map with all the course editor instances.\nconst courseEditorMap = new Map();\n\n/**\n * Trigger a state changed event.\n *\n * This function will be moved to core_course/events module\n * when the file is migrated to the new JS events structure proposed in MDL-70990.\n *\n * @method dispatchStateChangedEvent\n * @param {object} detail the full state\n * @param {object} target the custom event target (document if none provided)\n */\nfunction dispatchStateChangedEvent(detail, target) {\n    if (target === undefined) {\n        target = document;\n    }\n    target.dispatchEvent(new CustomEvent(events.stateChanged, {\n        bubbles: true,\n        detail: detail,\n    }));\n}\n\n/**\n * Setup the current view settings\n *\n * @param {number} courseId the course id\n * @param {setup} setup format, page and course settings\n * @param {boolean} setup.editing if the page is in edit mode\n * @param {boolean} setup.supportscomponents if the format supports components for content\n */\nexport const setViewFormat = (courseId, setup) => {\n    const editor = getCourseEditor(courseId);\n    editor.setViewFormat(setup);\n};\n\n/**\n * Get a specific course editor reactive instance.\n *\n * @param {number} courseId the course id\n * @returns {CourseEditor}\n */\nexport const getCourseEditor = (courseId) => {\n    courseId = parseInt(courseId);\n\n    if (!courseEditorMap.has(courseId)) {\n        courseEditorMap.set(\n            courseId,\n            new CourseEditor({\n                name: `CourseEditor${courseId}`,\n                eventName: events.stateChanged,\n                eventDispatch: dispatchStateChangedEvent,\n                // Mutations can be overridden by the format plugin using setMutations\n                // but we need the default one at least.\n                mutations: new DefaultMutations(),\n            })\n        );\n        courseEditorMap.get(courseId).loadCourse(courseId);\n    }\n    return courseEditorMap.get(courseId);\n};\n\n/**\n * Get the current course reactive instance.\n *\n * @returns {CourseEditor}\n */\nexport const getCurrentCourseEditor = () => getCourseEditor(M.cfg.courseId);\n"],"file":"courseeditor.min.js"}