{"version":3,"file":"section.min.js","sources":["../../../src/local/courseindex/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index section component.\n *\n * This component is used to control specific course section interactions like drag and drop.\n *\n * @module     core_courseformat/local/courseindex/section\n * @class      core_courseformat/local/courseindex/section\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport SectionTitle from 'core_courseformat/local/courseindex/sectiontitle';\nimport DndSection from 'core_courseformat/local/courseeditor/dndsection';\n\nexport default class Component extends DndSection {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'courseindex_section';\n        // Default query selectors.\n        this.selectors = {\n            SECTION_ITEM: `[data-for='section_item']`,\n            SECTION_TITLE: `[data-for='section_title']`,\n            CM_LAST: `[data-for=\"cm\"]:last-child`,\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            SECTIONHIDDEN: 'dimmed',\n            SECTIONCURRENT: 'current',\n            LOCKED: 'editinprogress',\n            RESTRICTIONS: 'restrictions',\n            PAGEITEM: 'pageitem',\n            OVERLAYBORDERS: 'overlay-preview-borders',\n        };\n\n        // We need our id to watch specific events.\n        this.id = this.element.dataset.id;\n        this.isPageItem = false;\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new this({\n            element: document.getElementById(target),\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the initial state\n     */\n    stateReady(state) {\n        this.configState(state);\n        const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\n            // Init the inner dragable element passing the full section as affected region.\n            const titleitem = new SectionTitle({\n                ...this,\n                element: sectionItem,\n                fullregion: this.element,\n            });\n            this.configDragDrop(titleitem);\n        }\n        // Check if the current url is the section url.\n        const section = state.section.get(this.id);\n        if (window.location.href == section.sectionurl.replace(/&amp;/g, \"&\")) {\n            this.reactive.dispatch('setPageItem', 'section', this.id);\n            sectionItem.scrollIntoView();\n        }\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `section[${this.id}]:deleted`, handler: this.remove},\n            {watch: `section[${this.id}]:updated`, handler: this._refreshSection},\n            {watch: `course.pageItem:updated`, handler: this._refreshPageItem},\n        ];\n    }\n\n    /**\n     * Get the last CM element of that section.\n     *\n     * @returns {element|null}\n     */\n    getLastCm() {\n        return this.getElement(this.selectors.CM_LAST);\n    }\n\n    /**\n     * Update a course index section using the state information.\n     *\n     * @param {Object} param details the update details.\n     * @param {Object} param.element the section element\n     */\n    _refreshSection({element}) {\n        // Update classes.\n        const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n        sectionItem.classList.toggle(this.classes.SECTIONHIDDEN, !element.visible);\n        sectionItem.classList.toggle(this.classes.RESTRICTIONS, element.hasrestrictions ?? false);\n        this.element.classList.toggle(this.classes.SECTIONCURRENT, element.current);\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\n        this.locked = element.locked;\n        // Update title.\n        this.getElement(this.selectors.SECTION_TITLE).innerHTML = element.title;\n    }\n\n    /**\n     * Handle a page item update.\n     *\n     * @param {Object} details the update details\n     * @param {Object} details.state the state data.\n     * @param {Object} details.element the course state data.\n     */\n    _refreshPageItem({element, state}) {\n        if (!element.pageItem) {\n            return;\n        }\n        if (element.pageItem.sectionId !== this.id && this.isPageItem) {\n            this.pageItem = false;\n            this.getElement(this.selectors.SECTION_ITEM).classList.remove(this.classes.PAGEITEM);\n            return;\n        }\n        const section = state.section.get(this.id);\n        if (section.indexcollapsed && !element.pageItem?.isStatic) {\n            this.pageItem = (element.pageItem?.sectionId == this.id);\n        } else {\n            this.pageItem = (element.pageItem.type == 'section' && element.pageItem.id == this.id);\n        }\n        const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n        sectionItem.classList.toggle(this.classes.PAGEITEM, this.pageItem ?? false);\n        if (this.pageItem && !this.reactive.isEditing) {\n            this.element.scrollIntoView({block: \"nearest\"});\n        }\n    }\n\n    /**\n     * Overridden version of the component addOverlay async method.\n     *\n     * The course index is not compatible with overlay elements.\n     */\n    async addOverlay() {\n        this.element.classList.add(this.classes.OVERLAYBORDERS);\n    }\n\n    /**\n     * Overridden version of the component removeOverlay.\n     *\n     * The course index is not compatible with overlay elements.\n     */\n    removeOverlay() {\n        this.element.classList.remove(this.classes.OVERLAYBORDERS);\n    }\n}\n"],"names":["_sectiontitle","_interopRequireDefault","_dndsection","Component","DndSection","create","name","this","selectors","SECTION_ITEM","SECTION_TITLE","CM_LAST","classes","SECTIONHIDDEN","SECTIONCURRENT","LOCKED","RESTRICTIONS","PAGEITEM","OVERLAYBORDERS","id","element","dataset","isPageItem","static","target","document","getElementById","stateReady","state","configState","sectionItem","getElement","reactive","isEditing","supportComponents","titleitem","SectionTitle","fullregion","configDragDrop","section","get","window","location","href","sectionurl","replace","dispatch","scrollIntoView","getWatchers","watch","concat","handler","remove","_refreshSection","_refreshPageItem","getLastCm","_ref","_element$hasrestricti","_element$dragging","_element$locked","classList","toggle","visible","hasrestrictions","current","DRAGGING","dragging","locked","innerHTML","title","_ref2","_element$pageItem","_this$pageItem","pageItem","sectionId","_element$pageItem2","indexcollapsed","isStatic","type","block","async","add","removeOverlay"],"mappings":"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"}