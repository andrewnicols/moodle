{"version":3,"sources":["../../../src/local/content/actions.js"],"names":["BaseComponent","create","name","selectors","ACTIONLINK","SECTIONLINK","CMLINK","SECTIONNODE","MODALTOGGLER","ADDSECTION","CONTENTTREE","ACTIONMENU","ACTIONMENUTOGGLER","classes","DISABLED","stateReady","state","addEventListener","element","_dispatchClick","_checkSectionlist","CourseEvents","sectionRefreshed","getWatchers","watch","handler","event","target","closest","classList","contains","preventDefault","methodName","_actionMethodName","dataset","action","requestName","charAt","toUpperCase","slice","_setAddSectionLocked","course","sectionlist","length","maxsections","_requestMoveSection","sectionId","id","sectionInfo","reactive","get","editTools","_getClosestActionMenuToogler","exporter","getExporter","data","sectionid","sectiontitle","title","modalParams","body","Templates","render","modal","_modalBodyRenderedPromise","modalBody","getBody","currentElement","querySelector","_disableLink","generalSection","ContentTree","SECTION","TOGGLER","COLLAPSE","matches","for","getAttribute","dispatch","_destroyModal","_requestMoveCm","cmId","cmInfo","cmid","cmname","ENTER","sectionnode","toggler","find","collapsibleId","attr","replace","collapse","targetSectionId","targetCmId","dropData","cmDraggableData","nextcmid","section","cmlist","_requestAddSection","_requestDeleteSection","cmList","hassummary","rawtitle","saveButtonText","type","ModalFactory","types","SAVE_CANCEL","getRoot","on","ModalEvents","save","e","destroy","locked","targets","getElements","forEach","toggle","setElementLocked","style","pointerEvents","userSelect","add","setAttribute","Promise","resolve","reject","then","setRemoveOnClose","bodyRendered","setSaveButtonText","show","catch","hide","pendingDestroy","Pending","focus","setTimeout","actionMenu"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course state actions dispatcher.\n *\n * This module captures all data-dispatch links in the course content and dispatch the proper\n * state mutation, including any confirmation and modal required.\n *\n * @module     core_courseformat/local/content/actions\n * @class      core_courseformat/local/content/actions\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {getList} from 'core/normalise';\nimport * as CourseEvents from 'core_course/events';\nimport Pending from 'core/pending';\nimport ContentTree from 'core_courseformat/local/courseeditor/contenttree';\n// The jQuery module is only used for interacting with Boostrap 4. It can we removed when MDL-79179 is integrated.\nimport jQuery from 'jquery';\n\n// Load global strings.\nprefetchStrings('core', ['movecoursesection', 'movecoursemodule', 'confirm', 'delete']);\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'content_actions';\n        // Default query selectors.\n        this.selectors = {\n            ACTIONLINK: `[data-action]`,\n            // Move modal selectors.\n            SECTIONLINK: `[data-for='section']`,\n            CMLINK: `[data-for='cm']`,\n            SECTIONNODE: `[data-for='sectionnode']`,\n            MODALTOGGLER: `[data-toggle='collapse']`,\n            ADDSECTION: `[data-action='addSection']`,\n            CONTENTTREE: `#destination-selector`,\n            ACTIONMENU: `.action-menu`,\n            ACTIONMENUTOGGLER: `[data-toggle=\"dropdown\"]`,\n        };\n        // Component css classes.\n        this.classes = {\n            DISABLED: `disabled`,\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data.\n     *\n     */\n    stateReady(state) {\n        // Delegate dispatch clicks.\n        this.addEventListener(\n            this.element,\n            'click',\n            this._dispatchClick\n        );\n        // Check section limit.\n        this._checkSectionlist({state});\n        // Add an Event listener to recalculate limits it if a section HTML is altered.\n        this.addEventListener(\n            this.element,\n            CourseEvents.sectionRefreshed,\n            () => this._checkSectionlist({state})\n        );\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            // Check section limit.\n            {watch: `course.sectionlist:updated`, handler: this._checkSectionlist},\n        ];\n    }\n\n    _dispatchClick(event) {\n        const target = event.target.closest(this.selectors.ACTIONLINK);\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(this.classes.DISABLED)) {\n            event.preventDefault();\n            return;\n        }\n\n        // Invoke proper method.\n        const methodName = this._actionMethodName(target.dataset.action);\n\n        if (this[methodName] !== undefined) {\n            this[methodName](target, event);\n        }\n    }\n\n    _actionMethodName(name) {\n        const requestName = name.charAt(0).toUpperCase() + name.slice(1);\n        return `_request${requestName}`;\n    }\n\n    /**\n     * Check the section list and disable some options if needed.\n     *\n     * @param {Object} detail the update details.\n     * @param {Object} detail.state the state object.\n     */\n    _checkSectionlist({state}) {\n        // Disable \"add section\" actions if the course max sections has been exceeded.\n        this._setAddSectionLocked(state.course.sectionlist.length > state.course.maxsections);\n    }\n\n    /**\n     * Handle a move section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        // The section edit menu to refocus on end.\n        const editTools = this._getClosestActionMenuToogler(target);\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target section id and title.\n        data.sectionid = sectionInfo.id;\n        data.sectiontitle = sectionInfo.title;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursesection', 'core'),\n            body: Templates.render('core_courseformat/local/content/movesection', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element and section zero.\n        const currentElement = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-id='${sectionId}']`);\n        this._disableLink(currentElement);\n        const generalSection = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-number='0']`);\n        this._disableLink(generalSection);\n\n        // Setup keyboard navigation.\n        new ContentTree(\n            modalBody.querySelector(this.selectors.CONTENTTREE),\n            {\n                SECTION: this.selectors.SECTIONNODE,\n                TOGGLER: this.selectors.MODALTOGGLER,\n                COLLAPSE: this.selectors.MODALTOGGLER,\n            },\n            true\n        );\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for != 'section' || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n            this.reactive.dispatch('sectionMove', [sectionId], target.dataset.id);\n            this._destroyModal(modal, editTools);\n        });\n    }\n\n    /**\n     * Handle a move cm request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveCm(target, event) {\n        // Check we have an id.\n        const cmId = target.dataset.id;\n        if (!cmId) {\n            return;\n        }\n        const cmInfo = this.reactive.get('cm', cmId);\n\n        event.preventDefault();\n\n        // The section edit menu to refocus on end.\n        const editTools = this._getClosestActionMenuToogler(target);\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target cm info.\n        data.cmid = cmInfo.id;\n        data.cmname = cmInfo.name;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursemodule', 'core'),\n            body: Templates.render('core_courseformat/local/content/movecm', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element.\n        let currentElement = modalBody.querySelector(`${this.selectors.CMLINK}[data-id='${cmId}']`);\n        this._disableLink(currentElement);\n\n        // Setup keyboard navigation.\n        new ContentTree(\n            modalBody.querySelector(this.selectors.CONTENTTREE),\n            {\n                SECTION: this.selectors.SECTIONNODE,\n                TOGGLER: this.selectors.MODALTOGGLER,\n                COLLAPSE: this.selectors.MODALTOGGLER,\n                ENTER: this.selectors.SECTIONLINK,\n            }\n        );\n\n        // Open the cm section node if possible (Bootstrap 4 uses jQuery to interact with collapsibles).\n        // All jQuery int this code can be replaced when MDL-79179 is integrated.\n        const sectionnode = currentElement.closest(this.selectors.SECTIONNODE);\n        const toggler = jQuery(sectionnode).find(this.selectors.MODALTOGGLER);\n        let collapsibleId = toggler.data('target') ?? toggler.attr('href');\n        if (collapsibleId) {\n            // We cannot be sure we have # in the id element name.\n            collapsibleId = collapsibleId.replace('#', '');\n            jQuery(`#${collapsibleId}`).collapse('toggle');\n        }\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for === undefined || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n\n            // Get draggable data from cm or section to dispatch.\n            let targetSectionId;\n            let targetCmId;\n            if (target.dataset.for == 'cm') {\n                const dropData = exporter.cmDraggableData(this.reactive.state, target.dataset.id);\n                targetSectionId = dropData.sectionid;\n                targetCmId = dropData.nextcmid;\n            } else {\n                const section = this.reactive.get('section', target.dataset.id);\n                targetSectionId = target.dataset.id;\n                targetCmId = section?.cmlist[0];\n            }\n\n            this.reactive.dispatch('cmMove', [cmId], targetSectionId, targetCmId);\n            this._destroyModal(modal, editTools);\n        });\n    }\n\n    /**\n     * Handle a create section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestAddSection(target, event) {\n        event.preventDefault();\n        this.reactive.dispatch('addSection', target.dataset.id ?? 0);\n    }\n\n    /**\n     * Handle a delete section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestDeleteSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        const cmList = sectionInfo.cmlist ?? [];\n        if (cmList.length || sectionInfo.hassummary || sectionInfo.rawtitle) {\n            // We need confirmation if the section has something.\n            const modalParams = {\n                title: getString('confirm', 'core'),\n                body: getString('confirmdeletesection', 'moodle', sectionInfo.title),\n                saveButtonText: getString('delete', 'core'),\n                type: ModalFactory.types.SAVE_CANCEL,\n            };\n\n            const modal = await this._modalBodyRenderedPromise(modalParams);\n\n            modal.getRoot().on(\n                ModalEvents.save,\n                e => {\n                    // Stop the default save button behaviour which is to close the modal.\n                    e.preventDefault();\n                    modal.destroy();\n                    this.reactive.dispatch('sectionDelete', [sectionId]);\n                }\n            );\n            return;\n        } else {\n            // We don't need confirmation to delete empty sections.\n            this.reactive.dispatch('sectionDelete', [sectionId]);\n        }\n    }\n\n    /**\n     * Disable all add sections actions.\n     *\n     * @param {boolean} locked the new locked value.\n     */\n    _setAddSectionLocked(locked) {\n        const targets = this.getElements(this.selectors.ADDSECTION);\n        targets.forEach(element => {\n            element.classList.toggle(this.classes.DISABLED, locked);\n            this.setElementLocked(element, locked);\n        });\n    }\n\n    /**\n     * Replace an element with a copy with a different tag name.\n     *\n     * @param {Element} element the original element\n     */\n    _disableLink(element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.classList.add(this.classes.DISABLED);\n            element.setAttribute('aria-disabled', true);\n            element.addEventListener('click', event => event.preventDefault());\n        }\n    }\n\n    /**\n     * Render a modal and return a body ready promise.\n     *\n     * @param {object} modalParams the modal params\n     * @return {Promise} the modal body ready promise\n     */\n    _modalBodyRenderedPromise(modalParams) {\n        return new Promise((resolve, reject) => {\n            ModalFactory.create(modalParams).then((modal) => {\n                modal.setRemoveOnClose(true);\n                // Handle body loading event.\n                modal.getRoot().on(ModalEvents.bodyRendered, () => {\n                    resolve(modal);\n                });\n                // Configure some extra modal params.\n                if (modalParams.saveButtonText !== undefined) {\n                    modal.setSaveButtonText(modalParams.saveButtonText);\n                }\n                modal.show();\n                return;\n            }).catch(() => {\n                reject(`Cannot load modal content`);\n            });\n        });\n    }\n\n    /**\n     * Hide and later destroy a modal.\n     *\n     * Behat will fail if we remove the modal while some boostrap collapse is executing.\n     *\n     * @param {Modal} modal\n     * @param {HTMLElement} element the dom element to focus on.\n     */\n    _destroyModal(modal, element) {\n        modal.hide();\n        const pendingDestroy = new Pending(`courseformat/actions:destroyModal`);\n        if (element) {\n            element.focus();\n        }\n        setTimeout(() =>{\n            modal.destroy();\n            pendingDestroy.resolve();\n        }, 500);\n    }\n\n    /**\n     * Get the closest actions menu toggler to an action element.\n     *\n     * @param {HTMLElement} element the action link element\n     * @returns {HTMLElement|undefined}\n     */\n    _getClosestActionMenuToogler(element) {\n        const actionMenu = element.closest(this.selectors.ACTIONMENU);\n        if (!actionMenu) {\n            return undefined;\n        }\n        return actionMenu.querySelector(this.selectors.ACTIONMENUTOGGLER);\n    }\n}\n"],"file":"actions.min.js"}