{"version":3,"file":"exporter.min.js","sources":["../../../src/local/courseeditor/exporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to export parts of the state and transform them to be used in templates\n * and as draggable data.\n *\n * @module     core_courseformat/local/courseeditor/exporter\n * @class      core_courseformat/local/courseeditor/exporter\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class {\n\n    /**\n     * Class constructor.\n     *\n     * @param {CourseEditor} reactive the course editor object\n     */\n    constructor(reactive) {\n        this.reactive = reactive;\n\n        // Completions states are defined in lib/completionlib.php. There are 4 different completion\n        // state values, however, the course index uses the same state for complete and complete_pass.\n        // This is the reason why completed appears twice in the array.\n        this.COMPLETIONS = ['incomplete', 'complete', 'complete', 'fail'];\n    }\n\n    /**\n     * Generate the course export data from the state.\n     *\n     * @param {Object} state the current state.\n     * @returns {Object}\n     */\n    course(state) {\n        // Collect section information from the state.\n        const data = {\n            sections: [],\n            editmode: this.reactive.isEditing,\n            highlighted: state.course.highlighted ?? '',\n        };\n        const sectionlist = state.course.sectionlist ?? [];\n        sectionlist.forEach(sectionid => {\n            const sectioninfo = state.section.get(sectionid) ?? {};\n            const section = this.section(state, sectioninfo);\n            data.sections.push(section);\n        });\n        data.hassections = (data.sections.length != 0);\n\n        return data;\n    }\n\n    /**\n     * Generate a section export data from the state.\n     *\n     * @param {Object} state the current state.\n     * @param {Object} sectioninfo the section state data.\n     * @returns {Object}\n     */\n    section(state, sectioninfo) {\n        const section = {\n            ...sectioninfo,\n            highlighted: state.course.highlighted ?? '',\n            cms: [],\n        };\n        const cmlist = sectioninfo.cmlist ?? [];\n        cmlist.forEach(cmid => {\n            const cminfo = state.cm.get(cmid);\n            const cm = this.cm(state, cminfo);\n            section.cms.push(cm);\n        });\n        section.hascms = (section.cms.length != 0);\n\n        return section;\n    }\n\n    /**\n     * Generate a cm export data from the state.\n     *\n     * @param {Object} state the current state.\n     * @param {Object} cminfo the course module state data.\n     * @returns {Object}\n     */\n    cm(state, cminfo) {\n        const cm = {\n            ...cminfo,\n            isactive: false,\n        };\n        return cm;\n    }\n\n    /**\n     * Generate a dragable cm data structure.\n     *\n     * This method is used by any draggable course module element to generate drop data\n     * for its reactive/dragdrop instance.\n     *\n     * @param {*} state the state object\n     * @param {*} cmid the cours emodule id\n     * @returns {Object|null}\n     */\n    cmDraggableData(state, cmid) {\n        const cminfo = state.cm.get(cmid);\n        if (!cminfo) {\n            return null;\n        }\n\n        // Drop an activity over the next activity is the same as doing anything.\n        let nextcmid;\n        const section = state.section.get(cminfo.sectionid);\n        const currentindex = section?.cmlist.indexOf(cminfo.id);\n        if (currentindex !== undefined) {\n            nextcmid = section?.cmlist[currentindex + 1];\n        }\n\n        return {\n            type: 'cm',\n            id: cminfo.id,\n            name: cminfo.name,\n            sectionid: cminfo.sectionid,\n            nextcmid,\n        };\n    }\n\n    /**\n     * Generate a dragable cm data structure.\n     *\n     * This method is used by any draggable section element to generate drop data\n     * for its reactive/dragdrop instance.\n     *\n     * @param {*} state the state object\n     * @param {*} sectionid the cours section id\n     * @returns {Object|null}\n     */\n    sectionDraggableData(state, sectionid) {\n        const sectioninfo = state.section.get(sectionid);\n        if (!sectioninfo) {\n            return null;\n        }\n        return {\n            type: 'section',\n            id: sectioninfo.id,\n            name: sectioninfo.name,\n            number: sectioninfo.number,\n        };\n    }\n\n    /**\n     * Generate a file draggable structure.\n     *\n     * This method is used when files are dragged on the browser.\n     *\n     * @param {*} state the state object\n     * @param {*} dataTransfer the current data tranfer data\n     * @returns {Object|null}\n     */\n    fileDraggableData(state, dataTransfer) {\n        const files = [];\n        // Browsers do not provide the file list until the drop event.\n        if (dataTransfer.files?.length > 0) {\n            dataTransfer.files.forEach(file => {\n                files.push(file);\n            });\n        }\n        return {\n            type: 'files',\n            files,\n        };\n    }\n\n    /**\n     * Generate a completion export data from the cm element.\n     *\n     * @param {Object} state the current state.\n     * @param {Object} cminfo the course module state data.\n     * @returns {Object}\n     */\n    cmCompletion(state, cminfo) {\n        const data = {\n            statename: '',\n            state: 'NaN',\n        };\n        if (cminfo.completionstate !== undefined) {\n            data.state = cminfo.completionstate;\n            data.hasstate = true;\n            const statename = this.COMPLETIONS[cminfo.completionstate] ?? 'NaN';\n            data[`is${statename}`] = true;\n        }\n        return data;\n    }\n\n    /**\n     * Return a sorted list of all sections and cms items in the state.\n     *\n     * @param {Object} state the current state.\n     * @returns {Array} all sections and cms items in the state.\n     */\n    allItemsArray(state) {\n        const items = [];\n        const sectionlist = state.course.sectionlist ?? [];\n        // Add sections.\n        sectionlist.forEach(sectionid => {\n            const sectioninfo = state.section.get(sectionid);\n            items.push({type: 'section', id: sectioninfo.id, url: sectioninfo.sectionurl});\n            // Add cms.\n            const cmlist = sectioninfo.cmlist ?? [];\n            cmlist.forEach(cmid => {\n                const cminfo = state.cm.get(cmid);\n                items.push({type: 'cm', id: cminfo.id, url: cminfo.url});\n            });\n        });\n        return items;\n    }\n}\n"],"names":["_exports","default","constructor","reactive","this","COMPLETIONS","course","state","_state$course$highlig","_state$course$section","data","sections","editmode","isEditing","highlighted","sectionlist","forEach","sectionid","_state$section$get","sectioninfo","section","get","push","hassections","length","_state$course$highlig2","_sectioninfo$cmlist","cms","cmlist","cmid","cminfo","cm","hascms","isactive","cmDraggableData","nextcmid","currentindex","indexOf","id","undefined","type","name","sectionDraggableData","number","fileDraggableData","dataTransfer","_dataTransfer$files","files","file","cmCompletion","statename","completionstate","_this$COMPLETIONS$cmi","hasstate","concat","allItemsArray","_state$course$section2","items","_sectioninfo$cmlist2","url","sectionurl"],"mappings":"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"}