define ("core_courseformat/local/courseeditor/mutations",["exports","core/ajax"],function(_exports,_ajax){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;_ajax=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_ajax);_exports.default=class{async _callEditWebservice(action,courseId,ids,targetSectionId,targetCmId){const args={action,courseid:courseId,ids};if(targetSectionId){args.targetsectionid=targetSectionId}if(targetCmId){args.targetcmid=targetCmId}let ajaxresult=await _ajax.default.call([{methodname:"core_courseformat_update_course",args}])[0];return JSON.parse(ajaxresult)}init(stateManager){stateManager.addUpdateTypes({prepareFields:this._prepareFields})}_prepareFields(stateManager,updateName,fields){fields.locked=!1;return fields}async cmMove(stateManager,cmids,targetSectionId,targetCmId){if(!targetSectionId&&!targetCmId){throw new Error("Mutation cmMove requires targetSectionId or targetCmId")}const course=stateManager.get("course");this.cmLock(stateManager,cmids,!0);const updates=await this._callEditWebservice("cm_move",course.id,cmids,targetSectionId,targetCmId);stateManager.processUpdates(updates);this.cmLock(stateManager,cmids,!1)}async sectionMove(stateManager,sectionIds,targetSectionId){if(!targetSectionId){throw new Error("Mutation sectionMove requires targetSectionId")}const course=stateManager.get("course");this.sectionLock(stateManager,sectionIds,!0);const updates=await this._callEditWebservice("section_move",course.id,sectionIds,targetSectionId);stateManager.processUpdates(updates);this.sectionLock(stateManager,sectionIds,!1)}async addSection(stateManager,targetSectionId){if(!targetSectionId){targetSectionId=0}const course=stateManager.get("course"),updates=await this._callEditWebservice("section_add",course.id,[],targetSectionId);stateManager.processUpdates(updates)}async sectionDelete(stateManager,sectionIds){const course=stateManager.get("course"),updates=await this._callEditWebservice("section_delete",course.id,sectionIds);stateManager.processUpdates(updates)}cmDrag(stateManager,cmIds,dragValue){this.setPageItem(stateManager);this._setElementsValue(stateManager,"cm",cmIds,"dragging",dragValue)}sectionDrag(stateManager,sectionIds,dragValue){this.setPageItem(stateManager);this._setElementsValue(stateManager,"section",sectionIds,"dragging",dragValue)}cmCompletion(stateManager,cmIds,complete){const newValue=complete?1:0;this._setElementsValue(stateManager,"cm",cmIds,"completionstate",newValue)}cmLock(stateManager,cmIds,lockValue){this._setElementsValue(stateManager,"cm",cmIds,"locked",lockValue)}sectionLock(stateManager,sectionIds,lockValue){this._setElementsValue(stateManager,"section",sectionIds,"locked",lockValue)}_setElementsValue(stateManager,name,ids,fieldName,newValue){stateManager.setReadOnly(!1);ids.forEach(id=>{const element=stateManager.get(name,id);if(element){element[fieldName]=newValue}});stateManager.setReadOnly(!0)}setPageItem(stateManager,type,id,isStatic){let newPageItem;if(type!==void 0){newPageItem=stateManager.get(type,id);if(!newPageItem){return}}stateManager.setReadOnly(!1);const course=stateManager.get("course");course.pageItem=null;if(newPageItem){course.pageItem={id,type,sectionId:"section"==type?newPageItem.id:newPageItem.sectionid,isStatic}}stateManager.setReadOnly(!0)}unlockAll(stateManager){const state=stateManager.state;stateManager.setReadOnly(!1);state.section.forEach(section=>{section.locked=!1});state.cm.forEach(cm=>{cm.locked=!1});stateManager.setReadOnly(!0)}async sectionPreferences(stateManager,sectionIds,preferences){stateManager.setReadOnly(!1);let updatePreferences=!1;sectionIds.forEach(sectionId=>{var _preferences$contentc,_preferences$indexcol;const section=stateManager.get("section",sectionId);if(section===void 0){return}let newValue=null!==(_preferences$contentc=preferences.contentcollapsed)&&void 0!==_preferences$contentc?_preferences$contentc:section.contentcollapsed;if(section.contentcollapsed!=newValue){section.contentcollapsed=newValue;updatePreferences=!0}newValue=null!==(_preferences$indexcol=preferences.indexcollapsed)&&void 0!==_preferences$indexcol?_preferences$indexcol:section.indexcollapsed;if(section.indexcollapsed!=newValue){section.indexcollapsed=newValue;updatePreferences=!0}});stateManager.setReadOnly(!0);if(updatePreferences){const course=stateManager.get("course"),state=stateManager.state,prefKey="coursesectionspreferences_".concat(course.id),preferences={contentcollapsed:[],indexcollapsed:[]};state.section.forEach(section=>{if(section.contentcollapsed){preferences.contentcollapsed.push(section.id)}if(section.indexcollapsed){preferences.indexcollapsed.push(section.id)}});const jsonString=JSON.stringify(preferences);M.util.set_user_preference(prefKey,jsonString)}}async cmState(stateManager,cmids){this.cmLock(stateManager,cmids,!0);const course=stateManager.get("course"),updates=await this._callEditWebservice("cm_state",course.id,cmids);stateManager.processUpdates(updates);this.cmLock(stateManager,cmids,!1)}async sectionState(stateManager,sectionIds){this.sectionLock(stateManager,sectionIds,!0);const course=stateManager.get("course"),updates=await this._callEditWebservice("section_state",course.id,sectionIds);stateManager.processUpdates(updates);this.sectionLock(stateManager,sectionIds,!1)}async courseState(stateManager){const course=stateManager.get("course"),updates=await this._callEditWebservice("course_state",course.id);stateManager.processUpdates(updates)}};return _exports.default});
//# sourceMappingURL=mutations.min.js.map
