{"version":3,"sources":["../src/activitychooser.js"],"names":["ACTIVITIESRESOURCES","init","courseId","chooserConfig","pendingPromise","Pending","registerListenerEvents","resolve","events","CustomEvents","activate","keyboardActivate","fetchModuleData","innerPromise","Promise","Repository","activityModules","fetchFooterData","footerInnerPromise","sectionId","define","document","forEach","event","addEventListener","e","target","closest","selectors","elements","sectionmodchooser","sectionDiv","section","button","hasAttribute","caller","bodyPromise","bodyPromiseResolver","dataset","sectionid","footerData","sectionModal","buildModal","catch","errorTemplateData","message","Templates","render","data","builtModuleData","sectionIdMapper","sectionreturnid","ChooserDialogue","displayChooser","partiallyAppliedFavouriteManager","templateDataBuilder","webServiceData","id","newData","JSON","parse","stringify","content_items","module","link","activities","resources","showAll","showActivities","showResources","tabMode","parseInt","tabmode","favourites","filter","mod","favourite","recommended","archetype","favouritesFirst","length","activitiesFirst","fallback","footer","ModalFactory","create","type","types","DEFAULT","title","body","customfootertemplate","large","templateContext","classes","then","modal","show","nullFavouriteDomManager","favouriteTabNav","modalBody","tabIndex","classList","add","contains","remove","setAttribute","favouriteTab","querySelector","regions","defaultTabNav","activitiesTabNav","activityTabNav","focus","defaultTab","activitiesTab","activityTab","moduleData","internal","favouriteArea","favouriteButtons","querySelectorAll","actions","optionActions","manageFavourite","result","find","name","newFaves","builtFaves","renderForPromise","html","js","replaceNodeContents","Array","from","element","favourited","firstElementChild","nodeToRemove","parentNode","removeChild"],"mappings":"oxBAwBA,yDACA,+CACA,8CACA,8EACA,6CACA,mDAEA,0C,mlDAOMA,CAAAA,mBAAmB,CAAG,C,CAafC,IAAI,CAAG,SAACC,QAAD,CAAWC,aAAX,CAA6B,CAC7C,GAAMC,CAAAA,cAAc,CAAG,GAAIC,iBAA3B,CAEAC,sBAAsB,CAACJ,QAAD,CAAWC,aAAX,CAAtB,CAEAC,cAAc,CAACG,OAAf,EACH,C,uBASKD,CAAAA,sBAAsB,CAAG,SAACJ,QAAD,CAAWC,aAAX,CAA6B,IAClDK,CAAAA,MAAM,CAAG,CACX,OADW,CAEXC,mCAAaD,MAAb,CAAoBE,QAFT,CAGXD,mCAAaD,MAAb,CAAoBG,gBAHT,CADyC,CAOlDC,eAAe,CAAI,UAAM,CAC3B,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CAEA,MAAO,WAAM,CACT,GAAI,CAACA,YAAL,CAAmB,CACfA,YAAY,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAACP,OAAD,CAAa,CACpCA,OAAO,CAACQ,UAAU,CAACC,eAAX,CAA2Bd,QAA3B,CAAD,CACV,CAFc,CAGlB,CAED,MAAOW,CAAAA,YACV,CACJ,CAZuB,EAPgC,CAqBlDI,eAAe,CAAI,UAAM,CAC3B,GAAIC,CAAAA,kBAAkB,CAAG,IAAzB,CAEA,MAAO,UAACC,SAAD,CAAe,CAClB,GAAI,CAACD,kBAAL,CAAyB,CACrBA,kBAAkB,CAAG,GAAIJ,CAAAA,OAAJ,CAAY,SAACP,OAAD,CAAa,CAC1CA,OAAO,CAACQ,UAAU,CAACE,eAAX,CAA2Bf,QAA3B,CAAqCiB,SAArC,CAAD,CACV,CAFoB,CAGxB,CAED,MAAOD,CAAAA,kBACV,CACJ,CAZuB,EArBgC,CAmCxDT,mCAAaW,MAAb,CAAoBC,QAApB,CAA8Bb,MAA9B,EAGAA,MAAM,CAACc,OAAP,CAAe,SAACC,KAAD,CAAW,CACtBF,QAAQ,CAACG,gBAAT,CAA0BD,KAA1B,+DAAiC,kBAAME,CAAN,yNACzBA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,mBAAUC,QAAV,CAAmBC,iBAApC,CADyB,0BAKnBC,UALmB,CAKNN,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,mBAAUC,QAAV,CAAmBG,OAApC,CALM,CAOnBC,MAPmB,CAOVR,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,mBAAUC,QAAV,CAAmBC,iBAApC,CAPU,CAazB,GAAmB,IAAf,GAAAC,UAAU,EAAaA,UAAU,CAACG,YAAX,CAAwB,gBAAxB,CAA3B,CAAsE,CAElEC,MAAM,CAAGJ,UACZ,CAHD,IAGO,CACHI,MAAM,CAAGF,MACZ,CAIKG,WAtBmB,CAsBL,GAAItB,CAAAA,OAAJ,CAAY,SAAAP,OAAO,CAAI,CACvC8B,mBAAmB,CAAG9B,OACzB,CAFmB,CAtBK,wBA0BAU,CAAAA,eAAe,CAACkB,MAAM,CAACG,OAAP,CAAeC,SAAhB,CA1Bf,QA0BnBC,UA1BmB,gBA2BnBC,YA3BmB,CA2BJC,UAAU,CAACN,WAAD,CAAcI,UAAd,CA3BN,yBA+BN5B,CAAAA,eAAe,GAAG+B,KAAlB,gEAAwB,iBAAMlB,CAAN,8HACjCmB,iBADiC,CACb,CACtB,aAAgBnB,CAAC,CAACoB,OADI,CADa,aAIvCR,mBAJuC,uBAIbS,CAAAA,SAAS,CAACC,MAAV,CAAiB,yCAAjB,CAA4DH,iBAA5D,CAJa,oHAAxB,4DA/BM,SA+BnBI,IA/BmB,mBAuCpBA,IAvCoB,oEA4CnBC,eA5CmB,CA4CDC,eAAe,CAACF,IAAD,CAAOb,MAAM,CAACG,OAAP,CAAeC,SAAtB,CAAiCJ,MAAM,CAACG,OAAP,CAAea,eAAhD,CA5Cd,CA8CzBC,eAAe,CAACC,cAAhB,CACIZ,YADJ,CAEIQ,eAFJ,CAGIK,gCAAgC,CAACN,IAAD,CAAOb,MAAM,CAACG,OAAP,CAAeC,SAAtB,CAHpC,CAIIC,UAJJ,EA9CyB,aAqDzBH,mBArDyB,yBAqDCS,CAAAA,SAAS,CAACC,MAAV,CACtB,6BADsB,CAEtBQ,mBAAmB,CAACN,eAAD,CAAkB9C,aAAlB,CAFG,CArDD,4HAAjC,2DA2DH,CA5DD,CA6DH,C,CAYK+C,eAAe,CAAG,SAACM,cAAD,CAAiBC,EAAjB,CAAqBN,eAArB,CAAyC,CAE7D,GAAMO,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,cAAf,CAAX,CAAhB,CACAE,OAAO,CAACI,aAAR,CAAsBxC,OAAtB,CAA8B,SAACyC,MAAD,CAAY,CACtCA,MAAM,CAACC,IAAP,EAAe,YAAcP,EAAd,CAAmB,MAAnB,SAA6BN,eAA7B,WAA6BA,eAA7B,CAA6BA,eAA7B,CAAgD,CAAhD,CAClB,CAFD,EAGA,MAAOO,CAAAA,OAAO,CAACI,aAClB,C,CAUKP,mBAAmB,CAAG,SAACP,IAAD,CAAO7C,aAAP,CAAyB,IAE7C8D,CAAAA,UAAU,CAAG,EAFgC,CAG7CC,SAAS,CAAG,EAHiC,CAI7CC,OAAO,GAJsC,CAK7CC,cAAc,GAL+B,CAM7CC,aAAa,GANgC,CAS3CC,OAAO,CAAGC,QAAQ,CAACpE,aAAa,CAACqE,OAAf,CATyB,CAY3CC,UAAU,CAAGzB,IAAI,CAAC0B,MAAL,CAAY,SAAAC,GAAG,QAAI,KAAAA,GAAG,CAACC,SAAR,CAAf,CAZ8B,CAa3CC,WAAW,CAAG7B,IAAI,CAAC0B,MAAL,CAAY,SAAAC,GAAG,QAAI,KAAAA,GAAG,CAACE,WAAR,CAAf,CAb6B,CAgBjD,GAAI,CAACP,OAAO,IAAP,EAAsCA,OAAO,GAAKtE,mBAAnD,GAA2EsE,OAAO,GA7K1E,CA6KZ,CAAoG,CAEhGL,UAAU,CAAGjB,IAAI,CAAC0B,MAAL,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACG,SAAJ,GA3KvB,CA2KmB,CAAf,CAAb,CACAZ,SAAS,CAAGlB,IAAI,CAAC0B,MAAL,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACG,SAAJ,GA3KtB,CA2KkB,CAAf,CAAZ,CACAV,cAAc,GAAd,CACAC,aAAa,GAAb,CAGA,GAAIC,OAAO,GAAKtE,mBAAhB,CAAqC,CACjCmE,OAAO,GACV,CACJ,CA3BgD,GA+B3CY,CAAAA,eAAe,CAAG,CAAC,CAACN,UAAU,CAACO,MA/BY,CAiC3CC,eAAe,CAAG,KAAAd,OAAO,EAAc,KAAAY,eAjCI,CAmC3CG,QAAQ,CAAG,KAAAf,OAAO,EAAa,KAAAY,eAnCY,CAqCjD,MAAO,CACH,QAAW/B,IADR,CAEHmB,OAAO,CAAEA,OAFN,CAGHF,UAAU,CAAEA,UAHT,CAIHG,cAAc,CAAEA,cAJb,CAKHa,eAAe,CAAEA,eALd,CAMHf,SAAS,CAAEA,SANR,CAOHG,aAAa,CAAEA,aAPZ,CAQHI,UAAU,CAAEA,UART,CASHI,WAAW,CAAEA,WATV,CAUHE,eAAe,CAAEA,eAVd,CAWHG,QAAQ,CAAEA,QAXP,CAaV,C,CAUKxC,UAAU,CAAG,SAACN,WAAD,CAAc+C,MAAd,CAAyB,CACxC,MAAOC,CAAAA,YAAY,CAACC,MAAb,CAAoB,CACvBC,IAAI,CAAEF,YAAY,CAACG,KAAb,CAAmBC,OADF,CAEvBC,KAAK,CAAE,oBAAU,uBAAV,CAFgB,CAGvBC,IAAI,CAAEtD,WAHiB,CAIvB+C,MAAM,CAAEA,MAAM,CAACQ,oBAJQ,CAKvBC,KAAK,GALkB,CAMvBC,eAAe,CAAE,CACbC,OAAO,CAAE,YADI,CANM,CAApB,EAUNC,IAVM,CAUD,SAAAC,KAAK,CAAI,CACXA,KAAK,CAACC,IAAN,GACA,MAAOD,CAAAA,KACV,CAbM,CAcV,C,CAUKE,uBAAuB,CAAG,SAACC,eAAD,CAAkBC,SAAlB,CAAgC,CAC5DD,eAAe,CAACE,QAAhB,CAA2B,CAAC,CAA5B,CACAF,eAAe,CAACG,SAAhB,CAA0BC,GAA1B,CAA8B,QAA9B,EAEA,GAAIJ,eAAe,CAACG,SAAhB,CAA0BE,QAA1B,CAAmC,QAAnC,CAAJ,CAAkD,CAC9CL,eAAe,CAACG,SAAhB,CAA0BG,MAA1B,CAAiC,QAAjC,EACAN,eAAe,CAACO,YAAhB,CAA6B,eAA7B,CAA8C,OAA9C,EACA,GAAMC,CAAAA,YAAY,CAAGP,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUiF,OAAV,CAAkBF,YAA1C,CAArB,CACAA,YAAY,CAACL,SAAb,CAAuBG,MAAvB,CAA8B,QAA9B,EAJ8C,GAKxCK,CAAAA,aAAa,CAAGV,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUiF,OAAV,CAAkBC,aAA1C,CALwB,CAMxCC,gBAAgB,CAAGX,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUiF,OAAV,CAAkBG,cAA1C,CANqB,CAO9C,GAAI,KAAAF,aAAa,CAACR,SAAd,CAAwBE,QAAxB,CAAiC,QAAjC,CAAJ,CAA0D,CACtDM,aAAa,CAACR,SAAd,CAAwBC,GAAxB,CAA4B,QAA5B,EACAO,aAAa,CAACJ,YAAd,CAA2B,eAA3B,CAA4C,MAA5C,EACAI,aAAa,CAACT,QAAd,CAAyB,CAAzB,CACAS,aAAa,CAACG,KAAd,GACA,GAAMC,CAAAA,UAAU,CAAGd,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUiF,OAAV,CAAkBK,UAA1C,CAAnB,CACAA,UAAU,CAACZ,SAAX,CAAqBC,GAArB,CAAyB,QAAzB,CACH,CAPD,IAOO,CACHQ,gBAAgB,CAACT,SAAjB,CAA2BC,GAA3B,CAA+B,QAA/B,EACAQ,gBAAgB,CAACL,YAAjB,CAA8B,eAA9B,CAA+C,MAA/C,EACAK,gBAAgB,CAACV,QAAjB,CAA4B,CAA5B,CACAU,gBAAgB,CAACE,KAAjB,GACA,GAAME,CAAAA,aAAa,CAAGf,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUiF,OAAV,CAAkBO,WAA1C,CAAtB,CACAD,aAAa,CAACb,SAAd,CAAwBC,GAAxB,CAA4B,QAA5B,CACH,CAEJ,CACJ,C,CAWKjD,gCAAgC,CAAG,SAAC+D,UAAD,CAAalG,SAAb,CAA2B,CAQhE,sEAAO,kBAAMmG,QAAN,CAAgB1C,SAAhB,CAA2BwB,SAA3B,8OACGmB,aADH,CACmBnB,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUmB,MAAV,CAAiB0B,UAAzC,CADnB,CAIG+C,gBAJH,CAIsBpB,SAAS,CAACqB,gBAAV,4BAA8CH,QAA9C,gBAA4D1F,mBAAU8F,OAAV,CAAkBC,aAAlB,CAAgCC,eAA5F,EAJtB,CAKGzB,eALH,CAKqBC,SAAS,CAACQ,aAAV,CAAwBhF,mBAAUiF,OAAV,CAAkBV,eAA1C,CALrB,CAMG0B,MANH,CAMYR,UAAU,CAACvD,aAAX,CAAyBgE,IAAzB,CAA8B,mBAAEC,CAAAA,IAAF,OAAEA,IAAF,OAAYA,CAAAA,IAAI,GAAKT,QAArB,CAA9B,CANZ,CAOGU,QAPH,CAOc,EAPd,KAQCH,MARD,8BASKjD,SATL,0BAUKiD,MAAM,CAACjD,SAAP,IAGAoD,QAAQ,CAAClE,aAAT,CAAyBuD,UAAU,CAACvD,aAAX,CAAyBY,MAAzB,CAAgC,SAAAC,GAAG,QAAI,KAAAA,GAAG,CAACC,SAAR,CAAnC,CAAzB,CAEMqD,UAfX,CAewB/E,eAAe,CAAC8E,QAAD,CAAW7G,SAAX,CAfvC,yBAiB8B2B,CAAAA,SAAS,CAACoF,gBAAV,CAA2B,8CAA3B,CACrB,CAACzD,UAAU,CAAEwD,UAAb,CADqB,CAjB9B,8CAiBYE,IAjBZ,uBAiBYA,IAjBZ,CAiBkBC,EAjBlB,uBAiBkBA,EAjBlB,yBAoBWtF,CAAAA,SAAS,CAACuF,mBAAV,CAA8Bd,aAA9B,CAA6CY,IAA7C,CAAmDC,EAAnD,CApBX,SAsBKE,KAAK,CAACC,IAAN,CAAWf,gBAAX,EAA6BlG,OAA7B,CAAqC,SAACkH,OAAD,CAAa,CAC9CA,OAAO,CAAClC,SAAR,CAAkBG,MAAlB,CAAyB,YAAzB,EACA+B,OAAO,CAAClC,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB,EACAiC,OAAO,CAAClG,OAAR,CAAgBmG,UAAhB,CAA6B,MAA7B,CACAD,OAAO,CAAC9B,YAAR,CAAqB,cAArB,KACA8B,OAAO,CAACE,iBAAR,CAA0BpC,SAA1B,CAAoCG,MAApC,CAA2C,WAA3C,EACA+B,OAAO,CAACE,iBAAR,CAA0BpC,SAA1B,CAAoCC,GAApC,CAAwC,SAAxC,CACH,CAPD,EASAJ,eAAe,CAACG,SAAhB,CAA0BG,MAA1B,CAAiC,QAAjC,EA/BL,gCAiCKoB,MAAM,CAACjD,SAAP,IAEM+D,YAnCX,CAmC0BpB,aAAa,CAACX,aAAd,4BAA+CU,QAA/C,QAnC1B,CAqCKqB,YAAY,CAACC,UAAb,CAAwBC,WAAxB,CAAoCF,YAApC,EAEAL,KAAK,CAACC,IAAN,CAAWf,gBAAX,EAA6BlG,OAA7B,CAAqC,SAACkH,OAAD,CAAa,CAC9CA,OAAO,CAAClC,SAAR,CAAkBC,GAAlB,CAAsB,YAAtB,EACAiC,OAAO,CAAClC,SAAR,CAAkBG,MAAlB,CAAyB,cAAzB,EACA+B,OAAO,CAAClG,OAAR,CAAgBmG,UAAhB,CAA6B,OAA7B,CACAD,OAAO,CAAC9B,YAAR,CAAqB,cAArB,KACA8B,OAAO,CAACE,iBAAR,CAA0BpC,SAA1B,CAAoCG,MAApC,CAA2C,SAA3C,EACA+B,OAAO,CAACE,iBAAR,CAA0BpC,SAA1B,CAAoCC,GAApC,CAAwC,WAAxC,CACH,CAPD,EAQMyB,SA/CX,CA+CsBX,UAAU,CAACvD,aAAX,CAAyBY,MAAzB,CAAgC,SAAAC,GAAG,QAAI,KAAAA,GAAG,CAACC,SAAR,CAAnC,CA/CtB,CAiDK,GAAwB,CAApB,GAAAoD,SAAQ,CAAChD,MAAb,CAA2B,CACvBkB,uBAAuB,CAACC,eAAD,CAAkBC,SAAlB,CAC1B,CAnDN,wDAAP,2DAuDH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing modules in a course.\n *\n * @module     core_course/activitychooser\n * @package    core_course\n * @copyright  2020 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as ChooserDialogue from 'core_course/local/activitychooser/dialogue';\nimport * as Repository from 'core_course/local/activitychooser/repository';\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport CustomEvents from 'core/custom_interaction_events';\nimport * as Templates from 'core/templates';\nimport * as ModalFactory from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport Pending from 'core/pending';\n\n// Set up some JS module wide constants that can be added to in the future.\n\n// Tab config options.\nconst ALLACTIVITIESRESOURCES = 0;\nconst ONLYALL = 1;\nconst ACTIVITIESRESOURCES = 2;\n\n// Module types.\nconst ACTIVITY = 0;\nconst RESOURCE = 1;\n\n/**\n * Set up the activity chooser.\n *\n * @method init\n * @param {Number} courseId Course ID to use later on in fetchModules()\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n */\nexport const init = (courseId, chooserConfig) => {\n    const pendingPromise = new Pending();\n\n    registerListenerEvents(courseId, chooserConfig);\n\n    pendingPromise.resolve();\n};\n\n/**\n * Once a selection has been made make the modal & module information and pass it along\n *\n * @method registerListenerEvents\n * @param {Number} courseId\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n */\nconst registerListenerEvents = (courseId, chooserConfig) => {\n    const events = [\n        'click',\n        CustomEvents.events.activate,\n        CustomEvents.events.keyboardActivate\n    ];\n\n    const fetchModuleData = (() => {\n        let innerPromise = null;\n\n        return () => {\n            if (!innerPromise) {\n                innerPromise = new Promise((resolve) => {\n                    resolve(Repository.activityModules(courseId));\n                });\n            }\n\n            return innerPromise;\n        };\n    })();\n\n    const fetchFooterData = (() => {\n        let footerInnerPromise = null;\n\n        return (sectionId) => {\n            if (!footerInnerPromise) {\n                footerInnerPromise = new Promise((resolve) => {\n                    resolve(Repository.fetchFooterData(courseId, sectionId));\n                });\n            }\n\n            return footerInnerPromise;\n        };\n    })();\n\n    CustomEvents.define(document, events);\n\n    // Display module chooser event listeners.\n    events.forEach((event) => {\n        document.addEventListener(event, async(e) => {\n            if (e.target.closest(selectors.elements.sectionmodchooser)) {\n                let caller;\n                // We need to know who called this.\n                // Standard courses use the ID in the main section info.\n                const sectionDiv = e.target.closest(selectors.elements.section);\n                // Front page courses need some special handling.\n                const button = e.target.closest(selectors.elements.sectionmodchooser);\n\n                // If we don't have a section ID use the fallback ID.\n                // We always want the sectionDiv caller first as it keeps track of section ID's after DnD changes.\n                // The button attribute is always just a fallback for us as the section div is not always available.\n                // A YUI change could be done maybe to only update the button attribute but we are going for minimal change here.\n                if (sectionDiv !== null && sectionDiv.hasAttribute('data-sectionid')) {\n                    // We check for attributes just in case of outdated contrib course formats.\n                    caller = sectionDiv;\n                } else {\n                    caller = button;\n                }\n\n                // We want to show the modal instantly but loading whilst waiting for our data.\n                let bodyPromiseResolver;\n                const bodyPromise = new Promise(resolve => {\n                    bodyPromiseResolver = resolve;\n                });\n\n                const footerData = await fetchFooterData(caller.dataset.sectionid);\n                const sectionModal = buildModal(bodyPromise, footerData);\n\n                // Now we have a modal we should start fetching data.\n                // If an error occurs while fetching the data, display the error within the modal.\n                const data = await fetchModuleData().catch(async(e) => {\n                    const errorTemplateData = {\n                        'errormessage': e.message\n                    };\n                    bodyPromiseResolver(await Templates.render('core_course/local/activitychooser/error', errorTemplateData));\n                });\n\n                // Early return if there is no module data.\n                if (!data) {\n                    return;\n                }\n\n                // Apply the section id to all the module instance links.\n                const builtModuleData = sectionIdMapper(data, caller.dataset.sectionid, caller.dataset.sectionreturnid);\n\n                ChooserDialogue.displayChooser(\n                    sectionModal,\n                    builtModuleData,\n                    partiallyAppliedFavouriteManager(data, caller.dataset.sectionid),\n                    footerData,\n                );\n\n                bodyPromiseResolver(await Templates.render(\n                    'core_course/activitychooser',\n                    templateDataBuilder(builtModuleData, chooserConfig)\n                ));\n            }\n        });\n    });\n};\n\n/**\n * Given the web service data and an ID we want to make a deep copy\n * of the WS data then add on the section ID to the addoption URL\n *\n * @method sectionIdMapper\n * @param {Object} webServiceData Our original data from the Web service call\n * @param {Number} id The ID of the section we need to append to the links\n * @param {Number|null} sectionreturnid The ID of the section return we need to append to the links\n * @return {Array} [modules] with URL's built\n */\nconst sectionIdMapper = (webServiceData, id, sectionreturnid) => {\n    // We need to take a fresh deep copy of the original data as an object is a reference type.\n    const newData = JSON.parse(JSON.stringify(webServiceData));\n    newData.content_items.forEach((module) => {\n        module.link += '&section=' + id + '&sr=' + (sectionreturnid ?? 0);\n    });\n    return newData.content_items;\n};\n\n/**\n * Given an array of modules we want to figure out where & how to place them into our template object\n *\n * @method templateDataBuilder\n * @param {Array} data our modules to manipulate into a Templatable object\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n * @return {Object} Our built object ready to render out\n */\nconst templateDataBuilder = (data, chooserConfig) => {\n    // Setup of various bits and pieces we need to mutate before throwing it to the wolves.\n    let activities = [];\n    let resources = [];\n    let showAll = true;\n    let showActivities = false;\n    let showResources = false;\n\n    // Tab mode can be the following [All, Resources & Activities, All & Activities & Resources].\n    const tabMode = parseInt(chooserConfig.tabmode);\n\n    // Filter the incoming data to find favourite & recommended modules.\n    const favourites = data.filter(mod => mod.favourite === true);\n    const recommended = data.filter(mod => mod.recommended === true);\n\n    // Both of these modes need Activity & Resource tabs.\n    if ((tabMode === ALLACTIVITIESRESOURCES || tabMode === ACTIVITIESRESOURCES) && tabMode !== ONLYALL) {\n        // Filter the incoming data to find activities then resources.\n        activities = data.filter(mod => mod.archetype === ACTIVITY);\n        resources = data.filter(mod => mod.archetype === RESOURCE);\n        showActivities = true;\n        showResources = true;\n\n        // We want all of the previous information but no 'All' tab.\n        if (tabMode === ACTIVITIESRESOURCES) {\n            showAll = false;\n        }\n    }\n\n    // Given the results of the above filters lets figure out what tab to set active.\n    // We have some favourites.\n    const favouritesFirst = !!favourites.length;\n    // We are in tabMode 2 without any favourites.\n    const activitiesFirst = showAll === false && favouritesFirst === false;\n    // We have nothing fallback to show all modules.\n    const fallback = showAll === true && favouritesFirst === false;\n\n    return {\n        'default': data,\n        showAll: showAll,\n        activities: activities,\n        showActivities: showActivities,\n        activitiesFirst: activitiesFirst,\n        resources: resources,\n        showResources: showResources,\n        favourites: favourites,\n        recommended: recommended,\n        favouritesFirst: favouritesFirst,\n        fallback: fallback,\n    };\n};\n\n/**\n * Given an object we want to build a modal ready to show\n *\n * @method buildModal\n * @param {Promise} bodyPromise\n * @param {String|Boolean} footer Either a footer to add or nothing\n * @return {Object} The modal ready to display immediately and render body in later.\n */\nconst buildModal = (bodyPromise, footer) => {\n    return ModalFactory.create({\n        type: ModalFactory.types.DEFAULT,\n        title: getString('addresourceoractivity'),\n        body: bodyPromise,\n        footer: footer.customfootertemplate,\n        large: true,\n        templateContext: {\n            classes: 'modchooser'\n        }\n    })\n    .then(modal => {\n        modal.show();\n        return modal;\n    });\n};\n\n/**\n * A small helper function to handle the case where there are no more favourites\n * and we need to mess a bit with the available tabs in the chooser\n *\n * @method nullFavouriteDomManager\n * @param {HTMLElement} favouriteTabNav Dom node of the favourite tab nav\n * @param {HTMLElement} modalBody Our current modals' body\n */\nconst nullFavouriteDomManager = (favouriteTabNav, modalBody) => {\n    favouriteTabNav.tabIndex = -1;\n    favouriteTabNav.classList.add('d-none');\n    // Need to set active to an available tab.\n    if (favouriteTabNav.classList.contains('active')) {\n        favouriteTabNav.classList.remove('active');\n        favouriteTabNav.setAttribute('aria-selected', 'false');\n        const favouriteTab = modalBody.querySelector(selectors.regions.favouriteTab);\n        favouriteTab.classList.remove('active');\n        const defaultTabNav = modalBody.querySelector(selectors.regions.defaultTabNav);\n        const activitiesTabNav = modalBody.querySelector(selectors.regions.activityTabNav);\n        if (defaultTabNav.classList.contains('d-none') === false) {\n            defaultTabNav.classList.add('active');\n            defaultTabNav.setAttribute('aria-selected', 'true');\n            defaultTabNav.tabIndex = 0;\n            defaultTabNav.focus();\n            const defaultTab = modalBody.querySelector(selectors.regions.defaultTab);\n            defaultTab.classList.add('active');\n        } else {\n            activitiesTabNav.classList.add('active');\n            activitiesTabNav.setAttribute('aria-selected', 'true');\n            activitiesTabNav.tabIndex = 0;\n            activitiesTabNav.focus();\n            const activitiesTab = modalBody.querySelector(selectors.regions.activityTab);\n            activitiesTab.classList.add('active');\n        }\n\n    }\n};\n\n/**\n * Export a curried function where the builtModules has been applied.\n * We have our array of modules so we can rerender the favourites area and have all of the items sorted.\n *\n * @method partiallyAppliedFavouriteManager\n * @param {Array} moduleData This is our raw WS data that we need to manipulate\n * @param {Number} sectionId We need this to add the sectionID to the URL's in the faves area after rerender\n * @return {Function} partially applied function so we can manipulate DOM nodes easily & update our internal array\n */\nconst partiallyAppliedFavouriteManager = (moduleData, sectionId) => {\n    /**\n     * Curried function that is being returned.\n     *\n     * @param {String} internal Internal name of the module to manage\n     * @param {Boolean} favourite Is the caller adding a favourite or removing one?\n     * @param {HTMLElement} modalBody What we need to update whilst we are here\n     */\n    return async(internal, favourite, modalBody) => {\n        const favouriteArea = modalBody.querySelector(selectors.render.favourites);\n\n        // eslint-disable-next-line max-len\n        const favouriteButtons = modalBody.querySelectorAll(`[data-internal=\"${internal}\"] ${selectors.actions.optionActions.manageFavourite}`);\n        const favouriteTabNav = modalBody.querySelector(selectors.regions.favouriteTabNav);\n        const result = moduleData.content_items.find(({name}) => name === internal);\n        const newFaves = {};\n        if (result) {\n            if (favourite) {\n                result.favourite = true;\n\n                // eslint-disable-next-line camelcase\n                newFaves.content_items = moduleData.content_items.filter(mod => mod.favourite === true);\n\n                const builtFaves = sectionIdMapper(newFaves, sectionId);\n\n                const {html, js} = await Templates.renderForPromise('core_course/local/activitychooser/favourites',\n                    {favourites: builtFaves});\n\n                await Templates.replaceNodeContents(favouriteArea, html, js);\n\n                Array.from(favouriteButtons).forEach((element) => {\n                    element.classList.remove('text-muted');\n                    element.classList.add('text-primary');\n                    element.dataset.favourited = 'true';\n                    element.setAttribute('aria-pressed', true);\n                    element.firstElementChild.classList.remove('fa-star-o');\n                    element.firstElementChild.classList.add('fa-star');\n                });\n\n                favouriteTabNav.classList.remove('d-none');\n            } else {\n                result.favourite = false;\n\n                const nodeToRemove = favouriteArea.querySelector(`[data-internal=\"${internal}\"]`);\n\n                nodeToRemove.parentNode.removeChild(nodeToRemove);\n\n                Array.from(favouriteButtons).forEach((element) => {\n                    element.classList.add('text-muted');\n                    element.classList.remove('text-primary');\n                    element.dataset.favourited = 'false';\n                    element.setAttribute('aria-pressed', false);\n                    element.firstElementChild.classList.remove('fa-star');\n                    element.firstElementChild.classList.add('fa-star-o');\n                });\n                const newFaves = moduleData.content_items.filter(mod => mod.favourite === true);\n\n                if (newFaves.length === 0) {\n                    nullFavouriteDomManager(favouriteTabNav, modalBody);\n                }\n            }\n        }\n    };\n};\n"],"file":"activitychooser.min.js"}