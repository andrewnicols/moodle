{"version":3,"file":"repository.min.js","sources":["../../../src/local/activitychooser/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @module     core_course/repository\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {fetchOne} from 'core/fetch';\n\n/**\n * Fetch all the information on modules we'll need in the activity chooser.\n *\n * @method activityModules\n * @param {Number} courseid What course to fetch the modules for\n * @return {Promise}\n */\nexport const activityModules = (courseid) => fetchOne('core_course_get_course_content_items', {\n    courseid,\n});\n\n/**\n * Given a module name, module ID & the current course we want to specify that the module\n * is a users' favourite.\n *\n * @method favouriteModule\n * @param {String} componentname Frankenstyle name of the component to add favourite\n * @param {Number} contentitemid ID of the module. Mainly for LTI cases where they have same / similar names\n * @return {Promise}\n */\nexport const favouriteModule = (componentname, contentitemid) => fetchOne('core_course_add_content_item_to_user_favourites', {\n    componentname,\n    contentitemid,\n});\n\n/**\n * Given a module name, module ID & the current course we want to specify that the module\n * is no longer a users' favourite.\n *\n * @method unfavouriteModule\n * @param {String} componentname Frankenstyle name of the component to add favourite\n * @param {Number} contentitemid ID of the module. Mainly for LTI cases where they have same / similar names\n * @return {Promise}\n */\nexport const unfavouriteModule = (componentname, contentitemid) => fetchOne(\n    'core_course_remove_content_item_from_user_favourites',\n    {\n        componentname,\n        contentitemid,\n    }\n);\n\n/**\n * Fetch all the information on modules we'll need in the activity chooser.\n *\n * @method fetchFooterData\n * @param {Number} courseid What course to fetch the data for\n * @param {Number} sectionid What section to fetch the data for\n * @return {Promise}\n */\nexport const fetchFooterData = (courseid, sectionid) => fetchOne('core_course_get_activity_chooser_footer', {\n    courseid,\n    sectionid,\n});\n"],"names":["_exports","activityModules","courseid","fetchOne","favouriteModule","componentname","contentitemid","unfavouriteModule","fetchFooterData","sectionid"],"mappings":"+QAgCGA,SAAAC,gBAF6BC,WAAa,EAAAC,OAAQA,UAAC,uCAAwC,CAC1FD,oBAeDF,SAAAI,gBAH4BA,CAACC,cAAeC,iBAAkB,EAAAH,OAAAA,UAAS,kDAAmD,CACzHE,4BACAC,8BAkBFN,SAAAO,kBAN+BA,CAACF,cAAeC,iBAAkB,EAAAH,OAAAA,UAC/D,uDACA,CACIE,4BACAC,8BAeLN,SAAAQ,gBAH4BA,CAACN,SAAUO,aAAc,EAAAN,OAAAA,UAAS,0CAA2C,CACxGD,kBACAO,qBACD"}