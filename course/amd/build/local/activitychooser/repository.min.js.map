{"version":3,"sources":["../../../src/local/activitychooser/repository.js"],"names":["activityModules","courseid","ajax","call","methodname","args","favouriteModule","modName","modID","componentname","contentitemid","unfavouriteModule","fetchFooterData","sectionid"],"mappings":"0RAqBA,yEASO,GAAMA,CAAAA,eAAe,CAAG,SAACC,QAAD,CAAc,CAOzC,MAAOC,eAAKC,IAAL,CAAU,CAND,CACZC,UAAU,CAAE,sCADA,CAEZC,IAAI,CAAE,CACFJ,QAAQ,CAAEA,QADR,CAFM,CAMC,CAAV,EAAqB,CAArB,CACV,CARM,C,yCAmBA,GAAMK,CAAAA,eAAe,CAAG,SAACC,OAAD,CAAUC,KAAV,CAAoB,CAQ/C,MAAON,eAAKC,IAAL,CAAU,CAPD,CACZC,UAAU,CAAE,iDADA,CAEZC,IAAI,CAAE,CACFI,aAAa,CAAEF,OADb,CAEFG,aAAa,CAAEF,KAFb,CAFM,CAOC,CAAV,EAAqB,CAArB,CACV,CATM,C,yCAoBA,GAAMG,CAAAA,iBAAiB,CAAG,SAACJ,OAAD,CAAUC,KAAV,CAAoB,CAQjD,MAAON,eAAKC,IAAL,CAAU,CAPD,CACZC,UAAU,CAAE,sDADA,CAEZC,IAAI,CAAE,CACFI,aAAa,CAAEF,OADb,CAEFG,aAAa,CAAEF,KAFb,CAFM,CAOC,CAAV,EAAqB,CAArB,CACV,CATM,C,6CAmBA,GAAMI,CAAAA,eAAe,CAAG,SAACX,QAAD,CAAWY,SAAX,CAAyB,CAQpD,MAAOX,eAAKC,IAAL,CAAU,CAPD,CACZC,UAAU,CAAE,yCADA,CAEZC,IAAI,CAAE,CACFJ,QAAQ,CAAEA,QADR,CAEFY,SAAS,CAAEA,SAFT,CAFM,CAOC,CAAV,EAAqB,CAArB,CACV,CATM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @module     core_course/repository\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ajax from 'core/ajax';\n\n/**\n * Fetch all the information on modules we'll need in the activity chooser.\n *\n * @method activityModules\n * @param {Number} courseid What course to fetch the modules for\n * @return {object} jQuery promise\n */\nexport const activityModules = (courseid) => {\n    const request = {\n        methodname: 'core_course_get_course_content_items',\n        args: {\n            courseid: courseid,\n        },\n    };\n    return ajax.call([request])[0];\n};\n\n/**\n * Given a module name, module ID & the current course we want to specify that the module\n * is a users' favourite.\n *\n * @method favouriteModule\n * @param {String} modName Frankenstyle name of the component to add favourite\n * @param {int} modID ID of the module. Mainly for LTI cases where they have same / similar names\n * @return {object} jQuery promise\n */\nexport const favouriteModule = (modName, modID) => {\n    const request = {\n        methodname: 'core_course_add_content_item_to_user_favourites',\n        args: {\n            componentname: modName,\n            contentitemid: modID,\n        },\n    };\n    return ajax.call([request])[0];\n};\n\n/**\n * Given a module name, module ID & the current course we want to specify that the module\n * is no longer a users' favourite.\n *\n * @method unfavouriteModule\n * @param {String} modName Frankenstyle name of the component to add favourite\n * @param {int} modID ID of the module. Mainly for LTI cases where they have same / similar names\n * @return {object} jQuery promise\n */\nexport const unfavouriteModule = (modName, modID) => {\n    const request = {\n        methodname: 'core_course_remove_content_item_from_user_favourites',\n        args: {\n            componentname: modName,\n            contentitemid: modID,\n        },\n    };\n    return ajax.call([request])[0];\n};\n\n/**\n * Fetch all the information on modules we'll need in the activity chooser.\n *\n * @method fetchFooterData\n * @param {Number} courseid What course to fetch the data for\n * @param {Number} sectionid What section to fetch the data for\n * @return {object} jQuery promise\n */\nexport const fetchFooterData = (courseid, sectionid) => {\n    const request = {\n        methodname: 'core_course_get_activity_chooser_footer',\n        args: {\n            courseid: courseid,\n            sectionid: sectionid,\n        },\n    };\n    return ajax.call([request])[0];\n};\n"],"file":"repository.min.js"}