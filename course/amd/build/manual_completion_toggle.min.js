define ("core_course/manual_completion_toggle",["exports","core/templates","core/notification","core_course/repository","core_course/events"],function(_exports,_templates,_notification,_repository,CourseEvents){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.init=void 0;_templates=_interopRequireDefault(_templates);_notification=_interopRequireDefault(_notification);CourseEvents=_interopRequireWildcard(CourseEvents);function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(null===obj||"object"!=typeof obj&&"function"!=typeof obj){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if("default"!=key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const SELECTORS={MANUAL_TOGGLE:"button[data-action=toggle-manual-completion]"},TOGGLE_TYPES={TOGGLE_MARK_DONE:"manual:mark-done",TOGGLE_UNDO:"manual:undo"};let registered=!1;const init=()=>{if(registered){return}document.addEventListener("click",e=>{const toggleButton=e.target.closest(SELECTORS.MANUAL_TOGGLE);if(toggleButton){e.preventDefault();toggleManualCompletionState(toggleButton).catch(_notification.default.exception)}});registered=!0};_exports.init=init;const toggleManualCompletionState=async toggleButton=>{const originalInnerHtml=toggleButton.innerHTML;toggleButton.setAttribute("disabled","disabled");const toggleType=toggleButton.getAttribute("data-toggletype"),cmid=toggleButton.getAttribute("data-cmid"),activityname=toggleButton.getAttribute("data-activityname"),completed=toggleType===TOGGLE_TYPES.TOGGLE_MARK_DONE,loadingHtml=await _templates.default.render("core/loading",{});await _templates.default.replaceNodeContents(toggleButton,loadingHtml,"");try{await(0,_repository.toggleManualCompletion)(cmid,completed);const renderObject=await _templates.default.renderForPromise("core_course/completion_manual",{cmid:cmid,activityname:activityname,overallcomplete:completed,overallincomplete:!completed,istrackeduser:!0}),replacedNode=await _templates.default.replaceNode(toggleButton,renderObject.html,renderObject.js),newToggleButton=replacedNode.pop(),withAvailability=toggleButton.getAttribute("data-withavailability"),toggledEvent=new CustomEvent(CourseEvents.manualCompletionToggled,{bubbles:!0,detail:{cmid,activityname,completed,withAvailability}});newToggleButton.dispatchEvent(toggledEvent)}catch(exception){toggleButton.removeAttribute("disabled");toggleButton.innerHTML=originalInnerHtml;_notification.default.exception(exception)}}});
//# sourceMappingURL=manual_completion_toggle.min.js.map
