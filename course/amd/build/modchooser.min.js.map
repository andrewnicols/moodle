{"version":3,"sources":["../src/modchooser.js"],"names":["getCaller","target","sectionDiv","closest","selectors","elements","section","hasAttribute","sectionmodchooser","init","courseId","chooserConfig","chooserInstance","getChooser","ModChooser","tabMode","tabmode","showChooser","e","chooser","setCaller","show","document","addEventListener"],"mappings":"wNAuBA,OACA,O,sDAEMA,CAAAA,CAAS,CAAG,SAAAC,CAAM,CAAI,CAGxB,GAAMC,CAAAA,CAAU,CAAGD,CAAM,CAACE,OAAP,CAAeC,UAAUC,QAAV,CAAmBC,OAAlC,CAAnB,CAEA,GAAmB,IAAf,GAAAJ,CAAU,EAAaA,CAAU,CAACK,YAAX,CAAwB,gBAAxB,CAA3B,CAAsE,CAElE,MAAOL,CAAAA,CACV,CAQD,MAAOD,CAAAA,CAAM,CAACE,OAAP,CAAeC,UAAUC,QAAV,CAAmBG,iBAAlC,CACV,C,QAEmB,QAAPC,CAAAA,IAAO,CAACC,CAAD,CAAWC,CAAX,CAA6B,IACzCC,CAAAA,CADyC,CAEvCC,CAAU,CAAG,UAAM,CACrB,GAAI,CAACD,CAAL,CAAsB,CAClBA,CAAe,CAAG,GAAIE,UAAJ,CAAeJ,CAAf,CAAlB,CACAE,CAAe,CAACG,OAAhB,CAA0BJ,CAAa,CAACK,OAC3C,CAED,MAAOJ,CAAAA,CACV,CAT4C,CAWvCK,CAAW,CAAG,SAAAC,CAAC,CAAI,CACrB,GAAI,CAACA,CAAC,CAACjB,MAAF,CAASE,OAAT,CAAiBC,UAAUC,QAAV,CAAmBG,iBAApC,CAAL,CAA6D,CACzD,MACH,CAED,GAAMW,CAAAA,CAAO,CAAGN,CAAU,EAA1B,CACAM,CAAO,CAACC,SAAR,CAAkBpB,CAAS,CAACkB,CAAC,CAACjB,MAAH,CAA3B,EACAkB,CAAO,CAACE,IAAR,EACH,CAnB4C,CAqB7CC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCN,CAAnC,CACH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing modules in a course.\n *\n * @module     core_course/activitychooser\n * @copyright  2021 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport ModChooser from './local/modchooser/itemchooser';\n\nconst getCaller = target => {\n    // We need to know who called this.\n    // Standard courses use the ID in the main section info.\n    const sectionDiv = target.closest(selectors.elements.section);\n\n    if (sectionDiv !== null && sectionDiv.hasAttribute('data-sectionid')) {\n        // We check for attributes just in case of outdated contrib course formats.\n        return sectionDiv;\n    }\n\n    // If we don't have a section ID use the fallback ID.\n    // We always want the sectionDiv caller first as it keeps track of section ID's after DnD changes.\n    // The button attribute is always just a fallback for us as the section div is not always available.\n    // A YUI change could be done maybe to only update the button attribute but we are going for minimal change here.\n\n    // Front page courses need some special handling.\n    return target.closest(selectors.elements.sectionmodchooser);\n};\n\nexport const init = (courseId, chooserConfig) => {\n    let chooserInstance;\n    const getChooser = () => {\n        if (!chooserInstance) {\n            chooserInstance = new ModChooser(courseId);\n            chooserInstance.tabMode = chooserConfig.tabmode;\n        }\n\n        return chooserInstance;\n    };\n\n    const showChooser = e => {\n        if (!e.target.closest(selectors.elements.sectionmodchooser)) {\n            return;\n        }\n\n        const chooser = getChooser();\n        chooser.setCaller(getCaller(e.target));\n        chooser.show();\n    };\n\n    document.addEventListener('click', showChooser);\n};\n"],"file":"modchooser.min.js"}