{"version":3,"file":"modal_add_random_question.min.js","sources":["../src/modal_add_random_question.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for the add random question modal.\n *\n * @module     mod_quiz/modal_add_random_question\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Modal from './add_question_modal';\nimport * as Notification from 'core/notification';\nimport * as Fragment from 'core/fragment';\nimport * as Templates from 'core/templates';\nimport * as FormChangeChecker from 'core_form/changechecker';\n\nconst SELECTORS = {\n    EXISTING_CATEGORY_CONTAINER: '[data-region=\"existing-category-container\"]',\n    EXISTING_CATEGORY_FORM_ELEMENT: '#id_existingcategoryheader',\n    NEW_CATEGORY_CONTAINER: '[data-region=\"new-category-container\"]',\n    NEW_CATEGORY_FORM_ELEMENT: '#id_newcategoryheader',\n    TAB_CONTENT: '[data-region=\"tab-content\"]',\n    ADD_ON_PAGE_FORM_ELEMENT: '[name=\"addonpage\"]',\n    SUBMIT_BUTTON_ELEMENT: 'input[type=\"submit\"]',\n    CANCEL_BUTTON_ELEMENT: 'input[type=\"submit\"][name=\"cancel\"]',\n    FORM_HEADER: 'legend',\n    BUTTON_CONTAINER: '.fitem',\n};\n\nexport default class ModalAddRandomQuestion extends Modal {\n    static TYPE = 'mod_quiz-quiz-add-random-question';\n    static TEMPLATE = 'mod_quiz/modal_add_random_question';\n\n    /**\n     * Create the add random question modal.\n     *\n     * @param  {Number} contextId Current context id.\n     * @param  {string} category Category id and category context id comma separated.\n     * @param  {string} returnUrl URL to return to after form submission.\n     * @param  {Number} cmid Current course module id.\n     * @param  {boolean} showNewCategory Display the New category tab when selecting random questions.\n     */\n    static init(contextId, category, returnUrl, cmid, showNewCategory = true) {\n        const selector = '.menu [data-action=\"addarandomquestion\"]';\n        document.addEventListener('click', (e) => {\n            const trigger = e.target.closest(selector);\n            if (!trigger) {\n                return;\n            }\n            e.preventDefault();\n\n            ModalAddRandomQuestion.create({\n                contextId,\n                category,\n                returnUrl,\n                cmid,\n\n                title: trigger.dataset.header,\n                addOnPage: trigger.dataset.addonpage,\n\n                templateContext: {\n                    hidden: showNewCategory,\n                },\n            });\n        });\n    }\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    constructor(root) {\n        super(root);\n        this.category = null;\n        this.returnUrl = null;\n        this.cmid = null;\n        this.loadedForm = false;\n    }\n\n    configure(modalConfig) {\n        this.setCategory(modalConfig.category);\n        this.setReturnUrl(modalConfig.returnUrl);\n        this.setCMID(modalConfig.cmid);\n\n        super.configure(modalConfig);\n    }\n\n    /**\n     * Set the id of the page that the question should be added to\n     * when the user clicks the add to quiz link.\n     *\n     * @method setAddOnPageId\n     * @param {int} id\n     */\n    setAddOnPageId(id) {\n        super.setAddOnPageId(id);\n        this.getBody().find(SELECTORS.ADD_ON_PAGE_FORM_ELEMENT).val(id);\n    }\n\n    /**\n     * Set the category for this form. The category is a comma separated\n     * category id and category context id.\n     *\n     * @method setCategory\n     * @param {string} category\n     */\n    setCategory(category) {\n        this.category = category;\n    }\n\n    /**\n     * Returns the saved category.\n     *\n     * @method getCategory\n     * @return {string}\n     */\n    getCategory() {\n        return this.category;\n    }\n\n    /**\n     * Set the return URL for the form.\n     *\n     * @method setReturnUrl\n     * @param {string} url\n     */\n    setReturnUrl(url) {\n        this.returnUrl = url;\n    }\n\n    /**\n     * Returns the return URL for the form.\n     *\n     * @method getReturnUrl\n     * @return {string}\n     */\n    getReturnUrl() {\n        return this.returnUrl;\n    }\n\n    /**\n     * Set the course module id for the form.\n     *\n     * @method setCMID\n     * @param {Number} id\n     */\n    setCMID(id) {\n        this.cmid = id;\n    }\n\n    /**\n     * Returns the course module id for the form.\n     *\n     * @method getCMID\n     * @return {Number}\n     */\n    getCMID() {\n        return this.cmid;\n    }\n\n    /**\n     * Moves a given form element inside (a child of) a given tab element.\n     *\n     * Hides the 'legend' (e.g. header) element of the form element because the\n     * tab has the name.\n     *\n     * Moves the submit button into a footer element at the bottom of the form\n     * element for styling purposes.\n     *\n     * @method moveFormElementIntoTab\n     * @param  {jquery} formElement The form element to move into the tab.\n     * @param  {jquey} tabElement The tab element for the form element to move into.\n     */\n    moveFormElementIntoTab(formElement, tabElement) {\n        const submitButtons = formElement.find(SELECTORS.SUBMIT_BUTTON_ELEMENT);\n        const footer = $('<div class=\"modal-footer mt-1\" data-region=\"footer\"></div>');\n        // Hide the header because the tabs show us which part of the form we're\n        // looking at.\n        formElement.find(SELECTORS.FORM_HEADER).addClass('hidden');\n        // Move the element inside a tab.\n        formElement.wrap(tabElement);\n        // Remove the buttons container element.\n        submitButtons.closest(SELECTORS.BUTTON_CONTAINER).remove();\n        // Put the button inside a footer.\n        submitButtons.appendTo(footer);\n        // Add the footer to the end of the category form element.\n        footer.appendTo(formElement);\n    }\n\n    /**\n     * Empty the tab content container and move all tabs from the form into the\n     * tab container element.\n     *\n     * @method moveTabsIntoTabContent\n     * @param  {jquery} form The form element.\n     */\n    moveTabsIntoTabContent(form) {\n        // Empty it to remove the loading icon.\n        const tabContent = this.getBody().find(SELECTORS.TAB_CONTENT).empty();\n        // Make sure all tabs are inside the tab content element.\n        form.find('[role=\"tabpanel\"]').wrapAll(tabContent);\n    }\n\n    /**\n     * Make sure all of the tabs have a cancel button in their fotter to sit along\n     * side the submit button.\n     *\n     * @method moveCancelButtonToTabs\n     * @param  {jquey} form The form element.\n     */\n    moveCancelButtonToTabs(form) {\n        const cancelButton = form.find(SELECTORS.CANCEL_BUTTON_ELEMENT).addClass('ml-1');\n        const tabFooters = form.find('[data-region=\"footer\"]');\n        // Remove the buttons container element.\n        cancelButton.closest(SELECTORS.BUTTON_CONTAINER).remove();\n        cancelButton.clone().appendTo(tabFooters);\n    }\n\n    /**\n     * Load the add random question form in a fragement and perform some transformation\n     * on the HTML to convert it into tabs for rendering in the modal.\n     *\n     * @method loadForm\n     * @return {promise} Resolved with form HTML and JS.\n     */\n    loadForm() {\n        return Fragment.loadFragment(\n            'mod_quiz',\n            'add_random_question_form',\n            this.getContextId(),\n            {\n                addonpage: this.getAddOnPageId(),\n                cat: this.getCategory(),\n                returnurl: this.getReturnUrl(),\n                cmid: this.getCMID()\n            }\n        )\n        .then((html, js) =>{\n            const form = $(html);\n            const existingCategoryFormElement = form.find(SELECTORS.EXISTING_CATEGORY_FORM_ELEMENT);\n            const existingCategoryTab = this.getBody().find(SELECTORS.EXISTING_CATEGORY_CONTAINER);\n            const newCategoryFormElement = form.find(SELECTORS.NEW_CATEGORY_FORM_ELEMENT);\n            const newCategoryTab = this.getBody().find(SELECTORS.NEW_CATEGORY_CONTAINER);\n\n            // Transform the form into tabs for better rendering in the modal.\n            this.moveFormElementIntoTab(existingCategoryFormElement, existingCategoryTab);\n            this.moveFormElementIntoTab(newCategoryFormElement, newCategoryTab);\n            this.moveTabsIntoTabContent(form);\n            this.moveCancelButtonToTabs(form);\n\n            Templates.replaceNode(this.getBody().find(SELECTORS.TAB_CONTENT), form, js);\n            return;\n        })\n        .then(() => {\n            // Make sure the form change checker is disabled otherwise it'll stop the user from navigating away from the\n            // page once the modal is hidden.\n            FormChangeChecker.disableAllChecks();\n            return;\n        })\n        .catch(Notification.exception);\n    }\n\n    /**\n     * Override the modal show function to load the form when this modal is first\n     * shown.\n     *\n     * @method show\n     */\n    show() {\n        super.show(this);\n\n        if (!this.loadedForm) {\n            this.loadForm();\n            this.loadedForm = true;\n        }\n    }\n}\n\nModalAddRandomQuestion.registerModalType();\n"],"names":["SELECTORS","ModalAddRandomQuestion","Modal","contextId","category","returnUrl","cmid","showNewCategory","document","addEventListener","e","trigger","target","closest","preventDefault","create","title","dataset","header","addOnPage","addonpage","templateContext","hidden","constructor","root","loadedForm","configure","modalConfig","setCategory","setReturnUrl","setCMID","setAddOnPageId","id","getBody","find","val","getCategory","this","url","getReturnUrl","getCMID","moveFormElementIntoTab","formElement","tabElement","submitButtons","footer","addClass","wrap","remove","appendTo","moveTabsIntoTabContent","form","tabContent","empty","wrapAll","moveCancelButtonToTabs","cancelButton","tabFooters","clone","loadForm","Fragment","loadFragment","getContextId","getAddOnPageId","cat","returnurl","then","html","js","existingCategoryFormElement","existingCategoryTab","newCategoryFormElement","newCategoryTab","Templates","replaceNode","FormChangeChecker","disableAllChecks","catch","Notification","exception","show","registerModalType"],"mappings":"4zDA8BMA,sCAC2B,8CAD3BA,yCAE8B,6BAF9BA,iCAGsB,yCAHtBA,oCAIyB,wBAJzBA,sBAKW,8BALXA,mCAMwB,qBANxBA,gCAOqB,uBAPrBA,gCAQqB,sCARrBA,sBASW,SATXA,2BAUgB,eAGDC,+BAA+BC,wCAapCC,UAAWC,SAAUC,UAAWC,UAAMC,2EAE9CC,SAASC,iBAAiB,SAAUC,UAC1BC,QAAUD,EAAEE,OAAOC,QAFZ,4CAGRF,UAGLD,EAAEI,iBAEFb,uBAAuBc,OAAO,CAC1BZ,UAAAA,UACAC,SAAAA,SACAC,UAAAA,UACAC,KAAAA,KAEAU,MAAOL,QAAQM,QAAQC,OACvBC,UAAWR,QAAQM,QAAQG,UAE3BC,gBAAiB,CACbC,OAAQf,uBAWxBgB,YAAYC,YACFA,WACDpB,SAAW,UACXC,UAAY,UACZC,KAAO,UACPmB,YAAa,EAGtBC,UAAUC,kBACDC,YAAYD,YAAYvB,eACxByB,aAAaF,YAAYtB,gBACzByB,QAAQH,YAAYrB,YAEnBoB,UAAUC,aAUpBI,eAAeC,UACLD,eAAeC,SAChBC,UAAUC,KAAKlC,oCAAoCmC,IAAIH,IAUhEJ,YAAYxB,eACHA,SAAWA,SASpBgC,qBACWC,KAAKjC,SAShByB,aAAaS,UACJjC,UAAYiC,IASrBC,sBACWF,KAAKhC,UAShByB,QAAQE,SACC1B,KAAO0B,GAShBQ,iBACWH,KAAK/B,KAgBhBmC,uBAAuBC,YAAaC,kBAC1BC,cAAgBF,YAAYR,KAAKlC,iCACjC6C,QAAS,mBAAE,8DAGjBH,YAAYR,KAAKlC,uBAAuB8C,SAAS,UAEjDJ,YAAYK,KAAKJ,YAEjBC,cAAc/B,QAAQb,4BAA4BgD,SAElDJ,cAAcK,SAASJ,QAEvBA,OAAOI,SAASP,aAUpBQ,uBAAuBC,YAEbC,WAAaf,KAAKJ,UAAUC,KAAKlC,uBAAuBqD,QAE9DF,KAAKjB,KAAK,qBAAqBoB,QAAQF,YAU3CG,uBAAuBJ,YACbK,aAAeL,KAAKjB,KAAKlC,iCAAiC8C,SAAS,QACnEW,WAAaN,KAAKjB,KAAK,0BAE7BsB,aAAa3C,QAAQb,4BAA4BgD,SACjDQ,aAAaE,QAAQT,SAASQ,YAUlCE,kBACWC,SAASC,aACZ,WACA,2BACAxB,KAAKyB,eACL,CACI1C,UAAWiB,KAAK0B,iBAChBC,IAAK3B,KAAKD,cACV6B,UAAW5B,KAAKE,eAChBjC,KAAM+B,KAAKG,YAGlB0B,MAAK,CAACC,KAAMC,YACHjB,MAAO,mBAAEgB,MACTE,4BAA8BlB,KAAKjB,KAAKlC,0CACxCsE,oBAAsBjC,KAAKJ,UAAUC,KAAKlC,uCAC1CuE,uBAAyBpB,KAAKjB,KAAKlC,qCACnCwE,eAAiBnC,KAAKJ,UAAUC,KAAKlC,uCAGtCyC,uBAAuB4B,4BAA6BC,0BACpD7B,uBAAuB8B,uBAAwBC,qBAC/CtB,uBAAuBC,WACvBI,uBAAuBJ,MAE5BsB,UAAUC,YAAYrC,KAAKJ,UAAUC,KAAKlC,uBAAwBmD,KAAMiB,OAG3EF,MAAK,KAGFS,kBAAkBC,sBAGrBC,MAAMC,aAAaC,WASxBC,aACUA,KAAK3C,MAENA,KAAKZ,kBACDkC,gBACAlC,YAAa,mEArPTxB,8BACH,qDADGA,kCAEC,sCAwPtBA,uBAAuBgF"}