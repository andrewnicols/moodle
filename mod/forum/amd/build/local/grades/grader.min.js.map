{"version":3,"sources":["../../../src/local/grades/grader.js"],"names":["templateNames","grader","app","gradingPanel","error","searchResults","status","displayUserPicker","root","html","pickerRegion","querySelector","Selectors","regions","Templates","replaceNodeContents","fetchContentFromRender","js","getUpdateUserContentFunction","getContentForUser","getGradeForUser","saveGradeForUser","firstLoad","user","spinner","userGrade","Promise","all","id","then","moduleReplace","gradingPanelHtml","gradingPanelJS","render","templatename","grade","panelContainer","gradingPanelContainer","panel","form","addEventListener","event","preventDefault","scrollTop","resolve","showSearchResultContainer","bodyContainer","userPickerContainer","searchResultsContainer","classList","add","remove","hideSearchResultContainer","showUserSearchInput","toggleSearchButton","searchContainer","searchInput","setAttribute","gradingInfoContainer","parentElement","collapseGradingDrawer","buttons","focus","hideUserSearchInput","removeAttribute","value","searchForUsers","userList","searchTerm","toLowerCase","filter","fullname","includes","renderSearchResults","users","renderForPromise","registerEventListeners","graderLayout","userPicker","saveGradeFunction","graderContainer","getContainer","toggleSearch","searchInputContainer","userSearchContainer","userSearchInput","e","target","closest","toggleFullscreen","stopImmediatePropagation","closeGrader","close","saveGrade","currentUser","getAttribute","innerHTML","selectUserButton","selectUser","userId","find","setUserId","showUser","DrawerEvents","DRAWER_HIDDEN","drawerRoot","setContentContainerMargin","DRAWER_SHOWN","offsetWidth","rightMargin","contentContainer","moduleContainer","style","marginRight","getSaveUserGradeFunction","setGradeForUser","gradingPanelErrors","result","values","sendStudentNotifications","success","failed","displayGradingError","err","errorString","message","type","launch","getListOfUsers","initialUserId","moduleName","courseName","courseUrl","focusOnClose","length","fullscreen","showLoader","drawer","show","defaultsendnotifications","updateUserContent","userIds","map","statusContainer","renderContext","hasgrade","index","indexOf","total","catch","rootNode","view","userid","modal","Modal","create","title","large","types","CANCEL","getRoot","on","ModalEvents","hidden","destroy","output","document","createElement","gradeHTML","gradeJS","renderGradeTemplate","gradeReplace","setBody","outerHTML"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/local/grades/grader\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\nimport Selectors from './local/grader/selectors';\nimport getUserPicker from './local/grader/user_picker';\nimport {createLayout as createFullScreenWindow} from 'mod_forum/local/layout/fullscreen';\nimport getGradingPanelFunctions from './local/grader/gradingpanel';\nimport {add as addToast} from 'core/toast';\nimport {addNotification} from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {failedUpdate} from 'core_grades/grades/grader/gradingpanel/normalise';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\nimport {debounce} from 'core/utils';\nimport {fillInitialValues} from 'core_grades/grades/grader/gradingpanel/comparison';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport {subscribe} from 'core/pubsub';\nimport DrawerEvents from 'core/drawer_events';\n\nconst templateNames = {\n    grader: {\n        app: 'mod_forum/local/grades/grader',\n        gradingPanel: {\n            error: 'mod_forum/local/grades/local/grader/gradingpanel/error',\n        },\n        searchResults: 'mod_forum/local/grades/local/grader/user_picker/user_search',\n        status: 'mod_forum/local/grades/local/grader/status',\n    },\n};\n\n/**\n * Helper function that replaces the user picker placeholder with what we get back from the user picker class.\n *\n * @param {HTMLElement} root\n * @param {String} html\n */\nconst displayUserPicker = (root, html) => {\n    const pickerRegion = root.querySelector(Selectors.regions.pickerRegion);\n    Templates.replaceNodeContents(pickerRegion, html, '');\n};\n\n/**\n * To be removed, this is now done as a part of Templates.renderForPromise()\n *\n * @param {String} html\n * @param {String} js\n * @returns {array} An array containing the HTML, and JS.\n */\nconst fetchContentFromRender = (html, js) => {\n    return [html, js];\n};\n\n/**\n * Here we build the function that is passed to the user picker that'll handle updating the user content area\n * of the grading interface.\n *\n * @param {HTMLElement} root\n * @param {Function} getContentForUser\n * @param {Function} getGradeForUser\n * @param {Function} saveGradeForUser\n * @return {Function}\n */\nconst getUpdateUserContentFunction = (root, getContentForUser, getGradeForUser, saveGradeForUser) => {\n    let firstLoad = true;\n\n    return async(user) => {\n        const spinner = firstLoad ? null : addIconToContainerWithPromise(root);\n        const [\n            [html, js],\n            userGrade,\n        ] = await Promise.all([\n            getContentForUser(user.id).then(fetchContentFromRender),\n            getGradeForUser(user.id),\n        ]);\n        Templates.replaceNodeContents(root.querySelector(Selectors.regions.moduleReplace), html, js);\n\n        const [\n            gradingPanelHtml,\n            gradingPanelJS\n        ] = await Templates.render(userGrade.templatename, userGrade.grade).then(fetchContentFromRender);\n        const panelContainer = root.querySelector(Selectors.regions.gradingPanelContainer);\n        const panel = panelContainer.querySelector(Selectors.regions.gradingPanel);\n        Templates.replaceNodeContents(panel, gradingPanelHtml, gradingPanelJS);\n\n        const form = panel.querySelector('form');\n        fillInitialValues(form);\n\n        form.addEventListener('submit', event => {\n            saveGradeForUser(user);\n            event.preventDefault();\n        });\n\n        panelContainer.scrollTop = 0;\n        firstLoad = false;\n\n        if (spinner) {\n            spinner.resolve();\n        }\n        return userGrade;\n    };\n};\n\n/**\n * Show the search results container and hide the user picker and body content.\n *\n * @param {HTMLElement} bodyContainer The container element for the body content\n * @param {HTMLElement} userPickerContainer The container element for the user picker\n * @param {HTMLElement} searchResultsContainer The container element for the search results\n */\nconst showSearchResultContainer = (bodyContainer, userPickerContainer, searchResultsContainer) => {\n    bodyContainer.classList.add('hidden');\n    userPickerContainer.classList.add('hidden');\n    searchResultsContainer.classList.remove('hidden');\n};\n\n/**\n * Hide the search results container and show the user picker and body content.\n *\n * @param {HTMLElement} bodyContainer The container element for the body content\n * @param {HTMLElement} userPickerContainer The container element for the user picker\n * @param {HTMLElement} searchResultsContainer The container element for the search results\n */\nconst hideSearchResultContainer = (bodyContainer, userPickerContainer, searchResultsContainer) => {\n    bodyContainer.classList.remove('hidden');\n    userPickerContainer.classList.remove('hidden');\n    searchResultsContainer.classList.add('hidden');\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst showUserSearchInput = (toggleSearchButton, searchContainer, searchInput) => {\n    searchContainer.classList.remove('collapsed');\n    toggleSearchButton.setAttribute('aria-expanded', 'true');\n    toggleSearchButton.classList.add('expand');\n    toggleSearchButton.classList.remove('collapse');\n\n    // Hide the grading info container from screen reader.\n    const gradingInfoContainer = searchContainer.parentElement.querySelector(Selectors.regions.gradingInfoContainer);\n    gradingInfoContainer.setAttribute('aria-hidden', 'true');\n\n    // Hide the collapse grading drawer button from screen reader.\n    const collapseGradingDrawer = searchContainer.parentElement.querySelector(Selectors.buttons.collapseGradingDrawer);\n    collapseGradingDrawer.setAttribute('aria-hidden', 'true');\n    collapseGradingDrawer.setAttribute('tabindex', '-1');\n\n    searchInput.focus();\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst hideUserSearchInput = (toggleSearchButton, searchContainer, searchInput) => {\n    searchContainer.classList.add('collapsed');\n    toggleSearchButton.setAttribute('aria-expanded', 'false');\n    toggleSearchButton.classList.add('collapse');\n    toggleSearchButton.classList.remove('expand');\n    toggleSearchButton.focus();\n\n    // Show the grading info container to screen reader.\n    const gradingInfoContainer = searchContainer.parentElement.querySelector(Selectors.regions.gradingInfoContainer);\n    gradingInfoContainer.removeAttribute('aria-hidden');\n\n    // Show the collapse grading drawer button from screen reader.\n    const collapseGradingDrawer = searchContainer.parentElement.querySelector(Selectors.buttons.collapseGradingDrawer);\n    collapseGradingDrawer.removeAttribute('aria-hidden');\n    collapseGradingDrawer.setAttribute('tabindex', '0');\n\n    searchInput.value = '';\n};\n\n/**\n * Find the list of users who's names include the given search term.\n *\n * @param {Array} userList List of users for the grader\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchForUsers = (userList, searchTerm) => {\n    if (searchTerm === '') {\n        return userList;\n    }\n\n    searchTerm = searchTerm.toLowerCase();\n\n    return userList.filter((user) => {\n        return user.fullname.toLowerCase().includes(searchTerm);\n    });\n};\n\n/**\n * Render the list of users in the search results area.\n *\n * @param {HTMLElement} searchResultsContainer The container element for search results\n * @param {Array} users The list of users to display\n */\nconst renderSearchResults = async(searchResultsContainer, users) => {\n    const {html, js} = await Templates.renderForPromise(templateNames.grader.searchResults, {users});\n    Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Add click handlers to the buttons in the header of the grading interface.\n *\n * @param {HTMLElement} graderLayout\n * @param {Object} userPicker\n * @param {Function} saveGradeFunction\n * @param {Array} userList List of users for the grader.\n */\nconst registerEventListeners = (graderLayout, userPicker, saveGradeFunction, userList) => {\n    const graderContainer = graderLayout.getContainer();\n    const toggleSearchButton = graderContainer.querySelector(Selectors.buttons.toggleSearch);\n    const searchInputContainer = graderContainer.querySelector(Selectors.regions.userSearchContainer);\n    const searchInput = searchInputContainer.querySelector(Selectors.regions.userSearchInput);\n    const bodyContainer = graderContainer.querySelector(Selectors.regions.bodyContainer);\n    const userPickerContainer = graderContainer.querySelector(Selectors.regions.pickerRegion);\n    const searchResultsContainer = graderContainer.querySelector(Selectors.regions.searchResultsContainer);\n\n    graderContainer.addEventListener('click', (e) => {\n        if (e.target.closest(Selectors.buttons.toggleFullscreen)) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            graderLayout.toggleFullscreen();\n\n            return;\n        }\n\n        if (e.target.closest(Selectors.buttons.closeGrader)) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            graderLayout.close();\n\n            return;\n        }\n\n        if (e.target.closest(Selectors.buttons.saveGrade)) {\n            saveGradeFunction(userPicker.currentUser);\n        }\n\n        if (e.target.closest(Selectors.buttons.toggleSearch)) {\n            if (toggleSearchButton.getAttribute('aria-expanded') === 'true') {\n                // Search is open so let's close it.\n                hideUserSearchInput(toggleSearchButton, searchInputContainer, searchInput);\n                hideSearchResultContainer(bodyContainer, userPickerContainer, searchResultsContainer);\n                searchResultsContainer.innerHTML = '';\n            } else {\n                // Search is closed so let's open it.\n                showUserSearchInput(toggleSearchButton, searchInputContainer, searchInput);\n                showSearchResultContainer(bodyContainer, userPickerContainer, searchResultsContainer);\n                renderSearchResults(searchResultsContainer, userList);\n            }\n\n            return;\n        }\n\n        const selectUserButton = e.target.closest(Selectors.buttons.selectUser);\n        if (selectUserButton) {\n            const userId = selectUserButton.getAttribute('data-userid');\n            const user = userList.find(user => user.id == userId);\n            userPicker.setUserId(userId);\n            userPicker.showUser(user);\n            hideUserSearchInput(toggleSearchButton, searchInputContainer, searchInput);\n            hideSearchResultContainer(bodyContainer, userPickerContainer, searchResultsContainer);\n            searchResultsContainer.innerHTML = '';\n        }\n    });\n\n    // Debounce the search input so that it only executes 300 milliseconds after the user has finished typing.\n    searchInput.addEventListener('input', debounce(() => {\n        const users = searchForUsers(userList, searchInput.value);\n        renderSearchResults(searchResultsContainer, users);\n    }, 300));\n\n    // Remove the right margin of the content container when the grading panel is hidden so that it expands to full-width.\n    subscribe(DrawerEvents.DRAWER_HIDDEN, (drawerRoot) => {\n        const gradingPanel = drawerRoot[0];\n        if (gradingPanel.querySelector(Selectors.regions.gradingPanel)) {\n            setContentContainerMargin(graderContainer, 0);\n        }\n    });\n\n    // Bring back the right margin of the content container when the grading panel is shown to give space for the grading panel.\n    subscribe(DrawerEvents.DRAWER_SHOWN, (drawerRoot) => {\n        const gradingPanel = drawerRoot[0];\n        if (gradingPanel.querySelector(Selectors.regions.gradingPanel)) {\n            setContentContainerMargin(graderContainer, gradingPanel.offsetWidth);\n        }\n    });\n};\n\n/**\n * Adjusts the right margin of the content container.\n *\n * @param {HTMLElement} graderContainer The container for the grader app.\n * @param {Number} rightMargin The right margin value.\n */\nconst setContentContainerMargin = (graderContainer, rightMargin) => {\n    const contentContainer = graderContainer.querySelector(Selectors.regions.moduleContainer);\n    if (contentContainer) {\n        contentContainer.style.marginRight = `${rightMargin}px`;\n    }\n};\n\n/**\n * Get the function used to save a user grade.\n *\n * @param {HTMLElement} root The container for the grader\n * @param {Function} setGradeForUser The function that will be called.\n * @return {Function}\n */\nconst getSaveUserGradeFunction = (root, setGradeForUser) => {\n    return async(user) => {\n        try {\n            root.querySelector(Selectors.regions.gradingPanelErrors).innerHTML = '';\n            const result = await setGradeForUser(\n                user.id,\n                root.querySelector(Selectors.values.sendStudentNotifications).value,\n                root.querySelector(Selectors.regions.gradingPanel)\n            );\n            if (result.success) {\n                addToast(await getString('grades:gradesavedfor', 'mod_forum', user));\n            }\n            if (result.failed) {\n                displayGradingError(root, user, result.error);\n            }\n\n            return result;\n        } catch (err) {\n            displayGradingError(root, user, err);\n\n            return failedUpdate(err);\n        }\n    };\n};\n\n/**\n * Display a grading error, typically from a failed save.\n *\n * @param {HTMLElement} root The container for the grader\n * @param {Object} user The user who was errored\n * @param {Object} err The details of the error\n */\nconst displayGradingError = async(root, user, err) => {\n    const [\n        {html, js},\n        errorString\n    ] = await Promise.all([\n        Templates.renderForPromise(templateNames.grader.gradingPanel.error, {error: err}),\n        await getString('grades:gradesavefailed', 'mod_forum', {error: err.message, ...user}),\n    ]);\n\n    Templates.replaceNodeContents(root.querySelector(Selectors.regions.gradingPanelErrors), html, js);\n    addToast(errorString, {type: 'warning'});\n};\n\n/**\n * Launch the grader interface with the specified parameters.\n *\n * @param {Function} getListOfUsers A function to get the list of users\n * @param {Function} getContentForUser A function to get the content for a specific user\n * @param {Function} getGradeForUser A function get the grade details for a specific user\n * @param {Function} setGradeForUser A function to set the grade for a specific user\n * @param {Object} preferences Preferences for the launch function\n * @param {Number} preferences.initialUserId\n * @param {string} preferences.moduleName\n * @param {string} preferences.courseName\n * @param {string} preferences.courseUrl\n * @param {boolean} preferences.sendStudentNotifications\n * @param {null|HTMLElement} preferences.focusOnClose\n */\nexport const launch = async(getListOfUsers, getContentForUser, getGradeForUser, setGradeForUser, {\n    initialUserId = null,\n    moduleName,\n    courseName,\n    courseUrl,\n    sendStudentNotifications,\n    focusOnClose = null,\n} = {}) => {\n\n    // We need all of these functions to be executed in series, if one step runs before another the interface\n    // will not work.\n\n    // We need this promise to resolve separately so that we can avoid loading the whole interface if there are no users.\n    const userList = await getListOfUsers();\n    if (!userList.length) {\n        addNotification({\n            message: await getString('nouserstograde', 'core_grades'),\n            type: \"error\",\n        });\n        return;\n    }\n\n    // Now that we have confirmed there are at least some users let's boot up the grader interface.\n    const [\n        graderLayout,\n        {html, js},\n    ] = await Promise.all([\n        createFullScreenWindow({\n            fullscreen: false,\n            showLoader: false,\n            focusOnClose,\n        }),\n        Templates.renderForPromise(templateNames.grader.app, {\n            moduleName,\n            courseName,\n            courseUrl,\n            drawer: {show: true},\n            defaultsendnotifications: sendStudentNotifications,\n        }),\n    ]);\n\n    const graderContainer = graderLayout.getContainer();\n\n    const saveGradeFunction = getSaveUserGradeFunction(graderContainer, setGradeForUser);\n\n    Templates.replaceNodeContents(graderContainer, html, js);\n    const updateUserContent = getUpdateUserContentFunction(graderContainer, getContentForUser, getGradeForUser, saveGradeFunction);\n\n    const userIds = userList.map(user => user.id);\n    const statusContainer = graderContainer.querySelector(Selectors.regions.statusContainer);\n    // Fetch the userpicker for display.\n    const userPicker = await getUserPicker(\n        userList,\n        async(user) => {\n            const userGrade = await updateUserContent(user);\n            const renderContext = {\n                status: userGrade.hasgrade,\n                index: userIds.indexOf(user.id) + 1,\n                total: userList.length\n            };\n            Templates.render(templateNames.grader.status, renderContext).then(html => {\n                statusContainer.innerHTML = html;\n                return html;\n            }).catch();\n        },\n        saveGradeFunction,\n        {\n            initialUserId,\n        },\n    );\n\n    // Register all event listeners.\n    registerEventListeners(graderLayout, userPicker, saveGradeFunction, userList);\n\n    // Display the newly created user picker.\n    displayUserPicker(graderContainer, userPicker.rootNode);\n};\n\n/**\n * Show the grade for a specific user.\n *\n * @param {Function} getGradeForUser A function get the grade details for a specific user\n * @param {Number} userid The ID of a specific user\n * @param {String} moduleName the name of the module\n * @param {object} param\n * @param {null|HTMLElement} param.focusOnClose\n */\nexport const view = async(getGradeForUser, userid, moduleName, {\n    focusOnClose = null,\n} = {}) => {\n\n    const [\n        userGrade,\n        modal,\n    ] = await Promise.all([\n        getGradeForUser(userid),\n        Modal.create({\n            title: moduleName,\n            large: true,\n            type: Modal.types.CANCEL\n        }),\n    ]);\n\n    const spinner = addIconToContainerWithPromise(modal.getRoot());\n\n    // Handle hidden event.\n    modal.getRoot().on(ModalEvents.hidden, function() {\n        // Destroy when hidden.\n        modal.destroy();\n        if (focusOnClose) {\n            try {\n                focusOnClose.focus();\n            } catch (e) {\n                // eslint-disable-line\n            }\n        }\n    });\n\n    modal.show();\n    const output = document.createElement('div');\n    const {html, js} = await Templates.renderForPromise('mod_forum/local/grades/view_grade', userGrade);\n    Templates.replaceNodeContents(output, html, js);\n\n    // Note: We do not use await here because it messes with the Modal transitions.\n    const [gradeHTML, gradeJS] = await renderGradeTemplate(userGrade);\n    const gradeReplace = output.querySelector('[data-region=\"grade-template\"]');\n    Templates.replaceNodeContents(gradeReplace, gradeHTML, gradeJS);\n    modal.setBody(output.outerHTML);\n    spinner.resolve();\n};\n\nconst renderGradeTemplate = async(userGrade) => {\n    const {html, js} = await Templates.renderForPromise(userGrade.templatename, userGrade.grade);\n    return [html, js];\n};\nexport {getGradingPanelFunctions};\n"],"file":"grader.min.js"}