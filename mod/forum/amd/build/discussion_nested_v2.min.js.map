{"version":3,"sources":["../src/discussion_nested_v2.js"],"names":["getPostContainer","element","closest","Selectors","post","getPostContainerById","id","find","getParentPostContainers","parents","getPostContentContainer","postContainer","children","not","repliesContainer","forumCoreContent","getInPageReplyContainer","filter","inpageReplyContainer","getInPageReplyForm","inpageReplyContent","getInPageReplyCreateButton","inpageReplyCreateButton","getRepliesVisibilityToggleContainer","repliesVisibilityToggleContainer","getRepliesContainer","hasReplies","length","getShowRepliesButton","replyVisibilityToggleContainer","showReplies","getHideRepliesButton","hideReplies","repliesVisible","is","postIdToSee","showButton","hideButton","addClass","removeClass","slideDown","duration","queue","complete","postContainerToSee","scrollIntoView","css","fadeIn","slideUp","fadeOut","showInPageReplyForm","buildShowInPageReplyFormFunction","additionalTemplateContext","inPageReplyContainer","inPageReplyCreateButton","hasInPageReplyForm","renderInPageReplyTemplate","html","Templates","appendNodeContents","Notification","exception","FormChangeChecker","watchForm","querySelector","inPageReplyForm","focus","hideInPageReplyForm","button","postContentContainer","currentSubject","forumSubject","text","currentAuthorName","authorName","context","postid","data","attr","sesskey","M","cfg","parentsubject","parentauthorname","canreplyprivately","postformat","InPageReply","CONTENT_FORMATS","MOODLE","render","incrementTotalReplyCount","replyCount","each","index","currentCount","parseInt","innerText","registerEventListeners","root","CustomEvents","define","events","activate","AutoRows","init","on","e","originalEvent","preventDefault","currentTarget","inpageReplyCancelButton","target","EVENTS","POST_CREATED","inpageSubmitBtn","newPostId","postContainers","container","Discussion","discussionToolsContainer","discussion","tools","LockToggle","FavouriteToggle","toggleElement","response","newTargetState","userstate","favourited","Pin","pinned","Subscribe","subscribed"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module for viewing a discussion in nested v2 view.\n *\n * @module mod_Forum/discussion_nested_v2\n * @copyright  2019 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport AutoRows from 'core/auto_rows';\nimport CustomEvents from 'core/custom_interaction_events';\nimport * as FormChangeChecker from 'core_form/changechecker';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Discussion from 'mod_forum/discussion';\nimport InPageReply from 'mod_forum/inpage_reply';\nimport LockToggle from 'mod_forum/lock_toggle';\nimport FavouriteToggle from 'mod_forum/favourite_toggle';\nimport Pin from 'mod_forum/pin_toggle';\nimport Selectors from 'mod_forum/selectors';\nimport Subscribe from 'mod_forum/subscription_toggle';\n\nconst ANIMATION_DURATION = 150;\n\n/**\n * Get the closest post container element from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @return {Object} jQuery element\n */\nconst getPostContainer = (element) => {\n    return element.closest(Selectors.post.post);\n};\n\n/**\n * Get the closest post container element from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @param {Number} id Id of the post to find.\n * @return {Object} jQuery element\n */\nconst getPostContainerById = (element, id) => {\n    return element.find(`${Selectors.post.post}[data-post-id=${id}]`);\n};\n\n/**\n * Get the parent post container elements from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @return {Object} jQuery element\n */\nconst getParentPostContainers = (element) => {\n    return element.parents(Selectors.post.post);\n};\n\n/**\n * Get the post content container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getPostContentContainer = (postContainer) => {\n    return postContainer.children().not(Selectors.post.repliesContainer).find(Selectors.post.forumCoreContent);\n};\n\n/**\n * Get the in page reply container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyContainer = (postContainer) => {\n    return postContainer.children().filter(Selectors.post.inpageReplyContainer);\n};\n\n/**\n * Get the in page reply form element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyForm = (postContainer) => {\n    return getInPageReplyContainer(postContainer).find(Selectors.post.inpageReplyContent);\n};\n\n/**\n * Get the in page reply create (reply) button element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyCreateButton = (postContainer) => {\n    return getPostContentContainer(postContainer).find(Selectors.post.inpageReplyCreateButton);\n};\n\n/**\n * Get the replies visibility toggle container (show/hide replies button container) element\n * from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getRepliesVisibilityToggleContainer = (postContainer) => {\n    return postContainer.children(Selectors.post.repliesVisibilityToggleContainer);\n};\n\n/**\n * Get the replies container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getRepliesContainer = (postContainer) => {\n    return postContainer.children(Selectors.post.repliesContainer);\n};\n\n/**\n * Check if the post has any replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Bool}\n */\nconst hasReplies = (postContainer) => {\n    return getRepliesContainer(postContainer).children().length > 0;\n};\n\n/**\n * Get the show replies button element from the replies visibility toggle container element.\n *\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\n * @return {Object} jQuery element\n */\nconst getShowRepliesButton = (replyVisibilityToggleContainer) => {\n    return replyVisibilityToggleContainer.find(Selectors.post.showReplies);\n};\n\n/**\n * Get the hide replies button element from the replies visibility toggle container element.\n *\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\n * @return {Object} jQuery element\n */\nconst getHideRepliesButton = (replyVisibilityToggleContainer) => {\n    return replyVisibilityToggleContainer.find(Selectors.post.hideReplies);\n};\n\n/**\n * Check if the replies are visible.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Bool}\n */\nconst repliesVisible = (postContainer) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    return repliesContainer.is(':visible');\n};\n\n/**\n * Show the post replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\n */\nconst showReplies = (postContainer, postIdToSee = null) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\n\n    showButton.addClass('hidden');\n    hideButton.removeClass('hidden');\n\n    repliesContainer.slideDown({\n        duration: ANIMATION_DURATION,\n        queue: false,\n        complete: () => {\n            if (postIdToSee) {\n                const postContainerToSee = getPostContainerById(repliesContainer, postIdToSee);\n                if (postContainerToSee.length) {\n                    postContainerToSee[0].scrollIntoView();\n                }\n            }\n        }\n    }).css('display', 'none').fadeIn(ANIMATION_DURATION);\n};\n\n/**\n * Hide the post replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n */\nconst hideReplies = (postContainer) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\n\n    showButton.removeClass('hidden');\n    hideButton.addClass('hidden');\n\n    repliesContainer.slideUp({\n        duration: ANIMATION_DURATION,\n        queue: false\n    }).fadeOut(ANIMATION_DURATION);\n};\n\n/** Variable to hold the showInPageReplyForm function after it's built. */\nlet showInPageReplyForm = null;\n\n/**\n * Build the showInPageReplyForm function with the given additional template context.\n *\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template.\n * @return {Function}\n */\nconst buildShowInPageReplyFormFunction = (additionalTemplateContext) => {\n    /**\n     * Show the in page reply form in the given in page reply container. The form\n     * display will be animated.\n     *\n     * @param {Object} postContainer jQuery element for the post container\n     */\n    return async(postContainer) => {\n\n        const inPageReplyContainer = getInPageReplyContainer(postContainer);\n        const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n        const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\n\n        if (!hasInPageReplyForm(inPageReplyContainer)) {\n            try {\n                const html = await renderInPageReplyTemplate(additionalTemplateContext, inPageReplyCreateButton, postContainer);\n                Templates.appendNodeContents(inPageReplyContainer, html, '');\n            } catch (e) {\n                Notification.exception(e);\n            }\n\n            FormChangeChecker.watchForm(postContainer[0].querySelector('form'));\n        }\n\n        inPageReplyCreateButton.fadeOut(ANIMATION_DURATION, () => {\n            const inPageReplyForm = getInPageReplyForm(postContainer);\n            inPageReplyForm.slideDown({\n                duration: ANIMATION_DURATION,\n                queue: false,\n                complete: () => {\n                    inPageReplyForm.find('textarea').focus();\n                }\n            }).css('display', 'none').fadeIn(ANIMATION_DURATION);\n\n            if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\n                repliesVisibilityToggleContainer.fadeIn(ANIMATION_DURATION);\n                hideReplies(postContainer);\n            }\n        });\n    };\n};\n\n/**\n * Hide the in page reply form in the given in page reply container. The form\n * display will be animated.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\n */\nconst hideInPageReplyForm = (postContainer, postIdToSee = null) => {\n    const inPageReplyForm = getInPageReplyForm(postContainer);\n    const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\n    const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n\n    if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\n        repliesVisibilityToggleContainer.fadeOut(ANIMATION_DURATION);\n        if (!repliesVisible(postContainer)) {\n            showReplies(postContainer, postIdToSee);\n        }\n    }\n\n    inPageReplyForm.slideUp({\n        duration: ANIMATION_DURATION,\n        queue: false,\n        complete: () => {\n            inPageReplyCreateButton.fadeIn(ANIMATION_DURATION);\n        }\n    }).fadeOut(200);\n};\n\n/**\n * Check if the in page reply container contains the in page reply form.\n *\n * @param {Object} inPageReplyContainer jQuery element for the in page reply container\n * @return {Bool}\n */\nconst hasInPageReplyForm = (inPageReplyContainer) => {\n    return inPageReplyContainer.find(Selectors.post.inpageReplyContent).length > 0;\n};\n\n/**\n * Render the template to generate the in page reply form HTML.\n *\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template\n * @param {Object} button jQuery element for the reply button that was clicked\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery promise\n */\nconst renderInPageReplyTemplate = (additionalTemplateContext, button, postContainer) => {\n    const postContentContainer = getPostContentContainer(postContainer);\n    const currentSubject = postContentContainer.find(Selectors.post.forumSubject).text();\n    const currentAuthorName = postContentContainer.find(Selectors.post.authorName).text();\n    const context = {\n        postid: postContainer.data('post-id'),\n        \"reply_url\": button.attr('data-href'),\n        sesskey: M.cfg.sesskey,\n        parentsubject: currentSubject,\n        parentauthorname: currentAuthorName,\n        canreplyprivately: button.data('can-reply-privately'),\n        postformat: InPageReply.CONTENT_FORMATS.MOODLE,\n        ...additionalTemplateContext\n    };\n\n    return Templates.render('mod_forum/inpage_reply_v2', context);\n};\n\n/**\n * Increment the total reply count in the show/hide replies buttons for the post.\n *\n * @param {Object} postContainer jQuery element for the post container\n */\nconst incrementTotalReplyCount = (postContainer) => {\n    getRepliesVisibilityToggleContainer(postContainer).find(Selectors.post.replyCount).each((index, element) => {\n        const currentCount = parseInt(element.innerText, 10);\n        element.innerText = currentCount + 1;\n    });\n};\n\n/**\n * Create all of the event listeners for the discussion.\n *\n * @param {Object} root jQuery element for the discussion container\n */\nconst registerEventListeners = (root) => {\n    CustomEvents.define(root, [CustomEvents.events.activate]);\n    // Auto expanding text area for in page reply.\n    AutoRows.init(root);\n\n    // Reply button is clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCreateButton, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.currentTarget));\n        showInPageReplyForm(postContainer);\n    });\n\n    // Cancel in page reply button.\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCancelButton, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.currentTarget));\n        hideInPageReplyForm(postContainer);\n    });\n\n    // Show replies button clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.showReplies, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.target));\n        showReplies(postContainer);\n    });\n\n    // Hide replies button clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.hideReplies, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.target));\n        hideReplies(postContainer);\n    });\n\n    // Post created with in page reply.\n    root.on(InPageReply.EVENTS.POST_CREATED, Selectors.post.inpageSubmitBtn, (e, newPostId) => {\n        const currentTarget = $(e.currentTarget);\n        const postContainer = getPostContainer(currentTarget);\n        const postContainers = getParentPostContainers(currentTarget);\n        hideInPageReplyForm(postContainer, newPostId);\n\n        postContainers.each((index, container) => {\n            incrementTotalReplyCount($(container));\n        });\n    });\n};\n\n/**\n * Initialise the javascript for the discussion in nested v2 display mode.\n *\n * @param {Object} root jQuery element for the discussion container\n * @param {Object} context Additional render context for the in page reply template\n */\nexport const init = (root, context) => {\n    // Build the showInPageReplyForm function with the additional render context.\n    showInPageReplyForm = buildShowInPageReplyFormFunction(context);\n    // Add discussion event listeners.\n    registerEventListeners(root);\n    // Initialise default discussion javascript (keyboard nav etc).\n    Discussion.init(root);\n    // Add in page reply javascript.\n    InPageReply.init(root);\n\n    // Initialise the settings menu javascript.\n    const discussionToolsContainer = root.find(Selectors.discussion.tools);\n    LockToggle.init(discussionToolsContainer, false);\n    FavouriteToggle.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.userstate.favourited ? 0 : 1;\n        return toggleElement.data('targetstate', newTargetState);\n    });\n    Pin.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.pinned ? 0 : 1;\n        return toggleElement.data('targetstate', newTargetState);\n    });\n    Subscribe.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.userstate.subscribed ? 0 : 1;\n        toggleElement.data('targetstate', newTargetState);\n    });\n};\n"],"file":"discussion_nested_v2.min.js"}