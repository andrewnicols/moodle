{"version":3,"file":"templateseditor.min.js","sources":["../src/templateseditor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module to control the template editor.\n *\n * @module      mod_data/templateseditor\n * @copyright   2021 Mihail Geshoski <mihail@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {prefetchStrings} from 'core/prefetch';\nimport {relativeUrl} from 'core/url';\nimport {saveCancel} from 'core/notification';\nimport Templates from 'core/templates';\n\nprefetchStrings('admin', ['confirmation']);\nprefetchStrings('mod_data', [\n    'resettemplateconfirmtitle',\n    'enabletemplateeditorcheck',\n    'editorenable'\n]);\nprefetchStrings('core', [\n    'reset',\n]);\n\n/**\n * Template editor constants.\n */\nconst selectors = {\n    toggleTemplateEditor: 'input[name=\"useeditor\"]',\n    resetTemplate: 'input[name=\"defaultform\"]',\n    resetAllTemplates: 'input[name=\"resetall\"]',\n    resetButton: 'input[name=\"resetbutton\"]',\n    resetAllCheck: 'input[name=\"resetallcheck\"]',\n    editForm: '#edittemplateform',\n};\n\n/**\n * Register event listeners for the module.\n *\n * @param {Number} instanceId The database ID\n * @param {string} mode The template mode\n */\nconst registerEventListeners = (instanceId, mode) => {\n    registerResetButton(mode);\n    registerEditorToggler(instanceId, mode);\n};\n\nconst registerResetButton = (mode) => {\n    const editForm = document.querySelector(selectors.editForm);\n    const resetButton = document.querySelector(selectors.resetButton);\n    const resetTemplate = document.querySelector(selectors.resetTemplate);\n    const resetAllTemplates = document.querySelector(selectors.resetAllTemplates);\n\n    if (!resetButton || !resetTemplate || !editForm) {\n        return;\n    }\n\n    resetButton.addEventListener('click', async(event) => {\n        event.preventDefault();\n        const params = {\n            resetallname: \"resetallcheck\",\n            templatename: await getString(mode, 'mod_data'),\n        };\n        saveCancel(\n            getString('resettemplateconfirmtitle', 'mod_data'),\n            Templates.render('mod_data/template_editor_resetmodal', params),\n            getString('reset', 'core'),\n            () => {\n                resetTemplate.value = \"true\";\n                editForm.submit();\n            },\n            null,\n            {triggerElement: event.target}\n        );\n    });\n\n    // The reset all checkbox is inside a modal so we need to capture at document level.\n    if (!resetAllTemplates) {\n        return;\n    }\n    document.addEventListener('change', (event) => {\n        if (event.target.matches(selectors.resetAllCheck)) {\n            resetAllTemplates.value = (event.target.checked) ? \"true\" : \"\";\n        }\n    });\n};\n\nconst registerEditorToggler = (instanceId, mode) => {\n    const toggleTemplateEditor = document.querySelector(selectors.toggleTemplateEditor);\n\n    if (!toggleTemplateEditor) {\n        return;\n    }\n\n    toggleTemplateEditor.addEventListener('click', async(event) => {\n        event.preventDefault();\n        // Whether the event action attempts to enable or disable the template editor.\n        const enableTemplateEditor = event.target.checked;\n\n        if (enableTemplateEditor) {\n            // Display a confirmation dialog before enabling the template editor.\n            saveCancel(\n                getString('confirmation', 'admin'),\n                getString('enabletemplateeditorcheck', 'mod_data'),\n                getString('editorenable', 'mod_data'),\n                () => {\n                    window.location = relativeUrl('/mod/data/templates.php', {d: instanceId, mode: mode, useeditor: true});\n                },\n                null,\n                {triggerElement: event.target}\n            );\n        } else {\n            window.location = relativeUrl('/mod/data/templates.php', {d: instanceId, mode: mode, useeditor: false});\n        }\n    });\n};\n\n/**\n * Initialize the module.\n *\n * @param {int} instanceId The database ID\n * @param {string} mode The template mode\n */\nexport const init = (instanceId, mode) => {\n    registerEventListeners(instanceId, mode);\n};\n"],"names":["_templates","_prefetch","prefetchStrings","selectors","registerResetButton","mode","editForm","document","querySelector","resetButton","resetTemplate","resetAllTemplates","addEventListener","async","event","preventDefault","params","resetallname","templatename","_notification","saveCancel","_str","get_string","Templates","render","value","submit","triggerElement","target","matches","checked","registerEditorToggler","instanceId","toggleTemplateEditor","window","location","_url","relativeUrl","d","useeditor","registerEventListeners"],"mappings":";;;;;;;kFA2BAA,gBAAAA,+CAEA,EAAAC,UAAAC,iBAAgB,QAAS,CAAC,kBACV,EAAAD,UAAAC,iBAAA,WAAY,CACxB,4BACA,4BACA,kBAEJ,EAAAD,UAAAC,iBAAgB,OAAQ,CACpB,UAMJ,MAAMC,+BACoB,0BADpBA,wBAEa,4BAFbA,4BAGiB,yBAHjBA,sBAIW,4BAJXA,wBAKa,8BALbA,mBAMQ,oBAcRC,oBAAuBC,OACnBC,MAAAA,SAAWC,SAASC,cAAcL,oBAClCM,YAAcF,SAASC,cAAcL,uBACrCO,cAAgBH,SAASC,cAAcL,yBACvCQ,kBAAoBJ,SAASC,cAAcL,6BAE5CM,aAAgBC,eAAkBJ,WAIvCG,YAAYG,iBAAiB,SAASC,cAClCC,MAAMC,iBACN,MAAMC,OAAS,CACXC,aAAc,gBACdC,mBAAoB,EAAUb,KAAAA,YAAAA,KAAM,cAGpC,EAAAc,cAAAC,aAAA,EAAAC,KAAAC,YAAU,4BAA6B,YACvCC,WAAAA,QAAUC,OAAO,sCAAuCR,SACxD,EAAUK,KAAAC,YAAA,QAAS,SACnB,KACIZ,cAAce,MAAQ,OACtBnB,SAASoB,QAAT,GAEJ,KACA,CAACC,eAAgBb,MAAMc,QAT3B,IAcCjB,mBAGLJ,SAASK,iBAAiB,UAAWE,QAC7BA,MAAMc,OAAOC,QAAQ1B,2BACrBQ,kBAAkBc,MAASX,MAAMc,OAAOE,QAAW,OAAS,GAC/D,IAHL,EAOEC,sBAAwB,CAACC,WAAY3B,QACjC4B,MAAAA,qBAAuB1B,SAASC,cAAcL,gCAE/C8B,sBAILA,qBAAqBrB,iBAAiB,SAASC,cAC3CC,MAAMC,iBAEuBD,MAAMc,OAAOE,SAItC,EAAAX,cAAAC,aACI,mBAAU,eAAgB,UAC1B,mBAAU,4BAA6B,aACvC,EAAUC,KAAAC,YAAA,eAAgB,aAC1B,KACIY,OAAOC,UAAW,EAAAC,KAAAC,aAAY,0BAA2B,CAACC,EAAGN,WAAY3B,KAAMA,KAAMkC,WAAW,GAAhG,GAEJ,KACA,CAACZ,eAAgBb,MAAMc,SAG3BM,OAAOC,UAAW,EAAAC,KAAAC,aAAY,0BAA2B,CAACC,EAAGN,WAAY3B,KAAMA,KAAMkC,WAAW,GACnG,GAnBL,gBA6BgB,CAACP,WAAY3B,QAjFF,EAAC2B,WAAY3B,QACxCD,oBAAoBC,MACpB0B,sBAAsBC,WAAY3B,KAAlC,EAgFAmC,CAAuBR,WAAY3B,KAAnC"}