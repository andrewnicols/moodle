define ("mod_bigbluebuttonbn/modform",["exports","core/str","core/notification","core/templates"],function(_exports,_str,_notification,_templates){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.init=void 0;_notification=_interopRequireDefault(_notification);_templates=_interopRequireDefault(_templates);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const ELEMENT_SELECTOR={instanceTypeSelection:()=>document.querySelector("select#id_type"),instanceTypeProfiles:()=>document.querySelector("[data-profile-types]"),participantData:()=>document.querySelector("[data-participant-data]"),participantList:()=>document.getElementsByName("participants")[0],participantTable:()=>document.getElementById("participant_list_table"),participantSelectionType:()=>document.getElementsByName("bigbluebuttonbn_participant_selection_type")[0],participantSelection:()=>document.getElementsByName("bigbluebuttonbn_participant_selection")[0],participantAddButton:()=>document.getElementsByName("bigbluebuttonbn_participant_selection_add")[0]};_exports.init=info=>{const selectedType=ELEMENT_SELECTOR.instanceTypeSelection(),instanceTypeProfiles=JSON.parse(ELEMENT_SELECTOR.instanceTypeProfiles().dataset.profileTypes);let profileType=info.instanceTypeDefault;if(null!==selectedType&&-1!==selectedType.selectedIndex){profileType=selectedType.options[selectedType.selectedIndex].value}const isFeatureEnabled=(profileType,feature)=>{const features=instanceTypeProfiles[profileType].features;return-1!==features.indexOf(feature)};applyInstanceTypeProfile(profileType,isFeatureEnabled);selectedType.addEventListener("change",e=>{applyInstanceTypeProfile(e.target.value,isFeatureEnabled)});ELEMENT_SELECTOR.participantSelectionType().addEventListener("change",e=>{const currentTypeSelect=e.target;updateSelectionFromType(currentTypeSelect)});ELEMENT_SELECTOR.participantAddButton().addEventListener("click",e=>{e.stopPropagation();e.preventDefault();participantAddFromCurrentSelection()});participantListInit()};const applyInstanceTypeProfile=(profileType,isFeatureEnabled)=>{let showAll=isFeatureEnabled(profileType,"all");const showFieldset=(id,show)=>{const node=document.querySelector("#"+id);if(!node){return}if(show){node.style.display="block";return}node.style.display="none"},showInput=(id,show)=>{const node=document.querySelector("#"+id);if(!node){return}var ancestor=node.closest("div").closest("div");if(show){ancestor.style.display="block";return}ancestor.style.display="none"},showFormGroup=(id,show)=>{const node=document.querySelector("#fgroup_id_"+id);if(!node){return}if(show){node.classList.remove("hidden");return}node.classList.add("hidden")};showFieldset("id_room",showAll||isFeatureEnabled(profileType,"showroom"));showInput("id_record",showAll||isFeatureEnabled(profileType,"showroom"));showFieldset("id_recordings",showAll||isFeatureEnabled(profileType,"showrecordings"));showInput("id_recordings_imported",showAll||isFeatureEnabled(profileType,"showrecordings"));showFieldset("id_preuploadpresentation",showAll||isFeatureEnabled(profileType,"preuploadpresentation"));showFieldset("id_permissions",showAll||isFeatureEnabled(profileType,"permissions"));showFieldset("id_schedule",showAll||isFeatureEnabled(profileType,"schedule"));showFieldset("id_modstandardelshdr",showAll||isFeatureEnabled(profileType,"modstandardelshdr"));showFieldset("id_availabilityconditionsheader",showAll||isFeatureEnabled(profileType,"availabilityconditionsheader"));showFieldset("id_tagshdr",showAll||isFeatureEnabled(profileType,"tagshdr"));showFieldset("id_competenciessection",showAll||isFeatureEnabled(profileType,"competenciessection"));showFormGroup("completionattendancegroup",showAll||isFeatureEnabled(profileType,"completionattendance"));showFormGroup("completionengagementgroup",showAll||isFeatureEnabled(profileType,"completionengagement"))},participantListInit=()=>{const participantData=JSON.parse(ELEMENT_SELECTOR.participantData().dataset.participantData),participantList=getParticipantList();participantList.forEach(participant=>{const selectionTypeValue=participant.selectiontype,selectionValue=participant.selectionid,selectionRole=participant.role;if("all"===participant.selectiontype||"undefined"!=typeof participantData[participant.selectiontype].children[participant.selectionid]){participantAddToForm(selectionTypeValue,selectionValue,selectionRole,!0).then()}})},participantAddToForm=async(selectionTypeValue,selectionValue,selectedRole,canRemove)=>{const participantData=JSON.parse(ELEMENT_SELECTOR.participantData().dataset.participantData),sviewer=await(0,_str.get_string)("mod_form_field_participant_bbb_role_viewer","mod_bigbluebuttonbn"),smoderator=await(0,_str.get_string)("mod_form_field_participant_bbb_role_moderator","mod_bigbluebuttonbn");let roles={viewer:{id:"viewer",label:sviewer},moderator:{id:"moderator",label:smoderator}};roles[selectedRole].isselected=!0;try{const listTable=document.querySelector("#participant_list_table tbody"),templateContext={selectiontypevalue:selectionTypeValue,selectionvalue:selectionValue,participanttype:participantData[selectionTypeValue].name,participantvalue:"all"!==selectionTypeValue?participantData[selectionTypeValue].children[selectionValue].name:null,roles:Object.values(roles),canRemove:canRemove},{html,js}=await _templates.default.renderForPromise("mod_bigbluebuttonbn/participant_form_add",templateContext),newNode=_templates.default.appendNodeContents(listTable,html,js)[0];newNode.querySelector(".participant-select").addEventListener("change",()=>{participantListRoleUpdate(selectionTypeValue,selectionValue)});const removeNode=newNode.querySelector(".remove-button");if(removeNode){removeNode.addEventListener("click",()=>{participantRemove(selectionTypeValue,selectionValue)})}}catch(e){_notification.default.exception(e)}},participantListUpdate=list=>{const participantList=ELEMENT_SELECTOR.participantList();participantList.value=JSON.stringify(list)},getParticipantList=()=>{const participantListValue=ELEMENT_SELECTOR.participantList().value;if(participantListValue){return JSON.parse(participantListValue)}return[]},participantRemove=(selectionTypeValue,selectionValue)=>{const pList=getParticipantList(),participantListTable=ELEMENT_SELECTOR.participantTable(),selectionid=""===selectionValue?null:selectionValue;for(let i=0;i<pList.length;i++){if(pList[i].selectiontype===selectionTypeValue&&pList[i].selectionid===selectionid){pList.splice(i,1)}}for(let i=0;i<participantListTable.rows.length;i++){if(participantListTable.rows[i].id==="participant_list_tr_"+selectionTypeValue+"-"+selectionValue){participantListTable.deleteRow(i)}}participantListUpdate(pList)},participantListRoleUpdate=(type,id)=>{const participantListRoleSelection=document.querySelector("#participant_list_tr_".concat(type,"-").concat(id," .participant-select")),pList=getParticipantList();for(var i=0;i<pList.length;i++){if(pList[i].selectiontype===type&&pList[i].selectionid===id){pList[i].role=participantListRoleSelection.value}}participantListUpdate(pList)},participantAddFromCurrentSelection=()=>{let selectionType=ELEMENT_SELECTOR.participantSelectionType(),selection=ELEMENT_SELECTOR.participantSelection();const pList=getParticipantList();for(var i=0;i<pList.length;i++){if(pList[i].selectiontype===selectionType.value&&pList[i].selectionid===selection.value){return}}pList.push({selectiontype:selectionType.value,selectionid:selection.value,role:"viewer"});participantAddToForm(selectionType.value,selection.value,"viewer",!0).then();participantListUpdate(pList)},updateSelectionFromType=currentTypeSelect=>{const createNewOption=(selectItem,label,value)=>{const option=document.createElement("option");option.text=label;option.value=value;selectItem.add(option)},participantData=JSON.parse(ELEMENT_SELECTOR.participantData().dataset.participantData),participantSelect=ELEMENT_SELECTOR.participantSelection();while(participantSelect.firstChild){participantSelect.removeChild(participantSelect.firstChild)}if(-1!==currentTypeSelect.selectedIndex){const options=Object.values(participantData[currentTypeSelect.value].children);options.forEach(option=>{createNewOption(participantSelect,option.name,option.id)});if("all"===currentTypeSelect.value){createNewOption(participantSelect,"---------------","all");participantSelect.disabled=!0}else{participantSelect.disabled=!1}}}});
//# sourceMappingURL=modform.min.js.map
