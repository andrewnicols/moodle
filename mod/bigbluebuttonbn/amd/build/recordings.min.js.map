{"version":3,"sources":["../src/recordings.js"],"names":["stringList","getStringsForYui","stringMap","map","key","component","then","first","prev","next","last","goToLabel","goToAction","perPage","showAll","catch","getYuiInstance","lang","Promise","resolve","YUI","use","Y","formatDates","locale","dateList","row","date","Date","toLocaleDateString","weekday","year","month","day","getFormattedData","response","recordingData","tabledata","rowData","JSON","parse","data","getTableNode","tableSelector","document","querySelector","fetchRecordingData","tableNode","dataset","importMode","repository","fetchRecordingsToImport","bbbid","bbbSourceInstanceId","bbbSourceCourseId","tools","groupId","fetchRecordings","getDataTableFunctions","tableId","searchFormId","dataTable","updateTableFromResponse","status","get","reset","set","currentFilter","filterByText","refreshTableData","value","dataModel","escapedRegex","replace","rsearch","RegExp","filter","asList","item","name","test","description","requestAction","element","getDataFromAction","dataType","dataElement","closest","elementData","payload","bigbluebuttonbnid","recordingid","additionaloptions","action","bbbsourceid","bbbcourseid","sourceid","stringify","requireConfirmation","ModalFactory","create","title","Str","get_string","body","recordingConfirmationMessage","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","ModalEvents","save","hidden","destroy","show","Notification","exception","proceed","updateRecording","playbackElement","imported","recordingType","confirmation","associatedLinkCount","links","confirmationWarning","processAction","e","popoutLink","target","preventDefault","videoPlayer","window","open","opener","location","href","clickedLink","classList","contains","iconPromise","getDOMNode","displayException","processSearchSubmission","parentNode","searchInput","registerEventListeners","boundingBox","addEventListener","searchForm","searchButton","setupDatatable","pendingPromise","Pending","all","yuiInstance","strings","Intl","add","config","tableData","RecordsPaginatorView","Base","DataTable","Paginator","View","_modelChange","changed","totalItems","_updateControlsUI","paginatorView","width","columns","rowsPerPage","paginatorLocation","autoSync","render","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS for the recordings page on mod_bigbluebuttonbn plugin.\n *\n * @module      mod_bigbluebuttonbn/recordings\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as repository from './repository';\nimport {exception as displayException} from 'core/notification';\nimport {get_strings as getStrings} from 'core/str';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\nimport Pending from 'core/pending';\n\nconst stringList = [\n    'view_recording_yui_first',\n    'view_recording_yui_prev',\n    'view_recording_yui_next',\n    'view_recording_yui_last',\n    'view_recording_yui_page',\n    'view_recording_yui_go',\n    'view_recording_yui_rows',\n    'view_recording_yui_show_all',\n];\n\nconst getStringsForYui = () => {\n    const stringMap = stringList.map(key => {\n        return {\n            key,\n            component: 'bigbluebuttonbn',\n        };\n    });\n\n    return getStrings(stringMap)\n        .then(([first, prev, next, last, goToLabel, goToAction, perPage, showAll]) => {\n            return {\n                first,\n                prev,\n                next,\n                last,\n                goToLabel,\n                goToAction,\n                perPage,\n                showAll,\n            };\n        })\n        .catch();\n};\n\nconst getYuiInstance = lang => new Promise(resolve => {\n    // eslint-disable-next-line\n    YUI({\n        lang,\n    }).use('intl', 'datatable', 'datatable-sort', 'datatable-paginator', 'datatype-number', Y => {\n        resolve(Y);\n    });\n});\n\n/**\n * Format the supplied date per the specified locale.\n *\n * @param   {string} locale\n * @param   {array} dateList\n * @returns {array}\n */\nconst formatDates = (locale, dateList) => dateList.map(row => {\n    const date = new Date(row.date);\n    row.date = date.toLocaleDateString(locale, {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    });\n\n    return row;\n});\n\n/**\n * Format response data for the table.\n *\n * @param   {string} response JSON-encoded table data\n * @returns {array}\n */\nconst getFormattedData = response => {\n    const recordingData = response.tabledata;\n    const rowData = JSON.parse(recordingData.data);\n\n    return formatDates(recordingData.locale, rowData);\n};\n\nconst getTableNode = tableSelector => document.querySelector(tableSelector);\n\nconst fetchRecordingData = tableSelector => {\n    const tableNode = getTableNode(tableSelector);\n\n    if (tableNode.dataset.importMode) {\n        return repository.fetchRecordingsToImport(\n            tableNode.dataset.bbbid,\n            tableNode.dataset.bbbSourceInstanceId,\n            tableNode.dataset.bbbSourceCourseId,\n            tableNode.dataset.tools,\n            tableNode.dataset.groupId\n        );\n    } else {\n        return repository.fetchRecordings(\n            tableNode.dataset.bbbid,\n            tableNode.dataset.tools,\n            tableNode.dataset.groupId\n        );\n    }\n};\n\n/**\n * Fetch the data table functinos for the specified table.\n *\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n * @param {Object} dataTable\n * @returns {Object}\n * @private\n */\nconst getDataTableFunctions = (tableId, searchFormId, dataTable) => {\n    const tableNode = getTableNode(tableId);\n    const bbbid = tableNode.dataset.bbbid;\n\n    const updateTableFromResponse = response => {\n        if (!response || !response.status) {\n            // There was no output at all.\n            return;\n        }\n\n        dataTable.get('data').reset(getFormattedData(response));\n        dataTable.set(\n            'currentData',\n            dataTable.get('data')\n        );\n\n        const currentFilter = dataTable.get('currentFilter');\n        if (currentFilter) {\n            filterByText(currentFilter);\n        }\n    };\n\n    const refreshTableData = () => fetchRecordingData(tableId).then(updateTableFromResponse);\n\n    const filterByText = value => {\n        const dataModel = dataTable.get('currentData');\n        dataTable.set('currentFilter', value);\n\n        const escapedRegex = value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n        const rsearch = new RegExp(`<span>.*?${escapedRegex}.*?</span>`, 'i');\n\n        dataTable.set('data', dataModel.filter({asList: true}, item => {\n            const name = item.get('recording');\n            if (name && rsearch.test(name)) {\n                return true;\n            }\n\n            const description = item.get('description');\n            return description && rsearch.test(description);\n        }));\n    };\n\n    const requestAction = (element) => {\n        const getDataFromAction = (element, dataType) => {\n            const dataElement = element.closest(`[data-${dataType}]`);\n            if (dataElement) {\n                return dataElement.dataset[dataType];\n            }\n\n            return null;\n        };\n\n        const elementData = element.dataset;\n        const payload = {\n            bigbluebuttonbnid: bbbid,\n            recordingid: getDataFromAction(element, 'recordingid'),\n            additionaloptions: getDataFromAction(element, 'additionaloptions'),\n            action: elementData.action,\n        };\n        // Slight change for import, for additional options.\n        if (!payload.additionaloptions) {\n            payload.additionaloptions = {};\n        }\n        if (elementData.action === 'import') {\n            const bbbsourceid = getDataFromAction(element, 'source-instance-id');\n            const bbbcourseid = getDataFromAction(element, 'source-course-id');\n            if (!payload.additionaloptions) {\n                payload.additionaloptions = {};\n            }\n            payload.additionaloptions.sourceid = bbbsourceid ? bbbsourceid : 0;\n            payload.additionaloptions.bbbcourseid = bbbcourseid ? bbbcourseid : 0;\n        }\n        // Now additional options should be a json string.\n        payload.additionaloptions = JSON.stringify(payload.additionaloptions);\n        if (element.dataset.requireConfirmation === \"1\") {\n            // Create the confirmation dialogue.\n            return new Promise((resolve) =>\n                ModalFactory.create({\n                    title: Str.get_string('confirm'),\n                    body: recordingConfirmationMessage(payload),\n                    type: ModalFactory.types.SAVE_CANCEL\n                }).then(async(modal) => {\n                    modal.setSaveButtonText(await Str.get_string('ok', 'moodle'));\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, () => {\n                        resolve(true);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, () => {\n                        // Destroy when hidden.\n                        modal.destroy();\n                        resolve(false);\n                    });\n\n                    modal.show();\n\n                    return modal;\n                }).catch(Notification.exception)\n            ).then((proceed) =>\n                proceed ? repository.updateRecording(payload) : () => null\n            );\n        } else {\n            return repository.updateRecording(payload);\n        }\n    };\n\n    const recordingConfirmationMessage = async(data) => {\n\n        const playbackElement = document.querySelector(`#playbacks-${data.recordingid}`);\n        const recordingType = await Str.get_string(\n            playbackElement.dataset.imported === 'true' ? 'view_recording_link' : 'view_recording',\n            'bigbluebuttonbn'\n        );\n\n        const confirmation = await Str.get_string(`view_recording_${data.action}_confirmation`, 'bigbluebuttonbn', recordingType);\n\n        if (data.action === 'import') {\n            return confirmation;\n        }\n\n        // If it has associated links imported in a different course/activity, show that in confirmation dialog.\n        const associatedLinkCount = document.querySelector(`a#recording-${data.action}-${data.recordingid}`)?.dataset?.links;\n        if (!associatedLinkCount || associatedLinkCount === 0) {\n            return confirmation;\n        }\n\n        const confirmationWarning = await Str.get_string(\n            associatedLinkCount === 1\n                ? `view_recording_${data.action}_confirmation_warning_p`\n                : `view_recording_${data.action}_confirmation_warning_s`,\n            'bigbluebuttonbn',\n            associatedLinkCount\n        );\n\n        return confirmationWarning + '\\n\\n' + confirmation;\n    };\n\n    /**\n     * Process an action event.\n     *\n     * @param   {Event} e\n     */\n    const processAction = e => {\n        const popoutLink = e.target.closest('[data-action=\"play\"]');\n        if (popoutLink) {\n            e.preventDefault();\n\n            const videoPlayer = window.open('', '_blank');\n            videoPlayer.opener = null;\n            videoPlayer.location.href = popoutLink.href;\n            // TODO send a recording viewed event when this event will be implemented.\n            return;\n        }\n\n        // Fetch any clicked anchor.\n        const clickedLink = e.target.closest('a[data-action]');\n        if (clickedLink && !clickedLink.classList.contains('disabled')) {\n            e.preventDefault();\n\n            // Create a spinning icon on the table.\n            const iconPromise = addIconToContainerWithPromise(dataTable.get('boundingBox').getDOMNode());\n\n            requestAction(clickedLink)\n                .then(refreshTableData)\n                .catch(displayException)\n                .then(iconPromise.resolve)\n                .catch();\n        }\n    };\n\n    const processSearchSubmission = e => {\n        // Prevent the default action.\n        e.preventDefault();\n        const parentNode = e.target.closest('div[role=search]');\n        const searchInput = parentNode.querySelector('input[name=search]');\n        filterByText(searchInput.value);\n    };\n\n    const registerEventListeners = () => {\n        // Add event listeners to the table boundingBox.\n        const boundingBox = dataTable.get('boundingBox').getDOMNode();\n        boundingBox.addEventListener('click', processAction);\n\n        // Setup the search from handlers.\n        const searchForm = document.querySelector(searchFormId);\n        if (searchForm) {\n            const searchButton = document.querySelector(searchFormId + ' button');\n            searchButton.addEventListener('click', processSearchSubmission);\n        }\n    };\n\n    return {\n        filterByText,\n        refreshTableData,\n        registerEventListeners,\n    };\n};\n\n/**\n * Setup the data table for the specified BBB instance.\n *\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n * @param   {object} response The response from the data request\n * @returns {Promise}\n */\nconst setupDatatable = (tableId, searchFormId, response) => {\n    if (!response) {\n        return Promise.resolve();\n    }\n\n    if (!response.status) {\n        // Something failed. Continue to show the plain output.\n        return Promise.resolve();\n    }\n\n    const recordingData = response.tabledata;\n\n    const pendingPromise = new Pending('mod_bigbluebuttonbn/recordings/setupDatatable');\n    return Promise.all([getYuiInstance(recordingData.locale), getStringsForYui()])\n        .then(([yuiInstance, strings]) => {\n            // Add the fetched strings to the YUI Instance.\n            yuiInstance.Intl.add('datatable-paginator', yuiInstance.config.lang, {...strings});\n\n            return yuiInstance;\n        })\n        .then(yuiInstance => {\n            const tableData = getFormattedData(response);\n            yuiInstance.RecordsPaginatorView = Y.Base.create('my-paginator-view',yuiInstance.DataTable.Paginator.View, [],{\n                _modelChange : function (e) {\n                    var changed = e.changed,\n                        totalItems = (changed && changed.totalItems);\n                    if (totalItems) {\n                        this._updateControlsUI(e.target.get('page'));\n                    }\n                }\n            });\n            const dataTable = new yuiInstance.DataTable({\n                paginatorView: \"RecordsPaginatorView\",\n                width: \"1195px\",\n                columns: recordingData.columns,\n                data: tableData,\n                rowsPerPage: 10,\n                paginatorLocation: ['header', 'footer'],\n                autoSync: true\n            });\n            return dataTable;\n        })\n        .then(dataTable => {\n            dataTable.render(tableId);\n            const {registerEventListeners} = getDataTableFunctions(\n                tableId,\n                searchFormId,\n                dataTable);\n            registerEventListeners();\n            return dataTable;\n        })\n        .then(dataTable => {\n            pendingPromise.resolve();\n            return dataTable;\n        });\n};\n\n/**\n * Initialise recordings code.\n *\n * @method init\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n */\nexport const init = (tableId, searchFormId) => {\n    fetchRecordingData(tableId)\n        .then(response => setupDatatable(tableId, searchFormId, response))\n        .catch(displayException);\n};\n"],"file":"recordings.min.js"}