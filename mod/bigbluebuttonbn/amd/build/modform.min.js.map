{"version":3,"sources":["../src/modform.js"],"names":["ELEMENT_SELECTOR","instanceTypeSelection","document","querySelector","instanceTypeProfiles","participantData","participantList","getElementsByName","participantTable","getElementById","participantSelectionType","participantSelection","participantAddButton","info","selectedType","JSON","parse","dataset","profileTypes","profileType","instanceTypeDefault","selectedIndex","options","value","isFeatureEnabled","feature","features","indexOf","applyInstanceTypeProfile","addEventListener","e","target","currentTypeSelect","updateSelectionFromType","stopPropagation","preventDefault","participantAddFromCurrentSelection","participantListInit","showAll","showFieldset","id","show","node","style","display","showInput","ancestor","closest","showFormGroup","classList","remove","add","getParticipantList","forEach","participant","selectionTypeValue","selectiontype","selectionValue","selectionid","selectionRole","role","children","participantAddToForm","then","selectedRole","canRemove","sviewer","smoderator","roles","viewer","label","moderator","isselected","listTable","templateContext","name","Object","values","html","js","Templates","renderForPromise","newNode","appendNodeContents","participantListRoleUpdate","removeNode","participantRemove","Notification","exception","participantListUpdate","list","stringify","participantListValue","pList","participantListTable","i","length","splice","rows","deleteRow","type","participantListRoleSelection","selectionType","selection","push","createNewOption","selectItem","option","createElement","text","participantSelect","firstChild","removeChild","disabled"],"mappings":"6OAwBA,oDACA,8C,uFAMMA,CAAAA,gBAAgB,CAAG,CACrBC,qBAAqB,CAAE,IAAMC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CADR,CAErBC,oBAAoB,CAAE,IAAMF,QAAQ,CAACC,aAAT,CAAuB,sBAAvB,CAFP,CAGrBE,eAAe,CAAE,IAAMH,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,CAHF,CAIrBG,eAAe,CAAE,IAAMJ,QAAQ,CAACK,iBAAT,CAA2B,cAA3B,EAA2C,CAA3C,CAJF,CAKrBC,gBAAgB,CAAE,IAAMN,QAAQ,CAACO,cAAT,CAAwB,wBAAxB,CALH,CAMrBC,wBAAwB,CAAE,IAAMR,QAAQ,CAACK,iBAAT,CAA2B,4CAA3B,EAAyE,CAAzE,CANX,CAOrBI,oBAAoB,CAAE,IAAMT,QAAQ,CAACK,iBAAT,CAA2B,uCAA3B,EAAoE,CAApE,CAPP,CAQrBK,oBAAoB,CAAE,IAAMV,QAAQ,CAACK,iBAAT,CAA2B,2CAA3B,EAAwE,CAAxE,CARP,C,eAkBJM,IAAD,EAAU,MACpBC,CAAAA,YAAY,CAAGd,gBAAgB,CAACC,qBAAjB,EADK,CAEpBG,oBAAoB,CAAGW,IAAI,CAACC,KAAL,CAAWhB,gBAAgB,CAACI,oBAAjB,GAAwCa,OAAxC,CAAgDC,YAA3D,CAFH,CAI1B,GAAIC,CAAAA,WAAW,CAAGN,IAAI,CAACO,mBAAvB,CACA,GAAqB,IAAjB,GAAAN,YAAY,EAA4C,CAAC,CAAhC,GAAAA,YAAY,CAACO,aAA1C,CAAgE,CAC5DF,WAAW,CAAGL,YAAY,CAACQ,OAAb,CAAqBR,YAAY,CAACO,aAAlC,EAAiDE,KAClE,CAED,KAAMC,CAAAA,gBAAgB,CAAG,CAACL,WAAD,CAAcM,OAAd,GAA0B,CAC/C,KAAMC,CAAAA,QAAQ,CAAGtB,oBAAoB,CAACe,WAAD,CAApB,CAAkCO,QAAnD,CACA,MAAsC,CAAC,CAA/B,GAAAA,QAAQ,CAACC,OAAT,CAAiBF,OAAjB,CACX,CAHD,CAIAG,wBAAwB,CAACT,WAAD,CAAcK,gBAAd,CAAxB,CAGAV,YAAY,CAACe,gBAAb,CAA8B,QAA9B,CAAyCC,CAAD,EAAO,CAC3CF,wBAAwB,CAACE,CAAC,CAACC,MAAF,CAASR,KAAV,CAAiBC,gBAAjB,CAC3B,CAFD,EAIAxB,gBAAgB,CAACU,wBAAjB,GAA4CmB,gBAA5C,CAA6D,QAA7D,CAAwEC,CAAD,EAAO,CAC1E,KAAME,CAAAA,iBAAiB,CAAGF,CAAC,CAACC,MAA5B,CACAE,uBAAuB,CAACD,iBAAD,CAC1B,CAHD,EAKAhC,gBAAgB,CAACY,oBAAjB,GAAwCiB,gBAAxC,CAAyD,OAAzD,CAAmEC,CAAD,EAAO,CACrEA,CAAC,CAACI,eAAF,GACAJ,CAAC,CAACK,cAAF,GACAC,kCAAkC,EACrC,CAJD,EAMAC,mBAAmB,EACtB,C,MAQKT,CAAAA,wBAAwB,CAAG,CAACT,WAAD,CAAcK,gBAAd,GAAmC,CAChE,GAAIc,CAAAA,OAAO,CAAGd,gBAAgB,CAACL,WAAD,CAAc,KAAd,CAA9B,CADgE,KAE1DoB,CAAAA,YAAY,CAAG,CAACC,EAAD,CAAKC,IAAL,GAAc,CAE/B,KAAMC,CAAAA,IAAI,CAAGxC,QAAQ,CAACC,aAAT,CAAuB,IAAMqC,EAA7B,CAAb,CACA,GAAI,CAACE,IAAL,CAAW,CACP,MACH,CACD,GAAID,IAAJ,CAAU,CACNC,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAqB,OAArB,CACA,MACH,CACDF,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAqB,MACxB,CAb+D,CAc1DC,SAAS,CAAG,CAACL,EAAD,CAAKC,IAAL,GAAc,CAE5B,KAAMC,CAAAA,IAAI,CAAGxC,QAAQ,CAACC,aAAT,CAAuB,IAAMqC,EAA7B,CAAb,CACA,GAAI,CAACE,IAAL,CAAW,CACP,MACH,CACD,GAAII,CAAAA,QAAQ,CAAGJ,IAAI,CAACK,OAAL,CAAa,KAAb,EAAoBA,OAApB,CAA4B,KAA5B,CAAf,CACA,GAAIN,IAAJ,CAAU,CACNK,QAAQ,CAACH,KAAT,CAAeC,OAAf,CAAyB,OAAzB,CACA,MACH,CACDE,QAAQ,CAACH,KAAT,CAAeC,OAAf,CAAyB,MAC5B,CA1B+D,CA2B1DI,aAAa,CAAG,CAACR,EAAD,CAAKC,IAAL,GAAc,CAEhC,KAAMC,CAAAA,IAAI,CAAGxC,QAAQ,CAACC,aAAT,CAAuB,cAAgBqC,EAAvC,CAAb,CACA,GAAI,CAACE,IAAL,CAAW,CACP,MACH,CACD,GAAID,IAAJ,CAAU,CACNC,IAAI,CAACO,SAAL,CAAeC,MAAf,CAAsB,QAAtB,EACA,MACH,CACDR,IAAI,CAACO,SAAL,CAAeE,GAAf,CAAmB,QAAnB,CACH,CAtC+D,CAwChEZ,YAAY,CAAC,SAAD,CAAYD,OAAO,EAC3Bd,gBAAgB,CAACL,WAAD,CAAc,UAAd,CADR,CAAZ,CAEA0B,SAAS,CAAC,WAAD,CAAcP,OAAO,EAC1Bd,gBAAgB,CAACL,WAAD,CAAc,UAAd,CADX,CAAT,CAGAoB,YAAY,CAAC,eAAD,CAAkBD,OAAO,EACjCd,gBAAgB,CAACL,WAAD,CAAc,gBAAd,CADR,CAAZ,CAGA0B,SAAS,CAAC,wBAAD,CAA2BP,OAAO,EACvCd,gBAAgB,CAACL,WAAD,CAAc,gBAAd,CADX,CAAT,CAGAoB,YAAY,CAAC,0BAAD,CAA6BD,OAAO,EAC5Cd,gBAAgB,CAACL,WAAD,CAAc,uBAAd,CADR,CAAZ,CAGAoB,YAAY,CAAC,gBAAD,CAAmBD,OAAO,EAClCd,gBAAgB,CAACL,WAAD,CAAc,aAAd,CADR,CAAZ,CAGAoB,YAAY,CAAC,aAAD,CAAgBD,OAAO,EAC/Bd,gBAAgB,CAACL,WAAD,CAAc,UAAd,CADR,CAAZ,CAGAoB,YAAY,CAAC,sBAAD,CAAyBD,OAAO,EACxCd,gBAAgB,CAACL,WAAD,CAAc,mBAAd,CADR,CAAZ,CAGAoB,YAAY,CAAC,iCAAD,CAAoCD,OAAO,EACnDd,gBAAgB,CAACL,WAAD,CAAc,8BAAd,CADR,CAAZ,CAGAoB,YAAY,CAAC,YAAD,CAAeD,OAAO,EAAId,gBAAgB,CAACL,WAAD,CAAc,SAAd,CAA1C,CAAZ,CAEAoB,YAAY,CAAC,wBAAD,CAA2BD,OAAO,EAC1Cd,gBAAgB,CAACL,WAAD,CAAc,qBAAd,CADR,CAAZ,CAGA6B,aAAa,CAAC,2BAAD,CAA8BV,OAAO,EAC9Cd,gBAAgB,CAACL,WAAD,CAAc,sBAAd,CADP,CAAb,CAGA6B,aAAa,CAAC,2BAAD,CAA8BV,OAAO,EAC9Cd,gBAAgB,CAACL,WAAD,CAAc,sBAAd,CADP,CAEhB,C,CAKKkB,mBAAmB,CAAG,IAAM,MACxBhC,CAAAA,eAAe,CAAGU,IAAI,CAACC,KAAL,CAAWhB,gBAAgB,CAACK,eAAjB,GAAmCY,OAAnC,CAA2CZ,eAAtD,CADM,CAExBC,eAAe,CAAG8C,kBAAkB,EAFZ,CAG9B9C,eAAe,CAAC+C,OAAhB,CAAwBC,WAAW,EAAI,MAC7BC,CAAAA,kBAAkB,CAAGD,WAAW,CAACE,aADJ,CAE7BC,cAAc,CAAGH,WAAW,CAACI,WAFA,CAG7BC,aAAa,CAAGL,WAAW,CAACM,IAHC,CAInC,GAAkC,KAA9B,GAAAN,WAAW,CAACE,aAAZ,EACwF,WAAxF,QAAOnD,CAAAA,eAAe,CAACiD,WAAW,CAACE,aAAb,CAAf,CAA2CK,QAA3C,CAAoDP,WAAW,CAACI,WAAhE,CADX,CACyG,CAErGI,oBAAoB,CAACP,kBAAD,CAAqBE,cAArB,CAAqCE,aAArC,IAApB,CAA8EI,IAA9E,EACH,CACJ,CATD,CAUH,C,CAWKD,oBAAoB,CAAG,MAAMP,kBAAN,CAA0BE,cAA1B,CAA0CO,YAA1C,CAAwDC,SAAxD,GAAsE,MACzF5D,CAAAA,eAAe,CAAGU,IAAI,CAACC,KAAL,CAAWhB,gBAAgB,CAACK,eAAjB,GAAmCY,OAAnC,CAA2CZ,eAAtD,CADuE,CAEzF6D,OAAO,CAAG,KAAM,oBAAU,4CAAV,CAAwD,qBAAxD,CAFyE,CAGzFC,UAAU,CAAG,KAAM,oBAAU,+CAAV,CAA2D,qBAA3D,CAHsE,CAI/F,GAAIC,CAAAA,KAAK,CAAG,CACRC,MAAM,CAAE,CAAC,GAAM,QAAP,CAAiBC,KAAK,CAAEJ,OAAxB,CADA,CAERK,SAAS,CAAE,CAAC,GAAM,WAAP,CAAoBD,KAAK,CAAEH,UAA3B,CAFH,CAAZ,CAIAC,KAAK,CAACJ,YAAD,CAAL,CAAoBQ,UAApB,IACA,GAAI,MACMC,CAAAA,SAAS,CAAGvE,QAAQ,CAACC,aAAT,CAAuB,+BAAvB,CADlB,CAEMuE,eAAe,CAAG,CACpB,mBAAsBnB,kBADF,CAEpB,eAAkBE,cAFE,CAGpB,gBAAmBpD,eAAe,CAACkD,kBAAD,CAAf,CAAoCoB,IAHnC,CAIpB,iBAC4B,KAAvB,GAAApB,kBAAD,CACIlD,eAAe,CAACkD,kBAAD,CAAf,CAAoCM,QAApC,CAA6CJ,cAA7C,EAA6DkB,IADjE,CACwE,IANxD,CAOpB,MAASC,MAAM,CAACC,MAAP,CAAcT,KAAd,CAPW,CAQpB,UAAaH,SARO,CAFxB,CAYM,CAACa,IAAD,CAAOC,EAAP,EAAa,KAAMC,oBAAUC,gBAAV,CAA2B,0CAA3B,CAAuEP,eAAvE,CAZzB,CAaMQ,OAAO,CAAGF,mBAAUG,kBAAV,CAA6BV,SAA7B,CAAwCK,IAAxC,CAA8CC,EAA9C,EAAkD,CAAlD,CAbhB,CAcAG,OAAO,CAAC/E,aAAR,CAAsB,qBAAtB,EAA6C0B,gBAA7C,CAA8D,QAA9D,CAAwE,IAAM,CAC1EuD,yBAAyB,CAAC7B,kBAAD,CAAqBE,cAArB,CAC5B,CAFD,EAIA,KAAM4B,CAAAA,UAAU,CAAGH,OAAO,CAAC/E,aAAR,CAAsB,gBAAtB,CAAnB,CACA,GAAIkF,UAAJ,CAAgB,CACZA,UAAU,CACLxD,gBADL,CACsB,OADtB,CAC+B,IAAM,CAC7ByD,iBAAiB,CAAC/B,kBAAD,CAAqBE,cAArB,CACpB,CAHL,CAIH,CAEJ,CAAC,MAAO3B,CAAP,CAAU,CACRyD,sBAAaC,SAAb,CAAuB1D,CAAvB,CACH,CACJ,C,CAUK2D,qBAAqB,CAAIC,IAAD,EAAU,CACpC,KAAMpF,CAAAA,eAAe,CAAGN,gBAAgB,CAACM,eAAjB,EAAxB,CACAA,eAAe,CAACiB,KAAhB,CAAwBR,IAAI,CAAC4E,SAAL,CAAeD,IAAf,CAC3B,C,CAMKtC,kBAAkB,CAAG,IAAM,CAC7B,KAAMwC,CAAAA,oBAAoB,CAAG5F,gBAAgB,CAACM,eAAjB,GAAmCiB,KAAhE,CACA,GAAIqE,oBAAJ,CAA0B,CACtB,MAAO7E,CAAAA,IAAI,CAACC,KAAL,CAAW4E,oBAAX,CACV,CACD,MAAO,EACV,C,CAQKN,iBAAiB,CAAG,CAAC/B,kBAAD,CAAqBE,cAArB,GAAwC,MACxDoC,CAAAA,KAAK,CAAGzC,kBAAkB,EAD8B,CAGxD0C,oBAAoB,CAAG9F,gBAAgB,CAACQ,gBAAjB,EAHiC,CAIxDkD,WAAW,CAAuB,EAAnB,GAAAD,cAAc,CAAU,IAAV,CAAiBA,cAJU,CAK9D,IAAK,GAAIsC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,KAAK,CAACG,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,GAAIF,KAAK,CAACE,CAAD,CAAL,CAASvC,aAAT,GAA2BD,kBAA3B,EACAsC,KAAK,CAACE,CAAD,CAAL,CAASrC,WAAT,GAAyBA,WAD7B,CAC0C,CACtCmC,KAAK,CAACI,MAAN,CAAaF,CAAb,CAAgB,CAAhB,CACH,CACJ,CAED,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,oBAAoB,CAACI,IAArB,CAA0BF,MAA9C,CAAsDD,CAAC,EAAvD,CAA2D,CACvD,GAAID,oBAAoB,CAACI,IAArB,CAA0BH,CAA1B,EAA6BvD,EAA7B,GAXG,uBAAyBe,kBAAzB,CAA8C,GAA9C,CAAoDE,cAW3D,CAA4C,CACxCqC,oBAAoB,CAACK,SAArB,CAA+BJ,CAA/B,CACH,CACJ,CAEDN,qBAAqB,CAACI,KAAD,CACxB,C,CAQKT,yBAAyB,CAAG,CAACgB,IAAD,CAAO5D,EAAP,GAAc,MAEtC6D,CAAAA,4BAA4B,CAAGnG,QAAQ,CAACC,aAAT,gCAA+CiG,IAA/C,aAAuD5D,EAAvD,yBAFO,CAGtCqD,KAAK,CAAGzC,kBAAkB,EAHY,CAK5C,IAAK,GAAI2C,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,KAAK,CAACG,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,GAAIF,KAAK,CAACE,CAAD,CAAL,CAASvC,aAAT,GAA2B4C,IAA3B,EAAmCP,KAAK,CAACE,CAAD,CAAL,CAASrC,WAAT,GAAyBlB,EAAhE,CAAoE,CAChEqD,KAAK,CAACE,CAAD,CAAL,CAASnC,IAAT,CAAgByC,4BAA4B,CAAC9E,KAChD,CACJ,CAEDkE,qBAAqB,CAACI,KAAD,CACxB,C,CAKKzD,kCAAkC,CAAG,IAAM,IACzCkE,CAAAA,aAAa,CAAGtG,gBAAgB,CAACU,wBAAjB,EADyB,CAEzC6F,SAAS,CAAGvG,gBAAgB,CAACW,oBAAjB,EAF6B,CAG7C,KAAMkF,CAAAA,KAAK,CAAGzC,kBAAkB,EAAhC,CAEA,IAAK,GAAI2C,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,KAAK,CAACG,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,GAAIF,KAAK,CAACE,CAAD,CAAL,CAASvC,aAAT,GAA2B8C,aAAa,CAAC/E,KAAzC,EACAsE,KAAK,CAACE,CAAD,CAAL,CAASrC,WAAT,GAAyB6C,SAAS,CAAChF,KADvC,CAC8C,CAC1C,MACH,CACJ,CACDsE,KAAK,CAACW,IAAN,CAAW,CACP,cAAiBF,aAAa,CAAC/E,KADxB,CAEP,YAAegF,SAAS,CAAChF,KAFlB,CAGP,KAAQ,QAHD,CAAX,EAMAuC,oBAAoB,CAACwC,aAAa,CAAC/E,KAAf,CAAsBgF,SAAS,CAAChF,KAAhC,CAAuC,QAAvC,IAApB,CAA2EwC,IAA3E,GAEA0B,qBAAqB,CAACI,KAAD,CACxB,C,CAOK5D,uBAAuB,CAAID,iBAAD,EAAuB,MAC7CyE,CAAAA,eAAe,CAAG,CAACC,UAAD,CAAapC,KAAb,CAAoB/C,KAApB,GAA8B,CAClD,KAAMoF,CAAAA,MAAM,CAAGzG,QAAQ,CAAC0G,aAAT,CAAuB,QAAvB,CAAf,CACAD,MAAM,CAACE,IAAP,CAAcvC,KAAd,CACAqC,MAAM,CAACpF,KAAP,CAAeA,KAAf,CAEAmF,UAAU,CAACvD,GAAX,CAAewD,MAAf,CACH,CAPkD,CAS7CtG,eAAe,CAAGU,IAAI,CAACC,KAAL,CAAWhB,gBAAgB,CAACK,eAAjB,GAAmCY,OAAnC,CAA2CZ,eAAtD,CAT2B,CAW7CyG,iBAAiB,CAAG9G,gBAAgB,CAACW,oBAAjB,EAXyB,CAYnD,MAAOmG,iBAAiB,CAACC,UAAzB,CAAqC,CACjCD,iBAAiB,CAACE,WAAlB,CAA8BF,iBAAiB,CAACC,UAAhD,CACH,CAED,GAAwC,CAAC,CAArC,GAAA/E,iBAAiB,CAACX,aAAtB,CAA4C,CACxC,KAAMC,CAAAA,OAAO,CAAGsD,MAAM,CAACC,MAAP,CAAcxE,eAAe,CAAC2B,iBAAiB,CAACT,KAAnB,CAAf,CAAyCsC,QAAvD,CAAhB,CACAvC,OAAO,CAAC+B,OAAR,CAAgBsD,MAAM,EAAI,CACtBF,eAAe,CAACK,iBAAD,CAAoBH,MAAM,CAAChC,IAA3B,CAAiCgC,MAAM,CAACnE,EAAxC,CAClB,CAFD,EAIA,GAAgC,KAA5B,GAAAR,iBAAiB,CAACT,KAAtB,CAAuC,CACnCkF,eAAe,CAACK,iBAAD,CAAoB,iBAApB,CAAuC,KAAvC,CAAf,CACAA,iBAAiB,CAACG,QAAlB,GACH,CAHD,IAGO,CACHH,iBAAiB,CAACG,QAAlB,GACH,CACJ,CACJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS for the mod_form page on mod_bigbluebuttonbn plugin.\n *\n * @module      mod_bigbluebuttonbn/mod_form\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\nimport Templates from \"core/templates\";\n\n/**\n * Get all selectors in one place.\n *\n */\nconst ELEMENT_SELECTOR = {\n    instanceTypeSelection: () => document.querySelector('select#id_type'),\n    instanceTypeProfiles: () => document.querySelector('[data-profile-types]'),\n    participantData: () => document.querySelector('[data-participant-data]'),\n    participantList: () => document.getElementsByName('participants')[0],\n    participantTable: () => document.getElementById('participant_list_table'),\n    participantSelectionType: () => document.getElementsByName('bigbluebuttonbn_participant_selection_type')[0],\n    participantSelection: () => document.getElementsByName('bigbluebuttonbn_participant_selection')[0],\n    participantAddButton: () => document.getElementsByName('bigbluebuttonbn_participant_selection_add')[0],\n};\n/**\n * Initialise the moodle form code.\n *\n * This will help hide or show items depending on the selection of the instance type.\n *\n * @method init\n * @param {object} info\n */\nexport const init = (info) => {\n    const selectedType = ELEMENT_SELECTOR.instanceTypeSelection();\n    const instanceTypeProfiles = JSON.parse(ELEMENT_SELECTOR.instanceTypeProfiles().dataset.profileTypes);\n\n    let profileType = info.instanceTypeDefault;\n    if (selectedType !== null && selectedType.selectedIndex !== -1) {\n        profileType = selectedType.options[selectedType.selectedIndex].value;\n    }\n\n    const isFeatureEnabled = (profileType, feature) => {\n        const features = instanceTypeProfiles[profileType].features;\n        return (features.indexOf(feature) !== -1);\n    };\n    applyInstanceTypeProfile(profileType, isFeatureEnabled);\n\n    // Change form visible fields depending on the selection.\n    selectedType.addEventListener('change', (e) => {\n        applyInstanceTypeProfile(e.target.value, isFeatureEnabled);\n    });\n\n    ELEMENT_SELECTOR.participantSelectionType().addEventListener('change', (e) => {\n        const currentTypeSelect = e.target;\n        updateSelectionFromType(currentTypeSelect);\n    });\n\n    ELEMENT_SELECTOR.participantAddButton().addEventListener('click', (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        participantAddFromCurrentSelection();\n    });\n\n    participantListInit();\n};\n\n/**\n * Show or hide form element depending on the selected profile\n *\n * @param {string} profileType\n * @param {function} isFeatureEnabled\n */\nconst applyInstanceTypeProfile = (profileType, isFeatureEnabled) => {\n    let showAll = isFeatureEnabled(profileType, 'all');\n    const showFieldset = (id, show) => {\n        // Show room settings validation.\n        const node = document.querySelector('#' + id);\n        if (!node) {\n            return;\n        }\n        if (show) {\n            node.style.display = 'block';\n            return;\n        }\n        node.style.display = 'none';\n    };\n    const showInput = (id, show) => {\n        // Show room settings validation.\n        const node = document.querySelector('#' + id);\n        if (!node) {\n            return;\n        }\n        var ancestor = node.closest('div').closest('div');\n        if (show) {\n            ancestor.style.display = 'block';\n            return;\n        }\n        ancestor.style.display = 'none';\n    };\n    const showFormGroup = (id, show) => {\n        // Show room settings validation.\n        const node = document.querySelector('#fgroup_id_' + id);\n        if (!node) {\n            return;\n        }\n        if (show) {\n            node.classList.remove('hidden');\n            return;\n        }\n        node.classList.add('hidden');\n    };\n    // Show room settings validation.\n    showFieldset('id_room', showAll ||\n        isFeatureEnabled(profileType, 'showroom'));\n    showInput('id_record', showAll ||\n        isFeatureEnabled(profileType, 'showroom'));\n    // Show recordings settings validation.\n    showFieldset('id_recordings', showAll ||\n        isFeatureEnabled(profileType, 'showrecordings'));\n    // Show recordings imported settings validation.\n    showInput('id_recordings_imported', showAll ||\n        isFeatureEnabled(profileType, 'showrecordings'));\n    // Preuploadpresentation feature validation.\n    showFieldset('id_preuploadpresentation', showAll ||\n        isFeatureEnabled(profileType, 'preuploadpresentation'));\n    // Participants feature validation.\n    showFieldset('id_permissions', showAll ||\n        isFeatureEnabled(profileType, 'permissions'));\n    // Schedule feature validation.\n    showFieldset('id_schedule', showAll ||\n        isFeatureEnabled(profileType, 'schedule'));\n    // Common module settings validation.\n    showFieldset('id_modstandardelshdr', showAll ||\n        isFeatureEnabled(profileType, 'modstandardelshdr'));\n    // Restrict access validation.\n    showFieldset('id_availabilityconditionsheader', showAll ||\n        isFeatureEnabled(profileType, 'availabilityconditionsheader'));\n    // Tags validation.\n    showFieldset('id_tagshdr', showAll || isFeatureEnabled(profileType, 'tagshdr'));\n    // Competencies validation.\n    showFieldset('id_competenciessection', showAll ||\n        isFeatureEnabled(profileType, 'competenciessection'));\n    // Completion validation.\n    showFormGroup('completionattendancegroup', showAll ||\n        isFeatureEnabled(profileType, 'completionattendance'));\n    // Completion validation.\n    showFormGroup('completionengagementgroup', showAll ||\n        isFeatureEnabled(profileType, 'completionengagement'));\n};\n\n/**\n * Init the participant list\n */\nconst participantListInit = () => {\n    const participantData = JSON.parse(ELEMENT_SELECTOR.participantData().dataset.participantData);\n    const participantList = getParticipantList();\n    participantList.forEach(participant => {\n        const selectionTypeValue = participant.selectiontype;\n        const selectionValue = participant.selectionid;\n        const selectionRole = participant.role;\n        if (participant.selectiontype === 'all' ||\n            typeof participantData[participant.selectiontype].children[participant.selectionid] !== 'undefined') {\n            // Add it to the form, but don't add the delete button if it is the first item.\n            participantAddToForm(selectionTypeValue, selectionValue, selectionRole, true).then();\n        }\n    });\n};\n\n/**\n * Add rows to the participant list depending on the current selection.\n *\n * @param {string} selectionTypeValue\n * @param {string} selectionValue\n * @param {string} selectedRole\n * @param {boolean} canRemove\n * @returns {Promise<void>}\n */\nconst participantAddToForm = async(selectionTypeValue, selectionValue, selectedRole, canRemove) => {\n    const participantData = JSON.parse(ELEMENT_SELECTOR.participantData().dataset.participantData);\n    const sviewer = await getString('mod_form_field_participant_bbb_role_viewer', 'mod_bigbluebuttonbn');\n    const smoderator = await getString('mod_form_field_participant_bbb_role_moderator', 'mod_bigbluebuttonbn');\n    let roles = {\n        viewer: {'id': 'viewer', label: sviewer},\n        moderator: {'id': 'moderator', label: smoderator}\n    };\n    roles[selectedRole].isselected = true;\n    try {\n        const listTable = document.querySelector('#participant_list_table tbody');\n        const templateContext = {\n            'selectiontypevalue': selectionTypeValue,\n            'selectionvalue': selectionValue,\n            'participanttype': participantData[selectionTypeValue].name,\n            'participantvalue':\n                (selectionTypeValue !== 'all') ?\n                    participantData[selectionTypeValue].children[selectionValue].name : null,\n            'roles': Object.values(roles),\n            'canRemove': canRemove\n        };\n        const {html, js} = await Templates.renderForPromise('mod_bigbluebuttonbn/participant_form_add', templateContext);\n        const newNode = Templates.appendNodeContents(listTable, html, js)[0];\n        newNode.querySelector('.participant-select').addEventListener('change', () => {\n            participantListRoleUpdate(selectionTypeValue, selectionValue);\n        });\n        // Now add the callbacks: participantListRoleUpdate() and participantRemove().\n        const removeNode = newNode.querySelector('.remove-button');\n        if (removeNode) {\n            removeNode\n                .addEventListener('click', () => {\n                    participantRemove(selectionTypeValue, selectionValue);\n                });\n        }\n\n    } catch (e) {\n        Notification.exception(e);\n    }\n};\n/*\n\n */\n\n/**\n * Update the related form element with the list value.\n *\n * @param {object} list\n */\nconst participantListUpdate = (list) => {\n    const participantList = ELEMENT_SELECTOR.participantList();\n    participantList.value = JSON.stringify(list);\n};\n\n/**\n *\n * @returns {any}\n */\nconst getParticipantList = () => {\n    const participantListValue = ELEMENT_SELECTOR.participantList().value;\n    if (participantListValue) {\n        return JSON.parse(participantListValue);\n    }\n    return [];\n};\n\n/**\n * Remove participant both in the table/form and in the form element.\n *\n * @param {string} selectionTypeValue\n * @param {string} selectionValue\n */\nconst participantRemove = (selectionTypeValue, selectionValue) => {\n    const pList = getParticipantList();\n    const id = 'participant_list_tr_' + selectionTypeValue + '-' + selectionValue;\n    const participantListTable = ELEMENT_SELECTOR.participantTable();\n    const selectionid = (selectionValue === '' ? null : selectionValue);\n    for (let i = 0; i < pList.length; i++) {\n        if (pList[i].selectiontype === selectionTypeValue &&\n            pList[i].selectionid === selectionid) {\n            pList.splice(i, 1);\n        }\n    }\n    // Remove from the form.\n    for (let i = 0; i < participantListTable.rows.length; i++) {\n        if (participantListTable.rows[i].id === id) {\n            participantListTable.deleteRow(i);\n        }\n    }\n    // Update value in the form.\n    participantListUpdate(pList);\n};\n\n/**\n * Role update\n *\n * @param {string} type\n * @param {string} id\n */\nconst participantListRoleUpdate = (type, id) => {\n    // Update in memory.\n    const participantListRoleSelection = document.querySelector(`#participant_list_tr_${type}-${id} .participant-select`);\n    const pList = getParticipantList();\n\n    for (var i = 0; i < pList.length; i++) {\n        if (pList[i].selectiontype === type && pList[i].selectionid === id) {\n            pList[i].role = participantListRoleSelection.value;\n        }\n    }\n    // Update in the form.\n    participantListUpdate(pList);\n};\n\n/**\n * Add participant from the currently selected options\n */\nconst participantAddFromCurrentSelection = () => {\n    let selectionType = ELEMENT_SELECTOR.participantSelectionType();\n    let selection = ELEMENT_SELECTOR.participantSelection();\n    const pList = getParticipantList();\n    // Lookup to see if it has been added already.\n    for (var i = 0; i < pList.length; i++) {\n        if (pList[i].selectiontype === selectionType.value &&\n            pList[i].selectionid === selection.value) {\n            return;\n        }\n    }\n    pList.push({\n        \"selectiontype\": selectionType.value,\n        \"selectionid\": selection.value,\n        \"role\": \"viewer\"\n    });\n    // Add it to the form.\n    participantAddToForm(selectionType.value, selection.value, 'viewer', true).then();\n    // Update in the form.\n    participantListUpdate(pList);\n};\n\n/**\n * Update selectable options when changing types\n *\n * @param {HTMLNode} currentTypeSelect\n */\nconst updateSelectionFromType = (currentTypeSelect) => {\n    const createNewOption = (selectItem, label, value) => {\n        const option = document.createElement('option');\n        option.text = label;\n        option.value = value;\n\n        selectItem.add(option);\n    };\n\n    const participantData = JSON.parse(ELEMENT_SELECTOR.participantData().dataset.participantData);\n    // Clear all selection items.\n    const participantSelect = ELEMENT_SELECTOR.participantSelection();\n    while (participantSelect.firstChild) {\n        participantSelect.removeChild(participantSelect.firstChild);\n    }\n    // Add options depending on the selection.\n    if (currentTypeSelect.selectedIndex !== -1) {\n        const options = Object.values(participantData[currentTypeSelect.value].children);\n        options.forEach(option => {\n            createNewOption(participantSelect, option.name, option.id);\n        });\n\n        if (currentTypeSelect.value === 'all') {\n            createNewOption(participantSelect, '---------------', 'all');\n            participantSelect.disabled = true;\n        } else {\n            participantSelect.disabled = false;\n        }\n    }\n};\n"],"file":"modform.min.js"}