define ("mod_bigbluebuttonbn/actions",["./repository","core/notification","./events","core/str"],function(_repository,_notification,_events,_str){"use strict";const confirmedPromise=(title,question,saveLabel)=>new Promise(resolve=>{(0,_notification.saveCancel)(title,question,saveLabel,resolve)}),registerEventListeners=()=>{document.addEventListener("click",e=>{const actionButton=e.target.closest(".bbb-btn-action[data-action=\"end\"]");if(!actionButton){return}e.preventDefault();const bbbId=actionButton.dataset.bbbId,groupId=actionButton.dataset.groupId?actionButton.dataset.groupId:0;confirmedPromise((0,_str.get_string)("end_session_confirm_title","mod_bigbluebuttonbn"),(0,_str.get_string)("end_session_confirm","mod_bigbluebuttonbn"),(0,_str.get_string)("yes","moodle")).then(()=>(0,_repository.endMeeting)(bbbId,groupId)).then(()=>{(0,_events.notifySessionEnded)(bbbId,groupId)}).catch(_notification.exception)})};let listening=!1;if(!listening){registerEventListeners();listening=!0}});
//# sourceMappingURL=actions.min.js.map
