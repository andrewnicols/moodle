define ("mod_bigbluebuttonbn/roomupdater",["exports","core/templates","core/notification","./repository"],function(_exports,_templates,_notification,_repository){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.updateRoom=_exports.stop=_exports.start=void 0;_templates=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_templates);const timeout=1e3;let updateCount=0,updateFactor=1,timerReference=null,timerRunning=!1;const resetValues=()=>{updateCount=0;updateFactor=1};_exports.start=()=>{timerRunning=!0;timerReference=setTimeout(()=>poll(),timeout)};const stop=()=>{timerRunning=!1;if(timerReference){clearInterval(timerReference);timerReference=null}resetValues()};_exports.stop=stop;const poll=()=>{if(!timerRunning){return}if(0==updateCount%updateFactor){updateRoom(!0).then(()=>{if(updateFactor>=10){updateFactor=1}else{updateFactor++}}).catch().then(()=>{timerReference=setTimeout(()=>poll(),timeout)}).catch()}},updateRoom=function(){let updatecache=0<arguments.length&&arguments[0]!==void 0?arguments[0]:!1;const bbbRoomViewElement=document.getElementById("bbb-room-view"),bbbId=bbbRoomViewElement.dataset.bbbId,groupId=bbbRoomViewElement.dataset.groupId;return(0,_repository.getMeetingInfo)(bbbId,groupId,updatecache).then(data=>{data.haspresentations=!1;if(data.presentations&&data.presentations.length){data.haspresentations=!0}return _templates.default.renderForPromise("mod_bigbluebuttonbn/room_view",data)}).then(_ref=>{let{html,js}=_ref;return _templates.default.replaceNodeContents(bbbRoomViewElement,html,js)}).catch(_notification.exception)};_exports.updateRoom=updateRoom});
//# sourceMappingURL=roomupdater.min.js.map
