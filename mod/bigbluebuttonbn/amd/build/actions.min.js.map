{"version":3,"sources":["../src/actions.js"],"names":["confirmedPromise","title","question","saveLabel","Promise","resolve","registerEventListeners","document","addEventListener","e","actionButton","target","closest","preventDefault","bbbId","dataset","groupId","then","catch","displayException","listening"],"mappings":"oKA8BMA,CAAAA,gBAAgB,CAAG,CAACC,KAAD,CAAQC,QAAR,CAAkBC,SAAlB,GAAgC,GAAIC,CAAAA,OAAJ,CAAYC,OAAO,EAAI,CAC5E,6BAAWJ,KAAX,CAAkBC,QAAlB,CAA4BC,SAA5B,CAAuCE,OAAvC,CACH,CAFwD,C,CAInDC,sBAAsB,CAAG,IAAM,CACjCC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCC,CAAC,EAAI,CACpC,KAAMC,CAAAA,YAAY,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,sCAAjB,CAArB,CACA,GAAI,CAACF,YAAL,CAAmB,CACf,MACH,CAEDD,CAAC,CAACI,cAAF,GANoC,KAQ9BC,CAAAA,KAAK,CAAGJ,YAAY,CAACK,OAAb,CAAqBD,KARC,CAS9BE,OAAO,CAAGN,YAAY,CAACK,OAAb,CAAqBC,OAArB,CAA+BN,YAAY,CAACK,OAAb,CAAqBC,OAApD,CAA8D,CAT1C,CAWpChB,gBAAgB,CACZ,oBAAU,2BAAV,CAAuC,qBAAvC,CADY,CAEZ,oBAAU,qBAAV,CAAiC,qBAAjC,CAFY,CAGZ,oBAAU,KAAV,CAAiB,QAAjB,CAHY,CAAhB,CAKCiB,IALD,CAKM,IAAM,2BAAkBH,KAAlB,CAAyBE,OAAzB,CALZ,EAMCC,IAND,CAMM,IAAM,CACR,+BAAmBH,KAAnB,CAA0BE,OAA1B,CAGH,CAVD,EAWCE,KAXD,CAWOC,uBAXP,CAYH,CAvBD,CAwBH,C,CAED,GAAIC,CAAAA,SAAS,GAAb,CACA,GAAI,CAACA,SAAL,CAAgB,CACZd,sBAAsB,GACtBc,SAAS,GACZ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * JS actions.\n *\n * @module      mod_bigbluebuttonbn/actions\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {endMeeting as requestEndMeeting} from './repository';\nimport {\n    exception as displayException,\n    saveCancel,\n} from 'core/notification';\nimport {notifySessionEnded} from './events';\nimport {get_string as getString} from 'core/str';\n\nconst confirmedPromise = (title, question, saveLabel) => new Promise(resolve => {\n    saveCancel(title, question, saveLabel, resolve);\n});\n\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const actionButton = e.target.closest('.bbb-btn-action[data-action=\"end\"]');\n        if (!actionButton) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const bbbId = actionButton.dataset.bbbId;\n        const groupId = actionButton.dataset.groupId ? actionButton.dataset.groupId : 0;\n\n        confirmedPromise(\n            getString('end_session_confirm_title', 'mod_bigbluebuttonbn'),\n            getString('end_session_confirm', 'mod_bigbluebuttonbn'),\n            getString('yes', 'moodle')\n        )\n        .then(() => requestEndMeeting(bbbId, groupId))\n        .then(() => {\n            notifySessionEnded(bbbId, groupId);\n\n            return;\n        })\n        .catch(displayException);\n    });\n};\n\nlet listening = false;\nif (!listening) {\n    registerEventListeners();\n    listening = true;\n}\n"],"file":"actions.min.js"}