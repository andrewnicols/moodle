{"version":3,"sources":["../../../src/bootstrap/tools/sanitizer.js"],"names":["unsafeHtml","whiteList","sanitizeFn","length","domParser","window","DOMParser","createdDocument","parseFromString","whitelistKeys","Object","keys","elements","slice","call","body","querySelectorAll","i","len","el","elName","nodeName","toLowerCase","indexOf","parentNode","removeChild","attributeList","attributes","whitelistedAttributes","concat","forEach","attr","allowedAttribute","removeAttribute","innerHTML","uriAttrs","a","area","b","br","col","code","div","em","hr","h1","h2","h3","h4","h5","h6","img","li","ol","p","pre","s","small","span","sub","sup","strong","u","ul","allowedAttributeList","attrName","nodeValue","match","regExp","filter","attrRegex","RegExp"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): tools/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst uriAttrs = [\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n]\n\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultWhitelist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi\n\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i\n\nfunction allowedAttribute(attr, allowedAttributeList) {\n  const attrName = attr.nodeName.toLowerCase()\n\n  if (allowedAttributeList.indexOf(attrName) !== -1) {\n    if (uriAttrs.indexOf(attrName) !== -1) {\n      return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n    }\n\n    return true\n  }\n\n  const regExp = allowedAttributeList.filter(attrRegex => attrRegex instanceof RegExp)\n\n  // Check if a regular expression validates the attribute.\n  for (let i = 0, len = regExp.length; i < len; i++) {\n    if (attrName.match(regExp[i])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n  if (unsafeHtml.length === 0) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const whitelistKeys = Object.keys(whiteList)\n  const elements = [].slice.call(createdDocument.body.querySelectorAll('*'))\n\n  for (let i = 0, len = elements.length; i < len; i++) {\n    const el = elements[i]\n    const elName = el.nodeName.toLowerCase()\n\n    if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {\n      el.parentNode.removeChild(el)\n\n      continue\n    }\n\n    const attributeList = [].slice.call(el.attributes)\n    const whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])\n\n    attributeList.forEach(attr => {\n      if (!allowedAttribute(attr, whitelistedAttributes)) {\n        el.removeAttribute(attr.nodeName)\n      }\n    })\n  }\n\n  return createdDocument.body.innerHTML\n}\n"],"file":"sanitizer.min.js"}