{"version":3,"file":"button.min.js","sources":["../../src/bootstrap/button.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.5.0): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'button'\nconst VERSION             = '4.5.0'\nconst DATA_KEY            = 'bs.button'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_BUTTON = 'btn'\nconst CLASS_NAME_FOCUS  = 'focus'\n\nconst SELECTOR_DATA_TOGGLE_CARROT   = '[data-toggle^=\"button\"]'\nconst SELECTOR_DATA_TOGGLES         = '[data-toggle=\"buttons\"]'\nconst SELECTOR_DATA_TOGGLE          = '[data-toggle=\"button\"]'\nconst SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle=\"buttons\"] .btn'\nconst SELECTOR_INPUT                = 'input:not([type=\"hidden\"])'\nconst SELECTOR_ACTIVE               = '.active'\nconst SELECTOR_BUTTON               = '.btn'\n\nconst EVENT_CLICK_DATA_API      = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_FOCUS_BLUR_DATA_API = `focus${EVENT_KEY}${DATA_API_KEY} ` +\n                          `blur${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_LOAD_DATA_API       = `load${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  constructor(element) {\n    this._element = element\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // Public\n\n  toggle() {\n    let triggerChangeEvent = true\n    let addAriaPressed = true\n    const rootElement = $(this._element).closest(\n      SELECTOR_DATA_TOGGLES\n    )[0]\n\n    if (rootElement) {\n      const input = this._element.querySelector(SELECTOR_INPUT)\n\n      if (input) {\n        if (input.type === 'radio') {\n          if (input.checked &&\n            this._element.classList.contains(CLASS_NAME_ACTIVE)) {\n            triggerChangeEvent = false\n          } else {\n            const activeElement = rootElement.querySelector(SELECTOR_ACTIVE)\n\n            if (activeElement) {\n              $(activeElement).removeClass(CLASS_NAME_ACTIVE)\n            }\n          }\n        }\n\n        if (triggerChangeEvent) {\n          // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\n          if (input.type === 'checkbox' || input.type === 'radio') {\n            input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE)\n          }\n          $(input).trigger('change')\n        }\n\n        input.focus()\n        addAriaPressed = false\n      }\n    }\n\n    if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n      if (addAriaPressed) {\n        this._element.setAttribute('aria-pressed',\n          !this._element.classList.contains(CLASS_NAME_ACTIVE))\n      }\n\n      if (triggerChangeEvent) {\n        $(this._element).toggleClass(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n\n      if (!data) {\n        data = new Button(this)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, (event) => {\n    let button = event.target\n    const initialButton = button\n\n    if (!$(button).hasClass(CLASS_NAME_BUTTON)) {\n      button = $(button).closest(SELECTOR_BUTTON)[0]\n    }\n\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n      event.preventDefault() // work around Firefox bug #1540995\n    } else {\n      const inputBtn = button.querySelector(SELECTOR_INPUT)\n\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n        event.preventDefault() // work around Firefox bug #1540995\n        return\n      }\n\n      if (initialButton.tagName === 'LABEL' && inputBtn && inputBtn.type === 'checkbox') {\n        event.preventDefault() // work around event sent to label and input\n      }\n      Button._jQueryInterface.call($(button), 'toggle')\n    }\n  })\n  .on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, (event) => {\n    const button = $(event.target).closest(SELECTOR_BUTTON)[0]\n    $(button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type))\n  })\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  // ensure correct active class is set to match the controls' actual values/states\n\n  // find all checkboxes/readio buttons inside data-toggle groups\n  let buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    const input = button.querySelector(SELECTOR_INPUT)\n    if (input.checked || input.hasAttribute('checked')) {\n      button.classList.add(CLASS_NAME_ACTIVE)\n    } else {\n      button.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n\n  // find all button toggles\n  buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    if (button.getAttribute('aria-pressed') === 'true') {\n      button.classList.add(CLASS_NAME_ACTIVE)\n    } else {\n      button.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Button._jQueryInterface\n$.fn[NAME].Constructor = Button\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Button._jQueryInterface\n}\n\nexport default Button\n"],"names":["obj","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","_jquery","__esModule","default","NAME","EVENT_KEY","concat","JQUERY_NO_CONFLICT","$","fn","EVENT_CLICK_DATA_API","EVENT_FOCUS_BLUR_DATA_API","EVENT_LOAD_DATA_API","Button","element","instance","Constructor","_classCallCheck","this","_element","protoProps","staticProps","get","value","config","each","data","triggerChangeEvent","addAriaPressed","rootElement","closest","querySelector","type","checked","classList","contains","activeElement","removeClass","trigger","focus","hasAttribute","setAttribute","toggleClass","removeData","document","on","event","button","initialButton","hasClass","preventDefault","inputBtn","tagName","_jQueryInterface","test","window","buttons","slice","querySelectorAll","len","add","remove","getAttribute","noConflict","_default","_exports"],"mappings":"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"}