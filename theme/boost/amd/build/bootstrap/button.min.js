define ("theme_boost/bootstrap/button",["exports","jquery"],function(_exports,_jquery){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;_jquery=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_jquery);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0,descriptor;i<props.length;i++){descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;if("value"in descriptor)descriptor.writable=!0;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:!1});return Constructor}var DATA_KEY="bs.button",EVENT_KEY=".".concat(DATA_KEY),DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=_jquery.default.fn.button,CLASS_NAME_ACTIVE="active",SELECTOR_DATA_TOGGLE_CARROT="[data-toggle^=\"button\"]",SELECTOR_INPUT="input:not([type=\"hidden\"])",SELECTOR_BUTTON=".btn",EVENT_CLICK_DATA_API="click".concat(EVENT_KEY).concat(DATA_API_KEY),EVENT_FOCUS_BLUR_DATA_API="focus".concat(EVENT_KEY).concat(DATA_API_KEY," ")+"blur".concat(EVENT_KEY).concat(DATA_API_KEY),EVENT_LOAD_DATA_API="load".concat(EVENT_KEY).concat(DATA_API_KEY),Button=function(){function Button(element){_classCallCheck(this,Button);this._element=element}_createClass(Button,[{key:"toggle",value:function toggle(){var triggerChangeEvent=!0,addAriaPressed=!0,rootElement=(0,_jquery.default)(this._element).closest("[data-toggle=\"buttons\"]")[0];if(rootElement){var input=this._element.querySelector(SELECTOR_INPUT);if(input){if("radio"===input.type){if(input.checked&&this._element.classList.contains(CLASS_NAME_ACTIVE)){triggerChangeEvent=!1}else{var activeElement=rootElement.querySelector(".active");if(activeElement){(0,_jquery.default)(activeElement).removeClass(CLASS_NAME_ACTIVE)}}}if(triggerChangeEvent){if("checkbox"===input.type||"radio"===input.type){input.checked=!this._element.classList.contains(CLASS_NAME_ACTIVE)}(0,_jquery.default)(input).trigger("change")}input.focus();addAriaPressed=!1}}if(!(this._element.hasAttribute("disabled")||this._element.classList.contains("disabled"))){if(addAriaPressed){this._element.setAttribute("aria-pressed",!this._element.classList.contains(CLASS_NAME_ACTIVE))}if(triggerChangeEvent){(0,_jquery.default)(this._element).toggleClass(CLASS_NAME_ACTIVE)}}}},{key:"dispose",value:function dispose(){_jquery.default.removeData(this._element,DATA_KEY);this._element=null}}],[{key:"VERSION",get:function get(){return"4.5.0"}},{key:"_jQueryInterface",value:function _jQueryInterface(config){return this.each(function(){var data=(0,_jquery.default)(this).data(DATA_KEY);if(!data){data=new Button(this);(0,_jquery.default)(this).data(DATA_KEY,data)}if("toggle"===config){data[config]()}})}}]);return Button}();(0,_jquery.default)(document).on(EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE_CARROT,function(event){var button=event.target,initialButton=button;if(!(0,_jquery.default)(button).hasClass("btn")){button=(0,_jquery.default)(button).closest(SELECTOR_BUTTON)[0]}if(!button||button.hasAttribute("disabled")||button.classList.contains("disabled")){event.preventDefault()}else{var inputBtn=button.querySelector(SELECTOR_INPUT);if(inputBtn&&(inputBtn.hasAttribute("disabled")||inputBtn.classList.contains("disabled"))){event.preventDefault();return}if("LABEL"===initialButton.tagName&&inputBtn&&"checkbox"===inputBtn.type){event.preventDefault()}Button._jQueryInterface.call((0,_jquery.default)(button),"toggle")}}).on(EVENT_FOCUS_BLUR_DATA_API,SELECTOR_DATA_TOGGLE_CARROT,function(event){var button=(0,_jquery.default)(event.target).closest(SELECTOR_BUTTON)[0];(0,_jquery.default)(button).toggleClass("focus",/^focus(in)?$/.test(event.type))});(0,_jquery.default)(window).on(EVENT_LOAD_DATA_API,function(){for(var buttons=[].slice.call(document.querySelectorAll("[data-toggle=\"buttons\"] .btn")),i=0,len=buttons.length;i<len;i++){var button=buttons[i],input=button.querySelector(SELECTOR_INPUT);if(input.checked||input.hasAttribute("checked")){button.classList.add(CLASS_NAME_ACTIVE)}else{button.classList.remove(CLASS_NAME_ACTIVE)}}buttons=[].slice.call(document.querySelectorAll("[data-toggle=\"button\"]"));for(var _i=0,_len=buttons.length,_button;_i<_len;_i++){_button=buttons[_i];if("true"===_button.getAttribute("aria-pressed")){_button.classList.add(CLASS_NAME_ACTIVE)}else{_button.classList.remove(CLASS_NAME_ACTIVE)}}});_jquery.default.fn.button=Button._jQueryInterface;_jquery.default.fn.button.Constructor=Button;_jquery.default.fn.button.noConflict=function(){_jquery.default.fn.button=JQUERY_NO_CONFLICT;return Button._jQueryInterface};_exports.default=Button;return _exports.default});
//# sourceMappingURL=button.min.js.map
