define ("theme_boost/bootstrap/button",["exports","jquery"],function(_exports,_jquery){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;_jquery=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_jquery);const NAME="button",DATA_KEY="bs.button",EVENT_KEY=".".concat(DATA_KEY),DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=_jquery.default.fn[NAME],CLASS_NAME_ACTIVE="active",SELECTOR_DATA_TOGGLE_CARROT="[data-toggle^=\"button\"]",SELECTOR_INPUT="input:not([type=\"hidden\"])",SELECTOR_BUTTON=".btn",EVENT_CLICK_DATA_API="click".concat(EVENT_KEY).concat(DATA_API_KEY),EVENT_FOCUS_BLUR_DATA_API="focus".concat(EVENT_KEY).concat(DATA_API_KEY," ")+"blur".concat(EVENT_KEY).concat(DATA_API_KEY),EVENT_LOAD_DATA_API="load".concat(EVENT_KEY).concat(DATA_API_KEY);class Button{constructor(element){this._element=element;this.shouldAvoidTriggerChange=!1}static get VERSION(){return"4.6.0"}toggle(){let triggerChangeEvent=!0,addAriaPressed=!0;const rootElement=(0,_jquery.default)(this._element).closest("[data-toggle=\"buttons\"]")[0];if(rootElement){const input=this._element.querySelector(SELECTOR_INPUT);if(input){if("radio"===input.type){if(input.checked&&this._element.classList.contains(CLASS_NAME_ACTIVE)){triggerChangeEvent=!1}else{const activeElement=rootElement.querySelector(".active");if(activeElement){(0,_jquery.default)(activeElement).removeClass(CLASS_NAME_ACTIVE)}}}if(triggerChangeEvent){if("checkbox"===input.type||"radio"===input.type){input.checked=!this._element.classList.contains(CLASS_NAME_ACTIVE)}if(!this.shouldAvoidTriggerChange){(0,_jquery.default)(input).trigger("change")}}input.focus();addAriaPressed=!1}}if(!(this._element.hasAttribute("disabled")||this._element.classList.contains("disabled"))){if(addAriaPressed){this._element.setAttribute("aria-pressed",!this._element.classList.contains(CLASS_NAME_ACTIVE))}if(triggerChangeEvent){(0,_jquery.default)(this._element).toggleClass(CLASS_NAME_ACTIVE)}}}dispose(){_jquery.default.removeData(this._element,DATA_KEY);this._element=null}static _jQueryInterface(config,avoidTriggerChange){return this.each(function(){const $element=(0,_jquery.default)(this);let data=$element.data(DATA_KEY);if(!data){data=new Button(this);$element.data(DATA_KEY,data)}data.shouldAvoidTriggerChange=avoidTriggerChange;if("toggle"===config){data[config]()}})}}(0,_jquery.default)(document).on(EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE_CARROT,event=>{let button=event.target;const initialButton=button;if(!(0,_jquery.default)(button).hasClass("btn")){button=(0,_jquery.default)(button).closest(SELECTOR_BUTTON)[0]}if(!button||button.hasAttribute("disabled")||button.classList.contains("disabled")){event.preventDefault()}else{const inputBtn=button.querySelector(SELECTOR_INPUT);if(inputBtn&&(inputBtn.hasAttribute("disabled")||inputBtn.classList.contains("disabled"))){event.preventDefault();return}if("INPUT"===initialButton.tagName||"LABEL"!==button.tagName){Button._jQueryInterface.call((0,_jquery.default)(button),"toggle","INPUT"===initialButton.tagName)}}}).on(EVENT_FOCUS_BLUR_DATA_API,SELECTOR_DATA_TOGGLE_CARROT,event=>{const button=(0,_jquery.default)(event.target).closest(SELECTOR_BUTTON)[0];(0,_jquery.default)(button).toggleClass("focus",/^focus(in)?$/.test(event.type))});(0,_jquery.default)(window).on(EVENT_LOAD_DATA_API,()=>{let buttons=[].slice.call(document.querySelectorAll("[data-toggle=\"buttons\"] .btn"));for(let i=0,len=buttons.length;i<len;i++){const button=buttons[i],input=button.querySelector(SELECTOR_INPUT);if(input.checked||input.hasAttribute("checked")){button.classList.add(CLASS_NAME_ACTIVE)}else{button.classList.remove(CLASS_NAME_ACTIVE)}}buttons=[].slice.call(document.querySelectorAll("[data-toggle=\"button\"]"));for(let i=0,len=buttons.length;i<len;i++){const button=buttons[i];if("true"===button.getAttribute("aria-pressed")){button.classList.add(CLASS_NAME_ACTIVE)}else{button.classList.remove(CLASS_NAME_ACTIVE)}}});_jquery.default.fn[NAME]=Button._jQueryInterface;_jquery.default.fn[NAME].Constructor=Button;_jquery.default.fn[NAME].noConflict=()=>{_jquery.default.fn[NAME]=JQUERY_NO_CONFLICT;return Button._jQueryInterface};_exports.default=Button;return _exports.default});
//# sourceMappingURL=button.min.js.map
