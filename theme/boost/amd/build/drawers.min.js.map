{"version":3,"sources":["../src/drawers.js"],"names":["backdropPromise","drawerMap","Map","SELECTORS","BUTTONS","CLOSEBTN","OPENBTN","TOGGLEBTN","DRAWERS","CONTAINER","DRAWERCONTENT","CLASSES","SCROLLED","SHOW","NOTINITIALISED","sizes","medium","large","getCurrentWidth","DomRect","document","body","getBoundingClientRect","x","width","isSmall","browserWidth","isLarge","getBackdrop","Templates","render","then","html","ModalBackdrop","modalBackdrop","getAttachmentPoint","get","addEventListener","e","preventDefault","Drawers","closeAllDrawers","catch","getDrawerOpenButton","drawerId","openButton","querySelector","disableDrawerTooltips","drawerNode","buttons","id","forEach","button","disableButtonTooltip","enableOnBlur","hasAttribute","tooltip","setAttribute","dataset","originalTitle","disabledToggle","toggle","removeAttribute","restoreTooltipOnBlur","enableDrawerTooltips","enableButtonTooltip","addInnerScrollListener","content","classList","scrollTop","constructor","closeDrawer","focusOnOpenButton","updatePreferences","contains","openDrawer","focusOnCloseButton","forceopen","Aria","hide","set","remove","isOpen","closeOnResize","parseInt","getDrawerInstanceForNode","has","dispatchEvent","eventname","cancelable","drawerInstance","pendingPromise","Pending","showEvent","eventTypes","drawerShow","defaultPrevented","unhide","add","preference","M","util","set_user_preference","state","page","getElementById","backdrop","show","pageWrapper","style","overflow","closeButton","setTimeout","focus","resolve","drawerShown","hideEvent","drawerHide","drawerHidden","toggleVisibility","closeOtherDrawers","comparisonInstance","setLastUsedToggle","toggleButton","target","querySelectorAll","btn","lastused","focusLastUsedToggle","lastUsedButton","drawerLayout","window","innerHeight","closest","targetDrawer","openDrawerButton","closeDrawerButton","detail","btnSelector","anyOpen","drawers"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Toggling the visibility of the secondary navigation on mobile.\n *\n * @module     theme_boost/drawers\n * @copyright  2021 Bas Brands\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalBackdrop from 'core/modal_backdrop';\nimport Templates from 'core/templates';\nimport * as Aria from 'core/aria';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport {debounce} from 'core/utils';\nimport Pending from 'core/pending';\n// The jQuery module is only used for interacting with Boostrap 4. It can we removed when MDL-71979 is integrated.\nimport jQuery from 'jquery';\n\nlet backdropPromise = null;\n\nconst drawerMap = new Map();\n\nconst SELECTORS = {\n    BUTTONS: '[data-toggler=\"drawers\"]',\n    CLOSEBTN: '[data-toggler=\"drawers\"][data-action=\"closedrawer\"]',\n    OPENBTN: '[data-toggler=\"drawers\"][data-action=\"opendrawer\"]',\n    TOGGLEBTN: '[data-toggler=\"drawers\"][data-action=\"toggle\"]',\n    DRAWERS: '[data-region=\"fixed-drawer\"]',\n    CONTAINER: '#page.drawers',\n    DRAWERCONTENT: '.drawercontent',\n};\n\nconst CLASSES = {\n    SCROLLED: 'scrolled',\n    SHOW: 'show',\n    NOTINITIALISED: 'not-initialized',\n};\n\n/**\n * Maximum sizes for breakpoints. This needs to correspond with Bootstrap\n * Breakpoints\n *\n * @private\n */\nconst sizes = {\n    medium: 991,\n    large: 1400\n};\n\n/**\n * Get the current body width.\n *\n * @returns {number} the current body width.\n * @private\n */\nconst getCurrentWidth = () => {\n    const DomRect = document.body.getBoundingClientRect();\n    return DomRect.x + DomRect.width;\n};\n\n/**\n * Check if the user uses a small size browser.\n *\n * @returns {boolean} true if the body is smaller than sizes.medium max size.\n * @private\n */\nconst isSmall = () => {\n    const browserWidth = getCurrentWidth();\n    return browserWidth < sizes.medium;\n};\n\n/**\n * Check if the user uses a large size browser.\n *\n * @returns {boolean} true if the body is smaller than sizes.large max size.\n * @private\n */\nconst isLarge = () => {\n    const browserWidth = getCurrentWidth();\n    return browserWidth >= sizes.large;\n};\n\n/**\n * Add a backdrop to the page.\n *\n * @returns {Promise} rendering of modal backdrop.\n * @private\n */\nconst getBackdrop = () => {\n    if (!backdropPromise) {\n        backdropPromise = Templates.render('core/modal_backdrop', {})\n        .then(html => new ModalBackdrop(html))\n        .then(modalBackdrop => {\n            modalBackdrop.getAttachmentPoint().get(0).addEventListener('click', e => {\n                e.preventDefault();\n                Drawers.closeAllDrawers();\n            });\n            return modalBackdrop;\n        })\n        .catch();\n    }\n    return backdropPromise;\n};\n\n/**\n * Get the button element to open a specific drawer.\n *\n * @param {String} drawerId the drawer element Id\n * @return {HTMLElement|undefined} the open button element\n * @private\n */\nconst getDrawerOpenButton = (drawerId) => {\n    let openButton = document.querySelector(`${SELECTORS.OPENBTN}[data-target=\"${drawerId}\"]`);\n    if (!openButton) {\n        openButton = document.querySelector(`${SELECTORS.TOGGLEBTN}[data-target=\"${drawerId}\"]`);\n    }\n    return openButton;\n};\n\n/**\n * Disable drawer tooltips.\n *\n * @param {HTMLElement} drawerNode the drawer main node\n * @private\n */\nconst disableDrawerTooltips = (drawerNode) => {\n    const buttons = [\n        drawerNode.querySelector(SELECTORS.CLOSEBTN),\n        getDrawerOpenButton(drawerNode.id),\n    ];\n    buttons.forEach(button => {\n        if (!button) {\n            return;\n        }\n        disableButtonTooltip(button);\n    });\n};\n\n/**\n * Disable the button tooltips.\n *\n * @param {HTMLElement} button the button element\n * @param {boolean} enableOnBlur if the tooltip must be re-enabled on blur.\n * @private\n */\nconst disableButtonTooltip = (button, enableOnBlur) => {\n    if (button.hasAttribute('data-original-title')) {\n        // The jQuery is still used in Boostrap 4. It can we removed when MDL-71979 is integrated.\n        jQuery(button).tooltip('disable');\n        button.setAttribute('title', button.dataset.originalTitle);\n    } else {\n        button.dataset.disabledToggle = button.dataset.toggle;\n        button.removeAttribute('data-toggle');\n    }\n    if (enableOnBlur) {\n        button.dataset.restoreTooltipOnBlur = true;\n    }\n};\n\n/**\n * Enable drawer tooltips.\n *\n * @param {HTMLElement} drawerNode the drawer main node\n * @private\n */\nconst enableDrawerTooltips = (drawerNode) => {\n    const buttons = [\n        drawerNode.querySelector(SELECTORS.CLOSEBTN),\n        getDrawerOpenButton(drawerNode.id),\n    ];\n    buttons.forEach(button => {\n        if (!button) {\n            return;\n        }\n        enableButtonTooltip(button);\n    });\n};\n\n/**\n * Enable the button tooltips.\n *\n * @param {HTMLElement} button the button element\n * @private\n */\nconst enableButtonTooltip = (button) => {\n    // The jQuery is still used in Boostrap 4. It can we removed when MDL-71979 is integrated.\n    if (button.hasAttribute('data-original-title')) {\n        jQuery(button).tooltip('enable');\n        button.removeAttribute('title');\n    } else if (button.dataset.disabledToggle) {\n        button.dataset.toggle = button.dataset.disabledToggle;\n        jQuery(button).tooltip();\n    }\n    delete button.dataset.restoreTooltipOnBlur;\n};\n\n/**\n * Add scroll listeners to a drawer element.\n *\n * @param {HTMLElement} drawerNode the drawer main node\n * @private\n */\nconst addInnerScrollListener = (drawerNode) => {\n    const content = drawerNode.querySelector(SELECTORS.DRAWERCONTENT);\n    if (!content) {\n        return;\n    }\n    content.addEventListener(\"scroll\", () => {\n        drawerNode.classList.toggle(\n            CLASSES.SCROLLED,\n            content.scrollTop != 0\n        );\n    });\n};\n\n/**\n * The Drawers class is used to control on-screen drawer elements.\n *\n * It handles opening, and closing of drawer elements, as well as more detailed behaviours such as closing a drawer when\n * another drawer is opened, and supports closing a drawer when the screen is resized.\n *\n * Drawers are instantiated on page load, and can also be toggled lazily when toggling any drawer toggle, open button,\n * or close button.\n *\n * A range of show and hide events are also dispatched as detailed in the class\n * {@link module:theme_boost/drawers#eventTypes eventTypes} object.\n *\n * @example <caption>Standard usage</caption>\n *\n * // The module just needs to be included to add drawer support.\n * import 'theme_boost/drawers';\n *\n * @example <caption>Manually open or close any drawer</caption>\n *\n * import Drawers from 'theme_boost/drawers';\n *\n * const myDrawer = Drawers.getDrawerInstanceForNode(document.querySelector('.myDrawerNode');\n * myDrawer.closeDrawer();\n *\n * @example <caption>Listen to the before show event and cancel it</caption>\n *\n * import Drawers from 'theme_boost/drawers';\n *\n * document.addEventListener(Drawers.eventTypes.drawerShow, e => {\n *     // The drawer which will be shown.\n *     window.console.log(e.target);\n *\n *     // The instance of the Drawers class for this drawer.\n *     window.console.log(e.detail.drawerInstance);\n *\n *     // Prevent this drawer from being shown.\n *     e.preventDefault();\n * });\n *\n * @example <caption>Listen to the shown event</caption>\n *\n * document.addEventListener(Drawers.eventTypes.drawerShown, e => {\n *     // The drawer which was shown.\n *     window.console.log(e.target);\n *\n *     // The instance of the Drawers class for this drawer.\n *     window.console.log(e.detail.drawerInstance);\n * });\n */\nexport default class Drawers {\n    /**\n     * The underlying HTMLElement which is controlled.\n     */\n    drawerNode = null;\n\n    constructor(drawerNode) {\n        this.drawerNode = drawerNode;\n\n        if (isSmall()) {\n            this.closeDrawer({focusOnOpenButton: false, updatePreferences: false});\n        }\n\n        if (this.drawerNode.classList.contains(CLASSES.SHOW)) {\n            this.openDrawer({focusOnCloseButton: false});\n        } else if (this.drawerNode.dataset.forceopen == 1) {\n            if (!isSmall()) {\n                this.openDrawer({focusOnCloseButton: false});\n            }\n        } else {\n            Aria.hide(this.drawerNode);\n        }\n\n        // Disable tooltips in small screens.\n        if (isSmall()) {\n            disableDrawerTooltips(this.drawerNode);\n        }\n\n        addInnerScrollListener(this.drawerNode);\n\n        drawerMap.set(drawerNode, this);\n\n        drawerNode.classList.remove(CLASSES.NOTINITIALISED);\n    }\n\n    /**\n     * Whether the drawer is open.\n     *\n     * @returns {boolean}\n     */\n    get isOpen() {\n        return this.drawerNode.classList.contains(CLASSES.SHOW);\n    }\n\n    /**\n     * Whether the drawer should close when the window is resized\n     *\n     * @returns {boolean}\n     */\n    get closeOnResize() {\n        return !!parseInt(this.drawerNode.dataset.closeOnResize);\n    }\n\n    /**\n     * The list of event types.\n     *\n     * @static\n     * @property {String} drawerShow See {@link event:theme_boost/drawers:show}\n     * @property {String} drawerShown See {@link event:theme_boost/drawers:shown}\n     * @property {String} drawerHide See {@link event:theme_boost/drawers:hide}\n     * @property {String} drawerHidden See {@link event:theme_boost/drawers:hidden}\n     */\n    static eventTypes = {\n        /**\n         * An event triggered before a drawer is shown.\n         *\n         * @event theme_boost/drawers:show\n         * @type {CustomEvent}\n         * @property {HTMLElement} target The drawer that will be opened.\n         */\n        drawerShow: 'theme_boost/drawers:show',\n\n        /**\n         * An event triggered after a drawer is shown.\n         *\n         * @event theme_boost/drawers:shown\n         * @type {CustomEvent}\n         * @property {HTMLElement} target The drawer that was be opened.\n         */\n        drawerShown: 'theme_boost/drawers:shown',\n\n        /**\n         * An event triggered before a drawer is hidden.\n         *\n         * @event theme_boost/drawers:hide\n         * @type {CustomEvent}\n         * @property {HTMLElement} target The drawer that will be hidden.\n         */\n        drawerHide: 'theme_boost/drawers:hide',\n\n        /**\n         * An event triggered after a drawer is hidden.\n         *\n         * @event theme_boost/drawers:hidden\n         * @type {CustomEvent}\n         * @property {HTMLElement} target The drawer that was be hidden.\n         */\n        drawerHidden: 'theme_boost/drawers:hidden',\n    };\n\n\n    /**\n     * Get the drawer instance for the specified node\n     *\n     * @param {HTMLElement} drawerNode\n     * @returns {module:theme_boost/drawers}\n     */\n    static getDrawerInstanceForNode(drawerNode) {\n        if (!drawerMap.has(drawerNode)) {\n            new Drawers(drawerNode);\n        }\n\n        return drawerMap.get(drawerNode);\n    }\n\n    /**\n     * Dispatch a drawer event.\n     *\n     * @param {string} eventname the event name\n     * @param {boolean} cancelable if the event is cancelable\n     * @returns {CustomEvent} the resulting custom event\n     */\n    dispatchEvent(eventname, cancelable = false) {\n        return dispatchEvent(\n            eventname,\n            {\n                drawerInstance: this,\n            },\n            this.drawerNode,\n            {\n                cancelable,\n            }\n        );\n    }\n\n    /**\n     * Open the drawer.\n     *\n     * By default, openDrawer sets the page focus to the close drawer button. However, when a drawer is open at page\n     * load, this represents an accessibility problem as the initial focus changes without any user interaction. The\n     * focusOnCloseButton parameter can be set to false to prevent this behaviour.\n     *\n     * @param {object} args\n     * @param {boolean} [args.focusOnCloseButton=true] Whether to alter page focus when opening the drawer\n     */\n    openDrawer({focusOnCloseButton = true} = {}) {\n\n        const pendingPromise = new Pending('theme_boost/drawers:open');\n        const showEvent = this.dispatchEvent(Drawers.eventTypes.drawerShow, true);\n        if (showEvent.defaultPrevented) {\n            return;\n        }\n\n        // Hide close button while the drawer is showing to prevent glitchy effects.\n        this.drawerNode.querySelector(SELECTORS.CLOSEBTN)?.classList.toggle('hidden', true);\n\n        // Remove open tooltip if still visible.\n        let openButton = getDrawerOpenButton(this.drawerNode.id);\n        if (openButton && openButton.hasAttribute('data-original-title')) {\n            // The jQuery is still used in Boostrap 4. It can we removed when MDL-71979 is integrated.\n            jQuery(openButton)?.tooltip('hide');\n        }\n\n        Aria.unhide(this.drawerNode);\n        this.drawerNode.classList.add(CLASSES.SHOW);\n\n        const preference = this.drawerNode.dataset.preference;\n        if (preference && !isSmall() && (this.drawerNode.dataset.forceopen != 1)) {\n            M.util.set_user_preference(preference, true);\n        }\n\n        const state = this.drawerNode.dataset.state;\n        if (state) {\n            const page = document.getElementById('page');\n            page.classList.add(state);\n        }\n\n        if (isSmall()) {\n            getBackdrop().then(backdrop => {\n                backdrop.show();\n\n                const pageWrapper = document.getElementById('page-wrapper');\n                pageWrapper.style.overflow = 'hidden';\n                return backdrop;\n            })\n            .catch();\n        }\n\n        // Show close button once the drawer is fully opened.\n        const closeButton = this.drawerNode.querySelector(SELECTORS.CLOSEBTN);\n        if (focusOnCloseButton && closeButton) {\n            disableButtonTooltip(closeButton, true);\n        }\n        setTimeout(() => {\n            closeButton.classList.toggle('hidden', false);\n            if (focusOnCloseButton) {\n                closeButton.focus();\n            }\n            pendingPromise.resolve();\n        }, 300);\n\n        this.dispatchEvent(Drawers.eventTypes.drawerShown);\n    }\n\n    /**\n     * Close the drawer.\n     *\n     * @param {object} args\n     * @param {boolean} [args.focusOnOpenButton=true] Whether to alter page focus when opening the drawer\n     * @param {boolean} [args.updatePreferences=true] Whether to update the user prewference\n     */\n    closeDrawer({focusOnOpenButton = true, updatePreferences = true} = {}) {\n\n        const pendingPromise = new Pending('theme_boost/drawers:close');\n\n        const hideEvent = this.dispatchEvent(Drawers.eventTypes.drawerHide, true);\n        if (hideEvent.defaultPrevented) {\n            return;\n        }\n\n        // Hide close button while the drawer is hiding to prevent glitchy effects.\n        const closeButton = this.drawerNode.querySelector(SELECTORS.CLOSEBTN);\n        closeButton?.classList.toggle('hidden', true);\n        // Remove the close button tooltip if visible.\n        if (closeButton.hasAttribute('data-original-title')) {\n            // The jQuery is still used in Boostrap 4. It can we removed when MDL-71979 is integrated.\n            jQuery(closeButton)?.tooltip('hide');\n        }\n\n        const preference = this.drawerNode.dataset.preference;\n        if (preference && updatePreferences && !isSmall()) {\n            M.util.set_user_preference(preference, false);\n        }\n\n        const state = this.drawerNode.dataset.state;\n        if (state) {\n            const page = document.getElementById('page');\n            page.classList.remove(state);\n        }\n\n        Aria.hide(this.drawerNode);\n        this.drawerNode.classList.remove(CLASSES.SHOW);\n\n        getBackdrop().then(backdrop => {\n            backdrop.hide();\n\n            if (isSmall()) {\n                const pageWrapper = document.getElementById('page-wrapper');\n                pageWrapper.style.overflow = 'auto';\n            }\n            return backdrop;\n        })\n        .catch();\n\n        // Move focus to the open drawer (or toggler) button once the drawer is hidden.\n        let openButton = getDrawerOpenButton(this.drawerNode.id);\n        if (openButton) {\n            disableButtonTooltip(openButton, true);\n        }\n        setTimeout(() => {\n            if (openButton && focusOnOpenButton) {\n                openButton.focus();\n            }\n            pendingPromise.resolve();\n        }, 300);\n\n        this.dispatchEvent(Drawers.eventTypes.drawerHidden);\n    }\n\n    /**\n     * Toggle visibility of the drawer.\n     */\n    toggleVisibility() {\n        if (this.drawerNode.classList.contains(CLASSES.SHOW)) {\n            this.closeDrawer();\n        } else {\n            this.openDrawer();\n        }\n    }\n\n    /**\n     * Close all drawers.\n     */\n    static closeAllDrawers() {\n        drawerMap.forEach(drawerInstance => {\n            drawerInstance.closeDrawer();\n        });\n    }\n\n    /**\n     * Close all drawers except for the specified drawer.\n     *\n     * @param {module:theme_boost/drawers} comparisonInstance\n     */\n    static closeOtherDrawers(comparisonInstance) {\n        drawerMap.forEach(drawerInstance => {\n            if (drawerInstance === comparisonInstance) {\n                return;\n            }\n\n            drawerInstance.closeDrawer();\n        });\n    }\n}\n\n/**\n * Activate the scroller helper for the drawer layout.\n *\n * @private\n */\nconst scroller = () => {\n    const body = document.querySelector('body');\n    const drawerLayout = document.querySelector(SELECTORS.CONTAINER);\n    if (drawerLayout) {\n        drawerLayout.addEventListener(\"scroll\", () => {\n            if (drawerLayout.scrollTop >= window.innerHeight) {\n                body.classList.add(CLASSES.SCROLLED);\n            } else {\n                body.classList.remove(CLASSES.SCROLLED);\n            }\n        });\n    }\n};\n\n/**\n * Set the last used attribute for the last used toggle button for a drawer.\n *\n * @param {object} toggleButton The clicked button.\n */\nconst setLastUsedToggle = (toggleButton) => {\n    if (toggleButton.dataset.target) {\n        document.querySelectorAll(`${SELECTORS.BUTTONS}[data-target=\"${toggleButton.dataset.target}\"]`)\n        .forEach(btn => {\n            btn.dataset.lastused = false;\n        });\n        toggleButton.dataset.lastused = true;\n    }\n};\n\n/**\n * Set the focus to the last used button to open this drawer.\n * @param {string} target The drawer target.\n */\nconst focusLastUsedToggle = (target) => {\n    const lastUsedButton = document.querySelector(`${SELECTORS.BUTTONS}[data-target=\"${target}\"][data-lastused=\"true\"`);\n    if (lastUsedButton) {\n        lastUsedButton.focus();\n    }\n};\n\n/**\n * Register the event listeners for the drawer.\n *\n * @private\n */\nconst registerListeners = () => {\n    // Listen for show/hide events.\n    document.addEventListener('click', e => {\n        const toggleButton = e.target.closest(SELECTORS.TOGGLEBTN);\n        if (toggleButton && toggleButton.dataset.target) {\n            e.preventDefault();\n            const targetDrawer = document.getElementById(toggleButton.dataset.target);\n            const drawerInstance = Drawers.getDrawerInstanceForNode(targetDrawer);\n            setLastUsedToggle(toggleButton);\n\n            drawerInstance.toggleVisibility();\n        }\n\n        const openDrawerButton = e.target.closest(SELECTORS.OPENBTN);\n        if (openDrawerButton && openDrawerButton.dataset.target) {\n            e.preventDefault();\n            const targetDrawer = document.getElementById(openDrawerButton.dataset.target);\n            const drawerInstance = Drawers.getDrawerInstanceForNode(targetDrawer);\n            setLastUsedToggle(toggleButton);\n\n            drawerInstance.openDrawer();\n        }\n\n        const closeDrawerButton = e.target.closest(SELECTORS.CLOSEBTN);\n        if (closeDrawerButton && closeDrawerButton.dataset.target) {\n            e.preventDefault();\n            const targetDrawer = document.getElementById(closeDrawerButton.dataset.target);\n            const drawerInstance = Drawers.getDrawerInstanceForNode(targetDrawer);\n\n            drawerInstance.closeDrawer();\n            focusLastUsedToggle(closeDrawerButton.dataset.target);\n        }\n    });\n\n    // Close drawer when another drawer opens.\n    document.addEventListener(Drawers.eventTypes.drawerShow, e => {\n        if (isLarge()) {\n            return;\n        }\n        Drawers.closeOtherDrawers(e.detail.drawerInstance);\n    });\n\n    // Tooglers and openers blur listeners.\n    const btnSelector = `${SELECTORS.TOGGLEBTN}, ${SELECTORS.OPENBTN}, ${SELECTORS.CLOSEBTN}`;\n    document.addEventListener('focusout', (e) => {\n        const button = e.target.closest(btnSelector);\n        if (button?.dataset.restoreTooltipOnBlur !== undefined) {\n            enableButtonTooltip(button);\n        }\n    });\n\n    const closeOnResizeListener = () => {\n        if (isSmall()) {\n            let anyOpen = false;\n            drawerMap.forEach(drawerInstance => {\n                disableDrawerTooltips(drawerInstance.drawerNode);\n                if (drawerInstance.isOpen) {\n                    if (drawerInstance.closeOnResize) {\n                        drawerInstance.closeDrawer();\n                    } else {\n                        anyOpen = true;\n                    }\n                }\n            });\n\n            if (anyOpen) {\n                getBackdrop().then(backdrop => backdrop.show()).catch();\n            }\n        } else {\n            drawerMap.forEach(drawerInstance => {\n                enableDrawerTooltips(drawerInstance.drawerNode);\n            });\n            getBackdrop().then(backdrop => backdrop.hide()).catch();\n        }\n    };\n\n    window.addEventListener('resize', debounce(closeOnResizeListener, 400));\n};\n\nscroller();\nregisterListeners();\n\nconst drawers = document.querySelectorAll(SELECTORS.DRAWERS);\ndrawers.forEach(drawerNode => Drawers.getDrawerInstanceForNode(drawerNode));\n"],"file":"drawers.min.js"}