{"version":3,"sources":["../src/drawers.js"],"names":["backdropPromise","drawerMap","Map","eventTypes","drawerShow","drawerShown","drawerHide","drawerHidden","sizes","medium","large","getCurrentWidth","DomRect","document","body","getBoundingClientRect","x","width","isSmall","browserWidth","isMedium","isLarge","getBackdrop","Templates","render","then","html","ModalBackdrop","modalBackdrop","getAttachmentPoint","get","addEventListener","e","preventDefault","Drawers","closeAllDrawers","catch","drawerNode","classList","contains","parseInt","dataset","closeOnResize","openDrawer","Aria","hide","set","name","cancelable","drawerInstance","showEvent","defaultPrevented","unhide","add","preference","M","util","set_user_preference","state","page","getElementById","backdrop","show","pageWrapper","style","overflow","hideEvent","remove","closeDrawer","has","forEach","comparisonInstance","init","drawers","querySelectorAll","getDrawerInstanceForNode","scroller","querySelector","drawerLayout","scrollTop","window","innerHeight","registerListeners","toggleButton","target","closest","targetDrawer","toggleVisibility","openDrawerButton","closeDrawerButton","closeOtherDrawers","detail","closeOnResizeListener","anyOpen","isOpen"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Toggling the visibility of the secondary navigation on mobile.\n *\n * @package    theme_boost\n * @copyright  2021 Bas Brands\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalBackdrop from 'core/modal_backdrop';\nimport Templates from 'core/templates';\nimport * as Aria from 'core/aria';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport {debounce} from 'core/utils';\n\nlet backdropPromise = null;\n\nconst drawerMap = new Map();\n\nexport const eventTypes = {\n    /**\n     * An event triggered before a drawer is shown.\n     *\n     * @event theme_boost/drawers:show\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The drawer that will be opened.\n     */\n    drawerShow: 'theme_boost/drawers:show',\n\n    /**\n     * An event triggered after a drawer is shown.\n     *\n     * @event theme_boost/drawers:shown\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The drawer that was be opened.\n     */\n    drawerShown: 'theme_boost/drawers:shown',\n\n    /**\n     * An event triggered before a drawer is hidden.\n     *\n     * @event theme_boost/drawers:hide\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The drawer that will be hidden.\n     */\n    drawerHide: 'theme_boost/drawers:hide',\n\n    /**\n     * An event triggered after a drawer is hidden.\n     *\n     * @event theme_boost/drawers:hidden\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The drawer that was be hidden.\n     */\n    drawerHidden: 'theme_boost/drawers:hidden',\n};\n\n/**\n * Maximum sizes for breakpoints. This needs to correspond with Bootstrap\n * Breakpoints\n */\nconst sizes = {\n    medium: 991,\n    large: 1200\n};\n\nconst getCurrentWidth = () => {\n    const DomRect = document.body.getBoundingClientRect();\n    return DomRect.x + DomRect.width;\n};\nconst isSmall = () => {\n    const browserWidth = getCurrentWidth();\n    return browserWidth < sizes.medium;\n};\n\n/**\n * Check if the user uses a medium size browser.\n * @returns {Bool} true if the body is smaller than sizes.medium max size.\n * @private\n */\nconst isMedium = () => {\n    const browserWidth = getCurrentWidth();\n    return (browserWidth >= sizes.medium) && (browserWidth < sizes.large);\n};\n\n/**\n * Check if the user uses a large size browser.\n * @returns {Bool} true if the body is smaller than sizes.large max size.\n * @private\n */\nconst isLarge = () => {\n    const browserWidth = getCurrentWidth();\n    return browserWidth >= sizes.large;\n};\n\n/**\n * Add a backdrop to the page.\n *\n * @return {Promise} rendering of modal backdrop.\n */\nconst getBackdrop = () => {\n    if (!backdropPromise) {\n        backdropPromise = Templates.render('core/modal_backdrop', {})\n        .then(html => new ModalBackdrop(html))\n        .then(modalBackdrop => {\n            modalBackdrop.getAttachmentPoint().get(0).addEventListener('click', e => {\n                e.preventDefault();\n                Drawers.closeAllDrawers();\n            });\n            return modalBackdrop;\n        })\n        .catch();\n    }\n    return backdropPromise;\n};\n\nexport const Drawers = class {\n    drawerNode = null;\n\n    /**\n     */\n    get isOpen() {\n        return this.drawerNode.classList.contains('show');\n    }\n\n    get closeOnResize() {\n        return !!parseInt(this.drawerNode.dataset.closeOnResize);\n    }\n\n    constructor(drawerNode) {\n        this.drawerNode = drawerNode;\n\n        if (this.drawerNode.classList.contains('show')) {\n            this.openDrawer();\n        } else {\n            Aria.hide(this.drawerNode);\n        }\n\n        drawerMap.set(drawerNode, this);\n    }\n\n    static getDrawerInstanceForNode(drawerNode) {\n        if (!drawerMap.has(drawerNode)) {\n            new Drawers(drawerNode);\n        }\n\n        return drawerMap.get(drawerNode);\n    }\n\n    dispatchEvent(name, cancelable) {\n        return dispatchEvent(\n            eventTypes[name],\n            {\n                drawerInstance: this,\n            },\n            this.drawerNode,\n            {\n                cancelable,\n            }\n        );\n    }\n\n    openDrawer() {\n        const showEvent = dispatchEvent('drawerShow', true);\n        if (showEvent.defaultPrevented) {\n            return;\n        }\n\n        Aria.unhide(this.drawerNode);\n        this.drawerNode.classList.add('show');\n\n        const preference = this.drawerNode.dataset.preference;\n        if (!isMedium() && preference) {\n            M.util.set_user_preference(preference, true);\n        }\n\n        const state = this.drawerNode.dataset.state;\n        if (state) {\n            const page = document.getElementById('page');\n            page.classList.add(state);\n        }\n\n        if (isSmall()) {\n            getBackdrop().then(backdrop => {\n                backdrop.show();\n\n                // TODO\n                const pageWrapper = document.getElementById('page-wrapper');\n                pageWrapper.style.overflow = 'hidden';\n                return backdrop;\n            })\n            .catch();\n        }\n\n        dispatchEvent('drawerShown');\n    }\n\n    closeDrawer() {\n        const hideEvent = dispatchEvent('drawerHide', true);\n        if (hideEvent.defaultPrevented) {\n            return;\n        }\n\n        const preference = this.drawerNode.dataset.preference;\n        if (!isMedium() && preference) {\n            M.util.set_user_preference(preference, false);\n        }\n\n        const state = this.drawerNode.dataset.state;\n        if (state) {\n            const page = document.getElementById('page');\n            page.classList.remove(state);\n        }\n\n        Aria.hide(this.drawerNode);\n        this.drawerNode.classList.remove('show');\n\n        getBackdrop().then(backdrop => {\n            backdrop.hide();\n\n            if (isMedium()) {\n                const pageWrapper = document.getElementById('page-wrapper');\n                pageWrapper.style.overflow = 'auto';\n            }\n            return backdrop;\n        })\n        .catch();\n\n        dispatchEvent('drawerHidden');\n    }\n\n    toggleVisibility() {\n        if (this.drawerNode.classList.contains('show')) {\n            this.closeDrawer();\n        } else {\n            this.openDrawer();\n        }\n    }\n\n    static closeAllDrawers() {\n        drawerMap.forEach(drawerInstance => {\n            drawerInstance.closeDrawer();\n        });\n    }\n\n    static closeOtherDrawers(comparisonInstance) {\n        drawerMap.forEach(drawerInstance => {\n            if (drawerInstance === comparisonInstance) {\n                return;\n            }\n\n            drawerInstance.closeDrawer();\n        });\n    }\n};\n\n/**\n * Activate the scroller helper for the drawer layout.\n */\nconst scroller = () => {\n    const body = document.querySelector('body');\n    const drawerLayout = document.querySelector('#page.drawers');\n    drawerLayout.addEventListener(\"scroll\", () => {\n        if (drawerLayout.scrollTop >= window.innerHeight) {\n            body.classList.add('scrolled');\n        } else {\n            body.classList.remove('scrolled');\n        }\n    });\n};\n\nconst registerListeners = () => {\n    // Listen for show/hide events.\n    document.addEventListener('click', e => {\n        const toggleButton = e.target.closest('[data-toggle=\"drawers\"][data-action=\"toggle\"]');\n        if (toggleButton && toggleButton.dataset.target) {\n            e.preventDefault();\n            const targetDrawer = document.getElementById(toggleButton.dataset.target);\n            const drawerInstance = Drawers.getDrawerInstanceForNode(targetDrawer);\n\n            drawerInstance.toggleVisibility();\n        }\n\n        const openDrawerButton = e.target.closest('[data-toggle=\"drawers\"][data-action=\"opendrawer\"]');\n        if (openDrawerButton && openDrawerButton.dataset.target) {\n            e.preventDefault();\n            const targetDrawer = document.getElementById(openDrawerButton.dataset.target);\n            const drawerInstance = Drawers.getDrawerInstanceForNode(targetDrawer);\n\n            drawerInstance.openDrawer();\n        }\n\n        const closeDrawerButton = e.target.closest('[data-toggle=\"drawers\"][data-action=\"closedrawer\"]');\n        if (closeDrawerButton && closeDrawerButton.dataset.target) {\n            e.preventDefault();\n            const targetDrawer = document.getElementById(closeDrawerButton.dataset.target);\n            const drawerInstance = Drawers.getDrawerInstanceForNode(targetDrawer);\n\n            drawerInstance.closeDrawer();\n        }\n    });\n\n    // Close drawer when another drawer opens.\n    document.addEventListener(eventTypes.drawerShow, e => {\n        if (!isLarge()) {\n            return;\n        }\n        Drawers.closeOtherDrawers(e.detail.drawerInstance);\n    });\n\n    const closeOnResizeListener = () => {\n        if (isSmall()) {\n            let anyOpen = false;\n            drawerMap.forEach(drawerInstance => {\n                if (drawerInstance.isOpen) {\n                    if (drawerInstance.closeOnResize) {\n                        drawerInstance.closeDrawer();\n                    } else {\n                        anyOpen = true;\n                    }\n                }\n            });\n\n            if (anyOpen) {\n                getBackdrop().then(backdrop => backdrop.show()).catch();\n            }\n        } else {\n            getBackdrop().then(backdrop => backdrop.hide()).catch();\n        }\n    };\n\n    window.addEventListener('resize', debounce(closeOnResizeListener, 400));\n};\n\n/**\n * Activate all drawers for this page\n *\n * @param {String} drawer unique identifier for the drawer to toggle\n * @param {String} toggle unique identifier for the drawer toggle button\n */\nexport const init = () => {\n    const drawers = document.querySelectorAll('[data-region=\"fixed-drawer\"]');\n    drawers.forEach(drawerNode => Drawers.getDrawerInstanceForNode(drawerNode));\n};\n\nscroller();\nregisterListeners();\n"],"file":"drawers.min.js"}