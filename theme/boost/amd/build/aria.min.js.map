{"version":3,"file":"aria.min.js","sources":["../src/aria.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Enhancements to Bootstrap components for accessibility.\n *\n * @module     theme_boost/aria\n * @copyright  2018 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {end, arrowUp, arrowDown, arrowLeft, arrowRight, home, enter, space} from 'core/key_codes';\nimport $ from 'jquery';\nimport Pending from 'core/pending';\n\n/**\n * Drop downs from bootstrap don't support keyboard accessibility by default.\n */\nconst dropdownFix = () => {\n    let focusEnd = false;\n    const setFocusEnd = () => {\n        focusEnd = true;\n    };\n    const getFocusEnd = () => {\n        const result = focusEnd;\n        focusEnd = false;\n        return result;\n    };\n\n    // Special handling for \"up\" keyboard control.\n    document.addEventListener('keydown', e => {\n        if (e.target.matches('[data-toggle=\"dropdown\"]')) {\n            const trigger = e.which;\n\n            // Up key opens the menu at the end.\n            if (trigger == arrowUp) {\n                // Focus the end of the menu, not the beginning.\n                setFocusEnd();\n            }\n\n            // Space key or Enter key opens the menu.\n            if (trigger == space || trigger == enter) {\n                // Cancel random scroll.\n                e.preventDefault();\n                // Open the menu instead.\n                e.target.click();\n            }\n        }\n    });\n\n    // Special handling for navigation keys when menu is open.\n    const shiftFocus = element => {\n        const delayedFocus = pendingPromise => {\n            element.focus();\n            pendingPromise.resolve();\n        };\n        setTimeout(delayedFocus, 50, new Pending('core/aria:delayed-focus'));\n    };\n\n    $('.dropdown').on('shown.bs.dropdown', e => {\n        // We need to focus on the first menuitem.\n        const menu = e.target.querySelector('[role=\"menu\"]');\n        let menuItems = false;\n        let foundMenuItem = false;\n\n        if (menu) {\n            menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n        }\n        if (menuItems && menuItems.length > 0) {\n            if (getFocusEnd()) {\n                foundMenuItem = menuItems[menuItems.length - 1];\n            } else {\n                // The first menu entry, pretty reasonable.\n                foundMenuItem = menuItems[0];\n            }\n        }\n        if (foundMenuItem) {\n            shiftFocus(foundMenuItem);\n        }\n    });\n    // Search for menu items by finding the first item that has\n    // text starting with the typed character (case insensitive).\n    document.addEventListener('keypress', e => {\n        if (e.target.matches('.dropdown [role=\"menu\"] [role=\"menuitem\"]')) {\n            const trigger = String.fromCharCode(e.which).toLowerCase();\n            const menu = e.target.closest('[role=\"menu\"]');\n\n            if (!menu) {\n                return;\n            }\n            const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n            if (!menuItems) {\n                return;\n            }\n\n            for (let i = 0; i < menuItems.length; i++) {\n                const item = menuItems[i];\n                const itemText = item.text.trim().toLowerCase();\n                if (itemText.indexOf(trigger) == 0) {\n                    shiftFocus(item);\n                    break;\n                }\n            }\n        }\n    });\n\n    // Keyboard navigation for arrow keys, home and end keys.\n    document.addEventListener('keydown', e => {\n        if (e.target.matches('.dropdown [role=\"menu\"] [role=\"menuitem\"]')) {\n            const trigger = e.which;\n            let next = false;\n            const menu = e.target.closest('[role=\"menu\"]');\n\n            if (!menu) {\n                return;\n            }\n            const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n            if (!menuItems) {\n                return;\n            }\n            // Down key.\n            if (trigger == arrowDown) {\n                for (let i = 0; i < menuItems.length - 1; i++) {\n                    if (menuItems[i] == e.target) {\n                        next = menuItems[i + 1];\n                        break;\n                    }\n                }\n                if (!next) {\n                    // Wrap to first item.\n                    next = menuItems[0];\n                }\n\n            } else if (trigger == arrowUp) {\n                // Up key.\n                for (let i = 1; i < menuItems.length; i++) {\n                    if (menuItems[i] == e.target) {\n                        next = menuItems[i - 1];\n                        break;\n                    }\n                }\n                if (!next) {\n                    // Wrap to last item.\n                    next = menuItems[menuItems.length - 1];\n                }\n\n            } else if (trigger == home) {\n                // Home key.\n                next = menuItems[0];\n\n            } else if (trigger == end) {\n                // End key.\n                next = menuItems[menuItems.length - 1];\n            }\n            // Variable next is set if we do want to act on the keypress.\n            if (next) {\n                e.preventDefault();\n                shiftFocus(next);\n            }\n            return;\n        }\n    });\n\n    $('.dropdown').on('hidden.bs.dropdown', e => {\n        // We need to focus on the menu trigger.\n        const trigger = e.target.querySelector('[data-toggle=\"dropdown\"]');\n        if (trigger) {\n            shiftFocus(trigger);\n        }\n    });\n};\n\n/**\n * After page load, focus on any element with special autofocus attribute.\n */\nconst autoFocus = () => {\n    window.addEventListener(\"load\", () => {\n        const alerts = document.querySelectorAll('[data-aria-autofocus=\"true\"][role=\"alert\"]');\n        Array.prototype.forEach.call(alerts, autofocusElement => {\n            // According to the specification an role=\"alert\" region is only read out on change to the content\n            // of that region.\n            autofocusElement.innerHTML += ' ';\n            autofocusElement.removeAttribute('data-aria-autofocus');\n        });\n    });\n};\n\n/**\n * Changes the focus to the correct tab based on the key that is pressed.\n * @param {KeyboardEvent} e\n */\nconst updateTabFocus = e => {\n    const tabList = e.target.closest('[role=\"tablist\"]');\n    const vertical = tabList.getAttribute('aria-orientation') == 'vertical';\n    const rtl = window.right_to_left();\n    const arrowNext = vertical ? arrowDown : (rtl ? arrowLeft : arrowRight);\n    const arrowPrevious = vertical ? arrowUp : (rtl ? arrowRight : arrowLeft);\n    const tabs = Array.prototype.filter.call(\n        tabList.querySelectorAll('[role=\"tab\"]'),\n        tab => getComputedStyle(tab).display !== 'none'); // We only work with the visible tabs.\n\n    for (let i = 0; i < tabs.length; i++) {\n        tabs[i].index = i;\n    }\n\n    switch (e.keyCode) {\n        case arrowNext:\n            e.preventDefault();\n            if (e.target.index !== undefined && tabs[e.target.index + 1]) {\n                tabs[e.target.index + 1].focus();\n            } else {\n                tabs[0].focus();\n            }\n            break;\n        case arrowPrevious:\n            e.preventDefault();\n            if (e.target.index !== undefined && tabs[e.target.index - 1]) {\n                tabs[e.target.index - 1].focus();\n            } else {\n                tabs[tabs.length - 1].focus();\n            }\n            break;\n        case home:\n            e.preventDefault();\n            tabs[0].focus();\n            break;\n        case end:\n            e.preventDefault();\n            tabs[tabs.length - 1].focus();\n            break;\n        case enter:\n        case space:\n            e.preventDefault();\n            $(e.target).tab('show');\n            tabs.forEach(tab => {\n                tab.tabIndex = -1;\n            });\n            e.target.tabIndex = 0;\n    }\n};\n\n/**\n * Fix accessibility issues regarding tab elements focus and their tab order in Bootstrap navs.\n */\nconst tabElementFix = () => {\n    document.addEventListener('keydown', e => {\n        if ([arrowUp, arrowDown, arrowLeft, arrowRight, home, end, enter, space].includes(e.keyCode)) {\n            if (e.target.matches('[role=\"tablist\"] [role=\"tab\"]')) {\n                updateTabFocus(e);\n            }\n        }\n    });\n\n    document.addEventListener('click', e => {\n        if (e.target.matches('[role=\"tablist\"] [role=\"tab\"]')) {\n            const tabs = e.target.closest('[role=\"tablist\"]').querySelectorAll('[role=\"tab\"]');\n            e.preventDefault();\n            $(e.target).tab('show');\n            tabs.forEach(tab => {\n                tab.tabIndex = -1;\n            });\n            e.target.tabIndex = 0;\n        }\n    });\n};\n\nexport const init = () => {\n    dropdownFix();\n    autoFocus();\n    tabElementFix();\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_jquery","_pending","dropdownFix","focusEnd","document","addEventListener","e","target","matches","trigger","which","arrowUp","space","enter","preventDefault","click","shiftFocus","element","setTimeout","pendingPromise","focus","resolve","Pending","$","on","result","menu","querySelector","menuItems","foundMenuItem","querySelectorAll","length","String","fromCharCode","toLowerCase","closest","i","item","text","trim","indexOf","next","arrowDown","home","end","tabElementFix","arrowLeft","arrowRight","includes","keyCode","tabList","vertical","getAttribute","rtl","window","right_to_left","arrowNext","arrowPrevious","tabs","Array","prototype","filter","call","tab","getComputedStyle","display","index","undefined","forEach","tabIndex","updateTabFocus","_exports","init","alerts","autofocusElement","innerHTML","removeAttribute"],"mappings":"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"}