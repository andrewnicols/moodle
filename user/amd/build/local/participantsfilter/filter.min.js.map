{"version":3,"file":"filter.min.js","sources":["../../../src/local/participantsfilter/filter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Base Filter class for a filter type in the participants filter UI.\n *\n * @module     core_user/local/participantsfilter/filter\n * @package    core_user\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Autocomplete from 'core/form-autocomplete';\nimport Selectors from './selectors';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Fetch all checked options in the select.\n *\n * This is a poor-man's polyfill for select.selectedOptions, which is not available in IE11.\n *\n * @param {HTMLSelectElement} select\n * @returns {HTMLOptionElement[]} All selected options\n */\nconst getOptionsForSelect = select => {\n    return select.querySelectorAll(':checked');\n};\n\nexport default class {\n\n    /**\n     * Constructor for a new filter.\n     *\n     * @param {String} filterType The type of filter that this relates to\n     * @param {HTMLElement} rootNode The root node for the participants filterset\n     * @param {Array} initialValues The initial values for the selector\n     */\n    constructor(filterType, rootNode, initialValues) {\n        this.filterType = filterType;\n        this.rootNode = rootNode;\n\n        this.addValueSelector(initialValues);\n    }\n\n    /**\n     * Perform any tear-down for this filter type.\n     */\n    tearDown() {\n        // eslint-disable-line no-empty-function\n    }\n\n    /**\n     * Get the placeholder to use when showing the value selector.\n     *\n     * @return {Promise} Resolving to a String\n     */\n    get placeholder() {\n        return getString('placeholdertypeorselect', 'core_user');\n    }\n\n    /**\n     * Whether to show suggestions in the autocomplete.\n     *\n     * @return {Boolean}\n     */\n    get showSuggestions() {\n        return true;\n    }\n\n    /**\n     * Add the value selector to the filter row.\n     *\n     * @param {Array} initialValues\n     */\n    async addValueSelector(initialValues = []) {\n        const filterValueNode = this.getFilterValueNode();\n\n        // Copy the data in place.\n        filterValueNode.innerHTML = this.getSourceDataForFilter().outerHTML;\n\n        const dataSource = filterValueNode.querySelector('select');\n\n        // Set an ID for this filter value element.\n        dataSource.id = 'filter-value-' + dataSource.getAttribute('data-field-name');\n\n        // Create a hidden label for the filter value.\n        const filterValueLabel = document.createElement('label');\n        filterValueLabel.setAttribute('for', dataSource.id);\n        filterValueLabel.classList.add('sr-only');\n        filterValueLabel.innerText = dataSource.getAttribute('data-field-title');\n\n        // Append this label to the filter value container.\n        filterValueNode.appendChild(filterValueLabel);\n\n        // If there are any initial values then attempt to apply them.\n        initialValues.forEach(filterValue => {\n            let selectedOption = dataSource.querySelector(`option[value=\"${filterValue}\"]`);\n            if (selectedOption) {\n                selectedOption.selected = true;\n            } else if (!this.showSuggestions) {\n                selectedOption = document.createElement('option');\n                selectedOption.value = filterValue;\n                selectedOption.innerHTML = filterValue;\n                selectedOption.selected = true;\n\n                dataSource.append(selectedOption);\n            }\n        });\n\n        Autocomplete.enhance(\n            // The source select element.\n            dataSource,\n\n            // Whether to allow 'tags' (custom entries).\n            dataSource.dataset.allowCustom == \"1\",\n\n            // We do not require AJAX at all as standard.\n            null,\n\n            // The string to use as a placeholder.\n            await this.placeholder,\n\n            // Disable case sensitivity on searches.\n            false,\n\n            // Show suggestions.\n            this.showSuggestions,\n\n            // Do not override the 'no suggestions' string.\n            null,\n\n            // Close the suggestions if this is not a multi-select.\n            !dataSource.multiple,\n\n            // Template overrides.\n            {\n                items: 'core_user/local/participantsfilter/autocomplete_selection_items',\n                layout: 'core_user/local/participantsfilter/autocomplete_layout',\n                selection: 'core_user/local/participantsfilter/autocomplete_selection',\n            }\n        );\n    }\n\n    /**\n     * Get the root node for this filter.\n     *\n     * @returns {HTMLElement}\n     */\n    get filterRoot() {\n        return this.rootNode.querySelector(Selectors.filter.byName(this.filterType));\n    }\n\n    /**\n     * Get the possible data for this filter type.\n     *\n     * @returns {Array}\n     */\n    getSourceDataForFilter() {\n        const filterDataNode = this.rootNode.querySelector(Selectors.filterset.regions.datasource);\n\n        return filterDataNode.querySelector(Selectors.data.fields.byName(this.filterType));\n    }\n\n    /**\n     * Get the HTMLElement which contains the value selector.\n     *\n     * @returns {HTMLElement}\n     */\n    getFilterValueNode() {\n        return this.filterRoot.querySelector(Selectors.filter.regions.values);\n    }\n\n    /**\n     * Get the name of this filter.\n     *\n     * @returns {String}\n     */\n    get name() {\n        return this.filterType;\n    }\n\n    /**\n     * Get the type of join specified.\n     *\n     * @returns {Number}\n     */\n    get jointype() {\n        return parseInt(this.filterRoot.querySelector(Selectors.filter.fields.join).value, 10);\n    }\n\n    /**\n     * Get the list of raw values for this filter type.\n     *\n     * @returns {Array}\n     */\n    get rawValues() {\n        const filterValueNode = this.getFilterValueNode();\n        const filterValueSelect = filterValueNode.querySelector('select');\n\n        return Object.values(getOptionsForSelect(filterValueSelect)).map(option => option.value);\n    }\n\n    /**\n     * Get the list of values for this filter type.\n     *\n     * @returns {Array}\n     */\n    get values() {\n        return this.rawValues.map(option => parseInt(option, 10));\n    }\n\n    /**\n     * Get the composed value for this filter.\n     *\n     * @returns {Object}\n     */\n    get filterValue() {\n        return {\n            name: this.name,\n            jointype: this.jointype,\n            values: this.values,\n        };\n    }\n}\n"],"names":["_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_formAutocomplete","_selectors","_default","filterType","rootNode","initialValues","instance","Constructor","_classCallCheck","addValueSelector","protoProps","staticProps","_addValueSelector","get","getString","get_string","_callee","filterValueNode","dataSource","filterValueLabel","_this","_args","arguments","_context","getFilterValueNode","innerHTML","getSourceDataForFilter","outerHTML","querySelector","id","getAttribute","document","createElement","setAttribute","classList","add","innerText","appendChild","filterValue","selectedOption","concat","selected","showSuggestions","append","t0","Autocomplete","t1","t2","dataset","allowCustom","placeholder","t3","t4","t5","multiple","t6","items","layout","selection","enhance","args","apply","Selectors","filter","byName","filterset","regions","datasource","data","fields","filterRoot","parseInt","join","select","filterValueSelect","querySelectorAll","map","option","rawValues","jointype","_exports"],"mappings":"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"}