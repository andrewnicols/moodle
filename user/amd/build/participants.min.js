define ("core_user/participants",["exports","core_table/dynamic","core/str","core/checkbox-toggleall","core/custom_interaction_events","core_table/local/dynamic/selectors","core/modal_events","core/notification","core/pending","jquery","core_user/local/participants/bulkactions","core/inplace_editable"],function(_exports,DynamicTable,Str,_checkboxToggleall,_custom_interaction_events,_selectors,_modal_events,_notification,_pending,_jquery,_bulkactions){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.init=void 0;DynamicTable=_interopRequireWildcard(DynamicTable);Str=_interopRequireWildcard(Str);_checkboxToggleall=_interopRequireDefault(_checkboxToggleall);_custom_interaction_events=_interopRequireDefault(_custom_interaction_events);_selectors=_interopRequireDefault(_selectors);_modal_events=_interopRequireDefault(_modal_events);_notification=_interopRequireDefault(_notification);_pending=_interopRequireDefault(_pending);_jquery=_interopRequireDefault(_jquery);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(null===obj||"object"!=typeof obj&&"function"!=typeof obj){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if("default"!=key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}const Selectors={bulkActionSelect:"#formactionid",bulkUserSelectedCheckBoxes:"input[data-togglegroup='participants-table'][data-toggle='slave']:checked",checkCountButton:"#checkall",showCountText:"[data-region=\"participant-count\"]",showCountToggle:"[data-action=\"showcount\"]",stateHelpIcon:"[data-region=\"state-help-icon\"]",tableForm:uniqueId=>"form[data-table-unique-id=\"".concat(uniqueId,"\"]")};_exports.init=_ref=>{let{uniqueid,noteStateNames={}}=_ref;const root=document.querySelector(Selectors.tableForm(uniqueid)),getTableFromUniqueId=uniqueId=>root.querySelector(_selectors.default.main.fromRegionId(uniqueId)),registerEventListeners=()=>{_custom_interaction_events.default.define(Selectors.bulkActionSelect,[_custom_interaction_events.default.events.accessibleChange]);(0,_jquery.default)(Selectors.bulkActionSelect).on(_custom_interaction_events.default.events.accessibleChange,e=>{const bulkActionSelect=e.target.closest("select"),action=bulkActionSelect.value,tableRoot=getTableFromUniqueId(uniqueid),checkboxes=tableRoot.querySelectorAll(Selectors.bulkUserSelectedCheckBoxes),pendingPromise=new _pending.default("core_user/participants:bulkActionSelect");if(-1!==action.indexOf("#")){e.preventDefault();const ids=[];checkboxes.forEach(checkbox=>{ids.push(checkbox.getAttribute("name").replace("user",""))});let bulkAction;if("#messageselect"===action){bulkAction=(0,_bulkactions.showSendMessage)(ids)}else if("#addgroupnote"===action){bulkAction=(0,_bulkactions.showAddNote)(root.dataset.courseId,ids,noteStateNames,root.querySelector(Selectors.stateHelpIcon))}if(bulkAction){const pendingBulkAction=new _pending.default("core_user/participants:bulkActionSelected");bulkAction.then(modal=>{modal.getRoot().on(_modal_events.default.hidden,()=>{bulkActionSelect.focus()});pendingBulkAction.resolve();return modal}).catch(_notification.default.exception)}}else if(""!==action&&checkboxes.length){bulkActionSelect.form.submit()}resetBulkAction(bulkActionSelect);pendingPromise.resolve()});root.addEventListener("click",e=>{const checkCountButton=root.querySelector(Selectors.checkCountButton),checkCountButtonClicked=checkCountButton&&checkCountButton.contains(e.target);if(checkCountButtonClicked){e.preventDefault();const tableRoot=getTableFromUniqueId(uniqueid);DynamicTable.setPageSize(tableRoot,checkCountButton.dataset.targetPageSize).then(tableRoot=>{_checkboxToggleall.default.setGroupState(root,"participants-table",!0);return tableRoot}).catch(_notification.default.exception)}});root.addEventListener(DynamicTable.Events.tableContentRefreshed,e=>{const checkCountButton=root.querySelector(Selectors.checkCountButton),tableRoot=e.target,defaultPageSize=parseInt(tableRoot.dataset.tableDefaultPerPage,10),currentPageSize=parseInt(tableRoot.dataset.tablePageSize,10),totalRowCount=parseInt(tableRoot.dataset.tableTotalRows,10);_checkboxToggleall.default.updateSlavesFromMasterState(root,"participants-table");const pageCountStrings=[{key:"countparticipantsfound",component:"core_user",param:totalRowCount}];if(totalRowCount<=defaultPageSize){if(checkCountButton){checkCountButton.classList.add("hidden")}}else if(totalRowCount<=currentPageSize){pageCountStrings.push({key:"selectalluserswithcount",component:"core",param:defaultPageSize});if(checkCountButton){checkCountButton.classList.add("hidden")}}else{pageCountStrings.push({key:"selectalluserswithcount",component:"core",param:totalRowCount});if(checkCountButton){checkCountButton.classList.remove("hidden")}}Str.get_strings(pageCountStrings).then(_ref2=>{let[showingParticipantCountString,selectCountString]=_ref2;const showingParticipantCount=root.querySelector(Selectors.showCountText);showingParticipantCount.innerHTML=showingParticipantCountString;if(selectCountString&&checkCountButton){checkCountButton.value=selectCountString}}).catch(_notification.default.exception)})},resetBulkAction=bulkActionSelect=>{bulkActionSelect.value=""};registerEventListeners()}});
//# sourceMappingURL=participants.min.js.map
