define ("enrol_manual/quickenrolment",["exports","core_table/dynamic","core/str","core/toast","core/config","core/fragment","core/modal_events","core/modal_factory","core/notification","jquery","core/pending","core/prefetch"],function(_exports,DynamicTable,Str,Toast,_config,_fragment,_modal_events,_modal_factory,_notification,_jquery,_pending,_prefetch){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.init=void 0;DynamicTable=_interopRequireWildcard(DynamicTable);Str=_interopRequireWildcard(Str);Toast=_interopRequireWildcard(Toast);_config=_interopRequireDefault(_config);_fragment=_interopRequireDefault(_fragment);_modal_events=_interopRequireDefault(_modal_events);_modal_factory=_interopRequireDefault(_modal_factory);_notification=_interopRequireDefault(_notification);_jquery=_interopRequireDefault(_jquery);_pending=_interopRequireDefault(_pending);_prefetch=_interopRequireDefault(_prefetch);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(null===obj||"object"!=typeof obj&&"function"!=typeof obj){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if("default"!=key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}const Selectors={cohortSelector:"#id_cohortlist",triggerButtons:".enrolusersbutton.enrol_manual_plugin [type='submit']",unwantedHiddenFields:"input[value='_qf__force_multiselect_submission']",buttonWrapper:"[data-region=\"wrapper\"]"},getBodyForContext=contextId=>{return _fragment.default.loadFragment("enrol_manual","enrol_users_form",contextId,{})},getDynamicTableForElement=element=>{const wrapper=element.closest(Selectors.buttonWrapper);return DynamicTable.getTableFromId(wrapper.dataset.tableUniqueid)},registerEventListeners=contextId=>{document.addEventListener("click",e=>{if(e.target.closest(Selectors.triggerButtons)){e.preventDefault();showModal(getDynamicTableForElement(e.target),contextId)}})},showModal=(dynamicTable,contextId)=>{const pendingPromise=new _pending.default("enrol_manual/quickenrolment:showModal");return _modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,large:!0,title:Str.get_string("enrolusers","enrol_manual"),body:getBodyForContext(contextId),buttons:{save:Str.get_string("enrolusers","enrol_manual")}}).then(modal=>{modal.getRoot().on(_modal_events.default.save,e=>{e.preventDefault();modal.getRoot().find("form").submit()});modal.getRoot().on("submit","form",e=>{e.preventDefault();submitFormAjax(dynamicTable,modal)});modal.getRoot().on(_modal_events.default.hidden,()=>{modal.destroy()});modal.show();return modal}).then(modal=>Promise.all([modal,modal.getBodyPromise()])).then(_ref=>{let[modal,body]=_ref;if(body.get(0).querySelector(Selectors.cohortSelector)){return modal.setSaveButtonText(Str.get_string("enroluserscohorts","enrol_manual")).then(()=>modal)}return modal}).then(modal=>{pendingPromise.resolve();return modal}).catch(_notification.default.exception)},submitFormAjax=(dynamicTable,modal)=>{const form=modal.getRoot().find("form");form.get(0).querySelectorAll(Selectors.unwantedHiddenFields).forEach(hiddenField=>hiddenField.remove());modal.hide();modal.destroy();_jquery.default.ajax("".concat(_config.default.wwwroot,"/enrol/manual/ajax.php?").concat(form.serialize()),{type:"GET",processData:!1,contentType:"application/json"}).then(response=>{if(response.error){throw new Error(response.error)}return response.count}).then(count=>{return Promise.all([Str.get_string("totalenrolledusers","enrol",count),DynamicTable.refreshTableContent(dynamicTable)])}).then(_ref2=>{let[notificationBody]=_ref2;return notificationBody}).then(notificationBody=>Toast.add(notificationBody)).catch(error=>{_notification.default.addNotification({message:error.message,type:"error"})})},init=_ref3=>{let{contextid}=_ref3;registerEventListeners(contextid);_prefetch.default.prefetchStrings("enrol_manual",["enrolusers","enroluserscohorts"]);_prefetch.default.prefetchString("enrol","totalenrolledusers")};_exports.init=init});
//# sourceMappingURL=quickenrolment.min.js.map
