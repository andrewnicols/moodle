{"version":3,"sources":["../src/clipboardwrapper.js"],"names":["clipboardWrapper","document","querySelectorAll","selectors","clipboardcontent","forEach","element","context","clipboardtarget","id","Templates","renderForPromise","then","html","js","prependNodeContents","catch","displayException"],"mappings":"yQA6BA,OACA,O,kXAMO,GAAMA,CAAAA,CAAgB,4CAAG,8FAY5BC,QAAQ,CAACC,gBAAT,CAA0BC,UAAUC,gBAApC,EACKC,OADL,CACa,SAAAC,CAAO,CAAI,CAChB,GAAMC,CAAAA,CAAO,CAAG,CACZC,eAAe,CAAE,IAAMF,CAAO,CAACG,EAAd,CAAmB,OADxB,CAAhB,CAGAC,UAAUC,gBAAV,CAA2B,uCAA3B,CAAoEJ,CAApE,EAA6EK,IAA7E,CAAkF,WAAgB,IAAdC,CAAAA,CAAc,GAAdA,IAAc,CAARC,CAAQ,GAARA,EAAQ,CAC9FJ,UAAUK,mBAAV,CAA8BT,CAA9B,CAAuCO,CAAvC,CAA6CC,CAA7C,CACH,CAFD,EAEGE,KAFH,CAESC,WAFT,CAGH,CARL,EAZ4B,wCAAH,uDAAtB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Interface to using clipboard.js\n *\n * @module     tool_componentlibrary/clipboardwrapper\n * @package    tool_componentlibrary\n * @copyright  2021 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import Tooltip from 'theme_boost/bootstrap/tooltip';\n// import $ from 'jquery';\n// import Clipboard from 'tool_componentlibrary/clipboard';\n// import {get_strings as getStrings} from 'core/str';\nimport 'core/copy_to_clipboard';\nimport selectors from 'tool_componentlibrary/selectors';\nimport Templates from 'core/templates';\nimport {exception as displayException} from 'core/notification';\n\n/**\n * Initialise the clipboard button on all reusable code.\n */\nexport const clipboardWrapper = async() => {\n    // const strings = await getStrings([\n    //     {\n    //         key: 'copied',\n    //         component: 'tool_componentlibrary'\n    //     },\n    //     {\n    //         key: 'copytoclipboard',\n    //         component: 'tool_componentlibrary'\n    //     },\n    // ]);\n\n    document.querySelectorAll(selectors.clipboardcontent)\n        .forEach(element => {\n            const context = {\n                clipboardtarget: \"#\" + element.id + \" code\"\n            };\n            Templates.renderForPromise('tool_componentlibrary/clipboardbutton', context).then(({html, js}) => {\n                Templates.prependNodeContents(element, html, js);\n            }).catch(displayException);\n        });\n\n    // const clClipboard = new Clipboard(selectors.clipboardbutton, {\n    //     target: (trigger) => {\n    //         return trigger.parentNode.nextElementSibling;\n    //     }\n    // });\n    //\n    // clClipboard.on('success', e => {\n    //     // Hide the original tooltip\n    //     $(e.trigger).tooltip('dispose');\n    //\n    //     // Show an new tooltip with the Copied string.\n    //     const tooltipBtn = new Tooltip(e.trigger);\n    //     e.trigger.setAttribute('data-original-title', strings[0]);\n    //     tooltipBtn.show();\n    //     setTimeout(() => {\n    //         tooltipBtn.dispose();\n    //     }, 3000);\n    //     e.clearSelection();\n    //     e.trigger.setAttribute('data-original-title', strings[1]);\n    // });\n};\n"],"file":"clipboardwrapper.min.js"}