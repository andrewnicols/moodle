define ("tool_componentlibrary/mustache",["exports","tool_componentlibrary/selectors","core/ajax","core/config","core/templates","core/log","core/notification"],function(_exports,_selectors,_ajax,_config,_templates,_log,_notification){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.mustache=void 0;_selectors=_interopRequireDefault(_selectors);_ajax=_interopRequireDefault(_ajax);_config=_interopRequireDefault(_config);_templates=_interopRequireDefault(_templates);_log=_interopRequireDefault(_log);_notification=_interopRequireDefault(_notification);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const renderTemplate=async(container,templateName,context)=>{try{context=JSON.parse(context)}catch(e){_log.default.debug("Could not parse json example context for template.");_log.default.debug(e)}const{html,js}=await _templates.default.renderForPromise(templateName,context),rendercontainer=container.querySelector(_selectors.default.mustacherendered);await _templates.default.replaceNodeContents(rendercontainer,html,js)},loadTemplate=container=>{const sourcecontainer=container.querySelector(_selectors.default.mustachesource),contextcontainer=container.querySelector(_selectors.default.mustachecontext),templateName=container.dataset.template;let context=container.querySelector(_selectors.default.mustacherawcontext).textContent;const parts=templateName.split("/"),component=parts.shift(),name=parts.join("/"),request={methodname:"core_output_load_template",args:{component:component,template:name,themename:_config.default.theme,includecomments:!0}};_ajax.default.call([request])[0].done(source=>{sourcecontainer.textContent=source;if(!context){const example=source.match(/Example context \(json\):([\s\S]+?)(}})/);context=example[1];const precontainer=document.createElement("pre");precontainer.innerHTML=JSON.stringify(JSON.parse(context),null,4);contextcontainer.parentNode.appendChild(precontainer);contextcontainer.classList.add("d-none")}renderTemplate(container,templateName,context)}).fail(_notification.default.exception)},mustache=()=>{document.querySelectorAll(_selectors.default.mustachecode).forEach(container=>{loadTemplate(container)})};_exports.mustache=mustache});
//# sourceMappingURL=mustache.min.js.map
