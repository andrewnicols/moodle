{"version":3,"file":"search.min.js","sources":["../src/search.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add search filtering of available language packs\n *\n * @module      tool_langimport/search\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport {debounce} from 'core/utils';\n\nconst SELECTORS = {\n    AVAILABLE_LANG_SELECT: 'select',\n    AVAILABLE_LANG_SEARCH: '[data-action=\"search\"]',\n};\n\nconst DEBOUNCE_TIMER = 250;\n\n/**\n * Initialize module\n *\n * @param {Element} form\n */\nconst init = (form) => {\n    const availableLangsElement = form.querySelector(SELECTORS.AVAILABLE_LANG_SELECT);\n\n    const availableLangsFilter = (event) => {\n        const pendingPromise = new Pending('tool_langimport/search:filter');\n\n        // Remove existing options.\n        availableLangsElement.querySelectorAll('option').forEach((option) => {\n            option.remove();\n        });\n\n        // Filter for matching languages.\n        const searchTerm = event.target.value.toLowerCase();\n        const availableLanguages = JSON.parse(availableLangsElement.dataset.availableLanguages);\n        const filteredLanguages = Object.keys(availableLanguages).reduce((matches, langcode) => {\n            if (availableLanguages[langcode].toLowerCase().includes(searchTerm)) {\n                matches[langcode] = availableLanguages[langcode];\n            }\n            return matches;\n        }, []);\n\n        // Re-create filtered options.\n        Object.entries(filteredLanguages).forEach(([langcode, langname]) => {\n            const option = document.createElement('option');\n            option.value = langcode;\n            option.innerText = langname;\n            availableLangsElement.append(option);\n        });\n\n        pendingPromise.resolve();\n    };\n\n    // Cache initial available language options.\n    const availableLanguages = {};\n    availableLangsElement.querySelectorAll('option').forEach((option) => {\n        availableLanguages[option.value] = option.text;\n    });\n    availableLangsElement.dataset.availableLanguages = JSON.stringify(availableLanguages);\n\n    // Register event listeners on the search element.\n    const availableLangsSearch = form.querySelector(SELECTORS.AVAILABLE_LANG_SEARCH);\n    availableLangsSearch.addEventListener('keydown', (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n        }\n    });\n\n    // Debounce the event listener to allow the user to finish typing.\n    availableLangsSearch.addEventListener('keyup', (event) => {\n        const pendingPromise = new Pending('tool_langimport/search:keyup');\n\n        debounce(availableLangsFilter, DEBOUNCE_TIMER)(event);\n        setTimeout(() => {\n            pendingPromise.resolve();\n        }, DEBOUNCE_TIMER);\n    });\n};\n\nexport default {\n    init: init,\n};\n"],"names":["obj","_pending","__esModule","default","SELECTORS","_default","init","form","availableLangsElement","querySelector","availableLangsFilter","event","pendingPromise","Pending","querySelectorAll","forEach","option","remove","searchTerm","target","value","toLowerCase","availableLanguages","JSON","parse","dataset","filteredLanguages","Object","keys","reduce","matches","langcode","includes","entries","_ref","langname","document","createElement","innerText","append","resolve","text","stringify","availableLangsSearch","addEventListener","key","preventDefault","debounce","setTimeout","_exports"],"mappings":"4GAuBmC,IAAAA;;;;;;;qFAAnCC,UAAmCD,IAAnCC,WAAmCD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAGnC,MAAMI,gCACqB,SADrBA,gCAEqB,yBAkEzB,IAAAC,SAEa,CACXC,KA3DUC,OACV,MAAMC,sBAAwBD,KAAKE,cAAcL,iCAE3CM,qBAAwBC,QAC1B,MAAMC,eAAiB,IAAIC,SAAOV,QAAC,iCAGnCK,sBAAsBM,iBAAiB,UAAUC,SAASC,SACtDA,OAAOC,QAAQ,IAInB,MAAMC,WAAaP,MAAMQ,OAAOC,MAAMC,cAChCC,mBAAqBC,KAAKC,MAAMhB,sBAAsBiB,QAAQH,oBAC9DI,kBAAoBC,OAAOC,KAAKN,oBAAoBO,QAAO,CAACC,QAASC,YACnET,mBAAmBS,UAAUV,cAAcW,SAASd,cACpDY,QAAQC,UAAYT,mBAAmBS,WAEpCD,UACR,IAGHH,OAAOM,QAAQP,mBAAmBX,SAAQmB,OAA0B,IAAxBH,SAAUI,UAASD,KAC3D,MAAMlB,OAASoB,SAASC,cAAc,UACtCrB,OAAOI,MAAQW,SACff,OAAOsB,UAAYH,SACnB3B,sBAAsB+B,OAAOvB,OAAO,IAGxCJ,eAAe4B,SAAS,EAItBlB,mBAAqB,CAAA,EAC3Bd,sBAAsBM,iBAAiB,UAAUC,SAASC,SACtDM,mBAAmBN,OAAOI,OAASJ,OAAOyB,IAAI,IAElDjC,sBAAsBiB,QAAQH,mBAAqBC,KAAKmB,UAAUpB,oBAGlE,MAAMqB,qBAAuBpC,KAAKE,cAAcL,iCAChDuC,qBAAqBC,iBAAiB,WAAYjC,QAC5B,UAAdA,MAAMkC,KACNlC,MAAMmC,gBACV,IAIJH,qBAAqBC,iBAAiB,SAAUjC,QAC5C,MAAMC,eAAiB,IAAIC,SAAOV,QAAC,iCAEnC,EAAA4C,OAAAA,UAASrC,qBA1DM,IA0Df,CAA+CC,OAC/CqC,YAAW,KACPpC,eAAe4B,SAAS,GA5Db,IA6DG,GACpB,GAKL,OAAAS,SAAA9C,QAAAE,SAAA4C,SAAA9C,OAAA"}