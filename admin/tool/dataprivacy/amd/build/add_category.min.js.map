{"version":3,"sources":["../src/add_category.js"],"names":["define","$","Str","Ajax","Notification","ModalFactory","ModalEvents","Fragment","FormChangeChecker","SELECTORS","CATEGORY_LINK","AddCategory","contextId","strings","get_strings","key","component","registerEventListeners","prototype","trigger","on","then","create","type","types","SAVE_CANCEL","title","body","done","modal","setupFormModal","bind","fail","exception","getBody","formdata","params","jsonformdata","JSON","stringify","loadFragment","saveText","setLarge","setSaveButtonText","getRoot","hidden","destroy","setBody","save","submitForm","submitFormAjax","show","e","preventDefault","find","submit","formData","serialize","call","methodname","args","data","validationerrors","close","document","location","reload","resetAllFormDirtyStates","removeListeners","off","getInstance"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to add categories.\n *\n * @module     tool_dataprivacy/add_category\n * @copyright  2018 David Monllao\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/ajax',\n    'core/notification',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/fragment',\n    'core_form/changechecker',\n], function(\n    $,\n    Str,\n    Ajax,\n    Notification,\n    ModalFactory,\n    ModalEvents,\n    Fragment,\n    FormChangeChecker\n) {\n\n        var SELECTORS = {\n            CATEGORY_LINK: '[data-add-element=\"category\"]',\n        };\n\n        var AddCategory = function(contextId) {\n            this.contextId = contextId;\n\n            var stringKeys = [\n                {\n                    key: 'addcategory',\n                    component: 'tool_dataprivacy'\n                },\n                {\n                    key: 'save',\n                    component: 'admin'\n                }\n            ];\n            this.strings = Str.get_strings(stringKeys);\n\n            this.registerEventListeners();\n        };\n\n        /**\n         * @var {int} contextId\n         * @private\n         */\n        AddCategory.prototype.contextId = 0;\n\n        /**\n         * @var {Promise}\n         * @private\n         */\n        AddCategory.prototype.strings = 0;\n\n        AddCategory.prototype.registerEventListeners = function() {\n\n            var trigger = $(SELECTORS.CATEGORY_LINK);\n            trigger.on('click', function() {\n                return this.strings.then(function(strings) {\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: strings[0],\n                        body: '',\n                    }, trigger).done(function(modal) {\n                        this.setupFormModal(modal, strings[1]);\n                    }.bind(this));\n                }.bind(this))\n                .fail(Notification.exception);\n            }.bind(this));\n\n        };\n\n        /**\n         * @method getBody\n         * @param {Object} formdata\n         * @private\n         * @return {Promise}\n         */\n        AddCategory.prototype.getBody = function(formdata) {\n\n            var params = null;\n            if (typeof formdata !== \"undefined\") {\n                params = {jsonformdata: JSON.stringify(formdata)};\n            }\n            // Get the content of the modal.\n            return Fragment.loadFragment('tool_dataprivacy', 'addcategory_form', this.contextId, params);\n        };\n\n        AddCategory.prototype.setupFormModal = function(modal, saveText) {\n            modal.setLarge();\n\n            modal.setSaveButtonText(saveText);\n\n            // We want to reset the form every time it is opened.\n            modal.getRoot().on(ModalEvents.hidden, this.destroy.bind(this));\n\n            modal.setBody(this.getBody());\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n            this.modal = modal;\n\n            modal.show();\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        AddCategory.prototype.submitForm = function(e) {\n            e.preventDefault();\n            this.modal.getRoot().find('form').submit();\n        };\n\n        AddCategory.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n\n            Ajax.call([{\n                methodname: 'tool_dataprivacy_create_category_form',\n                args: {jsonformdata: JSON.stringify(formData)},\n                done: function(data) {\n                    if (data.validationerrors) {\n                        this.modal.setBody(this.getBody(formData));\n                    } else {\n                        this.close();\n                    }\n                }.bind(this),\n                fail: Notification.exception\n            }]);\n        };\n\n        AddCategory.prototype.close = function() {\n            this.destroy();\n            document.location.reload();\n        };\n\n        AddCategory.prototype.destroy = function() {\n            FormChangeChecker.resetAllFormDirtyStates();\n            this.modal.destroy();\n        };\n\n        AddCategory.prototype.removeListeners = function() {\n            $(SELECTORS.CATEGORY_LINK).off('click');\n        };\n\n        return /** @alias module:tool_dataprivacy/add_category */ {\n            getInstance: function(contextId) {\n                return new AddCategory(contextId);\n            }\n        };\n    }\n);\n\n"],"file":"add_category.min.js"}