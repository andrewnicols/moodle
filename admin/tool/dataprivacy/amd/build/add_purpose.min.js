define ("tool_dataprivacy/add_purpose",["jquery","core/str","core/ajax","core/notification","core/modal_factory","core/modal_events","core/fragment","core_form/changechecker"],function($,Str,Ajax,Notification,ModalFactory,ModalEvents,Fragment,FormChangeChecker){var SELECTORS={PURPOSE_LINK:"[data-add-element=\"purpose\"]"},AddPurpose=function(contextId){this.contextId=contextId;this.strings=Str.get_strings([{key:"addpurpose",component:"tool_dataprivacy"},{key:"save",component:"admin"}]);this.registerEventListeners()};AddPurpose.prototype.contextId=0;AddPurpose.prototype.strings=0;AddPurpose.prototype.registerEventListeners=function(){var trigger=$(SELECTORS.PURPOSE_LINK);trigger.on("click",function(){return this.strings.then(function(strings){ModalFactory.create({type:ModalFactory.types.SAVE_CANCEL,title:strings[0],body:""},trigger).done(function(modal){this.setupFormModal(modal,strings[1])}.bind(this))}.bind(this)).fail(Notification.exception)}.bind(this))};AddPurpose.prototype.getBody=function(formdata){var params=null;if("undefined"!=typeof formdata){params={jsonformdata:JSON.stringify(formdata)}}return Fragment.loadFragment("tool_dataprivacy","addpurpose_form",this.contextId,params)};AddPurpose.prototype.setupFormModal=function(modal,saveText){modal.setLarge();modal.setSaveButtonText(saveText);modal.getRoot().on(ModalEvents.hidden,this.destroy.bind(this));modal.setBody(this.getBody());modal.getRoot().on(ModalEvents.save,this.submitForm.bind(this));modal.getRoot().on("submit","form",this.submitFormAjax.bind(this));this.modal=modal;modal.show()};AddPurpose.prototype.submitForm=function(e){e.preventDefault();this.modal.getRoot().find("form").submit()};AddPurpose.prototype.submitFormAjax=function(e){e.preventDefault();var formData=this.modal.getRoot().find("form").serialize();Ajax.call([{methodname:"tool_dataprivacy_create_purpose_form",args:{jsonformdata:JSON.stringify(formData)},done:function(data){if(data.validationerrors){this.modal.setBody(this.getBody(formData))}else{this.close()}}.bind(this),fail:Notification.exception}])};AddPurpose.prototype.close=function(){this.destroy();document.location.reload()};AddPurpose.prototype.destroy=function(){FormChangeChecker.resetAllFormDirtyStates();this.modal.destroy()};AddPurpose.prototype.removeListeners=function(){$(SELECTORS.PURPOSE_LINK).off("click")};return{getInstance:function(contextId){return new AddPurpose(contextId)}}});
//# sourceMappingURL=add_purpose.min.js.map
