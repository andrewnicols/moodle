{"version":3,"sources":["../src/competencydialogue.js"],"names":["define","$","notification","ajax","templates","str","Dialogue","instance","Competencydialogue","prototype","triggerCompetencyViewedEvent","competencyId","call","methodname","args","id","showDialogue","competencyid","options","getCompetencyDataPromise","then","data","Promise","all","render","html","competency","shortname","bind","catch","exception","showDialogueFromData","dataSource","enhanceDialogue","clickEventHandler","e","compdialogue","currentTarget","includerelated","includecourses","preventDefault","init","delegate"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display Competency in dialogue box.\n *\n * @module     tool_lp/Competencydialogue\n * @package    tool_lp\n * @copyright  2015 Issam Taboubi <issam.taboubi@umontreal.ca>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/notification',\n        'core/ajax',\n        'core/templates',\n        'core/str',\n        'tool_lp/dialogue'],\n       function($, notification, ajax, templates, str, Dialogue) {\n\n    /**\n     * The main instance we'll be working with.\n     *\n     * @type {Competencydialogue}\n     */\n    var instance;\n\n    /**\n     * Constructor for CompetencyDialogue.\n     *\n     * @param {Object} options\n     *\n     */\n    var Competencydialogue = function() {\n      // Intentionally left empty.\n    };\n\n    /**\n     * Log the competency viewed event.\n     *\n     * @param  {Number} competencyId The competency ID.\n     * @method triggerCompetencyViewedEvent\n     */\n    Competencydialogue.prototype.triggerCompetencyViewedEvent = function(competencyId) {\n        ajax.call([{\n            methodname: 'core_competency_competency_viewed',\n            args: {id: competencyId}\n        }]);\n    };\n\n    /**\n     * Display a dialogue box by competencyid.\n     *\n     * @param {Number} competencyid The competency ID.\n     * @param {Object} options The options.\n     * @method showDialogue\n     */\n    Competencydialogue.prototype.showDialogue = function(competencyid, options) {\n        this.getCompetencyDataPromise(competencyid, options)\n        .then(function(data) {\n            // Inner Html in the dialogue content.\n            return Promise.all([\n                data,\n                templates.render('tool_lp/competency_summary', data),\n            ]);\n        })\n        .then(function([data, html]) {\n            // Log competency viewed event.\n            this.triggerCompetencyViewedEvent(competencyid);\n\n            // Show the dialogue.\n            new Dialogue(\n                data.competency.shortname,\n                html\n            );\n\n            return;\n        }.bind(this))\n        .catch(notification.exception);\n    };\n\n    /**\n     * Display a dialogue box from data.\n     *\n     * @param {Object} dataSource data to be used to display dialogue box\n     * @method showDialogueFromData\n     */\n    Competencydialogue.prototype.showDialogueFromData = function(dataSource) {\n        // Inner Html in the dialogue content.\n        templates.render('tool_lp/competency_summary', dataSource)\n        .then(function(html) {\n            // Log competency viewed event.\n            this.triggerCompetencyViewedEvent(dataSource.id);\n\n            // Show the dialogue.\n            new Dialogue(\n                dataSource.shortname,\n                html,\n                this.enhanceDialogue\n            );\n\n            return;\n        })\n        .catch(notification.exception);\n    };\n\n    /**\n     * The action on the click event.\n     *\n     * @param {Event} e event click\n     * @method clickEventHandler\n     */\n    Competencydialogue.prototype.clickEventHandler = function(e) {\n        var compdialogue = e.data.compdialogue;\n        var currentTarget = $(e.currentTarget);\n        var competencyid = currentTarget.data('id');\n        var includerelated = !(currentTarget.data('excluderelated'));\n        var includecourses = currentTarget.data('includecourses');\n\n        // Show the dialogue box.\n        compdialogue.showDialogue(competencyid, {\n            includerelated: includerelated,\n            includecourses: includecourses\n        });\n        e.preventDefault();\n    };\n\n    /**\n     * Get a promise on data competency.\n     *\n     * @param {Number} competencyid\n     * @param {Object} options\n     * @returns {Promise} return promise on data request\n     * @method getCompetencyDataPromise\n     */\n    Competencydialogue.prototype.getCompetencyDataPromise = function(competencyid, options) {\n        return ajax.call([{\n            methodname: 'tool_lp_data_for_competency_summary',\n            args: {\n                competencyid: competencyid,\n                includerelated: options.includerelated || false,\n                includecourses: options.includecourses || false\n            }\n        }])[0];\n    };\n\n    return /** @alias module:tool_lp/competencydialogue */ {\n\n        /**\n         * Initialise the competency dialogue module.\n         *\n         * Only the first call matters.\n         */\n        init: function() {\n            if (typeof instance !== 'undefined') {\n                return;\n            }\n\n            // Instantiate the one instance and delegate event on the body.\n            instance = new Competencydialogue();\n            $('body').delegate('[data-action=\"competency-dialogue\"]', 'click', {compdialogue: instance},\n                instance.clickEventHandler.bind(instance));\n        }\n    };\n});\n"],"file":"competencydialogue.min.js"}