define ("tool_lp/competency_rule_points",["jquery","core/str","core/templates","tool_lp/competency_rule"],function($,Str,Templates,RuleBase){var Rule=function(){RuleBase.apply(this,arguments)};Rule.prototype=Object.create(RuleBase.prototype);Rule.prototype._container=null;Rule.prototype._templateLoaded=!1;Rule.prototype.getConfig=function(){return JSON.stringify({base:{points:this._getRequiredPoints()},competencies:this._getCompetenciesConfig()})};Rule.prototype._getCompetenciesConfig=function(){var competencies=[];this._container.find("[data-competency]").each(function(){var node=$(this),id=node.data("competency"),points=parseInt(node.find("[name=\"points\"]").val(),10),required=node.find("[name=\"required\"]").prop("checked");competencies.push({id:id,points:points,required:required?1:0})});return competencies};Rule.prototype._getRequiredPoints=function(){return parseInt(this._container.find("[name=\"requiredpoints\"]").val()||1,10)};Rule.prototype.getType=function(){return"core_competency\\competency_rule_points"};Rule.prototype.injectTemplate=function(container){var self=this,children=this._tree.getChildren(this._competency.id),context,config={base:{points:2},competencies:[]};this._templateLoaded=!1;if(self._competency.ruletype==self.getType()){try{config=JSON.parse(self._competency.ruleconfig)}catch(e){}}context={requiredpoints:config&&config.base?config.base.points:2,competency:self._competency,children:[]};$.each(children,function(index,child){var competency={id:child.id,shortname:child.shortname,required:!1,points:0};if(config){$.each(config.competencies,function(index,comp){if(comp.id==competency.id){competency.required=comp.required?!0:!1;competency.points=comp.points}})}context.children.push(competency)});return Templates.render("tool_lp/competency_rule_points",context).then(function(html){self._container=container;container.html(html);container.find("input").change(function(){self._triggerChange()});self._templateLoaded=!0;self._triggerChange()})};Rule.prototype.isValid=function(){if(!this._templateLoaded){return!1}var required=this._getRequiredPoints(),max=0,valid=!0;$.each(this._getCompetenciesConfig(),function(index,competency){if(0>competency.points){valid=!1}max+=competency.points});valid=valid&&max>=required;return valid};return Rule});
//# sourceMappingURL=competency_rule_points.min.js.map
