{"version":3,"sources":["../src/competencyruleconfig.js"],"names":["define","$","Notification","Templates","Dialogue","Outcomes","Str","RuleConfig","tree","rulesModules","_eventNode","_tree","_rulesModules","_setUp","prototype","_competency","_outcomesOption","_popup","_ready","_rules","_afterChange","_isValid","_find","prop","_afterRuleConfigChange","e","rule","_getRule","_afterRender","self","on","_switchedOutcome","trigger","_switchedRule","_trigger","_getConfig","close","canBeConfigured","can","each","index","canConfig","display","when","get_string","_render","then","title","render","bind","fail","exception","selector","getContent","find","_getApplicableOutcomesOptions","options","outcome","push","code","name","selected","ruleoutcome","_getApplicableRulesOptions","_getRuleName","getType","type","ruletype","ruleconfig","getConfig","_getOutcome","val","result","modInfo","_initOutcomes","getAll","outcomes","_initRules","promises","promise","init","setTargetCompetency","splice","apply","NONE","isValid","handler","_preRender","ready","config","rules","context","competencyshortname","shortname","setTargetCompetencyId","competencyId","getCompetency","modules","Deferred","amd","require","arguments","Module","always","resolve","hide","empty","show","container","injectTemplate","catch","data"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Competency rule config.\n *\n * @module     tool_lp/competencyruleconfig\n * @copyright  2015 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/templates',\n        'tool_lp/dialogue',\n        'tool_lp/competency_outcomes',\n        'core/str'],\n        function($, Notification, Templates, Dialogue, Outcomes, Str) {\n\n    /**\n     * Competency rule class.\n     *\n     * When implementing this you should attach a listener to the event 'save'\n     * on the instance. E.g.\n     *\n     * var config = new RuleConfig(tree, modules);\n     * config.on('save', function(e, config) { ... });\n     *\n     * @param {competencytree} tree The competency tree.\n     * @param {Array} rulesModules The modules containing the rules: [{ typeName: { amd: amdModule, name: ruleName }}].\n     */\n    var RuleConfig = function(tree, rulesModules) {\n        this._eventNode = $('<div></div>');\n        this._tree = tree;\n        this._rulesModules = rulesModules;\n        this._setUp();\n    };\n\n    /** @property {Object} The current competency. */\n    RuleConfig.prototype._competency = null;\n    /** @property {Node} The node we attach the events to. */\n    RuleConfig.prototype._eventNode = null;\n    /** @property {Array} Outcomes options. */\n    RuleConfig.prototype._outcomesOption = null;\n    /** @property {Dialogue} The dialogue. */\n    RuleConfig.prototype._popup = null;\n    /** @property {Promise} Resolved when the module is ready. */\n    RuleConfig.prototype._ready = null;\n    /** @property {Array} The rules. */\n    RuleConfig.prototype._rules = null;\n    /** @property {Array} The rules modules. */\n    RuleConfig.prototype._rulesModules = null;\n    /** @property {competencytree} The competency tree. */\n    RuleConfig.prototype._tree = null;\n\n    /**\n     * After change.\n     *\n     * Triggered when a change occured.\n     *\n     * @method _afterChange\n     * @protected\n     */\n    RuleConfig.prototype._afterChange = function() {\n        if (!this._isValid()) {\n            this._find('[data-action=\"save\"]').prop('disabled', true);\n        } else {\n            this._find('[data-action=\"save\"]').prop('disabled', false);\n        }\n    };\n\n    /**\n     * After change in rule's config.\n     *\n     * Triggered when a change occured in a specific rule config.\n     *\n     * @method _afterRuleConfigChange\n     * @protected\n     * @param {Event} e\n     * @param {Rule} rule\n     */\n    RuleConfig.prototype._afterRuleConfigChange = function(e, rule) {\n        if (rule != this._getRule()) {\n            // This rule is not the current one any more, we can ignore.\n            return;\n        }\n        this._afterChange();\n    };\n\n    /**\n     * After render hook.\n     *\n     * @method _afterRender\n     * @protected\n     */\n    RuleConfig.prototype._afterRender = function() {\n        var self = this;\n\n        self._find('[name=\"outcome\"]').on('change', function() {\n            self._switchedOutcome();\n        }).trigger('change');\n\n        self._find('[name=\"rule\"]').on('change', function() {\n            self._switchedRule();\n        }).trigger('change');\n\n        self._find('[data-action=\"save\"]').on('click', function() {\n            self._trigger('save', self._getConfig());\n            self.close();\n        });\n\n        self._find('[data-action=\"cancel\"]').on('click', function() {\n            self.close();\n        });\n    };\n\n    /**\n     * Whether the current competency can be configured.\n     *\n     * @return {Boolean}\n     * @method canBeConfigured\n     */\n    RuleConfig.prototype.canBeConfigured = function() {\n        var can = false;\n        $.each(this._rules, function(index, rule) {\n            if (rule.canConfig()) {\n                can = true;\n                return;\n            }\n        });\n        return can;\n    };\n\n    /**\n     * Close the dialogue.\n     *\n     * @method close\n     */\n    RuleConfig.prototype.close = function() {\n        this._popup.close();\n        this._popup = null;\n    };\n\n    /**\n     * Opens the picker.\n     *\n     * @method display\n     * @returns {Promise}\n     */\n    RuleConfig.prototype.display = function() {\n        var self = this;\n        if (!self._competency) {\n            return false;\n        }\n        return $.when(Str.get_string('competencyrule', 'tool_lp'), self._render())\n        .then(function(title, render) {\n            self._popup = new Dialogue(\n                title,\n                render[0],\n                self._afterRender.bind(self)\n            );\n            return;\n        }).fail(Notification.exception);\n    };\n\n    /**\n     * Find a node in the dialogue.\n     *\n     * @param {String} selector\n     * @return {JQuery}\n     * @method _find\n     * @protected\n     */\n    RuleConfig.prototype._find = function(selector) {\n        return $(this._popup.getContent()).find(selector);\n    };\n\n    /**\n     * Get the applicable outcome options.\n     *\n     * @return {Array}\n     * @method _getApplicableOutcomesOptions\n     * @protected\n     */\n    RuleConfig.prototype._getApplicableOutcomesOptions = function() {\n        var self = this,\n            options = [];\n\n        $.each(self._outcomesOption, function(index, outcome) {\n            options.push({\n                code: outcome.code,\n                name: outcome.name,\n                selected: (outcome.code == self._competency.ruleoutcome) ? true : false,\n            });\n        });\n\n        return options;\n    };\n\n    /**\n     * Get the applicable rules options.\n     *\n     * @return {Array}\n     * @method _getApplicableRulesOptions\n     * @protected\n     */\n    RuleConfig.prototype._getApplicableRulesOptions = function() {\n        var self = this,\n            options = [];\n\n        $.each(self._rules, function(index, rule) {\n            if (!rule.canConfig()) {\n                return;\n            }\n            options.push({\n                name: self._getRuleName(rule.getType()),\n                type: rule.getType(),\n                selected: (rule.getType() == self._competency.ruletype) ? true : false,\n            });\n        });\n\n        return options;\n    };\n\n    /**\n     * Get the full config for the competency.\n     *\n     * @return {Object} Contains rule, ruleoutcome and ruleconfig.\n     * @method _getConfig\n     * @protected\n     */\n    RuleConfig.prototype._getConfig = function() {\n        var rule = this._getRule();\n        return {\n            ruletype: rule ? rule.getType() : null,\n            ruleconfig: rule ? rule.getConfig() : null,\n            ruleoutcome: this._getOutcome()\n        };\n    };\n\n    /**\n     * Get the selected outcome code.\n     *\n     * @return {String}\n     * @method _getOutcome\n     * @protected\n     */\n    RuleConfig.prototype._getOutcome = function() {\n        return this._find('[name=\"outcome\"]').val();\n    };\n\n    /**\n     * Get the selected rule.\n     *\n     * @return {null|Rule}\n     * @method _getRule\n     * @protected\n     */\n    RuleConfig.prototype._getRule = function() {\n        var result,\n            type = this._find('[name=\"rule\"]').val();\n\n        $.each(this._rules, function(index, rule) {\n            if (rule.getType() == type) {\n                result = rule;\n                return;\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Return the name of a rule.\n     *\n     * @param  {String} type The type of a rule.\n     * @return {String}\n     * @method _getRuleName\n     * @protected\n     */\n    RuleConfig.prototype._getRuleName = function(type) {\n        var self = this,\n            name;\n        $.each(self._rulesModules, function(index, modInfo) {\n            if (modInfo.type == type) {\n                name = modInfo.name;\n                return;\n            }\n        });\n        return name;\n    };\n\n    /**\n     * Initialise the outcomes.\n     *\n     * @return {Promise}\n     * @method _initOutcomes\n     * @protected\n     */\n    RuleConfig.prototype._initOutcomes = function() {\n        var self = this;\n        return Outcomes.getAll().then(function(outcomes) {\n            self._outcomesOption = outcomes;\n            return;\n        });\n    };\n\n    /**\n     * Initialise the rules.\n     *\n     * @return {Promise}\n     * @method _initRules\n     * @protected\n     */\n    RuleConfig.prototype._initRules = function() {\n        var self = this,\n            promises = [];\n        $.each(self._rules, function(index, rule) {\n            var promise = rule.init().then(function() {\n                rule.setTargetCompetency(self._competency);\n                rule.on('change', self._afterRuleConfigChange.bind(self));\n                return;\n            }, function() {\n                // Upon failure remove the rule, and resolve the promise.\n                self._rules.splice(index, 1);\n                return $.when();\n            });\n            promises.push(promise);\n        });\n\n        return $.when.apply($.when, promises);\n    };\n\n    /**\n     * Whether or not the current config is valid.\n     *\n     * @return {Boolean}\n     * @method _isValid\n     * @protected\n     */\n    RuleConfig.prototype._isValid = function() {\n        var outcome = this._getOutcome(),\n            rule = this._getRule();\n\n        if (outcome == Outcomes.NONE) {\n            return true;\n        } else if (!rule) {\n            return false;\n        }\n\n        return rule.isValid();\n    };\n\n    /**\n     * Register an event listener.\n     *\n     * @param {String} type The event type.\n     * @param {Function} handler The event listener.\n     * @method on\n     */\n    RuleConfig.prototype.on = function(type, handler) {\n        this._eventNode.on(type, handler);\n    };\n\n    /**\n     * Hook to executed before render.\n     *\n     * @method _preRender\n     * @protected\n     * @return {Promise}\n     */\n    RuleConfig.prototype._preRender = function() {\n        // We need to have all the information about the rule plugins first.\n        return this.ready();\n    };\n\n    /**\n     * Returns a promise that is resolved when the module is ready.\n     *\n     * @return {Promise}\n     * @method ready\n     * @protected\n     */\n    RuleConfig.prototype.ready = function() {\n        return this._ready.promise();\n    };\n\n    /**\n     * Render the dialogue.\n     *\n     * @method _render\n     * @protected\n     * @return {Promise}\n     */\n    RuleConfig.prototype._render = function() {\n        var self = this;\n        return this._preRender().then(function() {\n            var config;\n\n            if (!self.canBeConfigured()) {\n                config = false;\n            } else {\n                config = {};\n                config.outcomes = self._getApplicableOutcomesOptions();\n                config.rules = self._getApplicableRulesOptions();\n            }\n\n            var context = {\n                competencyshortname: self._competency.shortname,\n                config: config\n            };\n\n            return Templates.render('tool_lp/competency_rule_config', context);\n        });\n    };\n\n    /**\n     * Set the target competency.\n     *\n     * @param {Number} competencyId The target competency Id.\n     * @method setTargetCompetencyId\n     */\n    RuleConfig.prototype.setTargetCompetencyId = function(competencyId) {\n        var self = this;\n        self._competency = self._tree.getCompetency(competencyId);\n        $.each(self._rules, function(index, rule) {\n            rule.setTargetCompetency(self._competency);\n        });\n    };\n\n    /**\n     * Set up the instance.\n     *\n     * @method _setUp\n     * @protected\n     */\n    RuleConfig.prototype._setUp = function() {\n        var self = this,\n            promises = [],\n            modules = [];\n\n        self._ready = $.Deferred();\n        self._rules = [];\n\n        $.each(self._rulesModules, function(index, rule) {\n            modules.push(rule.amd);\n        });\n\n        // Load all the modules.\n        require(modules, function() {\n            $.each(arguments, function(index, Module) {\n                // Instantiate the rule and listen to it.\n                var rule = new Module(self._tree);\n                self._rules.push(rule);\n            });\n\n            // Load all the option values.\n            promises.push(self._initRules());\n            promises.push(self._initOutcomes());\n\n            // Ready when everything is done.\n            $.when.apply($.when, promises).always(function() {\n                self._ready.resolve();\n            });\n        });\n    };\n\n    /**\n     * Called when the user switches outcome.\n     *\n     * @method _switchedOutcome\n     * @protected\n     */\n    RuleConfig.prototype._switchedOutcome = function() {\n        var self = this,\n            type = self._getOutcome();\n\n        if (type == Outcomes.NONE) {\n            // Reset to defaults.\n            self._find('[data-region=\"rule-type\"]').hide()\n                .find('[name=\"rule\"]').val(-1);\n            self._find('[data-region=\"rule-config\"]').empty().hide();\n            self._afterChange();\n            return;\n        }\n\n        self._find('[data-region=\"rule-type\"]').show();\n        self._find('[data-region=\"rule-config\"]').show();\n        self._afterChange();\n    };\n\n    /**\n     * Called when the user switches rule.\n     *\n     * @method _switchedRule\n     * @protected\n     */\n    RuleConfig.prototype._switchedRule = function() {\n        var self = this,\n            container = self._find('[data-region=\"rule-config\"]'),\n            rule = self._getRule();\n\n        if (!rule) {\n            container.empty().hide();\n            self._afterChange();\n            return;\n        }\n        rule.injectTemplate(container).then(function() {\n            container.show();\n            return;\n        }).always(function() {\n            self._afterChange();\n        }).catch(function() {\n            container.empty().hide();\n        });\n    };\n\n    /**\n     * Trigger an event.\n     *\n     * @param {String} type The type of event.\n     * @param {Object} data The data to pass to the listeners.\n     * @method _trigger\n     * @protected\n     */\n    RuleConfig.prototype._trigger = function(type, data) {\n        this._eventNode.trigger(type, [data]);\n    };\n\n    return /** @alias module:tool_lp/competencyruleconfig */ RuleConfig;\n\n});\n"],"file":"competencyruleconfig.min.js"}