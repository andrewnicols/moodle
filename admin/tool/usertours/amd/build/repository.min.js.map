{"version":3,"sources":["../src/repository.js"],"names":["resetTourState","tourid","methodname","args","context","moodleConfig","contextid","pageurl","window","location","href","markTourComplete","stepid","stepindex","fetchTour","markStepShown"],"mappings":"mRAOA,6EAQO,KAAMA,CAAAA,cAAc,CAAGC,MAAM,EAAI,eAAU,CAAC,CAC/CC,UAAU,CAAE,2BADmC,CAE/CC,IAAI,CAAE,CACFF,MADE,CAEFG,OAAO,CAAEC,gBAAaC,SAFpB,CAGFC,OAAO,CAAEC,MAAM,CAACC,QAAP,CAAgBC,IAHvB,CAFyC,CAAD,CAAV,EAOpC,CAPoC,CAAjC,C,uCAiBA,KAAMC,CAAAA,gBAAgB,CAAG,CAACC,MAAD,CAASX,MAAT,CAAiBY,SAAjB,GAA+B,eAAU,CAAC,CACtEX,UAAU,CAAE,8BAD0D,CAEtEC,IAAI,CAAE,CACFS,MADE,CAEFC,SAAS,CAAEA,SAFT,CAGFZ,MAHE,CAIFG,OAAO,CAAEC,gBAAaC,SAJpB,CAKFC,OAAO,CAAEC,MAAM,CAACC,QAAP,CAAgBC,IALvB,CAFgE,CAAD,CAAV,EAS3D,CAT2D,CAAxD,C,2CAiBA,KAAMI,CAAAA,SAAS,CAAGb,MAAM,EAAI,eAAU,CAAC,CAC1CC,UAAU,CAAE,qCAD8B,CAE1CC,IAAI,CAAE,CACFF,MADE,CAEFG,OAAO,CAAEC,gBAAaC,SAFpB,CAGFC,OAAO,CAAEC,MAAM,CAACC,QAAP,CAAgBC,IAHvB,CAFoC,CAAD,CAAV,EAO/B,CAP+B,CAA5B,C,6BAiBA,KAAMK,CAAAA,aAAa,CAAG,CAACH,MAAD,CAASX,MAAT,CAAiBY,SAAjB,GAA+B,eAAU,CAAC,CACnEX,UAAU,CAAE,2BADuD,CAEnEC,IAAI,CAAE,CACFF,MADE,CAEFW,MAFE,CAGFC,SAHE,CAIFT,OAAO,CAAEC,gBAAaC,SAJpB,CAKFC,OAAO,CAAEC,MAAM,CAACC,QAAP,CAAgBC,IALvB,CAF6D,CAAD,CAAV,EASxD,CATwD,CAArD,C","sourcesContent":["/**\n * Step management code.\n *\n * @module     tool_usertours/managesteps\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\n */\nimport {call as fetchMany} from 'core/ajax';\nimport moodleConfig from 'core/config';\n\n/**\n * Reset the tour state of the specified tour.\n *\n * @param {number} tourid\n * @return {Promise}\n */\nexport const resetTourState = tourid => fetchMany([{\n    methodname: 'tool_usertours_reset_tour',\n    args: {\n        tourid,\n        context: moodleConfig.contextid,\n        pageurl: window.location.href,\n    }\n}])[0];\n\n/**\n * Mark the specified tour as complete.\n *\n * @param {number} stepid\n * @param {number} tourid\n * @param {number} stepindex\n * @return {Promise}\n */\nexport const markTourComplete = (stepid, tourid, stepindex) => fetchMany([{\n    methodname: 'tool_usertours_complete_tour',\n    args: {\n        stepid,\n        stepindex: stepindex,\n        tourid,\n        context: moodleConfig.contextid,\n        pageurl: window.location.href,\n    }\n}])[0];\n\n/**\n * Fetch the specified tour.\n *\n * @param {number} tourid\n * @return {Promise}\n */\nexport const fetchTour = tourid => fetchMany([{\n    methodname: 'tool_usertours_fetch_and_start_tour',\n    args: {\n        tourid,\n        context: moodleConfig.contextid,\n        pageurl: window.location.href,\n    }\n}])[0];\n\n/**\n * Mark the specified step as having been shown.\n *\n * @param {number} stepid\n * @param {number} tourid\n * @param {number} stepindex\n * @return {Promise}\n */\nexport const markStepShown = (stepid, tourid, stepindex) => fetchMany([{\n    methodname: 'tool_usertours_step_shown',\n    args: {\n        tourid,\n        stepid,\n        stepindex,\n        context: moodleConfig.contextid,\n        pageurl: window.location.href,\n    }\n}])[0];\n"],"file":"repository.min.js"}