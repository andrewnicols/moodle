{"version":3,"file":"video-lazy.min.js","sources":["../src/video-lazy.js"],"sourcesContent":["/**\n * @license\n * Video.js 7.17.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojs = factory());\n}(this, (function () { 'use strict';\n\n  var version$5 = \"7.17.0\";\n\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n  var hooks_ = {};\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecyle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n\n  var hooks = function hooks(type, fn) {\n    hooks_[type] = hooks_[type] || [];\n\n    if (fn) {\n      hooks_[type] = hooks_[type].concat(fn);\n    }\n\n    return hooks_[type];\n  };\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hook = function hook(type, fn) {\n    hooks(type, fn);\n  };\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n\n\n  var removeHook = function removeHook(type, fn) {\n    var index = hooks(type).indexOf(fn);\n\n    if (index <= -1) {\n      return false;\n    }\n\n    hooks_[type] = hooks_[type].slice();\n    hooks_[type].splice(index, 1);\n    return true;\n  };\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hookOnce = function hookOnce(type, fn) {\n    hooks(type, [].concat(fn).map(function (original) {\n      var wrapper = function wrapper() {\n        removeHook(type, wrapper);\n        return original.apply(void 0, arguments);\n      };\n\n      return wrapper;\n    }));\n  };\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   * @private\n   */\n\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n  var FullscreenApi = {\n    prefixed: true\n  }; // browser API methods\n\n  var apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n  ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n  ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\n  var specApi = apiMap[0];\n  var browserApi; // determine the supported set of functions\n\n  for (var i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  } // map the browser API names to the spec API names\n\n\n  if (browserApi) {\n    for (var _i = 0; _i < browserApi.length; _i++) {\n      FullscreenApi[specApi[_i]] = browserApi[_i];\n    }\n\n    FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n  // This is the private tracking variable for the logging history.\n  var history = [];\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} type\n   *         The name of the console method to use.\n   *\n   * @param  {Array} args\n   *         The arguments to be passed to the matching console method.\n   */\n\n  var LogByTypeFactory = function LogByTypeFactory(name, log) {\n    return function (type, level, args) {\n      var lvl = log.levels[level];\n      var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n      if (type !== 'log') {\n        // Add the type to the front of the message when it's not \"log\".\n        args.unshift(type.toUpperCase() + ':');\n      } // Add console prefix after adding to history.\n\n\n      args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n      if (history) {\n        history.push([].concat(args)); // only store 1000 history entries\n\n        var splice = history.length - 1000;\n        history.splice(0, splice > 0 ? splice : 0);\n      } // If there's no console then don't try to output messages, but they will\n      // still be stored in history.\n\n\n      if (!window.console) {\n        return;\n      } // Was setting these once outside of this function, but containing them\n      // in the function makes it easier to test cases where console doesn't exist\n      // when the module is executed.\n\n\n      var fn = window.console[type];\n\n      if (!fn && type === 'debug') {\n        // Certain browsers don't have support for console.debug. For those, we\n        // should default to the closest comparable log.\n        fn = window.console.info || window.console.log;\n      } // Bail out if there's no console or if this type is not allowed by the\n      // current logging level.\n\n\n      if (!fn || !lvl || !lvlRegExp.test(type)) {\n        return;\n      }\n\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n  };\n\n  function createLogger$1(name) {\n    // This is the private tracking variable for logging level.\n    var level = 'info'; // the curried logByType bound to the specific log and history\n\n    var logByType;\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * Mixed[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {Mixed[]} args\n     *           One or more messages or objects that should be logged.\n     */\n\n    var log = function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      logByType('log', level, args);\n    }; // This is the logByType helper that the logging methods below use\n\n\n    logByType = LogByTypeFactory(name, log);\n    /**\n     * Create a new sublogger which chains the old name to the new name.\n     *\n     * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} name\n     *        The name to add call the new logger\n     * @return {Object}\n     */\n\n    log.createLogger = function (subname) {\n      return createLogger$1(name + ': ' + subname);\n    };\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n\n\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {string} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n\n    log.level = function (lvl) {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n        }\n\n        level = lvl;\n      }\n\n      return level;\n    };\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n\n\n    log.history = function () {\n      return history ? [].concat(history) : [];\n    };\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n\n\n    log.history.filter = function (fname) {\n      return (history || []).filter(function (historyItem) {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n      });\n    };\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n\n\n    log.history.clear = function () {\n      if (history) {\n        history.length = 0;\n      }\n    };\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n\n\n    log.history.disable = function () {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n\n\n    log.history.enable = function () {\n      if (history === null) {\n        history = [];\n      }\n    };\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as an error\n     */\n\n\n    log.error = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return logByType('error', level, args);\n    };\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n\n\n    log.warn = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return logByType('warn', level, args);\n    };\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n\n\n    log.debug = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return logByType('debug', level, args);\n    };\n\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  var log$1 = createLogger$1('VIDEOJS');\n  var createLogger = log$1.createLogger;\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var _extends_1 = createCommonjsModule(function (module) {\n    function _extends() {\n      module.exports = _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      return _extends.apply(this, arguments);\n    }\n\n    module.exports = _extends;\n  });\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {Mixed} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {Mixed}\n   *         The new accumulated value.\n   */\n  var toString$1 = Object.prototype.toString;\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n\n  var keys = function keys(object) {\n    return isObject$1(object) ? Object.keys(object) : [];\n  };\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n\n\n  function each(object, fn) {\n    keys(object).forEach(function (key) {\n      return fn(object[key], key);\n    });\n  }\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {Mixed} [initial = 0]\n   *        Starting value\n   *\n   * @return {Mixed}\n   *         The final accumulated value.\n   */\n\n  function reduce(object, fn, initial) {\n    if (initial === void 0) {\n      initial = 0;\n    }\n\n    return keys(object).reduce(function (accum, key) {\n      return fn(accum, object[key], key);\n    }, initial);\n  }\n  /**\n   * Object.assign-style object shallow merge/extend.\n   *\n   * @param  {Object} target\n   * @param  {Object} ...sources\n   * @return {Object}\n   */\n\n  function assign(target) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    if (Object.assign) {\n      return _extends_1.apply(void 0, [target].concat(sources));\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        target[key] = value;\n      });\n    });\n    return target;\n  }\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isObject$1(value) {\n    return !!value && typeof value === 'object';\n  }\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isPlain(value) {\n    return isObject$1(value) && toString$1.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @function\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyleValue;\n\n      try {\n        computedStyleValue = window.getComputedStyle(el);\n      } catch (e) {\n        return '';\n      }\n\n      return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n  var USER_AGENT = window.navigator && window.navigator.userAgent || '';\n  var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n  var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPOD = /iPod/i.test(USER_AGENT);\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {string|null}\n   */\n\n  var IOS_VERSION = function () {\n    var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n    if (match && match[1]) {\n      return match[1];\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANDROID = /Android/i.test(USER_AGENT);\n  /**\n   * The detected Android version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|string|null}\n   */\n\n  var ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n    if (!match) {\n      return null;\n    }\n\n    var major = match[1] && parseFloat(match[1]);\n    var minor = match[2] && parseFloat(match[2]);\n\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is a native Android browser.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_EDGE = /Edg/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Google Chrome.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n  /**\n   * The detected Google Chrome version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var CHROME_VERSION = function () {\n    var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n\n    return null;\n  }();\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var IE_VERSION = function () {\n    var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    var version = result && parseFloat(result[1]);\n\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n\n    return version;\n  }();\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  /**\n   * Whether or not this is a Windows machine.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\n  var IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\n  var browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    IS_IPOD: IS_IPOD,\n    IOS_VERSION: IOS_VERSION,\n    IS_ANDROID: IS_ANDROID,\n    ANDROID_VERSION: ANDROID_VERSION,\n    IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n    IS_FIREFOX: IS_FIREFOX,\n    IS_EDGE: IS_EDGE,\n    IS_CHROME: IS_CHROME,\n    CHROME_VERSION: CHROME_VERSION,\n    IE_VERSION: IE_VERSION,\n    IS_SAFARI: IS_SAFARI,\n    IS_WINDOWS: IS_WINDOWS,\n    TOUCH_ENABLED: TOUCH_ENABLED,\n    IS_IPAD: IS_IPAD,\n    IS_IPHONE: IS_IPHONE,\n    IS_IOS: IS_IOS,\n    IS_ANY_SAFARI: IS_ANY_SAFARI\n  });\n\n  /**\n   * @file dom.js\n   * @module dom\n   */\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n\n  function isNonBlankString(str) {\n    // we use str.trim as it will trim any whitespace characters\n    // from the front or back of non-whitespace characters. aka\n    // Any string that contains non-whitespace characters will\n    // still contain them after `trim` but whitespace only strings\n    // will have a length of 0, failing this check.\n    return typeof str === 'string' && Boolean(str.trim());\n  }\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n\n\n  function throwIfWhitespace(str) {\n    // str.indexOf instead of regex because str.indexOf is faster performance wise.\n    if (str.indexOf(' ') >= 0) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n  /**\n   * Produce a regular expression for matching a className within an elements className.\n   *\n   * @private\n   * @param  {string} className\n   *         The className to generate the RegExp for.\n   *\n   * @return {RegExp}\n   *         The RegExp that will check for a specific `className` in an elements\n   *         className.\n   */\n\n\n  function classRegExp(className) {\n    return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n  }\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n\n\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window.document;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {Mixed} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n\n  function isEl(value) {\n    return isObject$1(value) && value.nodeType === 1;\n  }\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window.parent !== window.self;\n    } catch (x) {\n      return true;\n    }\n  }\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n\n      var ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  function createEl(tagName, properties, attributes, content) {\n    if (tagName === void 0) {\n      tagName = 'div';\n    }\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      var val = properties[propName]; // See #2176\n      // We originally were accepting both properties and attributes in the\n      // same object, but that doesn't work so well.\n\n      if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n        log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n        el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n        // method for it.\n      } else if (propName === 'textContent') {\n        textContent(el, val);\n      } else if (el[propName] !== val || propName === 'tabIndex') {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n\n    if (content) {\n      appendContent(el, content);\n    }\n\n    return el;\n  }\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {Element} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n\n    return el;\n  }\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n\n    if (element.classList) {\n      return element.classList.contains(classToCheck);\n    }\n\n    return classRegExp(classToCheck).test(element.className);\n  }\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {string} classToAdd\n   *         Class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n\n  function addClass(element, classToAdd) {\n    if (element.classList) {\n      element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n      // in the case of classList not being supported.\n    } else if (!hasClass(element, classToAdd)) {\n      element.className = (element.className + ' ' + classToAdd).trim();\n    }\n\n    return element;\n  }\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {string} classToRemove\n   *         Class name to remove\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n\n  function removeClass(element, classToRemove) {\n    // Protect in case the player gets disposed\n    if (!element) {\n      log$1.warn(\"removeClass was called with an element that doesn't exist\");\n      return null;\n    }\n\n    if (element.classList) {\n      element.classList.remove(classToRemove);\n    } else {\n      throwIfWhitespace(classToRemove);\n      element.className = element.className.split(/\\s+/).filter(function (c) {\n        return c !== classToRemove;\n      }).join(' ');\n    }\n\n    return element;\n  }\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n\n  function toggleClass(element, classToToggle, predicate) {\n    // This CANNOT use `classList` internally because IE11 does not support the\n    // second parameter to the `classList.toggle()` method! Which is fine because\n    // `classList` will be used by the add/remove functions.\n    var has = hasClass(element, classToToggle);\n\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n\n    if (typeof predicate !== 'boolean') {\n      predicate = !has;\n    } // If the necessary class operation matches the current state of the\n    // element, no action is required.\n\n\n    if (predicate === has) {\n      return;\n    }\n\n    if (predicate) {\n      addClass(element, classToToggle);\n    } else {\n      removeClass(element, classToToggle);\n    }\n\n    return element;\n  }\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      var attrValue = attributes[attrName];\n\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n\n  function getAttributes(tag) {\n    var obj = {}; // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n\n    var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      var attrs = tag.attributes;\n\n      for (var i = attrs.length - 1; i >= 0; i--) {\n        var attrName = attrs[i].name;\n        var attrVal = attrs[i].value; // check for known booleans\n        // the matching element property will return a value for typeof\n\n        if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n\n        obj[attrName] = attrVal;\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n  /**\n   * Attempt to block the ability to select text.\n   */\n\n  function blockTextSelection() {\n    document.body.focus();\n\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n  /**\n   * Turn off text selection blocking.\n   */\n\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      var rect = el.getBoundingClientRect();\n      var result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n\n      return result;\n    }\n  }\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n\n  function findPosition(el) {\n    if (!el || el && !el.offsetParent) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    var width = el.offsetWidth;\n    var height = el.offsetHeight;\n    var left = 0;\n    var top = 0;\n\n    while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n      el = el.offsetParent;\n    }\n\n    return {\n      left: left,\n      top: top,\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n\n  function getPointerPosition(el, event) {\n    var translated = {\n      x: 0,\n      y: 0\n    };\n\n    if (IS_IOS) {\n      var item = el;\n\n      while (item && item.nodeName.toLowerCase() !== 'html') {\n        var transform = computedStyle(item, 'transform');\n\n        if (/^matrix/.test(transform)) {\n          var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n          translated.x += values[4];\n          translated.y += values[5];\n        } else if (/^matrix3d/.test(transform)) {\n          var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n          translated.x += _values[12];\n          translated.y += _values[13];\n        }\n\n        item = item.parentNode;\n      }\n    }\n\n    var position = {};\n    var boxTarget = findPosition(event.target);\n    var box = findPosition(el);\n    var boxW = box.width;\n    var boxH = box.height;\n    var offsetY = event.offsetY - (box.top - boxTarget.top);\n    var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n    if (event.changedTouches) {\n      offsetX = event.changedTouches[0].pageX - box.left;\n      offsetY = event.changedTouches[0].pageY + box.top;\n\n      if (IS_IOS) {\n        offsetX -= translated.x;\n        offsetY -= translated.y;\n      }\n    }\n\n    position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n    position.x = Math.max(0, Math.min(1, offsetX / boxW));\n    return position;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {Mixed} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n\n  function isTextNode(value) {\n    return isObject$1(value) && value.nodeType === 3;\n  }\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    return el;\n  }\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `TextNode` | The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    } // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n\n\n    return (Array.isArray(content) ? content : [content]).map(function (value) {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n\n      if (isEl(value) || isTextNode(value)) {\n        return value;\n      }\n\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(function (value) {\n      return value;\n    });\n  }\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(function (node) {\n      return el.appendChild(node);\n    });\n    return el;\n  }\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n      return true;\n    }\n\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n      return true;\n    } // `mouseup` event on a single left click has\n    // `button` and `buttons` equal to 0\n\n\n    if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n\n  var $ = createQuerier('querySelector');\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n\n  var $$ = createQuerier('querySelectorAll');\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  var _windowLoaded = false;\n  var videojs$1;\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n\n  var autoSetup = function autoSetup() {\n    if (videojs$1.options.autoSetup === false) {\n      return;\n    }\n\n    var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n    if (mediaEls && mediaEls.length > 0) {\n      for (var i = 0, e = mediaEls.length; i < e; i++) {\n        var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs$1(mediaEl);\n            }\n          } // If getAttribute isn't defined, we need to wait for the DOM.\n\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      } // No videos were found, so keep looping unless page is finished loading.\n\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n\n\n  function autoSetupTimeout(wait, vjs) {\n    // Protect against breakage in non-browser environments\n    if (!isReal()) {\n      return;\n    }\n\n    if (vjs) {\n      videojs$1 = vjs;\n    }\n\n    window.setTimeout(autoSetup, wait);\n  }\n  /**\n   * Used to set the internal tracking of window loaded state to true.\n   *\n   * @private\n   */\n\n\n  function setWindowLoaded() {\n    _windowLoaded = true;\n    window.removeEventListener('load', setWindowLoaded);\n  }\n\n  if (isReal()) {\n    if (document.readyState === 'complete') {\n      setWindowLoaded();\n    } else {\n      /**\n       * Listen for the load event on window, and set _windowLoaded to true.\n       *\n       * We use a standard event listener here to avoid incrementing the GUID\n       * before any players are created.\n       *\n       * @listens load\n       */\n      window.addEventListener('load', setWindowLoaded);\n    }\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n\n  /**\n   * Create a DOM syle element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  var createStyleElement = function createStyleElement(className) {\n    var style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n\n  var setTextContent = function setTextContent(el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n  // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n  //\n  // The initial GUID is 3 because some users have come to rely on the first\n  // default player ID ending up as `vjs_video_3`.\n  //\n  // See: https://github.com/videojs/video.js/pull/6216\n  var _initialGuid = 3;\n  /**\n   * Unique ID for an element or function\n   *\n   * @type {Number}\n   */\n\n  var _guid = _initialGuid;\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n  var FakeWeakMap;\n\n  if (!window.WeakMap) {\n    FakeWeakMap = /*#__PURE__*/function () {\n      function FakeWeakMap() {\n        this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n        this.data = {};\n      }\n\n      var _proto = FakeWeakMap.prototype;\n\n      _proto.set = function set(key, value) {\n        var access = key[this.vdata] || newGUID();\n\n        if (!key[this.vdata]) {\n          key[this.vdata] = access;\n        }\n\n        this.data[access] = value;\n        return this;\n      };\n\n      _proto.get = function get(key) {\n        var access = key[this.vdata]; // we have data, return it\n\n        if (access) {\n          return this.data[access];\n        } // we don't have data, return nothing.\n        // return undefined explicitly as that's the contract for this method\n\n\n        log$1('We have no data for this element', key);\n        return undefined;\n      };\n\n      _proto.has = function has(key) {\n        var access = key[this.vdata];\n        return access in this.data;\n      };\n\n      _proto[\"delete\"] = function _delete(key) {\n        var access = key[this.vdata];\n\n        if (access) {\n          delete this.data[access];\n          delete key[this.vdata];\n        }\n      };\n\n      return FakeWeakMap;\n    }();\n  }\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  var DomData = window.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n\n  function _cleanUpEvents(elem, type) {\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type]; // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n      // Remove the meta-handler from the element\n\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    } // Remove the events object if there are no types left\n\n\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    } // Finally remove the element data if there is no data left\n\n\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      DomData[\"delete\"](elem);\n    }\n  }\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} callback\n   *        Event listener.\n   */\n\n\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n\n\n  function fixEvent(event) {\n    if (event.fixed_) {\n      return event;\n    }\n\n    function returnTrue() {\n      return true;\n    }\n\n    function returnFalse() {\n      return false;\n    } // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n    if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n      var old = event || window.event;\n      event = {}; // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      } // The event occurred on this element\n\n\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      } // Handle which other element the event is related to\n\n\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      } // Stop the default browser action\n\n\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false; // Stop the event from bubbling\n\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = document.documentElement;\n        var body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      } // Handle key presses\n\n\n      event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    }\n\n    event.fixed_ = true; // Returns fixed-up instance\n\n    return event;\n  }\n  /**\n   * Whether passive event listeners are supported\n   */\n\n  var _supportsPassive;\n\n  var supportsPassive = function supportsPassive() {\n    if (typeof _supportsPassive !== 'boolean') {\n      _supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            _supportsPassive = true;\n          }\n        });\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n      } catch (e) {// disregard\n      }\n    }\n\n    return _supportsPassive;\n  };\n  /**\n   * Touch events Chrome expects to be passive\n   */\n\n\n  var passiveEvents = ['touchstart', 'touchmove'];\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        Event listener.\n   */\n\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n\n    if (!DomData.has(elem)) {\n      DomData.set(elem, {});\n    }\n\n    var data = DomData.get(elem); // We need a place to store all our handler data\n\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    data.handlers[type].push(fn);\n\n    if (!data.dispatcher) {\n      data.disabled = false;\n\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n\n        event = fixEvent(event);\n        var handlers = data.handlers[event.type];\n\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          var handlersCopy = handlers.slice(0);\n\n          for (var m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log$1.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        var options = false;\n\n        if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {EventTarget~EventListener} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n    if (!data.handlers) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    } // Utility function\n\n\n    var removeType = function removeType(el, t) {\n      data.handlers[t] = [];\n\n      _cleanUpEvents(el, t);\n    }; // Are we removing all bound events?\n\n\n    if (type === undefined) {\n      for (var t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n\n      return;\n    }\n\n    var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n    if (!handlers) {\n      return;\n    } // If no listener was provided, remove all listeners for type\n\n\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    } // We're only removing a single handler\n\n\n    if (fn.guid) {\n      for (var n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n\n    _cleanUpEvents(elem, type);\n  }\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n    var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n    // handler;\n    // If an event name was passed as a string, creates an event out of it\n\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    } // Normalizes the event properties.\n\n\n    event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n\n\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      if (!DomData.has(event.target)) {\n        DomData.set(event.target, {});\n      }\n\n      var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true; // Executes the default action.\n\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        } // Re-enables event dispatching.\n\n\n        targetData.disabled = false;\n      }\n    } // Inform the triggerer if the default was prevented by returning false\n\n\n    return !event.defaultPrevented;\n  }\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n  /**\n   * Trigger a listener only once and then turn if off for all\n   * configured events\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function any(elem, type, fn) {\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one,\n    any: any\n  });\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  var UPDATE_REFRESH_INTERVAL = 30;\n  /**\n   * Bind (a.k.a proxy or context). A simple method for changing the context of\n   * a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @function\n   * @param    {Mixed} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n\n  var bind = function bind(context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    } // Create the new function that changes the context\n\n\n    var bound = fn.bind(context); // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n\n  var throttle = function throttle(fn, wait) {\n    var last = window.performance.now();\n\n    var throttled = function throttled() {\n      var now = window.performance.now();\n\n      if (now - last >= wait) {\n        fn.apply(void 0, arguments);\n        last = now;\n      }\n    };\n\n    return throttled;\n  };\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n\n  var debounce = function debounce(func, wait, immediate, context) {\n    if (context === void 0) {\n      context = window;\n    }\n\n    var timeout;\n\n    var cancel = function cancel() {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n    /* eslint-disable consistent-this */\n\n\n    var debounced = function debounced() {\n      var self = this;\n      var args = arguments;\n\n      var _later = function later() {\n        timeout = null;\n        _later = null;\n\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(_later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  /**\n   * @file src/js/event-target.js\n   */\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n\n  var EventTarget$2 = function EventTarget() {};\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {Object} EventTarget~Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventTarget~EventListener\n   * @this {EventTarget}\n   *\n   * @param {EventTarget~Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @private\n   */\n\n\n  EventTarget$2.prototype.allowedEvents_ = {};\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  EventTarget$2.prototype.on = function (type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    on(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n\n\n  EventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n\n  EventTarget$2.prototype.off = function (type, fn) {\n    off(this, type, fn);\n  };\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n\n\n  EventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n\n  EventTarget$2.prototype.one = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    one(this, type, fn);\n    this.addEventListener = ael;\n  };\n\n  EventTarget$2.prototype.any = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    any(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n\n\n  EventTarget$2.prototype.trigger = function (event) {\n    var type = event.type || event; // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n\n    if (typeof event === 'string') {\n      event = {\n        type: type\n      };\n    }\n\n    event = fixEvent(event);\n\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n\n    trigger(this, event);\n  };\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n\n\n  EventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n  var EVENT_MAP;\n\n  EventTarget$2.prototype.queueTrigger = function (event) {\n    var _this = this;\n\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n\n    var type = event.type || event;\n    var map = EVENT_MAP.get(this);\n\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n\n    var oldTimeout = map.get(type);\n    map[\"delete\"](type);\n    window.clearTimeout(oldTimeout);\n    var timeout = window.setTimeout(function () {\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP[\"delete\"](_this);\n      }\n\n      _this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  };\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n\n  var objName = function objName(obj) {\n    if (typeof obj.name === 'function') {\n      return obj.name();\n    }\n\n    if (typeof obj.name === 'string') {\n      return obj.name;\n    }\n\n    if (obj.name_) {\n      return obj.name_;\n    }\n\n    if (obj.constructor && obj.constructor.name) {\n      return obj.constructor.name;\n    }\n\n    return typeof obj;\n  };\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n\n\n  var isEvented = function isEvented(object) {\n    return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n      return typeof object[k] === 'function';\n    });\n  };\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n\n\n  var addEventedCallback = function addEventedCallback(target, callback) {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n\n      target.eventedCallbacks.push(callback);\n    }\n  };\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n\n\n  var isValidEventType = function isValidEventType(type) {\n    return (// The regex here verifies that the `type` contains at least one non-\n      // whitespace character.\n      typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n    );\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateTarget = function validateTarget(target, obj, fnName) {\n    if (!target || !target.nodeName && !isEvented(target)) {\n      throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   *\n   * @param  {Object} obj\n  *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateEventType = function validateEventType(type, obj, fnName) {\n    if (!isValidEventType(type)) {\n      throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateListener = function validateListener(listener, obj, fnName) {\n    if (typeof listener !== 'function') {\n      throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n    }\n  };\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n\n\n  var normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    var target;\n    var type;\n    var listener;\n\n    if (isTargetingSelf) {\n      target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n\n      if (args.length >= 3) {\n        args.shift();\n      }\n\n      type = args[0];\n      listener = args[1];\n    } else {\n      target = args[0];\n      type = args[1];\n      listener = args[2];\n    }\n\n    validateTarget(target, self, fnName);\n    validateEventType(type, self, fnName);\n    validateListener(listener, self, fnName);\n    listener = bind(self, listener);\n    return {\n      isTargetingSelf: isTargetingSelf,\n      target: target,\n      type: type,\n      listener: listener\n    };\n  };\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n\n\n  var listen = function listen(target, method, type, listener) {\n    validateTarget(target, target, method);\n\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n\n\n  var EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on: function on() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n          isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n          target = _normalizeListenArgs.target,\n          type = _normalizeListenArgs.type,\n          listener = _normalizeListenArgs.listener;\n\n      listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        var removeListenerOnDispose = function removeListenerOnDispose() {\n          return _this.off(target, type, listener);\n        }; // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n\n\n        removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n\n        var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n          return _this.off('dispose', removeListenerOnDispose);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will be called once per event and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one: function one() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n          isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n          target = _normalizeListenArgs2.target,\n          type = _normalizeListenArgs2.type,\n          listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener); // Targeting another evented object.\n      } else {\n        // TODO: This wrapper is incorrect! It should only\n        //       remove the wrapper for the event type that called it.\n        //       Instead all listners are removed on the first trigger!\n        //       see https://github.com/videojs/video.js/issues/5962\n        var wrapper = function wrapper() {\n          _this2.off(target, type, wrapper);\n\n          for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            largs[_key3] = arguments[_key3];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once for the first event that is triggered\n     * then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    any: function any() {\n      var _this3 = this;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n          isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n          target = _normalizeListenArgs3.target,\n          type = _normalizeListenArgs3.type,\n          listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'any', type, listener); // Targeting another evented object.\n      } else {\n        var wrapper = function wrapper() {\n          _this3.off(target, type, wrapper);\n\n          for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            largs[_key5] = arguments[_key5];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'any', type, wrapper);\n      }\n    },\n\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off: function off$1(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n      } else {\n        var target = targetOrType;\n        var type = typeOrListener; // Fail fast and in a meaningful way!\n\n        validateTarget(target, this, 'off');\n        validateEventType(type, this, 'off');\n        validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n        listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n\n        this.off('dispose', listener);\n\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger: function trigger$1(event, hash) {\n      validateTarget(this.eventBusEl_, this, 'trigger');\n      var type = event && typeof event !== 'string' ? event.type : event;\n\n      if (!isValidEventType(type)) {\n        var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n        if (event) {\n          (this.log || log$1).error(error);\n        } else {\n          throw new Error(error);\n        }\n      }\n\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n\n  function evented(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n      }\n\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n\n    assign(target, EventedMixin);\n\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(function (callback) {\n        callback();\n      });\n    } // When any evented object is disposed, it removes all its listeners.\n\n\n    target.on('dispose', function () {\n      target.off();\n      [target, target.el_, target.eventBusEl_].forEach(function (val) {\n        if (val && DomData.has(val)) {\n          DomData[\"delete\"](val);\n        }\n      });\n      window.setTimeout(function () {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n\n  var StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState: function setState(stateUpdates) {\n      var _this = this;\n\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n\n      var changes;\n      each(stateUpdates, function (value, key) {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (_this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: _this.state[key],\n            to: value\n          };\n        }\n\n        _this.state[key] = value;\n      }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes: changes,\n          type: 'statechanged'\n        });\n      }\n\n      return changes;\n    }\n  };\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n\n  function stateful(target, defaultState) {\n    assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n\n    target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n\n    return target;\n  }\n\n  /**\n   * @file string-cases.js\n   * @module to-lower-case\n   */\n\n  /**\n   * Lowercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be lowercased\n   *\n   * @return {string}\n   *         The string with a lowercased first letter\n   */\n  var toLowerCase = function toLowerCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toLowerCase();\n    });\n  };\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n\n  var toTitleCase$1 = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n\n  var titleCaseEquals = function titleCaseEquals(str1, str2) {\n    return toTitleCase$1(str1) === toTitleCase$1(str2);\n  };\n\n  /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @static\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n\n  function mergeOptions$3() {\n    var result = {};\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n\n        result[key] = mergeOptions$3(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  var MapSham = /*#__PURE__*/function () {\n    function MapSham() {\n      this.map_ = {};\n    }\n\n    var _proto = MapSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.map_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.map_[key];\n      return has;\n    };\n\n    _proto.set = function set(key, value) {\n      this.map_[key] = value;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.map_) {\n        callback.call(thisArg, this.map_[key], key, this);\n      }\n    };\n\n    return MapSham;\n  }();\n\n  var Map$1 = window.Map ? window.Map : MapSham;\n\n  var SetSham = /*#__PURE__*/function () {\n    function SetSham() {\n      this.set_ = {};\n    }\n\n    var _proto = SetSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.set_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.set_[key];\n      return has;\n    };\n\n    _proto.add = function add(key) {\n      this.set_[key] = 1;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.set_) {\n        callback.call(thisArg, key, key, this);\n      }\n    };\n\n    return SetSham;\n  }();\n\n  var Set = window.Set ? window.Set : SetSham;\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n\n  var Component$1 = /*#__PURE__*/function () {\n    /**\n     * A callback that is called when a component is ready. Does not have any\n     * paramters and any callback value will be ignored.\n     *\n     * @callback Component~ReadyCallback\n     * @this Component\n     */\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to intialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    function Component(player, options, ready) {\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      }\n\n      this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n      this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n      this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n      options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n      this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        var id = player && player.id && player.id() || 'no_player';\n        this.id_ = id + \"_component_\" + newGUID();\n      }\n\n      this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      } // if evented is anything except false, we want to mixin in evented\n\n\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n        this.handleLanguagechange = this.handleLanguagechange.bind(this);\n        this.on(this.player_, 'languagechange', this.handleLanguagechange);\n      }\n\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {};\n      this.setTimeoutIds_ = new Set();\n      this.setIntervalIds_ = new Set();\n      this.rafIds_ = new Set();\n      this.namedRafs_ = new Map$1();\n      this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n      if (options.initChildren !== false) {\n        this.initChildren();\n      } // Don't want to trigger ready here or it will go before init is actually\n      // finished for all children that run this constructor\n\n\n      this.ready(ready);\n\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.dispose = function dispose() {\n      // Bail out if the component has already been disposed.\n      if (this.isDisposed_) {\n        return;\n      }\n\n      if (this.readyQueue_) {\n        this.readyQueue_.length = 0;\n      }\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the dispose event does not\n       *           bubble up\n       */\n\n\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      });\n      this.isDisposed_ = true; // Dispose all children.\n\n      if (this.children_) {\n        for (var i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      } // Delete child references\n\n\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n\n        this.el_ = null;\n      } // remove reference to the player after disposing of the element\n\n\n      this.player_ = null;\n    }\n    /**\n     * Determine whether or not this component has been disposed.\n     *\n     * @return {boolean}\n     *         If the component has been disposed, will be `true`. Otherwise, `false`.\n     */\n    ;\n\n    _proto.isDisposed = function isDisposed() {\n      return Boolean(this.isDisposed_);\n    }\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    ;\n\n    _proto.player = function player() {\n      return this.player_;\n    }\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:mergeOptions}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     */\n    ;\n\n    _proto.options = function options(obj) {\n      if (!obj) {\n        return this.options_;\n      }\n\n      this.options_ = mergeOptions$3(this.options_, obj);\n      return this.options_;\n    }\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    ;\n\n    _proto.el = function el() {\n      return this.el_;\n    }\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    ;\n\n    _proto.localize = function localize(string, tokens, defaultValue) {\n      if (defaultValue === void 0) {\n        defaultValue = string;\n      }\n\n      var code = this.player_.language && this.player_.language();\n      var languages = this.player_.languages && this.player_.languages();\n      var language = languages && languages[code];\n      var primaryCode = code && code.split('-')[0];\n      var primaryLang = languages && languages[primaryCode];\n      var localizedString = defaultValue;\n\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          var value = tokens[index - 1];\n          var ret = value;\n\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n\n          return ret;\n        });\n      }\n\n      return localizedString;\n    }\n    /**\n     * Handles language change for the player in components. Should be overriden by sub-components.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {}\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    ;\n\n    _proto.contentEl = function contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    ;\n\n    _proto.id = function id() {\n      return this.id_;\n    }\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    ;\n\n    _proto.name = function name() {\n      return this.name_;\n    }\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    ;\n\n    _proto.children = function children() {\n      return this.children_;\n    }\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    ;\n\n    _proto.getChildById = function getChildById(id) {\n      return this.childIndex_[id];\n    }\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    ;\n\n    _proto.getChild = function getChild(name) {\n      if (!name) {\n        return;\n      }\n\n      return this.childNameIndex_[name];\n    }\n    /**\n     * Returns the descendant `Component` following the givent\n     * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n     * try to get 'foo' on the current component, 'bar' on the 'foo'\n     * component and 'baz' on the 'bar' component and return undefined\n     * if any of those don't exist.\n     *\n     * @param {...string[]|...string} names\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The descendant `Component` following the given descendant\n     *         `names` or undefined.\n     */\n    ;\n\n    _proto.getDescendant = function getDescendant() {\n      for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n        names[_key] = arguments[_key];\n      }\n\n      // flatten array argument into the main array\n      names = names.reduce(function (acc, n) {\n        return acc.concat(n);\n      }, []);\n      var currentChild = this;\n\n      for (var i = 0; i < names.length; i++) {\n        currentChild = currentChild.getChild(names[i]);\n\n        if (!currentChild || !currentChild.getChild) {\n          return;\n        }\n      }\n\n      return currentChild;\n    }\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options, index) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (index === void 0) {\n        index = this.children_.length;\n      }\n\n      var component;\n      var componentName; // If child is a string, create component with options\n\n      if (typeof child === 'string') {\n        componentName = toTitleCase$1(child);\n        var componentClassName = options.componentClass || componentName; // Set name through options\n\n        options.name = componentName; // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n\n        var ComponentClass = Component.getComponent(componentClassName);\n\n        if (!ComponentClass) {\n          throw new Error(\"Component \" + componentClassName + \" does not exist\");\n        } // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n\n\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n\n        component = new ComponentClass(this.player_ || this, options); // child is a component instance\n      } else {\n        component = child;\n      }\n\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      } // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n\n\n      componentName = componentName || component.name && toTitleCase$1(component.name());\n\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n        this.childNameIndex_[toLowerCase(componentName)] = component;\n      } // Add the UI object's element to the container div (box)\n      // Having an element is not required\n\n\n      if (typeof component.el === 'function' && component.el()) {\n        // If inserting before a component, insert before that component's element\n        var refNode = null;\n\n        if (this.children_[index + 1]) {\n          // Most children are components, but the video tech is an HTML element\n          if (this.children_[index + 1].el_) {\n            refNode = this.children_[index + 1].el_;\n          } else if (isEl(this.children_[index + 1])) {\n            refNode = this.children_[index + 1];\n          }\n        }\n\n        this.contentEl().insertBefore(component.el(), refNode);\n      } // Return so it can stored on parent object if desired.\n\n\n      return component;\n    }\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      if (!component || !this.children_) {\n        return;\n      }\n\n      var childFound = false;\n\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!childFound) {\n        return;\n      }\n\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[toTitleCase$1(component.name())] = null;\n      this.childNameIndex_[toLowerCase(component.name())] = null;\n      var compEl = component.el();\n\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    ;\n\n    _proto.initChildren = function initChildren() {\n      var _this = this;\n\n      var children = this.options_.children;\n\n      if (children) {\n        // `this` is `parent`\n        var parentOptions = this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts; // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          } // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n\n\n          if (opts === false) {\n            return;\n          } // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n\n\n          if (opts === true) {\n            opts = {};\n          } // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n\n\n          opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n\n          var newChild = _this.addChild(name, opts);\n\n          if (newChild) {\n            _this[name] = newChild;\n          }\n        }; // Allow for an array of children details to passed in the options\n\n\n        var workingChildren;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name;\n          var opts;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return {\n            name: name,\n            opts: opts\n          };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n    /**\n     * Builds the default DOM class name. Should be overriden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @return {Component}\n     *         Returns itself; method can be chained.\n     */\n    ;\n\n    _proto.ready = function ready(fn, sync) {\n      if (sync === void 0) {\n        sync = false;\n      }\n\n      if (!fn) {\n        return;\n      }\n\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    ;\n\n    _proto.triggerReady = function triggerReady() {\n      this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n      this.setTimeout(function () {\n        var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n        this.readyQueue_ = [];\n\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        } // Allow for using event listeners also\n\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('ready');\n      }, 1);\n    }\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$ = function $$1(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$$ = function $$$1(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    ;\n\n    _proto.hasClass = function hasClass$1(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {string} classToAdd\n     *        CSS class name to add\n     */\n    ;\n\n    _proto.addClass = function addClass$1(classToAdd) {\n      addClass(this.el_, classToAdd);\n    }\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {string} classToRemove\n     *        CSS class name to remove\n     */\n    ;\n\n    _proto.removeClass = function removeClass$1(classToRemove) {\n      removeClass(this.el_, classToRemove);\n    }\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    ;\n\n    _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    ;\n\n    _proto.show = function show() {\n      this.removeClass('vjs-hidden');\n    }\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    ;\n\n    _proto.hide = function hide() {\n      this.addClass('vjs-hidden');\n    }\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.lockShowing = function lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unlockShowing = function unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attibute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    ;\n\n    _proto.getAttribute = function getAttribute$1(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    ;\n\n    _proto.setAttribute = function setAttribute$1(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    ;\n\n    _proto.removeAttribute = function removeAttribute$1(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *           postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.width = function width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *         postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.height = function height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    ;\n\n    _proto.dimensions = function dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number}\n     *         The dimension when getting or 0 if unset\n     */\n    ;\n\n    _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        } // Check if using css width/height (% or px) and adjust\n\n\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {EventTarget~Event}\n           */\n          this.trigger('componentresize');\n        }\n\n        return;\n      } // Not setting a value, so getting it\n      // Make sure element exists\n\n\n      if (!this.el_) {\n        return 0;\n      } // Get dimension value from style\n\n\n      var val = this.el_.style[widthOrHeight];\n      var pxIndex = val.indexOf('px');\n\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      } // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n\n\n      return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n    }\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    ;\n\n    _proto.currentDimension = function currentDimension(widthOrHeight) {\n      var computedWidthOrHeight = 0;\n\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n\n      computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n\n      if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n        var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n        computedWidthOrHeight = this.el_[rule];\n      }\n\n      return computedWidthOrHeight;\n    }\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    ;\n\n    _proto.currentDimensions = function currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    ;\n\n    _proto.currentWidth = function currentWidth() {\n      return this.currentDimension('width');\n    }\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    ;\n\n    _proto.currentHeight = function currentHeight() {\n      return this.currentDimension('height');\n    }\n    /**\n     * Set the focus to this component\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.el_.focus();\n    }\n    /**\n     * Remove the focus from this component\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.el_.blur();\n    }\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser.\n        event.stopPropagation();\n        this.player_.handleKeyDown(event);\n      }\n    }\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @private\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    ;\n\n    _proto.emitTapEvents = function emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      var touchStart = 0;\n      var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n\n      var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n      var touchTimeThreshold = 200;\n      var couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n          touchStart = window.performance.now(); // Reset couldBeTap tracking\n\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          var xdiff = event.touches[0].pageX - firstTouch.pageX;\n          var ydiff = event.touches[0].pageY - firstTouch.pageY;\n          var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n\n      var noTap = function noTap() {\n        couldBeTap = false;\n      }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n\n      this.on('touchend', function (event) {\n        firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          var touchTime = window.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('tap'); // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    ;\n\n    _proto.enableTouchActivity = function enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      } // listener for reporting that the user is active\n\n\n      var report = bind(this.player(), this.player().reportUserActivity);\n      var touchHolding;\n      this.on('touchstart', function () {\n        report(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n        touchHolding = this.setInterval(report, 250);\n      });\n\n      var touchEnd = function touchEnd(event) {\n        report(); // stop the interval that maintains activity if the touch is holding\n\n        this.clearInterval(touchHolding);\n      };\n\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    ;\n\n    _proto.setTimeout = function setTimeout(fn, timeout) {\n      var _this2 = this;\n\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId;\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      timeoutId = window.setTimeout(function () {\n        if (_this2.setTimeoutIds_.has(timeoutId)) {\n          _this2.setTimeoutIds_[\"delete\"](timeoutId);\n        }\n\n        fn();\n      }, timeout);\n      this.setTimeoutIds_.add(timeoutId);\n      return timeoutId;\n    }\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    ;\n\n    _proto.clearTimeout = function clearTimeout(timeoutId) {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_[\"delete\"](timeoutId);\n        window.clearTimeout(timeoutId);\n      }\n\n      return timeoutId;\n    }\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    ;\n\n    _proto.setInterval = function setInterval(fn, interval) {\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      var intervalId = window.setInterval(fn, interval);\n      this.setIntervalIds_.add(intervalId);\n      return intervalId;\n    }\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    ;\n\n    _proto.clearInterval = function clearInterval(intervalId) {\n      if (this.setIntervalIds_.has(intervalId)) {\n        this.setIntervalIds_[\"delete\"](intervalId);\n        window.clearInterval(intervalId);\n      }\n\n      return intervalId;\n    }\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    ;\n\n    _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n      var _this3 = this;\n\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.setTimeout(fn, 1000 / 60);\n      }\n\n      this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n\n      var id;\n      fn = bind(this, fn);\n      id = window.requestAnimationFrame(function () {\n        if (_this3.rafIds_.has(id)) {\n          _this3.rafIds_[\"delete\"](id);\n        }\n\n        fn();\n      });\n      this.rafIds_.add(id);\n      return id;\n    }\n    /**\n     * Request an animation frame, but only one named animation\n     * frame will be queued. Another will never be added until\n     * the previous one finishes.\n     *\n     * @param {string} name\n     *        The name to give this requestAnimationFrame\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     */\n    ;\n\n    _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n      var _this4 = this;\n\n      if (this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.clearTimersOnDispose_();\n      fn = bind(this, fn);\n      var id = this.requestAnimationFrame(function () {\n        fn();\n\n        if (_this4.namedRafs_.has(name)) {\n          _this4.namedRafs_[\"delete\"](name);\n        }\n      });\n      this.namedRafs_.set(name, id);\n      return name;\n    }\n    /**\n     * Cancels a current named animation frame if it exists.\n     *\n     * @param {string} name\n     *        The name of the requestAnimationFrame to cancel.\n     */\n    ;\n\n    _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n      if (!this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.cancelAnimationFrame(this.namedRafs_.get(name));\n      this.namedRafs_[\"delete\"](name);\n    }\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    ;\n\n    _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.clearTimeout(id);\n      }\n\n      if (this.rafIds_.has(id)) {\n        this.rafIds_[\"delete\"](id);\n        window.cancelAnimationFrame(id);\n      }\n\n      return id;\n    }\n    /**\n     * A function to setup `requestAnimationFrame`, `setTimeout`,\n     * and `setInterval`, clearing on dispose.\n     *\n     * > Previously each timer added and removed dispose listeners on it's own.\n     * For better performance it was decided to batch them all, and use `Set`s\n     * to track outstanding timer ids.\n     *\n     * @private\n     */\n    ;\n\n    _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n      var _this5 = this;\n\n      if (this.clearingTimersOnDispose_) {\n        return;\n      }\n\n      this.clearingTimersOnDispose_ = true;\n      this.one('dispose', function () {\n        [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n          var idName = _ref[0],\n              cancelName = _ref[1];\n\n          // for a `Set` key will actually be the value again\n          // so forEach((val, val) =>` but for maps we want to use\n          // the key.\n          _this5[idName].forEach(function (val, key) {\n            return _this5[cancelName](key);\n          });\n        });\n        _this5.clearingTimersOnDispose_ = false;\n      });\n    }\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    ;\n\n    Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n      }\n\n      var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n      var isTech = Tech && Tech.isTech(ComponentToRegister);\n      var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n      if (isTech || !isComp) {\n        var reason;\n\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n\n        throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n      }\n\n      name = toTitleCase$1(name);\n\n      if (!Component.components_) {\n        Component.components_ = {};\n      }\n\n      var Player = Component.getComponent('Player');\n\n      if (name === 'Player' && Player && Player.players) {\n        var players = Player.players;\n        var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n\n        if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n          return players[pname];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n\n      Component.components_[name] = ComponentToRegister;\n      Component.components_[toLowerCase(name)] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {Component}\n     *         The `Component` that got registered under the given name.\n     */\n    ;\n\n    Component.getComponent = function getComponent(name) {\n      if (!name || !Component.components_) {\n        return;\n      }\n\n      return Component.components_[name];\n    };\n\n    return Component;\n  }();\n  /**\n   * Whether or not this component supports `requestAnimationFrame`.\n   *\n   * This is exposed primarily for testing purposes.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n\n  Component$1.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n  Component$1.registerComponent('Component', Component$1);\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  var assertThisInitialized = _assertThisInitialized;\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  var inheritsLoose = _inheritsLoose;\n\n  /**\n   * @file time-ranges.js\n   * @module time-ranges\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n    }\n  }\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n\n\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   */\n\n\n  function createTimeRangesObj(ranges) {\n    var timeRangesObj;\n\n    if (ranges === undefined || ranges.length === 0) {\n      timeRangesObj = {\n        length: 0,\n        start: function start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end: function end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    } else {\n      timeRangesObj = {\n        length: ranges.length,\n        start: getRange.bind(null, 'start', 0, ranges),\n        end: getRange.bind(null, 'end', 1, ranges)\n      };\n    }\n\n    if (window.Symbol && window.Symbol.iterator) {\n      timeRangesObj[window.Symbol.iterator] = function () {\n        return (ranges || []).values();\n      };\n    }\n\n    return timeRangesObj;\n  }\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   */\n\n\n  function createTimeRanges(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRange` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n\n  function bufferedPercent(buffered, duration) {\n    var bufferedDuration = 0;\n    var start;\n    var end;\n\n    if (!duration) {\n      return 0;\n    }\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    for (var i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      bufferedDuration += end - start;\n    }\n\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file media-error.js\n   */\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject$1(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n\n      assign(this, value);\n    }\n\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n\n\n  MediaError.prototype.code = 0;\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n\n  MediaError.prototype.message = '';\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n\n  MediaError.prototype.status = null;\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  }; // Add types as properties on MediaError\n  // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  for (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n    MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n    MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n  } // jsdocs for instance/static members added above\n\n  var tuple = SafeParseTuple;\n\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, function (e) {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  var trackToJson_ = function trackToJson_(track) {\n    var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n\n\n  var textTracksToJson = function textTracksToJson(tech) {\n    var trackEls = tech.$$('track');\n    var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n      return t.track;\n    });\n    var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      var json = trackToJson_(trackEl.track);\n\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n\n\n  var jsonToTextTracks = function jsonToTextTracks(json, tech) {\n    json.forEach(function (track) {\n      var addedTrack = tech.addRemoteTextTrack(track).track;\n\n      if (!track.src && track.cues) {\n        track.cues.forEach(function (cue) {\n          return addedTrack.addCue(cue);\n        });\n      }\n    });\n    return tech.textTracks();\n  };\n\n  var textTrackConverter = {\n    textTracksToJson: textTracksToJson,\n    jsonToTextTracks: jsonToTextTracks,\n    trackToJson_: trackToJson_\n  };\n\n  var keycode = createCommonjsModule(function (module, exports) {\n    // Source: http://jsfiddle.net/vWx8V/\n    // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n    /**\n     * Conenience method returns corresponding value for given keyName or keyCode.\n     *\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Mixed}\n     * @api public\n     */\n    function keyCode(searchInput) {\n      // Keyboard Events\n      if (searchInput && 'object' === typeof searchInput) {\n        var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n        if (hasKeyCode) searchInput = hasKeyCode;\n      } // Numbers\n\n\n      if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n      var search = String(searchInput); // check codes\n\n      var foundNamedKey = codes[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // check aliases\n\n      var foundNamedKey = aliases[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // weird character?\n\n      if (search.length === 1) return search.charCodeAt(0);\n      return undefined;\n    }\n    /**\n     * Compares a keyboard event with a given keyCode or keyName.\n     *\n     * @param {Event} event Keyboard event that should be tested\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Boolean}\n     * @api public\n     */\n\n\n    keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n      if (event && 'object' === typeof event) {\n        var keyCode = event.which || event.keyCode || event.charCode;\n\n        if (keyCode === null || keyCode === undefined) {\n          return false;\n        }\n\n        if (typeof nameOrCode === 'string') {\n          // check codes\n          var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          } // check aliases\n\n\n          var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n        } else if (typeof nameOrCode === 'number') {\n          return nameOrCode === keyCode;\n        }\n\n        return false;\n      }\n    };\n\n    exports = module.exports = keyCode;\n    /**\n     * Get by name\n     *\n     *   exports.code['enter'] // => 13\n     */\n\n    var codes = exports.code = exports.codes = {\n      'backspace': 8,\n      'tab': 9,\n      'enter': 13,\n      'shift': 16,\n      'ctrl': 17,\n      'alt': 18,\n      'pause/break': 19,\n      'caps lock': 20,\n      'esc': 27,\n      'space': 32,\n      'page up': 33,\n      'page down': 34,\n      'end': 35,\n      'home': 36,\n      'left': 37,\n      'up': 38,\n      'right': 39,\n      'down': 40,\n      'insert': 45,\n      'delete': 46,\n      'command': 91,\n      'left command': 91,\n      'right command': 93,\n      'numpad *': 106,\n      'numpad +': 107,\n      'numpad -': 109,\n      'numpad .': 110,\n      'numpad /': 111,\n      'num lock': 144,\n      'scroll lock': 145,\n      'my computer': 182,\n      'my calculator': 183,\n      ';': 186,\n      '=': 187,\n      ',': 188,\n      '-': 189,\n      '.': 190,\n      '/': 191,\n      '`': 192,\n      '[': 219,\n      '\\\\': 220,\n      ']': 221,\n      \"'\": 222\n    }; // Helper aliases\n\n    var aliases = exports.aliases = {\n      'windows': 91,\n      '⇧': 16,\n      '⌥': 18,\n      '⌃': 17,\n      '⌘': 91,\n      'ctl': 17,\n      'control': 17,\n      'option': 18,\n      'pause': 19,\n      'break': 19,\n      'caps': 20,\n      'return': 13,\n      'escape': 27,\n      'spc': 32,\n      'spacebar': 32,\n      'pgup': 33,\n      'pgdn': 34,\n      'ins': 45,\n      'del': 46,\n      'cmd': 91\n    };\n    /*!\n     * Programatically add the following\n     */\n    // lower case chars\n\n    for (i = 97; i < 123; i++) {\n      codes[String.fromCharCode(i)] = i - 32;\n    } // numbers\n\n\n    for (var i = 48; i < 58; i++) {\n      codes[i - 48] = i;\n    } // function keys\n\n\n    for (i = 1; i < 13; i++) {\n      codes['f' + i] = i + 111;\n    } // numpad keys\n\n\n    for (i = 0; i < 10; i++) {\n      codes['numpad ' + i] = i + 96;\n    }\n    /**\n     * Get by code\n     *\n     *   exports.name[13] // => 'Enter'\n     */\n\n\n    var names = exports.names = exports.title = {}; // title for backward compat\n    // Create reverse mapping\n\n    for (i in codes) {\n      names[codes[i]] = i;\n    } // Add aliases\n\n\n    for (var alias in aliases) {\n      codes[alias] = aliases[alias];\n    }\n  });\n  keycode.code;\n  keycode.codes;\n  keycode.aliases;\n  keycode.names;\n  keycode.title;\n\n  var MODAL_CLASS_NAME = 'vjs-modal-dialog';\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n\n  var ModalDialog = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ModalDialog, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Mixed} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    function ModalDialog(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.close_ = function (e) {\n        return _this.close(e);\n      };\n\n      _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n      _this.closeable(!_this.options_.uncloseable);\n\n      _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n\n\n      _this.contentEl_ = createEl('div', {\n        className: MODAL_CLASS_NAME + \"-content\"\n      }, {\n        role: 'document'\n      });\n      _this.descEl_ = createEl('p', {\n        className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n        id: _this.el().getAttribute('aria-describedby')\n      });\n      textContent(_this.descEl_, _this.description());\n\n      _this.el_.appendChild(_this.descEl_);\n\n      _this.el_.appendChild(_this.contentEl_);\n\n      return _this;\n    }\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n\n\n    var _proto = ModalDialog.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': this.id() + \"_description\",\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog'\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    ;\n\n    _proto.label = function label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    ;\n\n    _proto.description = function description() {\n      var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n\n      return desc;\n    }\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    ;\n\n    _proto.open = function open() {\n      if (!this.opened_) {\n        var player = this.player();\n        /**\n          * Fired just before a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#beforemodalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('beforemodalopen');\n        this.opened_ = true; // Fill content if the modal has never opened before and\n        // never been filled.\n\n        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n          this.fill();\n        } // If the player was playing, pause it and take note of its previously\n        // playing state.\n\n\n        this.wasPlaying_ = !player.paused();\n\n        if (this.options_.pauseOnOpen && this.wasPlaying_) {\n          player.pause();\n        }\n\n        this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n        this.hadControls_ = player.controls();\n        player.controls(false);\n        this.show();\n        this.conditionalFocus_();\n        this.el().setAttribute('aria-hidden', 'false');\n        /**\n          * Fired just after a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#modalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('modalopen');\n        this.hasBeenOpened_ = true;\n      }\n    }\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    ;\n\n    _proto.opened = function opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n\n      return this.opened_;\n    }\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    ;\n\n    _proto.close = function close() {\n      if (!this.opened_) {\n        return;\n      }\n\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n\n      this.off('keydown', this.handleKeyDown_);\n\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalclose');\n      this.conditionalBlur_();\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    ;\n\n    _proto.closeable = function closeable(value) {\n      if (typeof value === 'boolean') {\n        var closeable = this.closeable_ = !!value;\n        var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          var temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close_);\n        } // If this is being made uncloseable and has a close button, remove it.\n\n\n        if (!closeable && close) {\n          this.off(close, 'close', this.close_);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n\n      return this.closeable_;\n    }\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    ;\n\n    _proto.fill = function fill() {\n      this.fillWith(this.content());\n    }\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {Mixed} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    ;\n\n    _proto.fillWith = function fillWith(content) {\n      var contentEl = this.contentEl();\n      var parentEl = contentEl.parentNode;\n      var nextSiblingEl = contentEl.nextSibling;\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      } // make sure that the close button is last in the dialog DOM\n\n\n      var closeButton = this.getChild('closeButton');\n\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n    }\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    ;\n\n    _proto.empty = function empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('modalempty');\n    }\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {Mixed} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {Mixed}\n     *         The current content of the modal dialog\n     */\n    ;\n\n    _proto.content = function content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n\n      return this.content_;\n    }\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalFocus_ = function conditionalFocus_() {\n      var activeEl = document.activeElement;\n      var playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n\n      if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      } // exit early if it isn't a tab key\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        return;\n      }\n\n      var focusableEls = this.focusableEls_();\n      var activeEl = this.el_.querySelector(':focus');\n      var focusIndex;\n\n      for (var i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    ;\n\n    _proto.focusableEls_ = function focusableEls_() {\n      var allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, function (child) {\n        return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    };\n\n    return ModalDialog;\n  }(Component$1);\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component$1.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n\n  var TrackList = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(TrackList, _EventTarget);\n\n    /**\n     * Create an instance of this class\n     *\n     * @param {Track[]} tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    function TrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.tracks_ = [];\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'length', {\n        get: function get() {\n          return this.tracks_.length;\n        }\n      });\n\n      for (var i = 0; i < tracks.length; i++) {\n        _this.addTrack(tracks[i]);\n      }\n\n      return _this;\n    }\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = TrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      var index = this.tracks_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.tracks_[index];\n          }\n        });\n      } // Do not add duplicate tracks\n\n\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {EventTarget~Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n\n        this.trigger({\n          track: track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n      /**\n       * Triggered when a track label is changed.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n\n      track.labelchange_ = function () {\n        _this2.trigger({\n          track: track,\n          type: 'labelchange',\n          target: _this2\n        });\n      };\n\n      if (isEvented(track)) {\n        track.addEventListener('labelchange', track.labelchange_);\n      }\n    }\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    ;\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      var track;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n\n          if (track.off) {\n            track.off();\n          }\n\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!track) {\n        return;\n      }\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n\n\n      this.trigger({\n        track: track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    ;\n\n    _proto.getTrackById = function getTrackById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var track = this[i];\n\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TrackList;\n  }(EventTarget$2);\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @private\n   */\n\n\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack',\n    labelchange: 'labelchange'\n  }; // emulate attribute EventHandler support to allow for feature detection\n\n  for (var event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers$1 = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another audio track is enabled, disable it\n\n\n      list[i].enabled = false;\n    }\n  };\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n\n\n  var AudioTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(AudioTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    function AudioTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      return _this;\n    }\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = AudioTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.enabled) {\n        disableOthers$1(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.enabledChange_ = function () {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers$1(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('enabledchange', track.enabledChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    };\n\n    return AudioTrackList;\n  }(TrackList);\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another video track is enabled, disable it\n\n\n      list[i].selected = false;\n    }\n  };\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n\n\n  var VideoTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(VideoTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    function VideoTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selectedIndex', {\n        get: function get() {\n          for (var _i = 0; _i < this.length; _i++) {\n            if (this[_i].selected) {\n              return _i;\n            }\n          }\n\n          return -1;\n        },\n        set: function set() {}\n      });\n      return _this;\n    }\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = VideoTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.selected) {\n        disableOthers(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.selectedChange_ = function () {\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('selectedchange', track.selectedChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    };\n\n    return VideoTrackList;\n  }(TrackList);\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n\n  var TextTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(TextTrackList, _TrackList);\n\n    function TextTrackList() {\n      return _TrackList.apply(this, arguments) || this;\n    }\n\n    var _proto = TextTrackList.prototype;\n\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    _proto.addTrack = function addTrack(track) {\n      var _this = this;\n\n      _TrackList.prototype.addTrack.call(this, track);\n\n      if (!this.queueChange_) {\n        this.queueChange_ = function () {\n          return _this.queueTrigger('change');\n        };\n      }\n\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = function () {\n          return _this.trigger('selectedlanguagechange');\n        };\n      }\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('modechange', this.queueChange_);\n      var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    };\n\n    return TextTrackList;\n  }(TrackList);\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  var HtmlTrackElementList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    function HtmlTrackElementList(trackElements) {\n      if (trackElements === void 0) {\n        trackElements = [];\n      }\n\n      this.trackElements_ = [];\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.trackElements_.length;\n        }\n      });\n\n      for (var i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n\n\n    var _proto = HtmlTrackElementList.prototype;\n\n    _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n      var index = this.trackElements_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.trackElements_[index];\n          }\n        });\n      } // Do not add duplicate elements\n\n\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    ;\n\n    _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n      var trackElement_;\n\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n\n      return trackElement_;\n    }\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    return HtmlTrackElementList;\n  }();\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  var TextTrackCueList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    function TextTrackCueList(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.length_;\n        }\n      });\n    }\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n\n\n    var _proto = TextTrackCueList.prototype;\n\n    _proto.setCues_ = function setCues_(cues) {\n      var oldLength = this.length || 0;\n      var i = 0;\n      var l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n\n      var defineProp = function defineProp(index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get: function get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n\n      if (oldLength < l) {\n        i = oldLength;\n\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    ;\n\n    _proto.getCueById = function getCueById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var cue = this[i];\n\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TextTrackCueList;\n  }();\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  var VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n\n  var AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n\n  var TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n\n  var TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n\n  var Track = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(Track, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    function Track(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        language: options.language || ''\n      };\n      var label = options.label || '';\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      var _loop = function _loop(key) {\n        Object.defineProperty(assertThisInitialized(_this), key, {\n          get: function get() {\n            return trackProps[key];\n          },\n          set: function set() {}\n        });\n      };\n\n      for (var key in trackProps) {\n        _loop(key);\n      }\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @fires Track#labelchange\n       */\n\n\n      Object.defineProperty(assertThisInitialized(_this), 'label', {\n        get: function get() {\n          return label;\n        },\n        set: function set(newLabel) {\n          if (newLabel !== label) {\n            label = newLabel;\n            /**\n             * An event that fires when label changes on this track.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event Track#labelchange\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('labelchange');\n          }\n        }\n      });\n      return _this;\n    }\n\n    return Track;\n  }(EventTarget$2);\n\n  /**\n   * @file url.js\n   * @module url\n   */\n\n  /**\n   * @typedef {Object} url:URLObject\n   *\n   * @property {string} protocol\n   *           The protocol of the url that was parsed.\n   *\n   * @property {string} hostname\n   *           The hostname of the url that was parsed.\n   *\n   * @property {string} port\n   *           The port of the url that was parsed.\n   *\n   * @property {string} pathname\n   *           The pathname of the url that was parsed.\n   *\n   * @property {string} search\n   *           The search query of the url that was parsed.\n   *\n   * @property {string} hash\n   *           The hash of the url that was parsed.\n   *\n   * @property {string} host\n   *           The host of the url that was parsed.\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {String} url\n   *           The url to parse\n   *\n   * @return   {url:URLObject}\n   *           An object of url details\n   */\n  var parseUrl = function parseUrl(url) {\n    // This entire method can be replace with URL once we are able to drop IE11\n    var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n    var a = document.createElement('a');\n    a.href = url; // Copy the specific URL properties to a new object\n    // This is also needed for IE because the anchor loses its\n    // properties when it's removed from the dom\n\n    var details = {};\n\n    for (var i = 0; i < props.length; i++) {\n      details[props[i]] = a[props[i]];\n    } // IE adds the port to the host property unlike everyone else. If\n    // a port identifier is added for standard ports, strip it.\n\n\n    if (details.protocol === 'http:') {\n      details.host = details.host.replace(/:80$/, '');\n    }\n\n    if (details.protocol === 'https:') {\n      details.host = details.host.replace(/:443$/, '');\n    }\n\n    if (!details.protocol) {\n      details.protocol = window.location.protocol;\n    }\n    /* istanbul ignore if */\n\n\n    if (!details.host) {\n      details.host = window.location.host;\n    }\n\n    return details;\n  };\n  /**\n   * Get absolute version of relative URL. Used to tell Flash the correct URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   *\n   * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n   */\n\n  var getAbsoluteURL = function getAbsoluteURL(url) {\n    // Check if absolute URL\n    if (!url.match(/^https?:\\/\\//)) {\n      // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n      // add the url to an anchor and let the browser parse the URL\n      var a = document.createElement('a');\n      a.href = url;\n      url = a.href;\n    }\n\n    return url;\n  };\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n\n  var getFileExtension = function getFileExtension(path) {\n    if (typeof path === 'string') {\n      var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n      var pathParts = splitPathRe.exec(path);\n\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @param    {Object} [winLoc]\n   *           the domain to check the url against, defaults to window.location\n   *\n   * @param    {string} [winLoc.protocol]\n   *           The window location protocol defaults to window.location.protocol\n   *\n   * @param    {string} [winLoc.host]\n   *           The window location host defaults to window.location.host\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n\n  var isCrossOrigin = function isCrossOrigin(url, winLoc) {\n    if (winLoc === void 0) {\n      winLoc = window.location;\n    }\n\n    var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n    var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n    // IE8 doesn't know location.origin, so we won't rely on it here\n\n    var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n    return crossOrigin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isFunction_1 = isFunction;\n  var toString = Object.prototype.toString;\n\n  function isFunction(fn) {\n    if (!fn) {\n      return false;\n    }\n\n    var string = toString.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  var httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    if (decodeResponseBody === void 0) {\n      decodeResponseBody = false;\n    }\n\n    return function (err, response, responseBody) {\n      // if the XHR failed, return that error\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n\n        if (decodeResponseBody) {\n          if (window_1.TextDecoder) {\n            var charset = getCharset(response.headers && response.headers['content-type']);\n\n            try {\n              cause = new TextDecoder(charset).decode(responseBody);\n            } catch (e) {}\n          } else {\n            cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n          }\n        }\n\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n\n      callback(null, responseBody);\n    };\n  };\n\n  function getCharset(contentTypeHeader) {\n    if (contentTypeHeader === void 0) {\n      contentTypeHeader = '';\n    }\n\n    return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n      var _contentType$split = contentType.split('='),\n          type = _contentType$split[0],\n          value = _contentType$split[1];\n\n      if (type.trim() === 'charset') {\n        return value.trim();\n      }\n\n      return charset;\n    }, 'utf-8');\n  }\n\n  var httpHandler = httpResponseHandler;\n\n  createXHR.httpHandler = httpHandler;\n  /**\n   * @license\n   * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n   * Copyright (c) 2014 David Björklund\n   * Available under the MIT license\n   * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n   */\n\n  var parseHeaders = function parseHeaders(headers) {\n    var result = {};\n\n    if (!headers) {\n      return result;\n    }\n\n    headers.trim().split('\\n').forEach(function (row) {\n      var index = row.indexOf(':');\n      var key = row.slice(0, index).trim().toLowerCase();\n      var value = row.slice(index + 1).trim();\n\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (Array.isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n\n  var lib = createXHR; // Allow use of default import syntax in TypeScript\n\n  var default_1 = createXHR;\n  createXHR.XMLHttpRequest = window_1.XMLHttpRequest || noop$1;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window_1.XDomainRequest;\n  forEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n\n  function forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n\n    return true;\n  }\n\n  function initParams(uri, options, callback) {\n    var params = uri;\n\n    if (isFunction_1(options)) {\n      callback = options;\n\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = _extends_1({}, options, {\n        uri: uri\n      });\n    }\n\n    params.callback = callback;\n    return params;\n  }\n\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    }\n\n    var called = false;\n\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n\n    function readystatechange() {\n      if (xhr.readyState === 4) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n\n      return body;\n    }\n\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n\n      evt.statusCode = 0;\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n\n      var response = failureResponse;\n      var err = null;\n\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      }\n\n      return callback(err, response, response.body);\n    }\n\n    var xhr = options.xhr || null;\n\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n\n    xhr.onabort = function () {\n      aborted = true;\n    };\n\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n\n    xhr.send(body || null);\n    return xhr;\n  }\n\n  function getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n      if (xhr.responseType === \"document\") {\n        return xhr.responseXML;\n      }\n\n      var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n      if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML;\n      }\n    } catch (e) {}\n\n    return null;\n  }\n\n  function noop$1() {}\n  lib[\"default\"] = default_1;\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n\n  var parseCues = function parseCues(srcContent, track) {\n    var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n    var errors = [];\n\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n\n    parser.parse(srcContent);\n\n    if (errors.length > 0) {\n      if (window.console && window.console.groupCollapsed) {\n        window.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n      }\n\n      errors.forEach(function (error) {\n        return log$1.error(error);\n      });\n\n      if (window.console && window.console.groupEnd) {\n        window.console.groupEnd();\n      }\n    }\n\n    parser.flush();\n  };\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n\n\n  var loadTrack = function loadTrack(src, track) {\n    var opts = {\n      uri: src\n    };\n    var crossOrigin = isCrossOrigin(src);\n\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n\n    var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n    if (withCredentials) {\n      opts.withCredentials = withCredentials;\n    }\n\n    lib(opts, bind(this, function (err, response, responseBody) {\n      if (err) {\n        return log$1.error(err, response);\n      }\n\n      track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n\n      if (typeof window.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n            if (event.type === 'vttjserror') {\n              log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n              return;\n            }\n\n            return parseCues(responseBody, track);\n          });\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n\n\n  var TextTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(TextTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function TextTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      var mode = TextTrackMode[settings.mode] || 'disabled';\n      var default_ = settings[\"default\"];\n\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n\n      _this = _Track.call(this, settings) || this;\n      _this.tech_ = settings.tech;\n      _this.cues_ = [];\n      _this.activeCues_ = [];\n      _this.preload_ = _this.tech_.preloadTextTracks !== false;\n      var cues = new TextTrackCueList(_this.cues_);\n      var activeCues = new TextTrackCueList(_this.activeCues_);\n      var changed = false;\n      var timeupdateHandler = bind(assertThisInitialized(_this), function () {\n        if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n          return;\n        } // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n        this.activeCues = this.activeCues;\n\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n      });\n\n      var disposeHandler = function disposeHandler() {\n        _this.tech_.off('timeupdate', timeupdateHandler);\n      };\n\n      _this.tech_.one('dispose', disposeHandler);\n\n      if (mode !== 'disabled') {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }\n\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        \"default\": {\n          get: function get() {\n            return default_;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get: function get() {\n            return mode;\n          },\n          set: function set(newMode) {\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n\n            if (mode === newMode) {\n              return;\n            }\n\n            mode = newMode;\n\n            if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n              // On-demand load.\n              loadTrack(this.src, this);\n            }\n\n            this.tech_.off('timeupdate', timeupdateHandler);\n\n            if (mode !== 'disabled') {\n              this.tech_.on('timeupdate', timeupdateHandler);\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {EventTarget~Event}\n             */\n\n\n            this.trigger('modechange');\n          }\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            return cues;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            } // nothing to do\n\n\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n\n            var ct = this.tech_.currentTime();\n            var active = [];\n\n            for (var i = 0, l = this.cues.length; i < l; i++) {\n              var cue = this.cues[i];\n\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                active.push(cue);\n              }\n            }\n\n            changed = false;\n\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (var _i = 0; _i < active.length; _i++) {\n                if (this.activeCues_.indexOf(active[_i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set: function set() {}\n        }\n      });\n\n      if (settings.src) {\n        _this.src = settings.src;\n\n        if (!_this.preload_) {\n          // Tracks will load on-demand.\n          // Act like we're loaded for other purposes.\n          _this.loaded_ = true;\n        }\n\n        if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n          loadTrack(_this.src, assertThisInitialized(_this));\n        }\n      } else {\n        _this.loaded_ = true;\n      }\n\n      return _this;\n    }\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n\n\n    var _proto = TextTrack.prototype;\n\n    _proto.addCue = function addCue(originalCue) {\n      var cue = originalCue;\n\n      if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n        cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n        for (var prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        } // make sure that `id` is copied over\n\n\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n\n      var tracks = this.tech_.textTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    ;\n\n    _proto.removeCue = function removeCue(_removeCue) {\n      var i = this.cues_.length;\n\n      while (i--) {\n        var cue = this.cues_[i];\n\n        if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    };\n\n    return TextTrack;\n  }(Track);\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   */\n\n\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n\n  var AudioTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(AudioTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    function AudioTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var enabled = false;\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'enabled', {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n\n          enabled = newEnabled;\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('enabledchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.enabled) {\n        _this.enabled = settings.enabled;\n      }\n\n      _this.loaded_ = true;\n      return _this;\n    }\n\n    return AudioTrack;\n  }(Track);\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n\n  var VideoTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(VideoTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    function VideoTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var selected = false;\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selected', {\n        get: function get() {\n          return selected;\n        },\n        set: function set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n\n          selected = newSelected;\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('selectedchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.selected) {\n        _this.selected = settings.selected;\n      }\n\n      return _this;\n    }\n\n    return VideoTrack;\n  }(Track);\n\n  /**\n   * @memberof HTMLTrackElement\n   * @typedef {HTMLTrackElement~ReadyState}\n   * @enum {number}\n   */\n\n  var NONE = 0;\n  var LOADING = 1;\n  var LOADED = 2;\n  var ERROR = 3;\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n\n  var HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(HTMLTrackElement, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function HTMLTrackElement(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var readyState;\n      var track = new TextTrack(options);\n      _this.kind = track.kind;\n      _this.src = track.src;\n      _this.srclang = track.language;\n      _this.label = track.label;\n      _this[\"default\"] = track[\"default\"];\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get: function get() {\n            return readyState;\n          }\n        },\n\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get: function get() {\n            return track;\n          }\n        }\n      });\n      readyState = NONE;\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n\n      track.addEventListener('loadeddata', function () {\n        readyState = LOADED;\n\n        _this.trigger({\n          type: 'load',\n          target: assertThisInitialized(_this)\n        });\n      });\n      return _this;\n    }\n\n    return HTMLTrackElement;\n  }(EventTarget$2);\n\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n  HTMLTrackElement.NONE = NONE;\n  HTMLTrackElement.LOADING = LOADING;\n  HTMLTrackElement.LOADED = LOADED;\n  HTMLTrackElement.ERROR = ERROR;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  var NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = type + \"Tracks\";\n    NORMAL[type].privateName = type + \"Tracks_\";\n  });\n  var REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n\n  var ALL = _extends_1({}, NORMAL, REMOTE);\n\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  var minDoc = {};\n\n  var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : {};\n  var doccy;\n\n  if (typeof document !== 'undefined') {\n    doccy = document;\n  } else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n      doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n  }\n\n  var document_1 = doccy;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n  var _objCreate = Object.create || function () {\n    function F() {}\n\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n\n      F.prototype = o;\n      return new F();\n    };\n  }(); // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n\n\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  }; // Try to parse input as a time stamp.\n\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n\n    var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n\n    if (!m) {\n      return null;\n    }\n\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  } // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n\n\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function set(k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function get(k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function has(k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function alt(k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function integer(k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function percent(k, v) {\n\n      if (v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }; // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n\n      var kv = groups[i].split(keyValueDelim);\n\n      if (kv.length !== 2) {\n        continue;\n      }\n\n      var k = kv[0];\n      var v = kv[1];\n      callback(k, v);\n    }\n  }\n\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input; // 4.1 WebVTT timestamp\n\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      } // Remove time stamp from input.\n\n\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    } // 4.4.2 WebVTT cue settings\n\n\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n\n            break;\n\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n\n          case \"line\":\n            var vals = v.split(\",\"),\n                vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"size\":\n            settings.percent(k, v);\n            break;\n\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/); // Apply default values for any missing fields.\n\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n\n      try {\n        cue.line = settings.get(\"line\", \"auto\");\n      } catch (e) {}\n\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100); // Safari still uses the old middle value and won't accept center\n\n      try {\n        cue.align = settings.get(\"align\", \"center\");\n      } catch (e) {\n        cue.align = settings.get(\"align\", \"middle\");\n      }\n\n      try {\n        cue.position = settings.get(\"position\", \"auto\");\n      } catch (e) {\n        cue.position = settings.get(\"position\", {\n          start: 0,\n          left: 0,\n          center: 50,\n          middle: 50,\n          end: 100,\n          right: 100\n        }, cue.align);\n      }\n\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        center: \"center\",\n        middle: \"center\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    } // 4.1 WebVTT cue timings.\n\n\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n    skipWhitespace();\n\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n    // 4.1 WebVTT cue settings list.\n\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  } // When evaluating this file as part of a Webpack bundle for server\n  // side rendering, `document` is an empty object.\n\n\n  var TEXTAREA_ELEMENT = document_1.createElement && document_1.createElement(\"textarea\");\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  }; // 5.1 default text color\n  // 5.2 default text background color is equivalent to text color with bg_ prefix\n\n  var DEFAULT_COLOR_CLASS = {\n    white: 'rgba(255,255,255,1)',\n    lime: 'rgba(0,255,0,1)',\n    cyan: 'rgba(0,255,255,1)',\n    red: 'rgba(255,0,0,1)',\n    yellow: 'rgba(255,255,0,1)',\n    magenta: 'rgba(255,0,255,1)',\n    blue: 'rgba(0,0,255,1)',\n    black: 'rgba(0,0,0,1)'\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  }; // Parse content into a document fragment.\n\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      } // Consume 'n' characters from the input.\n\n\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n\n      return consume(m[1] ? m[1] : m[2]);\n    }\n\n    function unescape(s) {\n      TEXTAREA_ELEMENT.innerHTML = s;\n      s = TEXTAREA_ELEMENT.textContent;\n      TEXTAREA_ELEMENT.textContent = \"\";\n      return s;\n    }\n\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    } // Create an element for this tag.\n\n\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n\n      if (!tagName) {\n        return null;\n      }\n\n      var element = window.document.createElement(tagName);\n      var name = TAG_ANNOTATION[type];\n\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n\n      return element;\n    }\n\n    var rootDiv = window.document.createElement(\"div\"),\n        current = rootDiv,\n        t,\n        tagStack = [];\n\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          } // Otherwise just ignore the end tag.\n\n\n          continue;\n        }\n\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n        if (!m) {\n          continue;\n        } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n        node = createElement(m[1], m[3]);\n\n        if (!node) {\n          continue;\n        } // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n\n\n        if (!shouldAdd(current, node)) {\n          continue;\n        } // Set the class list (as a list of classes, separated by space).\n\n\n        if (m[2]) {\n          var classes = m[2].split('.');\n          classes.forEach(function (cl) {\n            var bgColor = /^bg_/.test(cl); // slice out `bg_` if it's a background color\n\n            var colorName = bgColor ? cl.slice(3) : cl;\n\n            if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n              var propName = bgColor ? 'background-color' : 'color';\n              var propValue = DEFAULT_COLOR_CLASS[colorName];\n              node.style[propName] = propValue;\n            }\n          });\n          node.className = classes.join(' ');\n        } // Append the node to the current node, and enter the scope of the new\n        // node.\n\n\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      } // Text nodes are leaf nodes.\n\n\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n\n    return rootDiv;\n  } // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n        text = \"\",\n        charCode;\n\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n\n      var node = nodeStack.pop(),\n          text = node.textContent || node.innerText;\n\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n\n        return text;\n      }\n\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n\n    pushNodes(nodeStack, cueDiv);\n\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n\n    return \"ltr\";\n  }\n\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n\n    var track = cue.track,\n        trackList = track.textTrackList,\n        count = 0;\n\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n\n    return ++count * -1;\n  }\n\n  function StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n\n\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  }; // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n\n\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except middle instead of center on Safari.\n\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n\n    var textPos = 0;\n\n    switch (cue.positionAlign) {\n      case \"start\":\n        textPos = cue.position;\n        break;\n\n      case \"center\":\n        textPos = cue.position - cue.size / 2;\n        break;\n\n      case \"end\":\n        textPos = cue.position - cue.size;\n        break;\n    } // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n\n\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      }); // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  } // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n\n\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  }; // Check if this box overlaps another box, b2.\n\n\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  }; // Check if this box overlaps any other boxes in boxes.\n\n\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Check if this box is within another box.\n\n\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  }; // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n\n\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n\n      case \"-x\":\n        return this.right > container.right;\n\n      case \"+y\":\n        return this.top < container.top;\n\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  }; // Find the percentage of the area that this box is overlapping with another\n  // box.\n\n\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n        intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  }; // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n\n\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  }; // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  }; // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n\n\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n          specifiedPosition = new BoxPosition(b),\n          percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        } // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n\n\n        if (b.within(containerBox)) {\n          return b;\n        }\n\n        var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        } // Reset the box position to the specified position.\n\n\n        b = new BoxPosition(specifiedPosition);\n      }\n\n      return bestPosition || specifiedPosition;\n    }\n\n    var boxPosition = new BoxPosition(styleBox),\n        cue = styleBox.cue,\n        linePos = computeLinePos(cue),\n        axis = []; // If we have a line number to align the cue to.\n\n    if (cue.snapToLines) {\n      var size;\n\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n\n      var step = boxPosition.lineHeight,\n          position = step * Math.round(linePos),\n          maxPosition = containerBox[size] + step,\n          initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      } // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n\n\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      } // Move the box to the specified position. This may not be its best\n      // position.\n\n\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n      switch (cue.lineAlign) {\n        case \"center\":\n          linePos -= calculatedPercentage / 2;\n          break;\n\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      } // Apply initial line position to the cue box.\n\n\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n      // to it.\n\n      boxPosition = new BoxPosition(styleBox);\n    }\n\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n\n  function WebVTT$1() {// Nothing\n  } // Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function decode(data) {\n        if (!data) {\n          return \"\";\n        }\n\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n\n    return parseContent(window, cuetext);\n  };\n\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    } // Remove all previous children.\n\n\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n\n      return false;\n    } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n\n      return;\n    }\n\n    var boxPositions = [],\n        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n\n    (function () {\n      var styleBox, cue;\n\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n\n    if (!vttjs) {\n      vttjs = {};\n    }\n\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function reportOrThrowError(e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function parse(data) {\n      var self = this; // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n\n        var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n\n        self.buffer = buffer.substr(pos);\n        return line;\n      } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n\n            case \"width\":\n              settings.percent(k, v);\n              break;\n\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n\n              if (xy.length !== 2) {\n                break;\n              } // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n\n\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/); // Create the region, using default values for any values that were not\n        // specified.\n\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n          self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      } // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n\n\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      } // 3.2 WebVTT metadata header syntax\n\n\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      } // 5.1 WebVTT file parsing.\n\n\n      try {\n        var line;\n\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n\n          self.state = \"HEADER\";\n        }\n\n        var alreadyCollectedLine = false;\n\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n              if (!line) {\n                continue;\n              }\n\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\"); // Safari still uses the old middle value and won't accept center\n\n              try {\n                self.cue.align = \"center\";\n              } catch (e) {\n                self.cue.align = \"middle\";\n              }\n\n              self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n\n            // Process line as start of a cue.\n\n            /*falls through*/\n\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n\n              self.state = \"CUETEXT\";\n              continue;\n\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n\n              self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n              continue;\n\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n\n        self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n\n      return this;\n    },\n    flush: function flush() {\n      var self = this;\n\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        } // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n\n\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"center\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1,\n    \"auto\": 1,\n    \"line-left\": 1,\n    \"line-right\": 1\n  };\n\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = \"auto\";\n    var _positionAlign = \"auto\";\n    var _size = 100;\n    var _align = \"center\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function get() {\n          return _id;\n        },\n        set: function set(value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function get() {\n          return _pauseOnExit;\n        },\n        set: function set(value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function get() {\n          return _startTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function get() {\n          return _endTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function get() {\n          return _text;\n        },\n        set: function set(value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function get() {\n          return _region;\n        },\n        set: function set(value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function get() {\n          return _vertical;\n        },\n        set: function set(value) {\n          var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n          if (setting === false) {\n            throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n          }\n\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function get() {\n          return _snapToLines;\n        },\n        set: function set(value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function get() {\n          return _line;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n          }\n\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _lineAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n          } else {\n            _lineAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function get() {\n          return _position;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _positionAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n          } else {\n            _positionAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function get() {\n          return _size;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function get() {\n          return _align;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n          }\n\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n    /**\n     * Other <track> spec defined properties\n     */\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n    this.displayState = undefined;\n  }\n  /**\n   * VTTCue methods\n   */\n\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  } // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function get() {\n          return _width;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function get() {\n          return _lines;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function get() {\n          return _scroll;\n        },\n        set: function set(value) {\n          var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n          if (setting === false) {\n            console.warn(\"Scroll: an invalid or illegal string was specified.\");\n          } else {\n            _scroll = setting;\n          }\n        }\n      }\n    });\n  }\n\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window_1.vttjs = vttjs;\n    window_1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window_1.VTTCue;\n    var nativeVTTRegion = window_1.VTTRegion;\n\n    vttjs.shim = function () {\n      window_1.VTTCue = cueShim;\n      window_1.VTTRegion = regionShim;\n    };\n\n    vttjs.restore = function () {\n      window_1.VTTCue = nativeVTTCue;\n      window_1.VTTRegion = nativeVTTRegion;\n    };\n\n    if (!window_1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  browserIndex.WebVTT;\n  browserIndex.VTTCue;\n  browserIndex.VTTRegion;\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} Tech~SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n\n  function createTrackHelper(self, kind, label, language, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var tracks = self.textTracks();\n    options.kind = kind;\n\n    if (label) {\n      options.label = label;\n    }\n\n    if (language) {\n      options.language = language;\n    }\n\n    options.tech = self;\n    var track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link HTML5}\n   *\n   * @extends Component\n   */\n\n\n  var Tech = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Tech, _Component);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Tech(options, ready) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (ready === void 0) {\n        ready = function ready() {};\n      }\n\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      _this = _Component.call(this, null, options, ready) || this;\n\n      _this.onDurationChange_ = function (e) {\n        return _this.onDurationChange(e);\n      };\n\n      _this.trackProgress_ = function (e) {\n        return _this.trackProgress(e);\n      };\n\n      _this.trackCurrentTime_ = function (e) {\n        return _this.trackCurrentTime(e);\n      };\n\n      _this.stopTrackingCurrentTime_ = function (e) {\n        return _this.stopTrackingCurrentTime(e);\n      };\n\n      _this.disposeSourceHandler_ = function (e) {\n        return _this.disposeSourceHandler(e);\n      }; // keep track of whether the current source has played at all to\n      // implement a very limited played()\n\n\n      _this.hasStarted_ = false;\n\n      _this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n\n      _this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        if (options && options[props.getterName]) {\n          _this[props.privateName] = options[props.getterName];\n        }\n      }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n      if (!_this.featuresProgressEvents) {\n        _this.manualProgressOn();\n      } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n      if (!_this.featuresTimeupdateEvents) {\n        _this.manualTimeUpdatesOn();\n      }\n\n      ['Text', 'Audio', 'Video'].forEach(function (track) {\n        if (options[\"native\" + track + \"Tracks\"] === false) {\n          _this[\"featuresNative\" + track + \"Tracks\"] = false;\n        }\n      });\n\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        _this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        _this.featuresNativeTextTracks = true;\n      }\n\n      if (!_this.featuresNativeTextTracks) {\n        _this.emulateTextTracks();\n      }\n\n      _this.preloadTextTracks = options.preloadTextTracks !== false;\n      _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n      _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n      if (!options.nativeControlsForTouch) {\n        _this.emitTapEvents();\n      }\n\n      if (_this.constructor) {\n        _this.name_ = _this.constructor.name || 'Unknown Tech';\n      }\n\n      return _this;\n    }\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n\n\n    var _proto = Tech.prototype;\n\n    _proto.triggerSourceset = function triggerSourceset(src) {\n      var _this2 = this;\n\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', function () {\n          return _this2.setTimeout(function () {\n            return _this2.triggerSourceset(src);\n          }, 1);\n        });\n      }\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger({\n        src: src,\n        type: 'sourceset'\n      });\n    }\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    ;\n\n    _proto.manualProgressOn = function manualProgressOn() {\n      this.on('durationchange', this.onDurationChange_);\n      this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n      this.one('ready', this.trackProgress_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    ;\n\n    _proto.manualProgressOff = function manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange_);\n    }\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {EventTarget~Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    ;\n\n    _proto.trackProgress = function trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n        var numBufferedPercent = this.bufferedPercent();\n\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {EventTarget~Event}\n           */\n          this.trigger('progress');\n        }\n\n        this.bufferedPercent_ = numBufferedPercent;\n\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {EventTarget~Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    ;\n\n    _proto.onDurationChange = function onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      return createTimeRanges(0, 0);\n    }\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    ;\n\n    _proto.stopTrackingProgress = function stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime_);\n      this.on('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime_);\n      this.off('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    ;\n\n    _proto.trackCurrentTime = function trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    ;\n\n    _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    ;\n\n    _proto.clearTracks = function clearTracks(types) {\n      var _this3 = this;\n\n      types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n      types.forEach(function (type) {\n        var list = _this3[type + \"Tracks\"]() || [];\n        var i = list.length;\n\n        while (i--) {\n          var track = list[i];\n\n          if (type === 'text') {\n            _this3.removeRemoteTextTrack(track);\n          }\n\n          list.removeTrack(track);\n        }\n      });\n    }\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    ;\n\n    _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n      var list = this.autoRemoteTextTracks_ || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.reset = function reset() {}\n    /**\n     * Get the value of `crossOrigin` from the tech.\n     *\n     * @abstract\n     *\n     * @see {Html5#crossOrigin}\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin() {}\n    /**\n     * Set the value of `crossOrigin` on the tech.\n     *\n     * @abstract\n     *\n     * @param {string} crossOrigin the crossOrigin value\n     * @see {Html5#setCrossOrigin}\n     */\n    ;\n\n    _proto.setCrossOrigin = function setCrossOrigin() {}\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    ;\n\n    _proto.error = function error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n\n      return this.error_;\n    }\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    ;\n\n    _proto.played = function played() {\n      if (this.hasStarted_) {\n        return createTimeRanges(0, 0);\n      }\n\n      return createTimeRanges();\n    }\n    /**\n     * Start playback\n     *\n     * @abstract\n     *\n     * @see {Html5#play}\n     */\n    ;\n\n    _proto.play = function play() {}\n    /**\n     * Set whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#setScrubbing}\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing() {}\n    /**\n     * Get whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#scrubbing}\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {}\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @fires Tech#timeupdate\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime() {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    ;\n\n    _proto.initTrackListeners = function initTrackListeners() {\n      var _this4 = this;\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {EventTarget~Event}\n        */\n      NORMAL.names.forEach(function (name) {\n        var props = NORMAL[name];\n\n        var trackListChanges = function trackListChanges() {\n          _this4.trigger(name + \"trackchange\");\n        };\n\n        var tracks = _this4[props.getterName]();\n\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n\n        _this4.on('dispose', function () {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    ;\n\n    _proto.addWebVttScript_ = function addWebVttScript_() {\n      var _this5 = this;\n\n      if (window.WebVTT) {\n        return;\n      } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n\n\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        } // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n\n\n        var script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjsloaded');\n        };\n\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjserror');\n        };\n\n        this.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        }); // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n\n        window.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n    /**\n     * Emulate texttracks\n     *\n     */\n    ;\n\n    _proto.emulateTextTracks = function emulateTextTracks() {\n      var _this6 = this;\n\n      var tracks = this.textTracks();\n      var remoteTracks = this.remoteTextTracks();\n\n      var handleAddTrack = function handleAddTrack(e) {\n        return tracks.addTrack(e.track);\n      };\n\n      var handleRemoveTrack = function handleRemoveTrack(e) {\n        return tracks.removeTrack(e.track);\n      };\n\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n\n      var updateDisplay = function updateDisplay() {\n        return _this6.trigger('texttrackchange');\n      };\n\n      var textTracksChanges = function textTracksChanges() {\n        updateDisplay();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n\n      return createTrackHelper(this, kind, label, language);\n    }\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      var track = mergeOptions$3(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=true]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     * @deprecated The default functionality for this function will be equivalent\n     *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n     *             also be removed.\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var _this7 = this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var htmlTrackElement = this.createRemoteTextTrack(options);\n\n      if (manualCleanup !== true && manualCleanup !== false) {\n        // deprecation warning\n        log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n        manualCleanup = true;\n      } // store HTMLTrackElement and TextTrack to remote list\n\n\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n      if (manualCleanup !== true) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(function () {\n          return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n        });\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return {};\n    }\n    /**\n     * Attempt to create a floating video window always on top of other windows\n     * so that users may continue consuming media while they interact with other\n     * content sites, or applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise|undefined}\n     *         A promise with a Picture-in-Picture window if the browser supports\n     *         Promises (or one was passed in as an option). It returns undefined\n     *         otherwise.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return PromiseClass.reject();\n      }\n    }\n    /**\n     * A method to check for the value of the 'disablePictureInPicture' <video> property.\n     * Defaults to true, as it should be considered disabled if the tech does not support pip\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture() {\n      return true;\n    }\n    /**\n     * A method to set or unset the 'disablePictureInPicture' <video> property.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPoster = function setPoster() {}\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.playsinline = function playsinline() {}\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPlaysinline = function setPlaysinline() {}\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n    /*\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    ;\n\n    Tech.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    Tech.canPlaySource = function canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    ;\n\n    Tech.isTech = function isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    ;\n\n    Tech.registerTech = function registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n\n      if (!Tech.isTech(tech)) {\n        throw new Error(\"Tech \" + name + \" must be a Tech\");\n      }\n\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n\n      name = toTitleCase$1(name);\n      Tech.techs_[name] = tech;\n      Tech.techs_[toLowerCase(name)] = tech;\n\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n\n      return tech;\n    }\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    ;\n\n    Tech.getTech = function getTech(name) {\n      if (!name) {\n        return;\n      }\n\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n\n      name = toTitleCase$1(name);\n\n      if (window && window.videojs && window.videojs[name]) {\n        log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n        return window.videojs[name];\n      }\n    };\n\n    return Tech;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVolumeControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default\n   */\n\n  Tech.prototype.featuresMuteControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresFullscreenResize = false;\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresPlaybackRate = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresProgressEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresSourceset = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresTimeupdateEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresNativeTextTracks = false;\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      var handlers = _Tech.sourceHandlers;\n\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n\n      handlers.splice(index, 0, handler);\n    };\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlayType = function (type) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n\n      return '';\n    };\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n\n\n    _Tech.selectSourceHandler = function (source, options) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n\n        if (can) {\n          return handlers[i];\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlaySource = function (srcObj, options) {\n      var sh = _Tech.selectSourceHandler(srcObj, options);\n\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n\n      return '';\n    };\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n\n\n    var deferrable = ['seekable', 'seeking', 'duration'];\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      var originalFn = this[fnName];\n\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {Tech~SourceObject} source\n     *        A source object with src and type keys\n     */\n\n    _Tech.prototype.setSource = function (source) {\n      var sh = _Tech.selectSourceHandler(source, this.options_);\n\n      if (!sh) {\n        // Fall back to a native source hander when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log$1.error('No source handler found for the current source.');\n        }\n      } // Dispose any existing source handler\n\n\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler_);\n\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler_);\n    };\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n\n\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      } // always clean up auto-text tracks\n\n\n      this.cleanupAutoTextTracks();\n\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n\n        this.sourceHandler_ = null;\n      }\n    };\n  }; // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n\n\n  Component$1.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n  var middlewares = {};\n  var middlewareInstances = {};\n  var TERMINATOR = {};\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n\n  function setSource(player, src, next) {\n    player.setTimeout(function () {\n      return setSourceHelper(src, middlewares[src.type], next, player);\n    }, 1);\n  }\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n\n  function setTech(middleware, tech) {\n    middleware.forEach(function (mw) {\n      return mw.setTech && mw.setTech(tech);\n    });\n  }\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {Mixed}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`.\n   */\n\n  function set(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n\n  function mediate(middleware, tech, method, arg) {\n    if (arg === void 0) {\n      arg = null;\n    }\n\n    var callMethod = 'call' + toTitleCase$1(method);\n    var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n\n    var returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    muted: 1,\n    played: 1,\n    paused: 1,\n    seekable: 1,\n    volume: 1,\n    ended: 1\n  };\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedSetters = {\n    setCurrentTime: 1,\n    setMuted: 1,\n    setVolume: 1\n  };\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n\n  function middlewareIterator(method) {\n    return function (value, mw) {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n\n      if (mw[method]) {\n        return mw[method](value);\n      }\n\n      return value;\n    };\n  }\n\n  function executeRight(mws, method, value, terminated) {\n    for (var i = mws.length - 1; i >= 0; i--) {\n      var mw = mws[i];\n\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n\n\n  function clearCacheForPlayer(player) {\n    middlewareInstances[player.id()] = null;\n  }\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n\n  function getOrCreateFactory(player, mwFactory) {\n    var mws = middlewareInstances[player.id()];\n    var mw = null;\n\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n\n    for (var i = 0; i < mws.length; i++) {\n      var _mws$i = mws[i],\n          mwf = _mws$i[0],\n          mwi = _mws$i[1];\n\n      if (mwf !== mwFactory) {\n        continue;\n      }\n\n      mw = mwi;\n    }\n\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n\n    return mw;\n  }\n\n  function setSourceHelper(src, middleware, next, player, acc, lastRun) {\n    if (src === void 0) {\n      src = {};\n    }\n\n    if (middleware === void 0) {\n      middleware = [];\n    }\n\n    if (acc === void 0) {\n      acc = [];\n    }\n\n    if (lastRun === void 0) {\n      lastRun = false;\n    }\n\n    var _middleware = middleware,\n        mwFactory = _middleware[0],\n        mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      mw.setSource(assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } // we've succeeded, now we need to go deeper\n\n\n        acc.push(mw); // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /**\n   * Mimetypes\n   *\n   * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n\n  var MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    m4a: 'audio/mp4',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    caf: 'audio/x-caf',\n    flac: 'audio/flac',\n    oga: 'audio/ogg',\n    wav: 'audio/wav',\n    m3u8: 'application/x-mpegURL',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n\n  var getMimetype = function getMimetype(src) {\n    if (src === void 0) {\n      src = '';\n    }\n\n    var ext = getFileExtension(src);\n    var mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n\n  var findMimetype = function findMimetype(player, src) {\n    if (!src) {\n      return '';\n    } // 1. check for the type in the `source` cache\n\n\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    } // 2. see if we have this source in our `currentSources` cache\n\n\n    var matchingSources = player.cache_.sources.filter(function (s) {\n      return s.src === src;\n    });\n\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    } // 3. look for the src url in source elements and use the type there\n\n\n    var sources = player.$$('source');\n\n    for (var i = 0; i < sources.length; i++) {\n      var s = sources[i];\n\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    } // 4. finally fallback to our list of mime types based on src url extension\n\n\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n\n  var filterSource = function filterSource(src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      var newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject$1(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src: src\n      })];\n    } else if (isObject$1(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n\n    return src;\n  };\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n\n\n  function fixSource(src) {\n    if (!src.type) {\n      var mimetype = getMimetype(src.src);\n\n      if (mimetype) {\n        src.type = mimetype;\n      }\n    }\n\n    return src;\n  }\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n\n  var MediaLoader = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MediaLoader, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function that is run when this component is ready.\n     */\n    function MediaLoader(player, options, ready) {\n      var _this;\n\n      // MediaLoader has no element\n      var options_ = mergeOptions$3({\n        createEl: false\n      }, options);\n      _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          var techName = toTitleCase$1(j[i]);\n          var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n\n          if (!techName) {\n            tech = Component$1.getComponent(techName);\n          } // Check if the browser supports this technology\n\n\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (e.g. HTML5) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n\n      return _this;\n    }\n\n    return MediaLoader;\n  }(Component$1);\n\n  Component$1.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n\n  var ClickableComponent = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ClickableComponent, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     *\n     * @param  {function} [options.clickHandler]\n     *         The function to call when the button is clicked / activated\n     */\n    function ClickableComponent(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleMouseOver_ = function (e) {\n        return _this.handleMouseOver(e);\n      };\n\n      _this.handleMouseOut_ = function (e) {\n        return _this.handleMouseOut(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.emitTapEvents();\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = ClickableComponent.prototype;\n\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      props = assign({\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n\n      if (tag === 'button') {\n        log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n      } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n      attributes = assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n      var el = createEl(tag, props, attributes);\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    ;\n\n    _proto.createControlTextEl = function createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.el();\n      }\n\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n\n      var localizedText = this.localize(text);\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n\n      if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enable this `ClickableComponent`\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n\n        this.on(['tap', 'click'], this.handleClick_);\n        this.on('keydown', this.handleKeyDown_);\n      }\n    }\n    /**\n     * Disable this `ClickableComponent`\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n\n      this.off('mouseover', this.handleMouseOver_);\n      this.off('mouseout', this.handleMouseOut_);\n      this.off(['tap', 'click'], this.handleClick_);\n      this.off('keydown', this.handleKeyDown_);\n    }\n    /**\n     * Handles language change in ClickableComponent for the player in components\n     *\n     *\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {\n      this.controlText(this.controlText_);\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.options_.clickHandler) {\n        this.options_.clickHandler.call(this, arguments);\n      }\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return ClickableComponent;\n  }(Component$1);\n\n  Component$1.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n\n  var PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(PosterImage, _ClickableComponent);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PosterImage(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n\n      _this.update();\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      };\n\n      player.on('posterchange', _this.update_);\n      return _this;\n    }\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n\n\n    var _proto = PosterImage.prototype;\n\n    _proto.dispose = function dispose() {\n      this.player().off('posterchange', this.update_);\n\n      _ClickableComponent.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = createEl('div', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      });\n      return el;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var url = this.player().poster();\n      this.setSrc(url); // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * Set the source of the `PosterImage` depending on the display method.\n     *\n     * @param {string} url\n     *        The URL to the source for the `PosterImage`.\n     */\n    ;\n\n    _proto.setSrc = function setSrc(url) {\n      var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n      // this will throw an extra error\n\n      if (url) {\n        backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {EventTarget~Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    };\n\n    return PosterImage;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('PosterImage', PosterImage);\n\n  var darkGray = '#222';\n  var lightGray = '#ccc';\n  var fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n\n  function constructColor(color, opacity) {\n    var hex;\n\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n\n\n  var TextTrackDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TextTrackDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    function TextTrackDisplay(player, options, ready) {\n      var _this;\n\n      _this = _Component.call(this, player, options, ready) || this;\n\n      var updateDisplayHandler = function updateDisplayHandler(e) {\n        return _this.updateDisplay(e);\n      };\n\n      player.on('loadstart', function (e) {\n        return _this.toggleDisplay(e);\n      });\n      player.on('texttrackchange', updateDisplayHandler);\n      player.on('loadedmetadata', function (e) {\n        return _this.preselectTrack(e);\n      }); // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n\n      player.ready(bind(assertThisInitialized(_this), function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        window.addEventListener('orientationchange', updateDisplayHandler);\n        player.on('dispose', function () {\n          return window.removeEventListener('orientationchange', updateDisplayHandler);\n        });\n        var tracks = this.options_.playerOptions.tracks || [];\n\n        for (var i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n\n        this.preselectTrack();\n      }));\n      return _this;\n    }\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n\n\n    var _proto = TextTrackDisplay.prototype;\n\n    _proto.preselectTrack = function preselectTrack() {\n      var modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      var trackList = this.player_.textTracks();\n      var userPref = this.player_.cache_.selectedLanguage;\n      var firstDesc;\n      var firstCaptions;\n      var preferredTrack;\n\n      for (var i = 0; i < trackList.length; i++) {\n        var track = trackList[i];\n\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track; // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          } // clear everything if offTextTrackMenuItem was clicked\n\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track[\"default\"]) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      } // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n\n\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.toggleDisplay = function toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'translate': 'yes',\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    ;\n\n    _proto.clearDisplay = function clearDisplay() {\n      if (typeof window.WebVTT === 'function') {\n        window.WebVTT.processCues(window, [], this.el_);\n      }\n    }\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var tracks = this.player_.textTracks();\n      var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n      this.clearDisplay();\n\n      if (allowMultipleShowingTracks) {\n        var showingTracks = [];\n\n        for (var _i = 0; _i < tracks.length; ++_i) {\n          var track = tracks[_i];\n\n          if (track.mode !== 'showing') {\n            continue;\n          }\n\n          showingTracks.push(track);\n        }\n\n        this.updateForTrack(showingTracks);\n        return;\n      } //  Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n      var descriptionsTrack = null;\n      var captionsSubtitlesTrack = null;\n      var i = tracks.length;\n\n      while (i--) {\n        var _track = tracks[i];\n\n        if (_track.mode === 'showing') {\n          if (_track.kind === 'descriptions') {\n            descriptionsTrack = _track;\n          } else {\n            captionsSubtitlesTrack = _track;\n          }\n        }\n      }\n\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n    /**\n     * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n     *\n     * @param {TextTrack} track\n     *        Text track object containing active cues to style.\n     */\n    ;\n\n    _proto.updateDisplayState = function updateDisplayState(track) {\n      var overrides = this.player_.textTrackSettings.getValues();\n      var cues = track.activeCues;\n      var i = cues.length;\n\n      while (i--) {\n        var cue = cues[i];\n\n        if (!cue) {\n          continue;\n        }\n\n        var cueDiv = cue.displayState;\n\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n          }\n        }\n\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          var fontSize = window.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n        }\n\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    }\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack|TextTrack[]} tracks\n     *        Text track object or text track array to be added to the list.\n     */\n    ;\n\n    _proto.updateForTrack = function updateForTrack(tracks) {\n      if (!Array.isArray(tracks)) {\n        tracks = [tracks];\n      }\n\n      if (typeof window.WebVTT !== 'function' || tracks.every(function (track) {\n        return !track.activeCues;\n      })) {\n        return;\n      }\n\n      var cues = []; // push all active track cues\n\n      for (var i = 0; i < tracks.length; ++i) {\n        var track = tracks[i];\n\n        for (var j = 0; j < track.activeCues.length; ++j) {\n          cues.push(track.activeCues[j]);\n        }\n      } // removes all cues before it processes new ones\n\n\n      window.WebVTT.processCues(window, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n      for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n        var _track2 = tracks[_i2];\n\n        for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n          var cueEl = _track2.activeCues[_j].displayState;\n          addClass(cueEl, 'vjs-text-track-cue');\n          addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n          if (_track2.language) {\n            setAttribute(cueEl, 'lang', _track2.language);\n          }\n        }\n\n        if (this.player_.textTrackSettings) {\n          this.updateDisplayState(_track2);\n        }\n      }\n    };\n\n    return TextTrackDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n\n  var LoadingSpinner = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadingSpinner, _Component);\n\n    function LoadingSpinner() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = LoadingSpinner.prototype;\n\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    _proto.createEl = function createEl$1() {\n      var isAudio = this.player_.isAudio();\n      var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      var controlText = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('{1} is loading.', [playerType])\n      });\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n\n      el.appendChild(controlText);\n      return el;\n    };\n\n    return LoadingSpinner;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n\n  var Button = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(Button, _ClickableComponent);\n\n    function Button() {\n      return _ClickableComponent.apply(this, arguments) || this;\n    }\n\n    var _proto = Button.prototype;\n\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      tag = 'button';\n      props = assign({\n        className: this.buildCSSClass()\n      }, props); // Add attributes for button element\n\n      attributes = assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n\n      var el = createEl(tag, props, attributes);\n\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    }\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var className = this.constructor.name;\n      log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n      return Component$1.prototype.addChild.call(this, child, options);\n    }\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      _ClickableComponent.prototype.enable.call(this);\n\n      this.el_.removeAttribute('disabled');\n    }\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      _ClickableComponent.prototype.disable.call(this);\n\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.stopPropagation();\n        return;\n      } // Pass keypress handling up for unsupported keys\n\n\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    };\n\n    return Button;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('Button', Button);\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n\n  var BigPlayButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(BigPlayButton, _Button);\n\n    function BigPlayButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n      _this.mouseused_ = false;\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n\n\n    var _proto = BigPlayButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n      if (this.mouseused_ && event.clientX && event.clientY) {\n        var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n        silencePromise(playPromise);\n\n        if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n        // calling .focus() on the video element causes the video to go black,\n        // so we avoid it in that specific case\n        !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n          this.player_.tech(true).focus();\n        }\n\n        return;\n      }\n\n      var cb = this.player_.getChild('controlBar');\n      var playToggle = cb && cb.getChild('playToggle');\n\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n\n      var playFocus = function playFocus() {\n        return playToggle.focus();\n      };\n\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, function () {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    };\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      this.mouseused_ = false;\n\n      _Button.prototype.handleKeyDown.call(this, event);\n    };\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      this.mouseused_ = true;\n    };\n\n    return BigPlayButton;\n  }(Button);\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component$1.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n\n  var CloseButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(CloseButton, _Button);\n\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    function CloseButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.controlText(options && options.controlText || _this.localize('Close'));\n\n      return _this;\n    }\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n\n\n    var _proto = CloseButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    }\n    /**\n     * Event handler that is called when a `CloseButton` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Esc, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Esc button will trigger `click` event\n      if (keycode.isEventKey(event, 'Esc')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Button.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return CloseButton;\n  }(Button);\n\n  Component$1.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n\n  var PlayToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PlayToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function PlayToggle(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n      options.replay = options.replay === undefined || options.replay;\n\n      _this.on(player, 'play', function (e) {\n        return _this.handlePlay(e);\n      });\n\n      _this.on(player, 'pause', function (e) {\n        return _this.handlePause(e);\n      });\n\n      if (options.replay) {\n        _this.on(player, 'ended', function (e) {\n          return _this.handleEnded(e);\n        });\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PlayToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked(event) {\n      this.removeClass('vjs-ended');\n\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay(event) {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n      this.controlText('Pause');\n    }\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    ;\n\n    _proto.handlePause = function handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n      this.controlText('Play');\n    }\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      var _this2 = this;\n\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n      this.controlText('Replay'); // on the next seek remove the replay button\n\n      this.one(this.player_, 'seeked', function (e) {\n        return _this2.handleSeeked(e);\n      });\n    };\n\n    return PlayToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component$1.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file format-time.js\n   * @module format-time\n   */\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  var defaultImplementation = function defaultImplementation(seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    var s = Math.floor(seconds % 60);\n    var m = Math.floor(seconds / 60 % 60);\n    var h = Math.floor(seconds / 3600);\n    var gm = Math.floor(guide / 60 % 60);\n    var gh = Math.floor(guide / 3600); // handle invalid times\n\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    } // Check if we need to show hours\n\n\n    h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  }; // Internal pointer to the current implementation.\n\n\n  var implementation = defaultImplementation;\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n  /**\n   * Resets formatTime to the default implementation.\n   */\n\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @static\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n\n  function formatTime(seconds, guide) {\n    if (guide === void 0) {\n      guide = seconds;\n    }\n\n    return implementation(seconds, guide);\n  }\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n\n  var TimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.on(player, ['timeupdate', 'ended'], function (e) {\n        return _this.updateContent(e);\n      });\n\n      _this.updateTextNode_();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var className = this.buildCSSClass();\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: className + \" vjs-time-control vjs-control\"\n      });\n\n      var span = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize(this.labelText_) + \"\\xA0\"\n      }, {\n        role: 'presentation'\n      });\n      el.appendChild(span);\n      this.contentEl_ = createEl('span', {\n        className: className + \"-display\"\n      }, {\n        // tell screen readers not to automatically read the time as it changes\n        'aria-live': 'off',\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        'role': 'presentation'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Updates the time display text node with a new time\n     *\n     * @param {number} [time=0] the time to update to\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateTextNode_ = function updateTextNode_(time) {\n      var _this2 = this;\n\n      if (time === void 0) {\n        time = 0;\n      }\n\n      time = formatTime(time);\n\n      if (this.formattedTime_ === time) {\n        return;\n      }\n\n      this.formattedTime_ = time;\n      this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n        if (!_this2.contentEl_) {\n          return;\n        }\n\n        var oldNode = _this2.textNode_;\n\n        if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n          oldNode = null;\n          log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n        }\n\n        _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n        if (!_this2.textNode_) {\n          return;\n        }\n\n        if (oldNode) {\n          _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n        } else {\n          _this2.contentEl_.appendChild(_this2.textNode_);\n        }\n      });\n    }\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {};\n\n    return TimeDisplay;\n  }(Component$1);\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  TimeDisplay.prototype.labelText_ = 'Time';\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component$1.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n\n  var CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n    function CurrentTimeDisplay() {\n      return _TimeDisplay.apply(this, arguments) || this;\n    }\n\n    var _proto = CurrentTimeDisplay.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-current-time';\n    }\n    /**\n     * Update current time display\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      var time;\n\n      if (this.player_.ended()) {\n        time = this.player_.duration();\n      } else {\n        time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return CurrentTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n\n  var DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(DurationDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function DurationDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      var updateContent = function updateContent(e) {\n        return _this.updateContent(e);\n      }; // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n\n\n      _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n      _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n\n\n      _this.on(player, 'loadedmetadata', updateContent);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = DurationDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-duration';\n    }\n    /**\n     * Update duration time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      var duration = this.player_.duration();\n      this.updateTextNode_(duration);\n    };\n\n    return DurationDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DurationDisplay.prototype.labelText_ = 'Duration';\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component$1.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n\n  var TimeDivider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDivider, _Component);\n\n    function TimeDivider() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = TimeDivider.prototype;\n\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-control vjs-time-divider'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n\n      var div = _Component.prototype.createEl.call(this, 'div');\n\n      var span = _Component.prototype.createEl.call(this, 'span', {\n        textContent: '/'\n      });\n\n      div.appendChild(span);\n      el.appendChild(div);\n      return el;\n    };\n\n    return TimeDivider;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n\n  var RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function RemainingTimeDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      _this.on(player, 'durationchange', function (e) {\n        return _this.updateContent(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = RemainingTimeDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = _TimeDisplay.prototype.createEl.call(this);\n\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n      return el;\n    }\n    /**\n     * Update remaining time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      }\n\n      var time; // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n\n      if (this.player_.ended()) {\n        time = 0;\n      } else if (this.player_.remainingTimeDisplay) {\n        time = this.player_.remainingTimeDisplay();\n      } else {\n        time = this.player_.remainingTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return RemainingTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var LiveDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LiveDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.updateShowing();\n\n      _this.on(_this.player(), 'durationchange', function (e) {\n        return _this.updateShowing(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LiveDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-live-control vjs-control'\n      });\n\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display'\n      }, {\n        'aria-live': 'off'\n      });\n      this.contentEl_.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('Stream Type') + \"\\xA0\"\n      }));\n      this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateShowing = function updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    return LiveDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var SeekToLive = /*#__PURE__*/function (_Button) {\n    inheritsLoose(SeekToLive, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekToLive(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.updateLiveEdgeStatus();\n\n      if (_this.player_.liveTracker) {\n        _this.updateLiveEdgeStatusHandler_ = function (e) {\n          return _this.updateLiveEdgeStatus(e);\n        };\n\n        _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = SeekToLive.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Button.prototype.createEl.call(this, 'button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        textContent: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    ;\n\n    _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    ;\n\n    _proto.handleClick = function handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n    /**\n     * Dispose of the element and stop tracking\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n\n      this.textEl_ = null;\n\n      _Button.prototype.dispose.call(this);\n    };\n\n    return SeekToLive;\n  }(Button);\n\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component$1.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * Keep a number between a min and a max value\n   *\n   * @param {number} number\n   *        The number to clamp\n   *\n   * @param {number} min\n   *        The minimum value\n   * @param {number} max\n   *        The maximum value\n   *\n   * @return {number}\n   *         the clamped number\n   */\n  var clamp = function clamp(number, min, max) {\n    number = Number(number);\n    return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n  };\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n\n  var Slider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Slider, _Component);\n\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    function Slider(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleMouseDown_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.handleMouseUp_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMouseMove_ = function (e) {\n        return _this.handleMouseMove(e);\n      };\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      }; // Set property names to bar to match with the child Slider class is looking for\n\n\n      _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n      _this.vertical(!!_this.options_.vertical);\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n\n\n    var _proto = Slider.prototype;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on('mousedown', this.handleMouseDown_);\n      this.on('touchstart', this.handleMouseDown_);\n      this.on('keydown', this.handleKeyDown_);\n      this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n      this.on(this.player_, 'controlsvisible', this.update);\n\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    ;\n\n    _proto.disable = function disable() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      var doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown_);\n      this.off('touchstart', this.handleMouseDown_);\n      this.off('keydown', this.handleKeyDown_);\n      this.off('click', this.handleClick_);\n      this.off(this.player_, 'controlsvisible', this.update_);\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n\n      this.enabled_ = false;\n    }\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl(type, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = assign({\n        tabIndex: 0\n      }, props);\n      attributes = assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'tabIndex': 0\n      }, attributes);\n      return _Component.prototype.createEl.call(this, type, props, attributes);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.bar.el_.ownerDocument;\n\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      } // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintented scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove_);\n      this.on(doc, 'mouseup', this.handleMouseUp_);\n      this.on(doc, 'touchmove', this.handleMouseMove_);\n      this.on(doc, 'touchend', this.handleMouseUp_);\n      this.handleMouseMove(event);\n    }\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {}\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp() {\n      var doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.update();\n    }\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    ;\n\n    _proto.update = function update() {\n      var _this2 = this;\n\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      // If there's no bar...\n      if (!this.el_ || !this.bar) {\n        return;\n      } // clamp progress between 0 and 1\n      // and only round to four decimal places, as we round to two below\n\n\n      var progress = this.getProgress();\n\n      if (progress === this.progress_) {\n        return progress;\n      }\n\n      this.progress_ = progress;\n      this.requestNamedAnimationFrame('Slider#update', function () {\n        // Set the new bar width or height\n        var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n        _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n      });\n      return progress;\n    }\n    /**\n     * Get the percentage of the bar that should be filled\n     * but clamped and rounded.\n     *\n     * @return {number}\n     *         percentage filled that the slider is\n     */\n    ;\n\n    _proto.getProgress = function getProgress() {\n      return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n    }\n    /**\n     * Calculate distance for slider\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    ;\n\n    _proto.calculateDistance = function calculateDistance(event) {\n      var position = getPointerPosition(this.el_, event);\n\n      if (this.vertical()) {\n        return position.y;\n      }\n\n      return position.x;\n    }\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {EventTarget~Event} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    ;\n\n    _proto.vertical = function vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n\n      this.vertical_ = !!bool;\n\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    };\n\n    return Slider;\n  }(Component$1);\n\n  Component$1.registerComponent('Slider', Slider);\n\n  var percentify = function percentify(time, end) {\n    return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n  };\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n\n\n  var LoadProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LoadProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.partEls_ = [];\n\n      _this.on(player, 'progress', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LoadProgressBar.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-load-progress'\n      });\n\n      var wrapper = createEl('span', {\n        className: 'vjs-control-text'\n      });\n      var loadedText = createEl('span', {\n        textContent: this.localize('Loaded')\n      });\n      var separator = document.createTextNode(': ');\n      this.percentageEl_ = createEl('span', {\n        className: 'vjs-control-text-loaded-percentage',\n        textContent: '0%'\n      });\n      el.appendChild(wrapper);\n      wrapper.appendChild(loadedText);\n      wrapper.appendChild(separator);\n      wrapper.appendChild(this.percentageEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.partEls_ = null;\n      this.percentageEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Update progress bar\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n        var liveTracker = _this2.player_.liveTracker;\n\n        var buffered = _this2.player_.buffered();\n\n        var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n        var bufferedEnd = _this2.player_.bufferedEnd();\n\n        var children = _this2.partEls_;\n        var percent = percentify(bufferedEnd, duration);\n\n        if (_this2.percent_ !== percent) {\n          // update the width of the progress bar\n          _this2.el_.style.width = percent; // update the control-text\n\n          textContent(_this2.percentageEl_, percent);\n          _this2.percent_ = percent;\n        } // add child elements to represent the individual buffered time ranges\n\n\n        for (var i = 0; i < buffered.length; i++) {\n          var start = buffered.start(i);\n          var end = buffered.end(i);\n          var part = children[i];\n\n          if (!part) {\n            part = _this2.el_.appendChild(createEl());\n            children[i] = part;\n          } //  only update if changed\n\n\n          if (part.dataset.start === start && part.dataset.end === end) {\n            continue;\n          }\n\n          part.dataset.start = start;\n          part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n          part.style.left = percentify(start, bufferedEnd);\n          part.style.width = percentify(end - start, bufferedEnd);\n        } // remove unused buffered range elements\n\n\n        for (var _i = children.length; _i > buffered.length; _i--) {\n          _this2.el_.removeChild(children[_i - 1]);\n        }\n\n        children.length = buffered.length;\n      });\n    };\n\n    return LoadProgressBar;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n\n  var TimeTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint, content) {\n      var tooltipRect = findPosition(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      } // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n\n\n      var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n\n      var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n\n      var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      } // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      } // prevent small width fluctuations within 0.4px from\n      // changing the value below.\n      // This really helps for live to prevent the play\n      // progress time tooltip from jittering\n\n\n      pullTooltipBy = Math.round(pullTooltipBy);\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      this.write(content);\n    }\n    /**\n     * Write the time to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted time for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n        var content;\n\n        var duration = _this2.player_.duration();\n\n        if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n          var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n          var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n\n        _this2.update(seekBarRect, seekBarPoint, content);\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return TimeTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var PlayProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(PlayProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlayProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlayProgressBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var timeTooltip = this.getChild('timeTooltip');\n\n      if (!timeTooltip) {\n        return;\n      }\n\n      var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    };\n\n    return PlayProgressBar;\n  }(Component$1);\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  }; // Time tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n\n  Component$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseTimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseTimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseTimeDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var _this2 = this;\n\n      var time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n        _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n      });\n    };\n\n    return MouseTimeDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  var STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\n  var PAGE_KEY_MULTIPLIER = 12;\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n\n  var SeekBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(SeekBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.setEventHandlers_();\n\n      return _this;\n    }\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n\n\n    var _proto = SeekBar.prototype;\n\n    _proto.setEventHandlers_ = function setEventHandlers_() {\n      var _this2 = this;\n\n      this.update_ = bind(this, this.update);\n      this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      } // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n\n\n      this.updateInterval = null;\n\n      this.enableIntervalHandler_ = function (e) {\n        return _this2.enableInterval_(e);\n      };\n\n      this.disableIntervalHandler_ = function (e) {\n        return _this2.disableInterval_(e);\n      };\n\n      this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    };\n\n    _proto.toggleVisibility_ = function toggleVisibility_(e) {\n      if (document.visibilityState === 'hidden') {\n        this.cancelNamedAnimationFrame('SeekBar#update');\n        this.cancelNamedAnimationFrame('Slider#update');\n        this.disableInterval_(e);\n      } else {\n        if (!this.player_.ended() && !this.player_.paused()) {\n          this.enableInterval_();\n        } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n        this.update();\n      }\n    };\n\n    _proto.enableInterval_ = function enableInterval_() {\n      if (this.updateInterval) {\n        return;\n      }\n\n      this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n    };\n\n    _proto.disableInterval_ = function disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n        return;\n      }\n\n      if (!this.updateInterval) {\n        return;\n      }\n\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this3 = this;\n\n      // ignore updates while the tab is hidden\n      if (document.visibilityState === 'hidden') {\n        return;\n      }\n\n      var percent = _Slider.prototype.update.call(this);\n\n      this.requestNamedAnimationFrame('SeekBar#update', function () {\n        var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n        var liveTracker = _this3.player_.liveTracker;\n\n        var duration = _this3.player_.duration();\n\n        if (liveTracker && liveTracker.isLive()) {\n          duration = _this3.player_.liveTracker.liveCurrentTime();\n        }\n\n        if (_this3.percent_ !== percent) {\n          // machine readable value of progress bar (percentage complete)\n          _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n          _this3.percent_ = percent;\n        }\n\n        if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n          // human readable value of progress bar (time complete)\n          _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n          _this3.currentTime_ = currentTime;\n          _this3.duration_ = duration;\n        } // update the progress bar time tooltip with the current time\n\n\n        if (_this3.bar) {\n          _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n        }\n      });\n      return percent;\n    }\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    ;\n\n    _proto.userSeek_ = function userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n\n      this.player_.currentTime(ct);\n    }\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    ;\n\n    _proto.getCurrentTime_ = function getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      var currentTime = this.getCurrentTime_();\n      var percent;\n      var liveTracker = this.player_.liveTracker;\n\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n\n      return percent;\n    }\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      } // Stop event propagation to prevent double fire in progress-control.js\n\n\n      event.stopPropagation();\n      this.player_.scrubbing(true);\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      var newTime;\n      var distance = this.calculateDistance(event);\n      var liveTracker = this.player_.liveTracker;\n\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        if (distance >= 0.99) {\n          liveTracker.seekToLiveEdge();\n          return;\n        }\n\n        var seekableStart = liveTracker.seekableStart();\n        var seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        } // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n\n\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        } // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n\n\n        if (newTime === Infinity) {\n          return;\n        }\n      } // Set new time (tell player to seek to new time)\n\n\n      this.userSeek_(newTime);\n    };\n\n    _proto.enable = function enable() {\n      _Slider.prototype.enable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.show();\n    };\n\n    _proto.disable = function disable() {\n      _Slider.prototype.disable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.hide();\n    }\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.player_.scrubbing(false);\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      } else {\n        // We're done seeking and the time has changed.\n        // If the player is paused, make sure we display the correct time on the seek bar.\n        this.update_();\n      }\n    }\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n    }\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n    }\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    ;\n\n    _proto.handleAction = function handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var liveTracker = this.player_.liveTracker;\n\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (keycode.isEventKey(event, 'Home')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(0);\n      } else if (keycode.isEventKey(event, 'End')) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.liveCurrentTime());\n        } else {\n          this.userSeek_(this.player_.duration());\n        }\n      } else if (/^[0-9]$/.test(keycode(event))) {\n        event.preventDefault();\n        event.stopPropagation();\n        var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n        } else {\n          this.userSeek_(this.player_.duration() * gotoFraction);\n        }\n      } else if (keycode.isEventKey(event, 'PgDn')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (keycode.isEventKey(event, 'PgUp')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Slider.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.disableInterval_();\n      this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n\n      this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.off(document, 'visibilitychange', this.toggleVisibility_);\n      }\n\n      _Slider.prototype.dispose.call(this);\n    };\n\n    return SeekBar;\n  }(Slider);\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  }; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n\n  Component$1.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n\n  var ProgressControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ProgressControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ProgressControl(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.handleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      _this.throttledHandleMouseSeek = throttle(bind(assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleMouseDownHandler_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = ProgressControl.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (!seekBar) {\n        return;\n      }\n\n      var playProgressBar = seekBar.getChild('playProgressBar');\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n      if (!playProgressBar && !mouseTimeDisplay) {\n        return;\n      }\n\n      var seekBarEl = seekBar.el();\n      var seekBarRect = findPosition(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n\n      if (playProgressBar) {\n        playProgressBar.update(seekBarRect, seekBar.getProgress());\n      }\n    }\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseSeek = function handleMouseSeek(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    ;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.children().forEach(function (child) {\n        return child.disable && child.disable();\n      });\n\n      if (!this.enabled()) {\n        return;\n      }\n\n      this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeListenersAddedOnMousedownAndTouchstart();\n      this.addClass('disabled');\n      this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n      if (this.player_.scrubbing()) {\n        var seekBar = this.getChild('seekBar');\n        this.player_.scrubbing(false);\n\n        if (seekBar.videoWasPlaying) {\n          silencePromise(this.player_.play());\n        }\n      }\n    }\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.children().forEach(function (child) {\n        return child.enable && child.enable();\n      });\n\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n    /**\n     * Cleanup listeners after the user finishes interacting with the progress controls\n     */\n    ;\n\n    _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n\n      this.removeListenersAddedOnMousedownAndTouchstart();\n    };\n\n    return ProgressControl;\n  }(Component$1);\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component$1.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n\n  var PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PictureInPictureToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    function PictureInPictureToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n        return _this.handlePictureInPictureChange(e);\n      });\n\n      _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n        return _this.handlePictureInPictureEnabledChange(e);\n      }); // TODO: Deactivate button on player emptied event.\n\n\n      _this.disable();\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PictureInPictureToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enables or disables button based on document.pictureInPictureEnabled property value\n     * or on value returned by player.disablePictureInPicture() method.\n     */\n    ;\n\n    _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n      if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n    /**\n     * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    ;\n\n    _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n      if (this.player_.isInPictureInPicture()) {\n        this.controlText('Exit Picture-in-Picture');\n      } else {\n        this.controlText('Picture-in-Picture');\n      }\n\n      this.handlePictureInPictureEnabledChange();\n    }\n    /**\n     * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isInPictureInPicture()) {\n        this.player_.requestPictureInPicture();\n      } else {\n        this.player_.exitPictureInPicture();\n      }\n    };\n\n    return PictureInPictureToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n  Component$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n\n  var FullscreenToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(FullscreenToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function FullscreenToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, 'fullscreenchange', function (e) {\n        return _this.handleFullscreenChange(e);\n      });\n\n      if (document[player.fsApi_.fullscreenEnabled] === false) {\n        _this.disable();\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = FullscreenToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Non-Fullscreen');\n      } else {\n        this.controlText('Fullscreen');\n      }\n    }\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    };\n\n    return FullscreenToggle;\n  }(Button);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkVolumeSupport = function checkVolumeSupport(self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeLevel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevel, _Component);\n\n    function VolumeLevel() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = VolumeLevel.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-level'\n      });\n\n      el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n        className: 'vjs-control-text'\n      }));\n      return el;\n    };\n\n    return VolumeLevel;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * Volume level tooltips display a volume above or side by side the volume bar.\n   *\n   * @extends Component\n   */\n\n  var VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevelTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeLevelTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the volume tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeLevelTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the tooltip relative to the `VolumeBar` and\n     * its content text.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n      if (!vertical) {\n        var tooltipRect = getBoundingClientRect(this.el_);\n        var playerRect = getBoundingClientRect(this.player_.el());\n        var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n        if (!playerRect || !tooltipRect) {\n          return;\n        }\n\n        var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n        var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n        var pullTooltipBy = tooltipRect.width / 2;\n\n        if (spaceLeftOfPoint < pullTooltipBy) {\n          pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n        } else if (spaceRightOfPoint < pullTooltipBy) {\n          pullTooltipBy = spaceRightOfPoint;\n        }\n\n        if (pullTooltipBy < 0) {\n          pullTooltipBy = 0;\n        } else if (pullTooltipBy > tooltipRect.width) {\n          pullTooltipBy = tooltipRect.width;\n        }\n\n        this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      }\n\n      this.write(content + \"%\");\n    }\n    /**\n     * Write the volume to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted volume for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the volume tooltip relative to the `VolumeBar`.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     * @param {number} volume\n     *        The volume level to update the tooltip to\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n        _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return VolumeLevelTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n  /**\n   * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n   * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n   * indicating the volume level which is represented by a given point in the\n   * {@link VolumeBar}.\n   *\n   * @extends Component\n   */\n\n  var MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseVolumeLevelDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseVolumeLevelDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enquires updates to its own DOM as well as the DOM of its\n     * {@link VolumeLevelTooltip} child.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n      var _this2 = this;\n\n      var volume = 100 * rangeBarPoint;\n      this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n        if (vertical) {\n          _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n        } else {\n          _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n        }\n      });\n    };\n\n    return MouseVolumeLevelDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseVolumeLevelDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseVolumeLevelDisplay.prototype.options_ = {\n    children: ['volumeLevelTooltip']\n  };\n  Component$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n\n  var VolumeBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(VolumeBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.on('slideractive', function (e) {\n        return _this.updateLastVolume_(e);\n      });\n\n      _this.on(player, 'volumechange', function (e) {\n        return _this.updateARIAAttributes(e);\n      });\n\n      player.ready(function () {\n        return _this.updateARIAAttributes();\n      });\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n      if (mouseVolumeLevelDisplay) {\n        var volumeBarEl = this.el();\n        var volumeBarRect = getBoundingClientRect(volumeBarEl);\n        var vertical = this.vertical();\n        var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n        volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `VolumeBar`. This ensures we stay within it at all times.\n\n        volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n        mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n      }\n\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n    /**\n     * If the player is muted unmute it.\n     */\n    ;\n\n    _proto.checkMuted = function checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n\n      return this.player_.volume();\n    }\n    /**\n     * Increase volume level for keyboard users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n    /**\n     * Decrease volume level for keyboard users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n      var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    ;\n\n    _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    ;\n\n    _proto.updateLastVolume_ = function updateLastVolume_() {\n      var _this2 = this;\n\n      var volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', function () {\n        if (_this2.player_.volume() === 0) {\n          _this2.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    };\n\n    return VolumeBar;\n  }(Slider);\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  }; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n  }\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n\n\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component$1.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumeControl(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n\n      _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkVolumeSupport(assertThisInitialized(_this), player);\n      _this.throttledHandleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('touchstart', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('mousemove', function (e) {\n        return _this.handleMouseMove(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n        _this.volumeBar.addClass('vjs-slider-active');\n\n        _this.addClass('vjs-slider-active');\n\n        _this.trigger('slideractive');\n      });\n\n      _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n        _this.volumeBar.removeClass('vjs-slider-active');\n\n        _this.removeClass('vjs-slider-active');\n\n        _this.trigger('sliderinactive');\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeControl.prototype;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-horizontal';\n\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-control vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    };\n\n    return VolumeControl;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component$1.registerComponent('VolumeControl', VolumeControl);\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkMuteSupport = function checkMuteSupport(self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n\n  var MuteToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(MuteToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MuteToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkMuteSupport(assertThisInitialized(_this), player);\n\n      _this.on(player, ['loadstart', 'volumechange'], function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = MuteToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var vol = this.player_.volume();\n      var lastVolume = this.player_.lastVolume_();\n\n      if (vol === 0) {\n        var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateIcon_ = function updateIcon_() {\n      var vol = this.player_.volume();\n      var level = 3; // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n\n      if (vol === 0 || this.player_.muted()) {\n        level = 0;\n      } else if (vol < 0.33) {\n        level = 1;\n      } else if (vol < 0.67) {\n        level = 2;\n      } // TODO improve muted icon classes\n\n\n      for (var i = 0; i < 4; i++) {\n        removeClass(this.el_, \"vjs-vol-\" + i);\n      }\n\n      addClass(this.el_, \"vjs-vol-\" + level);\n    }\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateControlText_ = function updateControlText_() {\n      var soundOff = this.player_.muted() || this.player_.volume() === 0;\n      var text = soundOff ? 'Unmute' : 'Mute';\n\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    };\n\n    return MuteToggle;\n  }(Button);\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component$1.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n\n  var VolumePanel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumePanel, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumePanel(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      } // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n\n\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n\n      _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n      _this.handleKeyPressHandler_ = function (e) {\n        return _this.handleKeyPress(e);\n      };\n\n      _this.on(player, ['loadstart'], function (e) {\n        return _this.volumePanelState_(e);\n      });\n\n      _this.on(_this.muteToggle, 'keyup', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on(_this.volumeControl, 'keyup', function (e) {\n        return _this.handleVolumeControlKeyUp(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on('mouseover', function (e) {\n        return _this.handleMouseOver(e);\n      });\n\n      _this.on('mouseout', function (e) {\n        return _this.handleMouseOut(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n      _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n      return _this;\n    }\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n\n\n    var _proto = VolumePanel.prototype;\n\n    _proto.sliderActive_ = function sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    ;\n\n    _proto.sliderInactive_ = function sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    ;\n\n    _proto.volumePanelState_ = function volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      } // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n\n\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-panel-horizontal';\n\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-panel vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Dispose of the `volume-panel` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseOut();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n     * the volume panel and sets focus on `MuteToggle`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keyup` event that caused this function to be called.\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.muteToggle.focus();\n      }\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n     * Turns on listening for `mouseover` event. When they happen it\n     * calls `this.handleMouseOver`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseover` event that caused this function to be called.\n     *\n     * @listens mouseover\n     */\n    ;\n\n    _proto.handleMouseOver = function handleMouseOver(event) {\n      this.addClass('vjs-hover');\n      on(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n     * Turns on listening for `mouseout` event. When they happen it\n     * calls `this.handleMouseOut`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseout` event that caused this function to be called.\n     *\n     * @listens mouseout\n     */\n    ;\n\n    _proto.handleMouseOut = function handleMouseOut(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n     * looking for ESC, which hides the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        The keypress that triggered this event.\n     *\n     * @listens keydown | keyup\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.handleMouseOut();\n      }\n    };\n\n    return VolumePanel;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component$1.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n\n  var Menu = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Menu, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    function Menu(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (options) {\n        _this.menuButton_ = options.menuButton;\n      }\n\n      _this.focusedChild_ = -1;\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n      _this.boundHandleBlur_ = function (e) {\n        return _this.handleBlur(e);\n      };\n\n      _this.boundHandleTapClick_ = function (e) {\n        return _this.handleTapClick(e);\n      };\n\n      return _this;\n    }\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n\n\n    var _proto = Menu.prototype;\n\n    _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    ;\n\n    _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      this.removeEventListenerForItem(component);\n\n      _Component.prototype.removeChild.call(this, component);\n    }\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    ;\n\n    _proto.addItem = function addItem(component) {\n      var childComponent = this.addChild(component);\n\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n\n      el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {EventTarget~Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    ;\n\n    _proto.handleBlur = function handleBlur(event) {\n      var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n      if (!this.children().some(function (element) {\n        return element.el() === relatedTarget;\n      })) {\n        var btn = this.menuButton_;\n\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    ;\n\n    _proto.handleTapClick = function handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        var childComponents = this.children();\n\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n\n        var foundComponent = childComponents.filter(function (component) {\n          return component.el() === event.target;\n        })[0];\n\n        if (!foundComponent) {\n          return;\n        } // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    ;\n\n    _proto.focus = function focus(item) {\n      if (item === void 0) {\n        item = 0;\n      }\n\n      var children = this.children().slice();\n      var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n      if (haveTitle) {\n        children.shift();\n      }\n\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    };\n\n    return Menu;\n  }(Component$1);\n\n  Component$1.registerComponent('Menu', Menu);\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n\n  var MenuButton = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MenuButton, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function MenuButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Component.call(this, player, options) || this;\n      _this.menuButton_ = new Button(player, options);\n\n      _this.menuButton_.controlText(_this.controlText_);\n\n      _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n      _this.menuButton_.removeClass('vjs-control');\n\n      _this.addChild(_this.menuButton_);\n\n      _this.update();\n\n      _this.enabled_ = true;\n\n      var handleClick = function handleClick(e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMenuKeyUp_ = function (e) {\n        return _this.handleMenuKeyUp(e);\n      };\n\n      _this.on(_this.menuButton_, 'tap', handleClick);\n\n      _this.on(_this.menuButton_, 'click', handleClick);\n\n      _this.on(_this.menuButton_, 'keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on(_this.menuButton_, 'mouseenter', function () {\n        _this.addClass('vjs-hover');\n\n        _this.menu.show();\n\n        on(document, 'keyup', _this.handleMenuKeyUp_);\n      });\n\n      _this.on('mouseleave', function (e) {\n        return _this.handleMouseLeave(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleSubmenuKeyDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     */\n\n\n    var _proto = MenuButton.prototype;\n\n    _proto.update = function update() {\n      var menu = this.createMenu();\n\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n\n      this.menu = menu;\n      this.addChild(menu);\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      var menu = new Menu(this.player_, {\n        menuButton: this\n      });\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n\n      this.hideThreshold_ = 0; // Add a title list item to the top\n\n      if (this.options_.title) {\n        var titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          textContent: toTitleCase$1(this.options_.title),\n          tabIndex: -1\n        });\n        var titleComponent = new Component$1(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n\n      this.items = this.createItems();\n\n      if (this.items) {\n        // Add menu items to the menu\n        for (var i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n\n      return menu;\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.createItems = function createItems() {}\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    ;\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      } // TODO: Fix the CSS so that this isn't necessary\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.menuButton_.el();\n      }\n\n      return this.menuButton_.controlText(text, el);\n    }\n    /**\n     * Dispose of the `menu-button` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseLeave();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n    /**\n     * Handle `mouseleave` for `MenuButton`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseleave` event that caused this function to be called.\n     *\n     * @listens mouseleave\n     */\n    ;\n\n    _proto.handleMouseLeave = function handleMouseLeave(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleMenuKeyUp_);\n    }\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.menuButton_.focus();\n    }\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.menuButton_.blur();\n    }\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n      } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n    /**\n     * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n      // Escape hides popup menu\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        this.removeClass('vjs-hover');\n      }\n    }\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    ;\n\n    _proto.pressButton = function pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n\n        this.menu.focus();\n      }\n    }\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    ;\n\n    _proto.unpressButton = function unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    };\n\n    return MenuButton;\n  }(Component$1);\n\n  Component$1.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n\n  var TrackButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(TrackButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TrackButton(player, options) {\n      var _this;\n\n      var tracks = options.tracks;\n      _this = _MenuButton.call(this, player, options) || this;\n\n      if (_this.items.length <= 1) {\n        _this.hide();\n      }\n\n      if (!tracks) {\n        return assertThisInitialized(_this);\n      }\n\n      var updateHandler = bind(assertThisInitialized(_this), _this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n      tracks.addEventListener('labelchange', updateHandler);\n\n      _this.player_.on('ready', updateHandler);\n\n      _this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n        tracks.removeEventListener('labelchange', updateHandler);\n      });\n\n      return _this;\n    }\n\n    return TrackButton;\n  }(MenuButton);\n\n  Component$1.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-keys.js\n   */\n\n  /**\n    * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n    * Note that 'Enter' and 'Space' are not included here (otherwise they would\n    * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n    * @typedef MenuKeys\n    * @array\n    */\n  var MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n\n  var MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(MenuItem, _ClickableComponent);\n\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    function MenuItem(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n      _this.selectable = options.selectable;\n      _this.isSelected_ = options.selected || false;\n      _this.multiSelectable = options.multiSelectable;\n\n      _this.selected(_this.isSelected_);\n\n      if (_this.selectable) {\n        if (_this.multiSelectable) {\n          _this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          _this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        _this.el_.setAttribute('role', 'menuitem');\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = MenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n\n      var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n        className: 'vjs-menu-item',\n        tabIndex: -1\n      }, props), attrs); // swap icon with menu item text.\n\n\n      el.replaceChild(createEl('span', {\n        className: 'vjs-menu-item-text',\n        textContent: this.localize(this.options_.label)\n      }), el.querySelector('.vjs-icon-placeholder'));\n      return el;\n    }\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (!MenuKeys.some(function (key) {\n        return keycode.isEventKey(event, key);\n      })) {\n        // Pass keydown handling up for unused keys\n        _ClickableComponent.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      this.selected(true);\n    }\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    ;\n\n    _proto.selected = function selected(_selected) {\n      if (this.selectable) {\n        if (_selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    };\n\n    return MenuItem;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n\n  var TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TextTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n\n      _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this.handleSelectedLanguageChange.apply(assertThisInitialized(_this), args);\n      };\n\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n      _this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n\n\n      if (tracks.onchange === undefined) {\n        var event;\n\n        _this.on(['tap', 'click'], function () {\n          if (typeof window.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window.Event('change');\n            } catch (err) {// continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      } // set the default state based on current tracks\n\n\n      _this.handleTracksChange();\n\n      return _this;\n    }\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = TextTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      var referenceTrack = this.track;\n      var tracks = this.player_.textTracks();\n\n      _MenuItem.prototype.handleClick.call(this, event);\n\n      if (!tracks) {\n        return;\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        } // If this text track is the component's track and it is not showing,\n        // set it to showing.\n\n\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          } // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n    /**\n     * Handle text track list change\n     *\n     * @param {EventTarget~Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n\n      _MenuItem.prototype.dispose.call(this);\n    };\n\n    return TextTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * A special menu item for turning of a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function OffTextTrackMenuItem(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player: player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        \"default\": false,\n        mode: 'disabled'\n      };\n\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      } // MenuItem is selectable\n\n\n      options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n      options.multiSelectable = false;\n      return _TextTrackMenuItem.call(this, player, options) || this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     */\n\n\n    var _proto = OffTextTrackMenuItem.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var shouldBeSelected = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      } // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      var tracks = this.player().textTracks();\n      var allHidden = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    };\n\n    return OffTextTrackMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n\n  var TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(TextTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function TextTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.textTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n\n\n    var _proto = TextTrackButton.prototype;\n\n    _proto.createItems = function createItems(items, TrackMenuItem) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      if (TrackMenuItem === void 0) {\n        TrackMenuItem = TextTrackMenuItem;\n      }\n\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      var label;\n\n      if (this.label_) {\n        label = this.label_ + \" off\";\n      } // Add an OFF menu item to turn all tracks off\n\n\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label: label\n      }));\n      this.hideThreshold_ += 1;\n      var tracks = this.player_.textTracks();\n\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          var item = new TrackMenuItem(this.player_, {\n            track: track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n          items.push(item);\n        }\n      }\n\n      return items;\n    };\n\n    return TextTrackButton;\n  }(TrackButton);\n\n  Component$1.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n\n  var ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ChaptersTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var cue = options.cue;\n      var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n      _this.cue = cue;\n      track.addEventListener('cuechange', bind(assertThisInitialized(_this), _this.update));\n      return _this;\n    }\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = ChaptersTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player_.currentTime(this.cue.startTime);\n      this.update(this.cue.startTime);\n    }\n    /**\n     * Update chapter menu item\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `cuechange` event that caused this function to run.\n     *\n     * @listens TextTrack#cuechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var cue = this.cue;\n      var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n      this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n    };\n\n    return ChaptersTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n\n  var ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(ChaptersButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this function is ready.\n     */\n    function ChaptersButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = ChaptersButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {EventTarget~Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.update = function update(event) {\n      if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n        this.setTrack(this.findChaptersTrack());\n      }\n\n      _TextTrackButton.prototype.update.call(this);\n    }\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    ;\n\n    _proto.setTrack = function setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      } // here this.track_ refers to the old track instance\n\n\n      if (this.track_) {\n        var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n\n        this.track_ = null;\n      }\n\n      this.track_ = track; // here this.track_ refers to the new track instance\n\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n\n        var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (_remoteTextTrackEl) {\n          _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n      }\n    }\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    ;\n\n    _proto.findChaptersTrack = function findChaptersTrack() {\n      var tracks = this.player_.textTracks() || [];\n\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        var track = tracks[i];\n\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    ;\n\n    _proto.getMenuCaption = function getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n\n      return this.localize(toTitleCase$1(this.kind_));\n    }\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return _TextTrackButton.prototype.createMenu.call(this);\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!this.track_) {\n        return items;\n      }\n\n      var cues = this.track_.cues;\n\n      if (!cues) {\n        return items;\n      }\n\n      for (var i = 0, l = cues.length; i < l; i++) {\n        var cue = cues[i];\n        var mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue: cue\n        });\n        items.push(mi);\n      }\n\n      return items;\n    };\n\n    return ChaptersButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  ChaptersButton.prototype.kind_ = 'chapters';\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component$1.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n\n  var DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function DescriptionsButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n      var tracks = player.textTracks();\n      var changeHandler = bind(assertThisInitialized(_this), _this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n\n\n    var _proto = DescriptionsButton.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var disabled = false; // Check whether a track of a different kind is showing\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      } // If another track is showing, disable this menu button\n\n\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return DescriptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function SubtitlesButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubtitlesButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return SubtitlesButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function CaptionSettingsMenuItem(player, options) {\n      var _this;\n\n      options.track = {\n        player: player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        \"default\": false,\n        mode: 'disabled'\n      }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n      _this.addClass('vjs-texttrack-settings');\n\n      _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n      return _this;\n    }\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = CaptionSettingsMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    };\n\n    return CaptionSettingsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n\n  var CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(CaptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function CaptionsButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = CaptionsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      return _TextTrackButton.prototype.createItems.call(this, items);\n    };\n\n    return CaptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CaptionsButton.prototype.kind_ = 'captions';\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component$1.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n    function SubsCapsMenuItem() {\n      return _TextTrackMenuItem.apply(this, arguments) || this;\n    }\n\n    var _proto = SubsCapsMenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'captions') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          // space added as the text will visually flow with the\n          // label\n          textContent: \" \" + this.localize('Captions')\n        }));\n      }\n\n      return el;\n    };\n\n    return SubsCapsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n    function SubsCapsButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n\n      _this.label_ = 'subtitles';\n\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n        _this.label_ = 'captions';\n      }\n\n      _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubsCapsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n      return items;\n    };\n\n    return SubsCapsButton;\n  }(TextTrackButton);\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n\n\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n\n  var AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function AudioTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n\n      _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n\n    var _proto = AudioTrackMenuItem.prototype;\n\n    _proto.createEl = function createEl(type, props, attrs) {\n      var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'main-desc') {\n        parentSpan.appendChild(_MenuItem.prototype.createEl.call(this, 'span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(_MenuItem.prototype.createEl.call(this, 'span', {\n          className: 'vjs-control-text',\n          textContent: this.localize('Descriptions')\n        }));\n      }\n\n      return el;\n    }\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n      // off for us.\n\n\n      this.track.enabled = true;\n    }\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    };\n\n    return AudioTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n\n  var AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(AudioTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function AudioTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.audioTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = AudioTrackButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems(items) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n\n      return items;\n    };\n\n    return AudioTrackButton;\n  }(TrackButton);\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n\n  var PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuItem(player, options) {\n      var _this;\n\n      var label = options.rate;\n      var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n      options.label = label;\n      options.selected = rate === player.playbackRate();\n      options.selectable = true;\n      options.multiSelectable = false;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.label = label;\n      _this.rate = rate;\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = PlaybackRateMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player().playbackRate(this.rate);\n    }\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    };\n\n    return PlaybackRateMenuItem;\n  }(MenuItem);\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n\n  var PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuButton(player, options) {\n      var _this;\n\n      _this = _MenuButton.call(this, player, options) || this;\n\n      _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n      _this.updateVisibility();\n\n      _this.updateLabel();\n\n      _this.on(player, 'loadstart', function (e) {\n        return _this.updateVisibility(e);\n      });\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.updateLabel(e);\n      });\n\n      _this.on(player, 'playbackrateschange', function (e) {\n        return _this.handlePlaybackRateschange(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlaybackRateMenuButton.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _MenuButton.prototype.createEl.call(this);\n\n      this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        id: this.labelElId_,\n        textContent: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.labelEl_ = null;\n\n      _MenuButton.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var rates = this.playbackRates();\n      var items = [];\n\n      for (var i = rates.length - 1; i >= 0; i--) {\n        items.push(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n\n      return items;\n    }\n    /**\n     * Updates ARIA accessibility attributes\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes() {\n      // Current playback rate\n      this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // select next rate option\n      var currentRate = this.player().playbackRate();\n      var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n      var newRate = rates[0];\n\n      for (var i = 0; i < rates.length; i++) {\n        if (rates[i] > currentRate) {\n          newRate = rates[i];\n          break;\n        }\n      }\n\n      this.player().playbackRate(newRate);\n    }\n    /**\n     * On playbackrateschange, update the menu to account for the new items.\n     *\n     * @listens Player#playbackrateschange\n     */\n    ;\n\n    _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n      this.update();\n    }\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates() {\n      var player = this.player();\n      return player.playbackRates && player.playbackRates() || [];\n    }\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    ;\n\n    _proto.playbackRateSupported = function playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.updateVisibility = function updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n    /**\n     * Update button label when rate changed\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.updateLabel = function updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.textContent = this.player().playbackRate() + 'x';\n      }\n    };\n\n    return PlaybackRateMenuButton;\n  }(MenuButton);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n\n  var Spacer = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Spacer, _Component);\n\n    function Spacer() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Spacer.prototype;\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      if (!props.className) {\n        props.className = this.buildCSSClass();\n      }\n\n      return _Component.prototype.createEl.call(this, tag, props, attributes);\n    };\n\n    return Spacer;\n  }(Component$1);\n\n  Component$1.registerComponent('Spacer', Spacer);\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n\n  var CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n    inheritsLoose(CustomControlSpacer, _Spacer);\n\n    function CustomControlSpacer() {\n      return _Spacer.apply(this, arguments) || this;\n    }\n\n    var _proto = CustomControlSpacer.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Spacer.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        // No-flex/table-cell mode requires there be some content\n        // in the cell to fill the remaining space of the table.\n        textContent: \"\\xA0\"\n      });\n    };\n\n    return CustomControlSpacer;\n  }(Spacer);\n\n  Component$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n\n  var ControlBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ControlBar, _Component);\n\n    function ControlBar() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ControlBar.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    };\n\n    return ControlBar;\n  }(Component$1);\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n  };\n\n  if ('exitPictureInPicture' in document) {\n    ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n  }\n\n  Component$1.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n\n  var ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(ErrorDisplay, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    function ErrorDisplay(player, options) {\n      var _this;\n\n      _this = _ModalDialog.call(this, player, options) || this;\n\n      _this.on(player, 'error', function (e) {\n        return _this.open(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n\n\n    var _proto = ErrorDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    ;\n\n    _proto.content = function content() {\n      var error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    };\n\n    return ErrorDisplay;\n  }(ModalDialog);\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n\n\n  ErrorDisplay.prototype.options_ = _extends_1({}, ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  var LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\n  var COLOR_BLACK = ['#000', 'Black'];\n  var COLOR_BLUE = ['#00F', 'Blue'];\n  var COLOR_CYAN = ['#0FF', 'Cyan'];\n  var COLOR_GREEN = ['#0F0', 'Green'];\n  var COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  var COLOR_RED = ['#F00', 'Red'];\n  var COLOR_WHITE = ['#FFF', 'White'];\n  var COLOR_YELLOW = ['#FF0', 'Yellow'];\n  var OPACITY_OPAQUE = ['1', 'Opaque'];\n  var OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  var OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n\n  var selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n    },\n    color: {\n      selector: '.vjs-fg-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '%s',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: 'captions-font-family-%s',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: 'captions-font-size-%s',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      \"default\": 2,\n      parser: function parser(v) {\n        return v === '1.00' ? null : Number(v);\n      }\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI]\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n\n  function getSelectedOptionValue(el, parser) {\n    var value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n\n\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n\n    for (var i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n\n\n  var TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(TextTrackSettings, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    function TextTrackSettings(player, options) {\n      var _this;\n\n      options.temporary = false;\n      _this = _ModalDialog.call(this, player, options) || this;\n      _this.updateDisplay = _this.updateDisplay.bind(assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n      _this.fill();\n\n      _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n      _this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: _this.localize('End of dialog window.')\n      });\n\n      _this.el().appendChild(_this.endDialog);\n\n      _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n      if (options.persistTextTrackSettings === undefined) {\n        _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n      }\n\n      _this.on(_this.$('.vjs-done-button'), 'click', function () {\n        _this.saveSettings();\n\n        _this.close();\n      });\n\n      _this.on(_this.$('.vjs-default-button'), 'click', function () {\n        _this.setDefaults();\n\n        _this.updateDisplay();\n      });\n\n      each(selectConfigs, function (config) {\n        _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n      });\n\n      if (_this.options_.persistTextTrackSettings) {\n        _this.restoreSettings();\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrackSettings.prototype;\n\n    _proto.dispose = function dispose() {\n      this.endDialog = null;\n\n      _ModalDialog.prototype.dispose.call(this);\n    }\n    /**\n     * Create a <select> element with configured options.\n     *\n     * @param {string} key\n     *        Configuration key to use during creation.\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n      var _this2 = this;\n\n      if (legendId === void 0) {\n        legendId = '';\n      }\n\n      if (type === void 0) {\n        type = 'label';\n      }\n\n      var config = selectConfigs[key];\n      var id = config.id.replace('%s', this.id_);\n      var selectLabelledbyIds = [legendId, id].join(' ').trim();\n      return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n        var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n        return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n      })).concat('</select>').join('');\n    }\n    /**\n     * Create foreground color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFgColor_ = function createElFgColor_() {\n      var legendId = \"captions-text-legend-\" + this.id_;\n      return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create background color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElBgColor_ = function createElBgColor_() {\n      var legendId = \"captions-background-\" + this.id_;\n      return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create window color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElWinColor_ = function createElWinColor_() {\n      var legendId = \"captions-window-\" + this.id_;\n      return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create color elements for the component\n     *\n     * @return {Element}\n     *         The element that was created\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElColors_ = function createElColors_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-colors',\n        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n      });\n    }\n    /**\n     * Create font elements for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFont_ = function createElFont_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-font',\n        innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n      });\n    }\n    /**\n     * Create controls for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElControls_ = function createElControls_() {\n      var defaultsDescription = this.localize('restore all settings to the default values');\n      return createEl('div', {\n        className: 'vjs-track-settings-controls',\n        innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n      });\n    };\n\n    _proto.content = function content() {\n      return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n    };\n\n    _proto.label = function label() {\n      return this.localize('Caption Settings Dialog');\n    };\n\n    _proto.description = function description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    };\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n    }\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.getValues = function getValues() {\n      var _this3 = this;\n\n      return reduce(selectConfigs, function (accum, config, key) {\n        var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n\n        return accum;\n      }, {});\n    }\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.setValues = function setValues(values) {\n      var _this4 = this;\n\n      each(selectConfigs, function (config, key) {\n        setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n      });\n    }\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    ;\n\n    _proto.setDefaults = function setDefaults() {\n      var _this5 = this;\n\n      each(selectConfigs, function (config) {\n        var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n        _this5.$(config.selector).selectedIndex = index;\n      });\n    }\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    ;\n\n    _proto.restoreSettings = function restoreSettings() {\n      var values;\n\n      try {\n        values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n      } catch (err) {\n        log$1.warn(err);\n      }\n\n      if (values) {\n        this.setValues(values);\n      }\n    }\n    /**\n     * Save text track settings to localStorage\n     */\n    ;\n\n    _proto.saveSettings = function saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n\n      var values = this.getValues();\n\n      try {\n        if (Object.keys(values).length) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n        } else {\n          window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n        }\n      } catch (err) {\n        log$1.warn(err);\n      }\n    }\n    /**\n     * Update display of text track settings\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the captions button\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      this.previouslyActiveEl_ = null;\n      var cb = this.player_.controlBar;\n      var subsCapsBtn = cb && cb.subsCapsButton;\n      var ccBtn = cb && cb.captionsButton;\n\n      if (subsCapsBtn) {\n        subsCapsBtn.focus();\n      } else if (ccBtn) {\n        ccBtn.focus();\n      }\n    };\n\n    return TextTrackSettings;\n  }(ModalDialog);\n\n  Component$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n\n  var ResizeManager = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ResizeManager, _Component);\n\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    function ResizeManager(player, options) {\n      var _this;\n\n      var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      } // Only create an element when ResizeObserver isn't available\n\n\n      var options_ = mergeOptions$3({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      _this = _Component.call(this, player, options_) || this;\n      _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n      _this.loadListener_ = null;\n      _this.resizeObserver_ = null;\n      _this.debouncedHandler_ = debounce(function () {\n        _this.resizeHandler();\n      }, 100, false, assertThisInitialized(_this));\n\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n        _this.resizeObserver_.observe(player.el());\n      } else {\n        _this.loadListener_ = function () {\n          if (!_this.el_ || !_this.el_.contentWindow) {\n            return;\n          }\n\n          var debouncedHandler_ = _this.debouncedHandler_;\n\n          var unloadListener_ = _this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          }; // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n\n\n          on(_this.el_.contentWindow, 'unload', unloadListener_);\n          on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n\n        _this.one('load', _this.loadListener_);\n      }\n\n      return _this;\n    }\n\n    var _proto = ResizeManager.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    ;\n\n    _proto.resizeHandler = function resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {EventTarget~Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n\n      this.player_.trigger('playerresize');\n    };\n\n    _proto.dispose = function dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n\n        this.resizeObserver_.disconnect();\n      }\n\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return ResizeManager;\n  }(Component$1);\n\n  Component$1.registerComponent('ResizeManager', ResizeManager);\n\n  var defaults = {\n    trackingThreshold: 20,\n    liveTolerance: 15\n  };\n  /*\n    track when we are at the live edge, and other helpers for live playback */\n\n  /**\n   * A class for checking live current time and determining when the player\n   * is at or behind the live edge.\n   */\n\n  var LiveTracker = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveTracker, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {number} [options.trackingThreshold=20]\n     *        Number of seconds of live window (seekableEnd - seekableStart) that\n     *        media needs to have before the liveui will be shown.\n     *\n     * @param {number} [options.liveTolerance=15]\n     *        Number of seconds behind live that we have to be\n     *        before we will be considered non-live. Note that this will only\n     *        be used when playing at the live edge. This allows large seekable end\n     *        changes to not effect wether we are live or not.\n     */\n    function LiveTracker(player, options) {\n      var _this;\n\n      // LiveTracker does not need an element\n      var options_ = mergeOptions$3(defaults, options, {\n        createEl: false\n      });\n      _this = _Component.call(this, player, options_) || this;\n\n      _this.handleVisibilityChange_ = function (e) {\n        return _this.handleVisibilityChange(e);\n      };\n\n      _this.trackLiveHandler_ = function () {\n        return _this.trackLive_();\n      };\n\n      _this.handlePlay_ = function (e) {\n        return _this.handlePlay(e);\n      };\n\n      _this.handleFirstTimeupdate_ = function (e) {\n        return _this.handleFirstTimeupdate(e);\n      };\n\n      _this.handleSeeked_ = function (e) {\n        return _this.handleSeeked(e);\n      };\n\n      _this.seekToLiveEdge_ = function (e) {\n        return _this.seekToLiveEdge(e);\n      };\n\n      _this.reset_();\n\n      _this.on(_this.player_, 'durationchange', function (e) {\n        return _this.handleDurationchange(e);\n      }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n      // may not have the proper values for things like seekableEnd until then\n\n\n      _this.one(_this.player_, 'canplay', function () {\n        return _this.toggleTracking();\n      }); // we don't need to track live playback if the document is hidden,\n      // also, tracking when the document is hidden can\n      // cause the CPU to spike and eventually crash the page on IE11.\n\n\n      if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n        _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n      }\n\n      return _this;\n    }\n    /**\n     * toggle tracking based on document visiblility\n     */\n\n\n    var _proto = LiveTracker.prototype;\n\n    _proto.handleVisibilityChange = function handleVisibilityChange() {\n      if (this.player_.duration() !== Infinity) {\n        return;\n      }\n\n      if (document.hidden) {\n        this.stopTracking();\n      } else {\n        this.startTracking();\n      }\n    }\n    /**\n     * all the functionality for tracking when seek end changes\n     * and for tracking how far past seek end we should be\n     */\n    ;\n\n    _proto.trackLive_ = function trackLive_() {\n      var seekable = this.player_.seekable(); // skip undefined seekable\n\n      if (!seekable || !seekable.length) {\n        return;\n      }\n\n      var newTime = Number(window.performance.now().toFixed(4));\n      var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n      this.lastTime_ = newTime;\n      this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n      var liveCurrentTime = this.liveCurrentTime();\n      var currentTime = this.player_.currentTime(); // we are behind live if any are true\n      // 1. the player is paused\n      // 2. the user seeked to a location 2 seconds away from live\n      // 3. the difference between live and current time is greater\n      //    liveTolerance which defaults to 15s\n\n      var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n      // 1. until we have not seen a timeupdate yet\n      // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n      if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n        isBehind = false;\n      }\n\n      if (isBehind !== this.behindLiveEdge_) {\n        this.behindLiveEdge_ = isBehind;\n        this.trigger('liveedgechange');\n      }\n    }\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    ;\n\n    _proto.handleDurationchange = function handleDurationchange() {\n      this.toggleTracking();\n    }\n    /**\n     * start/stop tracking\n     */\n    ;\n\n    _proto.toggleTracking = function toggleTracking() {\n      if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n        if (this.player_.options_.liveui) {\n          this.player_.addClass('vjs-liveui');\n        }\n\n        this.startTracking();\n      } else {\n        this.player_.removeClass('vjs-liveui');\n        this.stopTracking();\n      }\n    }\n    /**\n     * start tracking live playback\n     */\n    ;\n\n    _proto.startTracking = function startTracking() {\n      if (this.isTracking()) {\n        return;\n      } // If we haven't seen a timeupdate, we need to check whether playback\n      // began before this component started tracking. This can happen commonly\n      // when using autoplay.\n\n\n      if (!this.timeupdateSeen_) {\n        this.timeupdateSeen_ = this.player_.hasStarted();\n      }\n\n      this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n      this.trackLive_();\n      this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n      if (!this.timeupdateSeen_) {\n        this.one(this.player_, 'play', this.handlePlay_);\n        this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      } else {\n        this.on(this.player_, 'seeked', this.handleSeeked_);\n      }\n    }\n    /**\n     * handle the first timeupdate on the player if it wasn't already playing\n     * when live tracker started tracking.\n     */\n    ;\n\n    _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n      this.timeupdateSeen_ = true;\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n    /**\n     * Keep track of what time a seek starts, and listen for seeked\n     * to find where a seek ends.\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked() {\n      var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n      this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n      this.nextSeekedFromUser_ = false;\n      this.trackLive_();\n    }\n    /**\n     * handle the first play on the player, and make sure that we seek\n     * right to the live edge.\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    ;\n\n    _proto.reset_ = function reset_() {\n      this.lastTime_ = -1;\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = -1;\n      this.behindLiveEdge_ = true;\n      this.timeupdateSeen_ = false;\n      this.seekedBehindLive_ = false;\n      this.nextSeekedFromUser_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      this.off(this.player_, 'seeked', this.handleSeeked_);\n      this.off(this.player_, 'play', this.handlePlay_);\n      this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * The next seeked event is from the user. Meaning that any seek\n     * > 2s behind live will be considered behind live for real and\n     * liveTolerance will be ignored.\n     */\n    ;\n\n    _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n      this.nextSeekedFromUser_ = true;\n    }\n    /**\n     * stop tracking live playback\n     */\n    ;\n\n    _proto.stopTracking = function stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n\n      this.reset_();\n      this.trigger('liveedgechange');\n    }\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The furthest seekable end or Infinity.\n     */\n    ;\n\n    _proto.seekableEnd = function seekableEnd() {\n      var seekable = this.player_.seekable();\n      var seekableEnds = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      } // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n\n\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The earliest seekable start or 0.\n     */\n    ;\n\n    _proto.seekableStart = function seekableStart() {\n      var seekable = this.player_.seekable();\n      var seekableStarts = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      } // grab the first seekable start after sorting, or if there are none\n      // default to 0\n\n\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n    /**\n     * Get the live time window aka\n     * the amount of time between seekable start and\n     * live current time.\n     *\n     * @return {number}\n     *         The amount of seconds that are seekable in\n     *         the live video.\n     */\n    ;\n\n    _proto.liveWindow = function liveWindow() {\n      var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n      if (liveCurrentTime === Infinity) {\n        return 0;\n      }\n\n      return liveCurrentTime - this.seekableStart();\n    }\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     *\n     * @return {boolean}\n     *         Wether liveTracker is tracking\n     */\n    ;\n\n    _proto.isLive = function isLive() {\n      return this.isTracking();\n    }\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     *\n     * @return {boolean}\n     *         Wether playback is at the live edge\n     */\n    ;\n\n    _proto.atLiveEdge = function atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n    /**\n     * get what we expect the live current time to be\n     *\n     * @return {number}\n     *         The expected live current time\n     */\n    ;\n\n    _proto.liveCurrentTime = function liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n    /**\n     * The number of seconds that have occured after seekable end\n     * changed. This will be reset to 0 once seekable end changes.\n     *\n     * @return {number}\n     *         Seconds past the current seekable end\n     */\n    ;\n\n    _proto.pastSeekEnd = function pastSeekEnd() {\n      var seekableEnd = this.seekableEnd();\n\n      if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n        this.pastSeekEnd_ = 0;\n      }\n\n      this.lastSeekEnd_ = seekableEnd;\n      return this.pastSeekEnd_;\n    }\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     *\n     * @return {boolean}\n     *         If we are behind the live edge\n     */\n    ;\n\n    _proto.behindLiveEdge = function behindLiveEdge() {\n      return this.behindLiveEdge_;\n    }\n    /**\n     * Wether live tracker is currently tracking or not.\n     */\n    ;\n\n    _proto.isTracking = function isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    ;\n\n    _proto.seekToLiveEdge = function seekToLiveEdge() {\n      this.seekedBehindLive_ = false;\n\n      if (this.atLiveEdge()) {\n        return;\n      }\n\n      this.nextSeekedFromUser_ = false;\n      this.player_.currentTime(this.liveCurrentTime());\n    }\n    /**\n     * Dispose of liveTracker\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n      this.stopTracking();\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return LiveTracker;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n\n  var sourcesetLoad = function sourcesetLoad(tech) {\n    var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n\n\n    var sources = tech.$$('source');\n    var srcUrls = [];\n    var src = ''; // if there are no sources, do not fire sourceset\n\n    if (!sources.length) {\n      return false;\n    } // only count valid/non-duplicate source elements\n\n\n    for (var i = 0; i < sources.length; i++) {\n      var url = sources[i].src;\n\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    } // there were no valid sources\n\n\n    if (!srcUrls.length) {\n      return false;\n    } // there is only one valid source element url\n    // use that\n\n\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n\n    tech.triggerSourceset(src);\n    return true;\n  };\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n      dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n      var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      } // remove content\n\n\n      this.innerText = ''; // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n\n      window.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n      return this.innerHTML;\n    }\n  });\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n\n  var getDescriptor = function getDescriptor(priority, prop) {\n    var descriptor = {};\n\n    for (var i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n\n  var getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n  };\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n\n\n  var firstSourceWatch = function firstSourceWatch(tech) {\n    var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n    if (el.resetSourceWatch_) {\n      return;\n    }\n\n    var old = {};\n    var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n    var appendWrapper = function appendWrapper(appendFn) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var retval = appendFn.apply(el, args);\n        sourcesetLoad(tech);\n        return retval;\n      };\n    };\n\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n      if (!el[k]) {\n        return;\n      } // store the old function\n\n\n      old[k] = el[k]; // call the old function with a sourceset if a source\n      // was loaded\n\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n\n    el.resetSourceWatch_ = function () {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(function (k) {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    }; // on the first sourceset, we need to revert our changes\n\n\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n\n  var getSrcDescriptor = function getSrcDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n  };\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n\n\n  var setupSourceset = function setupSourceset(tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n\n    var el = tech.el(); // make sure sourceset isn't setup twice.\n\n    if (el.resetSourceset_) {\n      return;\n    }\n\n    var srcDescriptor = getSrcDescriptor(tech);\n    var oldSetAttribute = el.setAttribute;\n    var oldLoad = el.load;\n    Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n      set: function set(v) {\n        var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n\n    el.setAttribute = function (n, v) {\n      var retval = oldSetAttribute.call(el, n, v);\n\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n\n      return retval;\n    };\n\n    el.load = function () {\n      var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n\n      return retval;\n    };\n\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n\n    el.resetSourceset_ = function () {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  /**\n   * Object.defineProperty but \"lazy\", which means that the value is only set after\n   * it retrieved the first time, rather than being set right away.\n   *\n   * @param {Object} obj the object to set the property on\n   * @param {string} key the key for the property to set\n   * @param {Function} getValue the function used to get the value when it is needed.\n   * @param {boolean} setter wether a setter shoould be allowed or not\n   */\n  var defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n    if (setter === void 0) {\n      setter = true;\n    }\n\n    var set = function set(value) {\n      return Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        writable: true\n      });\n    };\n\n    var options = {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        var value = getValue();\n        set(value);\n        return value;\n      }\n    };\n\n    if (setter) {\n      options.set = set;\n    }\n\n    return Object.defineProperty(obj, key, options);\n  };\n\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n\n  var Html5 = /*#__PURE__*/function (_Tech) {\n    inheritsLoose(Html5, _Tech);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Html5(options, ready) {\n      var _this;\n\n      _this = _Tech.call(this, options, ready) || this;\n      var source = options.source;\n      var crossoriginTracks = false; // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n\n      if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        _this.setSource(source);\n      } else {\n        _this.handleLateInit_(_this.el_);\n      } // setup sourceset after late sourceset/init\n\n\n      if (options.enableSourceset) {\n        _this.setupSourcesetHandling_();\n      }\n\n      _this.isScrubbing_ = false;\n\n      if (_this.el_.hasChildNodes()) {\n        var nodes = _this.el_.childNodes;\n        var nodesLength = nodes.length;\n        var removeNodes = [];\n\n        while (nodesLength--) {\n          var node = nodes[nodesLength];\n          var nodeName = node.nodeName.toLowerCase();\n\n          if (nodeName === 'track') {\n            if (!_this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              _this.remoteTextTrackEls().addTrackElement_(node);\n\n              _this.remoteTextTracks().addTrack(node.track);\n\n              _this.textTracks().addTrack(node.track);\n\n              if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < removeNodes.length; i++) {\n          _this.el_.removeChild(removeNodes[i]);\n        }\n      }\n\n      _this.proxyNativeTracks_();\n\n      if (_this.featuresNativeTextTracks && crossoriginTracks) {\n        log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n      } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n      _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n\n\n      if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n        _this.setControls(true);\n      } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n\n\n      _this.proxyWebkitFullscreen_();\n\n      _this.triggerReady();\n\n      return _this;\n    }\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n\n\n    var _proto = Html5.prototype;\n\n    _proto.dispose = function dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null; // tech will handle clearing of the emulated track list\n\n      _Tech.prototype.dispose.call(this);\n    }\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    ;\n\n    _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    ;\n\n    _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n      var textTracks = this.textTracks();\n      var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n      var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n        metadataTracksPreFullscreenState = [];\n\n        for (var i = 0; i < textTracks.length; i++) {\n          var track = textTracks[i];\n\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track: track,\n              storedMode: track.mode\n            });\n          }\n        }\n      }; // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n\n\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', function () {\n        return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      });\n\n      var restoreTrackMode = function restoreTrackMode() {\n        for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          var storedTrack = metadataTracksPreFullscreenState[i];\n\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        } // we only want this handler to be executed on the first 'change' event\n\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      }; // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n\n\n      this.on('webkitbeginfullscreen', function () {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      }); // start updating the snapshot again after leaving fullscreen\n\n      this.on('webkitendfullscreen', function () {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    ;\n\n    _proto.overrideNative_ = function overrideNative_(type, override) {\n      var _this2 = this;\n\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n        return;\n      }\n\n      var lowerCaseType = type.toLowerCase();\n\n      if (this[lowerCaseType + \"TracksListeners_\"]) {\n        Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n          var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n          elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n        });\n      }\n\n      this[\"featuresNative\" + type + \"Tracks\"] = !override;\n      this[lowerCaseType + \"TracksListeners_\"] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n      var _this3 = this;\n\n      var props = NORMAL[name];\n      var elTracks = this.el()[props.getterName];\n      var techTracks = this[props.getterName]();\n\n      if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      var listeners = {\n        change: function change(e) {\n          var event = {\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          };\n          techTracks.trigger(event); // if we are a text track change event, we should also notify the\n          // remote text track list. This can potentially cause a false positive\n          // if we were to get a change event on a non-remote track and\n          // we triggered the event on the remote text track list which doesn't\n          // contain that track. However, best practices mean looping through the\n          // list of tracks and searching for the appropriate mode value, so,\n          // this shouldn't pose an issue\n\n          if (name === 'text') {\n            _this3[REMOTE.remoteText.getterName]().trigger(event);\n          }\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n\n        _this3.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      }); // Remove (native) tracks that are not used anymore\n\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', function (e) {\n        return _this3.off('loadstart', removeOldTracks);\n      });\n    }\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n      var _this4 = this;\n\n      NORMAL.names.forEach(function (name) {\n        _this4.proxyNativeTracksForType_(name);\n      });\n    }\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          var clone = el.cloneNode(true);\n\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video'); // determine if native controls should be used\n\n          var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          var attributes = mergeOptions$3({}, tagAttributes);\n\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n\n          setAttributes(el, assign(attributes, {\n            id: this.options_.techId,\n            \"class\": 'vjs-tech'\n          }));\n        }\n\n        el.playerId = this.options_.playerId;\n      }\n\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      }\n\n      if (this.options_.disablePictureInPicture !== undefined) {\n        el.disablePictureInPicture = this.options_.disablePictureInPicture;\n      } // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n\n\n      var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n      for (var i = 0; i < settingsAttrs.length; i++) {\n        var attr = settingsAttrs[i];\n        var value = this.options_[attr];\n\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n\n          el[attr] = value;\n        }\n      }\n\n      return el;\n    }\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    ;\n\n    _proto.handleLateInit_ = function handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        this.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      } // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n\n\n      var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n      eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      } // We still need to give the player time to add event listeners\n\n\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n    /**\n     * Set whether we are scrubbing or not.\n     * This is used to decide whether we should use `fastSeek` or not.\n     * `fastSeek` is used to provide trick play on Safari browsers.\n     *\n     * @param {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing(isScrubbing) {\n      this.isScrubbing_ = isScrubbing;\n    }\n    /**\n     * Get whether we are scrubbing or not.\n     *\n     * @return {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {\n      return this.isScrubbing_;\n    }\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(seconds) {\n      try {\n        if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n          this.el_.fastSeek(seconds);\n        } else {\n          this.el_.currentTime = seconds;\n        }\n      } catch (e) {\n        log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    ;\n\n    _proto.duration = function duration() {\n      var _this5 = this;\n\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        var checkProgress = function checkProgress() {\n          if (_this5.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (_this5.el_.duration === Infinity) {\n              _this5.trigger('durationchange');\n            }\n\n            _this5.off('timeupdate', checkProgress);\n          }\n        };\n\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n\n      return this.el_.duration || NaN;\n    }\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    ;\n\n    _proto.width = function width() {\n      return this.el_.offsetWidth;\n    }\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    ;\n\n    _proto.height = function height() {\n      return this.el_.offsetHeight;\n    }\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    ;\n\n    _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n      var _this6 = this;\n\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n\n      var endFn = function endFn() {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        });\n      };\n\n      var beginFn = function beginFn() {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true,\n            // set a flag in case another tech triggers fullscreenchange\n            nativeIOSFullscreen: true\n          });\n        }\n      };\n\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', function () {\n        _this6.off('webkitbeginfullscreen', beginFn);\n\n        _this6.off('webkitendfullscreen', endFn);\n      });\n    }\n    /**\n     * Check if fullscreen is supported on the current playback device.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      if (typeof this.el_.webkitEnterFullScreen === 'function') {\n        var userAgent = window.navigator && window.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n        if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    ;\n\n    _proto.enterFullScreen = function enterFullScreen() {\n      var video = this.el_;\n\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n\n        this.setTimeout(function () {\n          video.pause();\n\n          try {\n            video.webkitEnterFullScreen();\n          } catch (e) {\n            this.trigger('fullscreenerror', e);\n          }\n        }, 0);\n      } else {\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }\n    }\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    ;\n\n    _proto.exitFullScreen = function exitFullScreen() {\n      if (!this.el_.webkitDisplayingFullscreen) {\n        this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n        return;\n      }\n\n      this.el_.webkitExitFullScreen();\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      return this.el_.requestPictureInPicture();\n    }\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    ;\n\n    _proto.src = function src(_src) {\n      if (_src === undefined) {\n        return this.el_.src;\n      } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n      this.setSrc(_src);\n    }\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n\n      return this.el_.currentSrc;\n    }\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    ;\n\n    _proto.setControls = function setControls(val) {\n      this.el_.controls = !!val;\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n      }\n\n      return this.el_.addTextTrack(kind, label, language);\n    }\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.createRemoteTextTrack.call(this, options);\n      }\n\n      var htmlTrackElement = document.createElement('track');\n\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n\n      if (options[\"default\"]) {\n        htmlTrackElement[\"default\"] = options[\"default\"];\n      }\n\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     * automatically removed from the video element whenever the source changes\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     * to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n      if (this.featuresNativeTextTracks) {\n        var tracks = this.$$('track');\n        var i = tracks.length;\n\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n\n      var videoPlaybackQuality = {};\n\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n\n      if (window.performance && typeof window.performance.now === 'function') {\n        videoPlaybackQuality.creationTime = window.performance.now();\n      } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n        videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n      }\n\n      return videoPlaybackQuality;\n    };\n\n    return Html5;\n  }(Tech);\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n\n\n  defineLazyProperty(Html5, 'TEST_VID', function () {\n    if (!isReal()) {\n      return;\n    }\n\n    var video = document.createElement('video');\n    var track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    video.appendChild(track);\n    return video;\n  });\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      var volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      return volume !== Html5.TEST_VID.volume;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {bolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n\n\n  Html5.canMuteVolume = function () {\n    try {\n      var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n\n      Html5.TEST_VID.muted = !muted;\n\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    } // IE will error if Windows Media Player not installed #3315\n\n\n    try {\n      var playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n\n\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      var noop = function noop() {};\n\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n\n\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n\n\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n\n  [['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n    var key = _ref[0],\n        fn = _ref[1];\n    defineLazyProperty(Html5.prototype, key, function () {\n      return Html5[fn]();\n    }, true);\n  });\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresFullscreenResize = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresProgressEvents = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n\n  Html5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\n  var canPlayType;\n\n  Html5.patchCanPlayType = function () {\n    // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n    // Firefox and Chrome report correctly\n    if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n      canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n      Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n        var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n        if (type && mpegurlRE.test(type)) {\n          return 'maybe';\n        }\n\n        return canPlayType.call(this, type);\n      };\n    }\n  };\n\n  Html5.unpatchCanPlayType = function () {\n    var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    if (canPlayType) {\n      Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n    }\n\n    return r;\n  }; // by default, patch the media element\n\n\n  Html5.patchCanPlayType();\n\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    } // remove any child track or source nodes to prevent their loading\n\n\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    } // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n\n\n    el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// not supported\n        }\n      })();\n    }\n  };\n\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    var sources = el.querySelectorAll('source');\n    var i = sources.length;\n\n    while (i--) {\n      el.removeChild(sources[i]);\n    } // remove any src reference.\n    // not setting `src=''` because that throws an error\n\n\n    el.removeAttribute('src');\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// satisfy linter\n        }\n      })();\n    }\n  };\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  }); // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on initial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  }); // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n  // played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of 'disablePictureInPicture' from the video element.\n   *\n   * @method Html5#disablePictureInPicture\n   * @return {boolean} value\n   *         - The value of `disablePictureInPicture` from the video element.\n   *         - True indicates that the video can't be played in Picture-In-Picture mode\n   *         - False indicates that the video can be played in Picture-In-Picture mode\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight',\n  /**\n   * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#crossOrigin\n   * @return {string}\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  }); // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n  // setDisablePictureInPicture, setCrossOrigin\n\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Prevents the browser from suggesting a Picture-in-Picture context menu\n   * or to request Picture-in-Picture automatically in some cases.\n   *\n   * @method Html5#setDisablePictureInPicture\n   * @param {boolean} value\n   *         The true value will disable Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#setCrossOrigin\n   * @param {string} crossOrigin\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  }); // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n\n  Html5.nativeSourceHandler = {};\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n\n\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      var ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n    }\n\n    return '';\n  };\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n\n\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n\n\n  Html5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  // on the player when they happen\n\n  var TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange']; // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n\n  var TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  var BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  var BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n\n  BREAKPOINT_ORDER.forEach(function (k) {\n    var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n    BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n  });\n  var DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in two ways:\n   * 1. By calling `videojs('example_video_1');`\n   * 2. By using it directly via  `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   */\n\n  var Player = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Player, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    function Player(tag, options, ready) {\n      var _this;\n\n      // Make sure tag ID exists\n      tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n\n      options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n\n      options.initChildren = false; // Same with creating the element\n\n      options.createEl = false; // don't auto mixin the evented mixin\n\n      options.evented = false; // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n\n      options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n      if (!options.language) {\n        if (typeof tag.closest === 'function') {\n          var closest = tag.closest('[lang]');\n\n          if (closest && closest.getAttribute) {\n            options.language = closest.getAttribute('lang');\n          }\n        } else {\n          var element = tag;\n\n          while (element && element.nodeType === 1) {\n            if (getAttributes(element).hasOwnProperty('lang')) {\n              options.language = element.getAttribute('lang');\n              break;\n            }\n\n            element = element.parentNode;\n          }\n        }\n      } // Run base component initializing with new options\n\n\n      _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n      _this.boundDocumentFullscreenChange_ = function (e) {\n        return _this.documentFullscreenChange_(e);\n      };\n\n      _this.boundFullWindowOnEscKey_ = function (e) {\n        return _this.fullWindowOnEscKey(e);\n      };\n\n      _this.boundUpdateStyleEl_ = function (e) {\n        return _this.updateStyleEl_(e);\n      };\n\n      _this.boundApplyInitTime_ = function (e) {\n        return _this.applyInitTime_(e);\n      };\n\n      _this.boundUpdateCurrentBreakpoint_ = function (e) {\n        return _this.updateCurrentBreakpoint_(e);\n      };\n\n      _this.boundHandleTechClick_ = function (e) {\n        return _this.handleTechClick_(e);\n      };\n\n      _this.boundHandleTechDoubleClick_ = function (e) {\n        return _this.handleTechDoubleClick_(e);\n      };\n\n      _this.boundHandleTechTouchStart_ = function (e) {\n        return _this.handleTechTouchStart_(e);\n      };\n\n      _this.boundHandleTechTouchMove_ = function (e) {\n        return _this.handleTechTouchMove_(e);\n      };\n\n      _this.boundHandleTechTouchEnd_ = function (e) {\n        return _this.handleTechTouchEnd_(e);\n      };\n\n      _this.boundHandleTechTap_ = function (e) {\n        return _this.handleTechTap_(e);\n      }; // default isFullscreen_ to false\n\n\n      _this.isFullscreen_ = false; // create logger\n\n      _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n      _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n      _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n\n      _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      _this.isReady_ = false; // Init state hasStarted_\n\n      _this.hasStarted_ = false; // Init state userActive_\n\n      _this.userActive_ = false; // Init debugEnabled_\n\n      _this.debugEnabled_ = false; // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n\n      if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      } // Store the original tag used to set options\n\n\n      _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n      _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n      _this.language(_this.options_.language); // Update Supported Languages\n\n\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        var languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        _this.languages_ = languagesToLower;\n      } else {\n        _this.languages_ = Player.prototype.options_.languages;\n      }\n\n      _this.resetCache_(); // Set poster\n\n\n      _this.poster_ = options.poster || ''; // Set controls\n\n      _this.controls_ = !!options.controls; // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      _this.changingSrc_ = false;\n      _this.playCallbacks_ = [];\n      _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n      if (tag.hasAttribute('autoplay')) {\n        _this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        _this.autoplay(_this.options_.autoplay);\n      } // check plugins\n\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          if (typeof _this[name] !== 'function') {\n            throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n          }\n        });\n      }\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n\n\n      _this.scrubbing_ = false;\n      _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n      evented(assertThisInitialized(_this), {\n        eventBusKey: 'el_'\n      }); // listen to document and player fullscreenchange handlers so we receive those events\n      // before a user can receive them so we can update isFullscreen appropriately.\n      // make sure that we listen to fullscreenchange events before everything else to make sure that\n      // our isFullscreen method is updated properly for internal components as well as external.\n\n      if (_this.fsApi_.requestFullscreen) {\n        on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n        _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n      }\n\n      if (_this.fluid_) {\n        _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n      } // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n\n\n      var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          _this[name](options.plugins[name]);\n        });\n      } // Enable debug mode to fire debugon event for all plugins.\n\n\n      if (options.debug) {\n        _this.debug(true);\n      }\n\n      _this.options_.playerOptions = playerOptionsCopy;\n      _this.middleware_ = [];\n\n      _this.playbackRates(options.playbackRates);\n\n      _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n      _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n\n\n      if (_this.controls()) {\n        _this.addClass('vjs-controls-enabled');\n      } else {\n        _this.addClass('vjs-controls-disabled');\n      } // Set ARIA label and region role depending on player type\n\n\n      _this.el_.setAttribute('role', 'region');\n\n      if (_this.isAudio()) {\n        _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n      } else {\n        _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n      }\n\n      if (_this.isAudio()) {\n        _this.addClass('vjs-audio');\n      }\n\n      if (_this.flexNotSupported_()) {\n        _this.addClass('vjs-no-flex');\n      } // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n\n\n      if (TOUCH_ENABLED) {\n        _this.addClass('vjs-touch-enabled');\n      } // iOS Safari has broken hover handling\n\n\n      if (!IS_IOS) {\n        _this.addClass('vjs-workinghover');\n      } // Make player easily findable by ID\n\n\n      Player.players[_this.id_] = assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n      var majorVersion = version$5.split('.')[0];\n\n      _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n\n\n      _this.userActive(true);\n\n      _this.reportUserActivity();\n\n      _this.one('play', function (e) {\n        return _this.listenForUserActivity_(e);\n      });\n\n      _this.on('stageclick', function (e) {\n        return _this.handleStageClick_(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on('languagechange', function (e) {\n        return _this.handleLanguagechange(e);\n      });\n\n      _this.breakpoints(_this.options_.breakpoints);\n\n      _this.responsive(_this.options_.responsive);\n\n      return _this;\n    }\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n\n\n    var _proto = Player.prototype;\n\n    _proto.dispose = function dispose() {\n      var _this2 = this;\n\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('dispose'); // prevent dispose from being called twice\n\n      this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      } // Kill reference to this player\n\n\n      Player.players[this.id_] = null;\n\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n\n      if (this.tag) {\n        this.tag = null;\n      }\n\n      clearCacheForPlayer(this); // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        var list = _this2[props.getterName](); // if it is not a native list\n        // we have to manually remove event listeners\n\n\n        if (list && list.off) {\n          list.off();\n        }\n      }); // the actual .el_ is removed here\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var tag = this.tag;\n      var el;\n      var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n      } // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n\n\n      var attrs = getAttributes(tag);\n\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n\n        Object.keys(el).forEach(function (k) {\n          try {\n            tag[k] = el[k];\n          } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n          }\n        });\n      } // set tabindex to -1 to remove the video element from the focus order\n\n\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n      // for the same issue with Chrome (on Windows) with JAWS.\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n      if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }); // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech'; // Make player findable on elements\n\n      tag.player = el.player = this; // Default state of video is paused\n\n      this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overrideable by CSS, just like the\n      // video element\n\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        var defaultsStyleEl = $('.vjs-styles-defaults');\n        var head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n\n      this.fill_ = false;\n      this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n      this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n\n      var links = tag.getElementsByTagName('a');\n\n      for (var i = 0; i < links.length; i++) {\n        var linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n\n\n      tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      } // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n\n\n      prependTo(tag, el);\n      this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n\n      this.el_.setAttribute('lang', this.language_);\n      this.el_.setAttribute('translate', 'no');\n      this.el_ = el;\n      return el;\n    }\n    /**\n     * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n     * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n     * behavior.\n     *\n     * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n     *\n     * @param {string} [value]\n     *        The value to set the `Player`'s crossOrigin to. If an argument is\n     *        given, must be one of `anonymous` or `use-credentials`.\n     *\n     * @return {string|undefined}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin(value) {\n      if (!value) {\n        return this.techGet_('crossOrigin');\n      }\n\n      if (value !== 'anonymous' && value !== 'use-credentials') {\n        log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n        return;\n      }\n\n      this.techCall_('setCrossOrigin', value);\n      return;\n    }\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s width to.\n     *\n     * @return {number}\n     *         The current width of the `Player` when getting.\n     */\n    ;\n\n    _proto.width = function width(value) {\n      return this.dimension('width', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s heigth to.\n     *\n     * @return {number}\n     *         The current height of the `Player` when getting.\n     */\n    ;\n\n    _proto.height = function height(value) {\n      return this.dimension('height', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    ;\n\n    _proto.dimension = function dimension(_dimension, value) {\n      var privDimension = _dimension + '_';\n\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n\n      if (value === '' || value === 'auto') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n\n      var parsedVal = parseFloat(value);\n\n      if (isNaN(parsedVal)) {\n        log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n        return;\n      }\n\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fluid = function fluid(bool) {\n      var _this3 = this;\n\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n\n      this.fluid_ = !!bool;\n\n      if (isEvented(this)) {\n        this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(this, function () {\n          _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fill = function fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n\n      this.fill_ = !!bool;\n\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player`'s aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.aspectRatio = function aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      } // Check for width:height format\n\n\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n\n      this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    ;\n\n    _proto.updateStyleEl_ = function updateStyleEl_() {\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n        var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n        var techEl = this.tech_ && this.tech_.el();\n\n        if (techEl) {\n          if (_width >= 0) {\n            techEl.width = _width;\n          }\n\n          if (_height >= 0) {\n            techEl.height = _height;\n          }\n        }\n\n        return;\n      }\n\n      var width;\n      var height;\n      var aspectRatio;\n      var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n      var ratioParts = aspectRatio.split(':');\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      } // Ensure the CSS class is valid by starting with an alpha character\n\n\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      } // Ensure the right class is still on the player for the style element\n\n\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n    }\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadTech_ = function loadTech_(techName, source) {\n      var _this4 = this;\n\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n\n      var titleTechName = toTitleCase$1(techName);\n      var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n\n      this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      this.isReady_ = false;\n      var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n\n      if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n        autoplay = false;\n      } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n      var techOptions = {\n        source: source,\n        autoplay: autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': this.id() + \"_\" + camelTechName + \"_api\",\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'disablePictureInPicture': this.options_.disablePictureInPicture,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset,\n        'Promise': this.options_.Promise\n      };\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        techOptions[props.getterName] = _this4[props.privateName];\n      });\n      assign(techOptions, this.options_[titleTechName]);\n      assign(techOptions, this.options_[camelTechName]);\n      assign(techOptions, this.options_[techName.toLowerCase()]);\n\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      } // Initialize tech instance\n\n\n      var TechClass = Tech.getTech(techName);\n\n      if (!TechClass) {\n        throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n      }\n\n      this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n      this.tech_.ready(bind(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n      TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (e) {\n          return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n        });\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (eventObj) {\n          if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n            _this4.queuedCallbacks_.push({\n              callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n              event: eventObj\n            });\n\n            return;\n          }\n\n          _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', function (e) {\n        return _this4.handleTechLoadStart_(e);\n      });\n      this.on(this.tech_, 'sourceset', function (e) {\n        return _this4.handleTechSourceset_(e);\n      });\n      this.on(this.tech_, 'waiting', function (e) {\n        return _this4.handleTechWaiting_(e);\n      });\n      this.on(this.tech_, 'ended', function (e) {\n        return _this4.handleTechEnded_(e);\n      });\n      this.on(this.tech_, 'seeking', function (e) {\n        return _this4.handleTechSeeking_(e);\n      });\n      this.on(this.tech_, 'play', function (e) {\n        return _this4.handleTechPlay_(e);\n      });\n      this.on(this.tech_, 'firstplay', function (e) {\n        return _this4.handleTechFirstPlay_(e);\n      });\n      this.on(this.tech_, 'pause', function (e) {\n        return _this4.handleTechPause_(e);\n      });\n      this.on(this.tech_, 'durationchange', function (e) {\n        return _this4.handleTechDurationChange_(e);\n      });\n      this.on(this.tech_, 'fullscreenchange', function (e, data) {\n        return _this4.handleTechFullscreenChange_(e, data);\n      });\n      this.on(this.tech_, 'fullscreenerror', function (e, err) {\n        return _this4.handleTechFullscreenError_(e, err);\n      });\n      this.on(this.tech_, 'enterpictureinpicture', function (e) {\n        return _this4.handleTechEnterPictureInPicture_(e);\n      });\n      this.on(this.tech_, 'leavepictureinpicture', function (e) {\n        return _this4.handleTechLeavePictureInPicture_(e);\n      });\n      this.on(this.tech_, 'error', function (e) {\n        return _this4.handleTechError_(e);\n      });\n      this.on(this.tech_, 'posterchange', function (e) {\n        return _this4.handleTechPosterChange_(e);\n      });\n      this.on(this.tech_, 'textdata', function (e) {\n        return _this4.handleTechTextData_(e);\n      });\n      this.on(this.tech_, 'ratechange', function (e) {\n        return _this4.handleTechRateChange_(e);\n      });\n      this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n      this.usingNativeControls(this.techGet_('controls'));\n\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      } // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n\n\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      } // Get rid of the original video tag reference after the first tech is loaded\n\n\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unloadTech_ = function unloadTech_() {\n      var _this5 = this;\n\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        _this5[props.privateName] = _this5[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n\n      this.isPosterFromTech_ = false;\n    }\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    ;\n\n    _proto.tech = function tech(safety) {\n      if (safety === undefined) {\n        log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n      }\n\n      return this.tech_;\n    }\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    ;\n\n    _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_();\n      this.on(this.tech_, 'click', this.boundHandleTechClick_);\n      this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n\n      this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n\n      this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n    }\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n      this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n      this.off(this.tech_, 'click', this.boundHandleTechClick_);\n      this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n    }\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleTechReady_ = function handleTechReady_() {\n      this.triggerReady(); // Keep the same volume as before\n\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      } // Look if the tech found a higher resolution poster while loading\n\n\n      this.handleTechPosterChange_(); // Update the duration if available\n\n      this.handleTechDurationChange_();\n    }\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n     * function will also trigger {@link Player#firstplay} if it is the first loadstart\n     * for a video.\n     *\n     * @fires Player#loadstart\n     * @fires Player#firstplay\n     * @listens Tech#loadstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-seeking'); // reset the error state\n\n      this.error(null); // Update the duration\n\n      this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n      // The firstplay event relies on both the play and loadstart events\n      // which can happen in any order for a new source\n\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {EventTarget~Event}\n         */\n        this.trigger('loadstart');\n        this.trigger('firstplay');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      } // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n\n\n      this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n    }\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    ;\n\n    _proto.manualAutoplay_ = function manualAutoplay_(type) {\n      var _this6 = this;\n\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      } // Save original muted() value, set muted to true, and attempt to play().\n      // On promise rejection, restore muted from saved value\n\n\n      var resolveMuted = function resolveMuted() {\n        var previouslyMuted = _this6.muted();\n\n        _this6.muted(true);\n\n        var restoreMuted = function restoreMuted() {\n          _this6.muted(previouslyMuted);\n        }; // restore muted on play terminatation\n\n\n        _this6.playTerminatedQueue_.push(restoreMuted);\n\n        var mutedPromise = _this6.play();\n\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n\n        return mutedPromise[\"catch\"](function (err) {\n          restoreMuted();\n          throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n        });\n      };\n\n      var promise; // if muted defaults to true\n      // the only thing we can do is call play\n\n      if (type === 'any' && !this.muted()) {\n        promise = this.play();\n\n        if (isPromise(promise)) {\n          promise = promise[\"catch\"](resolveMuted);\n        }\n      } else if (type === 'muted' && !this.muted()) {\n        promise = resolveMuted();\n      } else {\n        promise = this.play();\n      }\n\n      if (!isPromise(promise)) {\n        return;\n      }\n\n      return promise.then(function () {\n        _this6.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      })[\"catch\"](function () {\n        _this6.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    ;\n\n    _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n      if (srcObj === void 0) {\n        srcObj = '';\n      }\n\n      var src = srcObj;\n      var type = '';\n\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      } // make sure all the caches are set to default values\n      // to prevent null checking\n\n\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n      if (src && !type) {\n        type = findMimetype(this, src);\n      } // update `currentSource` cache always\n\n\n      this.cache_.source = mergeOptions$3({}, srcObj, {\n        src: src,\n        type: type\n      });\n      var matchingSources = this.cache_.sources.filter(function (s) {\n        return s.src && s.src === src;\n      });\n      var sourceElSources = [];\n      var sourceEls = this.$$('source');\n      var matchingSourceEls = [];\n\n      for (var i = 0; i < sourceEls.length; i++) {\n        var sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      } // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n\n\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      } // update the tech `src` cache\n\n\n      this.cache_.src = src;\n    }\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {EventTarget~Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    ;\n\n    _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n      var _this7 = this;\n\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        var updateSourceCaches = function updateSourceCaches(src) {\n          return _this7.updateSourceCaches_(src);\n        };\n\n        var playerSrc = this.currentSource().src;\n        var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = function updateSourceCaches() {};\n          }\n        } // update the source to the initial source right away\n        // in some cases this will be empty string\n\n\n        updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n\n        if (!event.src) {\n          this.tech_.any(['sourceset', 'loadstart'], function (e) {\n            // if a sourceset happens before a `loadstart` there\n            // is nothing to do as this `handleTechSourceset_`\n            // will be called again and this will be handled there.\n            if (e.type === 'sourceset') {\n              return;\n            }\n\n            var techSrc = _this7.techGet('currentSrc');\n\n            _this7.lastSource_.tech = techSrc;\n\n            _this7.updateSourceCaches_(techSrc);\n          });\n        }\n      }\n\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     * @fires Player#firstplay\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    ;\n\n    _proto.hasStarted = function hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n\n      if (request === this.hasStarted_) {\n        return;\n      }\n\n      this.hasStarted_ = request;\n\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n        this.trigger('firstplay');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlay_ = function handleTechPlay_() {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('play');\n    }\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    ;\n\n    _proto.handleTechRateChange_ = function handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(function (queued) {\n          return queued.callback(queued.event);\n        });\n        this.queuedCallbacks_ = [];\n      }\n\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n\n      this.trigger('ratechange');\n    }\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    ;\n\n    _proto.handleTechWaiting_ = function handleTechWaiting_() {\n      var _this8 = this;\n\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n\n      var timeWhenWaiting = this.currentTime();\n\n      var timeUpdateListener = function timeUpdateListener() {\n        if (timeWhenWaiting !== _this8.currentTime()) {\n          _this8.removeClass('vjs-waiting');\n\n          _this8.off('timeupdate', timeUpdateListener);\n        }\n      };\n\n      this.on('timeupdate', timeUpdateListener);\n    }\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplay');\n    }\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplaythrough');\n    }\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlaying_ = function handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('playing');\n    }\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeking_ = function handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeking');\n    }\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeked_ = function handleTechSeeked_() {\n      this.removeClass('vjs-seeking');\n      this.removeClass('vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeked');\n    }\n    /**\n     * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#firstplay\n     * @listens Tech#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n     * @private\n     */\n    ;\n\n    _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n      // If the first starttime attribute is specified\n      // then we will start at the given offset in seconds\n      if (this.options_.starttime) {\n        log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n        this.currentTime(this.options_.starttime);\n      }\n\n      this.addClass('vjs-has-started');\n      /**\n       * Fired the first time a video is played. Not part of the HLS spec, and this is\n       * probably not the best implementation yet, so use sparingly. If you don't have a\n       * reason to prevent playback, use `myPlayer.one('play');` instead.\n       *\n       * @event Player#firstplay\n       * @deprecated As of 6.0 firstplay event is deprecated.\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('firstplay');\n    }\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    ;\n\n    _proto.handleTechPause_ = function handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('pause');\n    }\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    ;\n\n    _proto.handleTechEnded_ = function handleTechEnded_() {\n      this.addClass('vjs-ended');\n      this.removeClass('vjs-waiting');\n\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ended');\n    }\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#click\n     * @private\n     */\n    ;\n\n    _proto.handleTechClick_ = function handleTechClick_(event) {\n      // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n      if (!this.controls_) {\n        return;\n      }\n\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n          this.options_.userActions.click.call(this, event);\n        } else if (this.paused()) {\n          silencePromise(this.play());\n        } else {\n          this.pause();\n        }\n      }\n    }\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    ;\n\n    _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      } // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n\n\n      var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n        return el.contains(event.target);\n      });\n\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    ;\n\n    _proto.handleTechTap_ = function handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n    /**\n     * Handle touch to end\n     *\n     * @param {EventTarget~Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * native click events on the SWF aren't triggered on IE11, Win8.1RT\n     * use stageclick events triggered from inside the SWF instead\n     *\n     * @private\n     * @listens stageclick\n     */\n    ;\n\n    _proto.handleStageClick_ = function handleStageClick_() {\n      this.reportUserActivity();\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    ;\n\n    _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n      var targetPlayer = e.target.player; // if another player was fullscreen\n      // do a null check for targetPlayer because older firefox's would put document as e.target\n\n      if (targetPlayer && targetPlayer !== this) {\n        return;\n      }\n\n      var el = this.el();\n      var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + this.fsApi_.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n      }\n\n      this.isFullscreen(isFs);\n    }\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {EventTarget~Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n      if (data) {\n        if (data.nativeIOSFullscreen) {\n          this.toggleClass('vjs-ios-native-fs');\n        }\n\n        this.isFullscreen(data.isFullscreen);\n      }\n    };\n\n    _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n      this.trigger('fullscreenerror', err);\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n      if (this.isInPictureInPicture()) {\n        this.addClass('vjs-picture-in-picture');\n      } else {\n        this.removeClass('vjs-picture-in-picture');\n      }\n    }\n    /**\n     * Handle Tech Enter Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the enterpictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#enterpictureinpicture\n     */\n    ;\n\n    _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n      this.isInPictureInPicture(true);\n    }\n    /**\n     * Handle Tech Leave Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the leavepictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#leavepictureinpicture\n     */\n    ;\n\n    _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n      this.isInPictureInPicture(false);\n    }\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    ;\n\n    _proto.handleTechError_ = function handleTechError_() {\n      var error = this.tech_.error();\n      this.error(error);\n    }\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    ;\n\n    _proto.handleTechTextData_ = function handleTechTextData_() {\n      var data = null;\n\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('textdata', data);\n    }\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    ;\n\n    _proto.getCache = function getCache() {\n      return this.cache_;\n    }\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetCache_ = function resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        initTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        playbackRates: [],\n        volume: 1\n      };\n    }\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} arg\n     *        the argument to pass\n     *\n     * @private\n     */\n    ;\n\n    _proto.techCall_ = function techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log$1(e);\n          throw e;\n        }\n      }, true);\n    }\n    /**\n     * Get calls can't wait for the tech, and sometimes don't need to.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {Function|undefined}\n     *         the method or undefined\n     *\n     * @private\n     */\n    ;\n\n    _proto.techGet_ = function techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      } // Flash likes to die and reload when you hide or reposition it.\n      // In these cases the object methods go away and we get errors.\n      // TODO: Is this needed for techs other than Flash?\n      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n          throw e;\n        } // When a method isn't available on the object it throws a TypeError\n\n\n        if (e.name === 'TypeError') {\n          log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n          this.tech_.isReady_ = false;\n          throw e;\n        } // If error unknown, just log and throw\n\n\n        log$1(e);\n        throw e;\n      }\n    }\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    ;\n\n    _proto.play = function play() {\n      var _this9 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return new PromiseClass(function (resolve) {\n          _this9.play_(resolve);\n        });\n      }\n\n      return this.play_();\n    }\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    ;\n\n    _proto.play_ = function play_(callback) {\n      var _this10 = this;\n\n      if (callback === void 0) {\n        callback = silencePromise;\n      }\n\n      this.playCallbacks_.push(callback);\n      var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      } // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n\n\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = function (e) {\n          _this10.play_();\n        };\n\n        this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n        if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n          this.load();\n        }\n\n        return;\n      } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n      var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differenciate between a terminated play and an actual call to play.\n     */\n    ;\n\n    _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n      var queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    ;\n\n    _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n      var callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n    /**\n     * Pause the video playback\n     *\n     * @return {Player}\n     *         A reference to the player object this function was called on\n     */\n    ;\n\n    _proto.pause = function pause() {\n      this.techCall_('pause');\n    }\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    ;\n\n    _proto.paused = function paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    ;\n\n    _proto.played = function played() {\n      return this.techGet_('played') || createTimeRanges(0, 0);\n    }\n    /**\n     * Returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean}\n     *         The value of scrubbing when getting\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n\n      this.scrubbing_ = !!isScrubbing;\n      this.techCall_('setScrubbing', this.scrubbing_);\n\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number}\n     *         - the current time in seconds when getting\n     */\n    ;\n\n    _proto.currentTime = function currentTime(seconds) {\n      if (typeof seconds !== 'undefined') {\n        if (seconds < 0) {\n          seconds = 0;\n        }\n\n        if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n          this.cache_.initTime = seconds;\n          this.off('canplay', this.boundApplyInitTime_);\n          this.one('canplay', this.boundApplyInitTime_);\n          return;\n        }\n\n        this.techCall_('setCurrentTime', seconds);\n        this.cache_.initTime = 0;\n        return;\n      } // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit afterall.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n\n\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    /**\n     * Apply the value of initTime stored in cache as currentTime.\n     *\n     * @private\n     */\n    ;\n\n    _proto.applyInitTime_ = function applyInitTime_() {\n      this.currentTime(this.cache_.initTime);\n    }\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and depending on preload behaviour may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number}\n     *         - The duration of the video in seconds when getting\n     */\n    ;\n\n    _proto.duration = function duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n\n      seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing (esp. Flash)\n        // TODO: Required for techs other than Flash?\n        this.cache_.duration = seconds;\n\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n        } else {\n          this.removeClass('vjs-live');\n        }\n\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTime = function remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n    /**\n     * A remaining time function that is intented to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    } //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock TimeRange object (following HTML spec)\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var buffered = this.techGet_('buffered');\n\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges(0, 0);\n      }\n\n      return buffered;\n    }\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    ;\n\n    _proto.bufferedEnd = function bufferedEnd() {\n      var buffered = this.buffered();\n      var duration = this.duration();\n      var end = buffered.end(buffered.length - 1);\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      return end;\n    }\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         The current volume as a percent when getting\n     */\n    ;\n\n    _proto.volume = function volume(percentAsDecimal) {\n      var vol;\n\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n\n        return;\n      } // Default to 1 when returning current volume.\n\n\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     */\n    ;\n\n    _proto.muted = function muted(_muted) {\n      if (_muted !== undefined) {\n        this.techCall_('setMuted', _muted);\n        return;\n      }\n\n      return this.techGet_('muted') || false;\n    }\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|Player}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - A reference to the current player when setting\n     */\n    ;\n\n    _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n      if (_defaultMuted !== undefined) {\n        return this.techCall_('setDefaultMuted', _defaultMuted);\n      }\n\n      return this.techGet_('defaultMuted') || false;\n    }\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         the current value of lastVolume as a percent when getting\n     *\n     * @private\n     */\n    ;\n\n    _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n\n      return this.cache_.lastVolume;\n    }\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     */\n    ;\n\n    _proto.isFullscreen = function isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        var oldValue = this.isFullscreen_;\n        this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n        // this is the only place where we trigger fullscreenchange events for older browsers\n        // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n        if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n          /**\n             * @event Player#fullscreenchange\n             * @type {EventTarget~Event}\n             */\n          this.trigger('fullscreenchange');\n        }\n\n        this.toggleFullscreenClass_();\n        return;\n      }\n\n      return this.isFullscreen_;\n    }\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @param  {Object} [fullscreenOptions]\n     *         Override the player fullscreen options\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n          if (promise) {\n            promise.then(offHandler, offHandler);\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.requestFullscreenHelper_();\n    };\n\n    _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n      var _this11 = this;\n\n      var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n      // Use defaults or player configured option unless passed directly to this method.\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      } // This method works as follows:\n      // 1. if a fullscreen api is available, use it\n      //   1. call requestFullscreen with potential options\n      //   2. if we got a promise from above, use it to update isFullscreen()\n      // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n      //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n      // 3. otherwise, use \"fullWindow\" mode\n\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n        if (promise) {\n          promise.then(function () {\n            return _this11.isFullscreen(true);\n          }, function () {\n            return _this11.isFullscreen(false);\n          });\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n      }\n    }\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.exitFullscreen = function exitFullscreen() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.exitFullscreenHelper_();\n\n          if (promise) {\n            promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.exitFullscreenHelper_();\n    };\n\n    _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n      var _this12 = this;\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = document[this.fsApi_.exitFullscreen]();\n\n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(function () {\n            return _this12.isFullscreen(false);\n          }));\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    }\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    ;\n\n    _proto.enterFullWindow = function enterFullWindow() {\n      this.isFullscreen(true);\n      this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n      this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n      on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n      document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n      addClass(document.body, 'vjs-full-window');\n      /**\n       * @event Player#enterFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('enterFullWindow');\n    }\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    ;\n\n    _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        if (this.isFullscreen() === true) {\n          if (!this.isFullWindow) {\n            this.exitFullscreen();\n          } else {\n            this.exitFullWindow();\n          }\n        }\n      }\n    }\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    ;\n\n    _proto.exitFullWindow = function exitFullWindow() {\n      this.isFullscreen(false);\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n      document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n      removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n\n      /**\n       * @event Player#exitFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('exitFullWindow');\n    }\n    /**\n     * Disable Picture-in-Picture mode.\n     *\n     * @param {boolean} value\n     *                  - true will disable Picture-in-Picture mode\n     *                  - false will enable Picture-in-Picture mode\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n      if (value === undefined) {\n        return this.techGet_('disablePictureInPicture');\n      }\n\n      this.techCall_('setDisablePictureInPicture', value);\n      this.options_.disablePictureInPicture = value;\n      this.trigger('disablepictureinpicturechanged');\n    }\n    /**\n     * Check if the player is in Picture-in-Picture mode or tell the player that it\n     * is or is not in Picture-in-Picture mode.\n     *\n     * @param  {boolean} [isPiP]\n     *         Set the players current Picture-in-Picture state\n     *\n     * @return {boolean}\n     *         - true if Picture-in-Picture is on and getting\n     *         - false if Picture-in-Picture is off and getting\n     */\n    ;\n\n    _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n      if (isPiP !== undefined) {\n        this.isInPictureInPicture_ = !!isPiP;\n        this.togglePictureInPictureClass_();\n        return;\n      }\n\n      return !!this.isInPictureInPicture_;\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#enterpictureinpicture\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n        /**\n         * This event fires when the player enters picture in picture mode\n         *\n         * @event Player#enterpictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return this.techGet_('requestPictureInPicture');\n      }\n    }\n    /**\n     * Exit Picture-in-Picture mode.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#leavepictureinpicture\n     *\n     * @return {Promise}\n     *         A promise.\n     */\n    ;\n\n    _proto.exitPictureInPicture = function exitPictureInPicture() {\n      if ('pictureInPictureEnabled' in document) {\n        /**\n         * This event fires when the player leaves picture in picture mode\n         *\n         * @event Player#leavepictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return document.exitPictureInPicture();\n      }\n    }\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      } // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n\n\n      var excludeElement = function excludeElement(el) {\n        var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n        if (el.isContentEditable) {\n          return true;\n        } // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n\n\n        var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        } // The final test is by tag name. These tags will be excluded entirely.\n\n\n        var excludedTags = ['textarea'];\n        return excludedTags.indexOf(tagName) !== -1;\n      }; // Bail out if the user is focused on an interactive form element.\n\n\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleHotkeys = function handleHotkeys(event) {\n      var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n      var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n          fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'f');\n      } : _hotkeys$fullscreenKe,\n          _hotkeys$muteKey = hotkeys.muteKey,\n          muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'm');\n      } : _hotkeys$muteKey,\n          _hotkeys$playPauseKey = hotkeys.playPauseKey,\n          playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n      } : _hotkeys$playPauseKey;\n\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n        if (document[this.fsApi_.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this, event);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var MuteToggle = Component$1.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this, event);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var PlayToggle = Component$1.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this, event);\n      }\n    }\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType(type) {\n      var can; // Loop through each playback technology in the options order\n\n      for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        var techName = j[i];\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!tech) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the current tech is defined before continuing\n\n\n        if (!tech) {\n          log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n          continue;\n        } // Check if the browser supports this technology\n\n\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n\n          if (can) {\n            return can;\n          }\n        }\n      }\n\n      return '';\n    }\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    ;\n\n    _proto.selectSource = function selectSource(sources) {\n      var _this13 = this;\n\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      var techs = this.options_.techOrder.map(function (techName) {\n        return [techName, Tech.getTech(techName)];\n      }).filter(function (_ref) {\n        var techName = _ref[0],\n            tech = _ref[1];\n\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        return false;\n      }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n\n      var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n        var found;\n        outerArray.some(function (outerChoice) {\n          return innerArray.some(function (innerChoice) {\n            found = tester(outerChoice, innerChoice);\n\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n\n      var foundSourceAndTech;\n\n      var flip = function flip(fn) {\n        return function (a, b) {\n          return fn(b, a);\n        };\n      };\n\n      var finder = function finder(_ref2, source) {\n        var techName = _ref2[0],\n            tech = _ref2[1];\n\n        if (tech.canPlaySource(source, _this13.options_[techName.toLowerCase()])) {\n          return {\n            source: source,\n            tech: techName\n          };\n        }\n      }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n\n\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n\n      return foundSourceAndTech || false;\n    }\n    /**\n     * Executes source setting and getting logic\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     * @param {boolean} isRetry\n     *        Indicates whether this is being called internally as a result of a retry\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n      var _this14 = this;\n\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      } // Reset retry behavior for new source\n\n\n      if (this.resetRetryOnError_) {\n        this.resetRetryOnError_();\n      } // filter out invalid sources and turn our source into\n      // an array of source objects\n\n\n      var sources = filterSource(source); // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0);\n        return;\n      } // initial sources\n\n\n      this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n      // since in that case we want to include the failed source(s) in the cache\n\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n\n      this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n      setSource(this, sources[0], function (middlewareSource, mws) {\n        _this14.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n\n        if (!isRetry) {\n          _this14.cache_.sources = sources;\n        }\n\n        _this14.updateSourceCaches_(middlewareSource);\n\n        var err = _this14.src_(middlewareSource);\n\n        if (err) {\n          if (sources.length > 1) {\n            return _this14.handleSrc_(sources.slice(1));\n          }\n\n          _this14.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n          _this14.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.localize(this.options_.notSupportedMessage)\n            });\n          }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n\n\n          _this14.triggerReady();\n\n          return;\n        }\n\n        setTech(mws, _this14.tech_);\n      }); // Try another available source if this one fails before playback.\n\n      if (this.options_.retryOnError && sources.length > 1) {\n        var retry = function retry() {\n          // Remove the error modal\n          _this14.error(null);\n\n          _this14.handleSrc_(sources.slice(1), true);\n        };\n\n        var stopListeningForErrors = function stopListeningForErrors() {\n          _this14.off('error', retry);\n        };\n\n        this.one('error', retry);\n        this.one('playing', stopListeningForErrors);\n\n        this.resetRetryOnError_ = function () {\n          _this14.off('error', retry);\n\n          _this14.off('playing', stopListeningForErrors);\n        };\n      }\n    }\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.src = function src(source) {\n      return this.handleSrc_(source, false);\n    }\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    ;\n\n    _proto.src_ = function src_(source) {\n      var _this15 = this;\n\n      var sourceTech = this.selectSource([source]);\n\n      if (!sourceTech) {\n        return true;\n      }\n\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true; // load this technology with the chosen source\n\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(function () {\n          _this15.changingSrc_ = false;\n        });\n        return false;\n      } // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n\n\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n    /**\n     * Begin loading the src data.\n     */\n    ;\n\n    _proto.load = function load() {\n      this.techCall_('load');\n    }\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      var _this16 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (this.paused() || !PromiseClass) {\n        this.doReset_();\n      } else {\n        var playPromise = this.play();\n        silencePromise(playPromise.then(function () {\n          return _this16.doReset_();\n        }));\n      }\n    };\n\n    _proto.doReset_ = function doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    ;\n\n    _proto.resetControlBarUI_ = function resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    ;\n\n    _proto.resetProgressBar_ = function resetProgressBar_() {\n      this.currentTime(0);\n      var _this$controlBar = this.controlBar,\n          durationDisplay = _this$controlBar.durationDisplay,\n          remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n    }\n    /**\n     * Reset Playback ratio\n     */\n    ;\n\n    _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n    /**\n     * Reset Volume bar\n     */\n    ;\n\n    _proto.resetVolumeBar_ = function resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    ;\n\n    _proto.currentSources = function currentSources() {\n      var source = this.currentSource();\n      var sources = []; // assume `{}` or `{ src }`\n\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n\n      return this.cache_.sources || sources;\n    }\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    ;\n\n    _proto.currentSource = function currentSource() {\n      return this.cache_.source || {};\n    }\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    ;\n\n    _proto.currentType = function currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {boolean} [value]\n     *        - true means that we should preload\n     *        - false means that we should not preload\n     *\n     * @return {string}\n     *         The preload attribute value when getting\n     */\n    ;\n\n    _proto.preload = function preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n\n      return this.techGet_('preload');\n    }\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|string} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string}\n     *         The current value of autoplay when getting\n     */\n    ;\n\n    _proto.autoplay = function autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n\n      var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n      if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n        techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|Player}\n     *         - the current value of playsinline\n     *         - the player when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    ;\n\n    _proto.playsinline = function playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n        return this;\n      }\n\n      return this.techGet_('playsinline');\n    }\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean}\n     *         The current value of loop when getting\n     */\n    ;\n\n    _proto.loop = function loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n\n      return this.techGet_('loop');\n    }\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string}\n     *         The current value of poster when getting\n     */\n    ;\n\n    _proto.poster = function poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      } // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n\n\n      if (!src) {\n        src = '';\n      }\n\n      if (src === this.poster_) {\n        return;\n      } // update the internal poster variable\n\n\n      this.poster_ = src; // update the tech's poster\n\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('posterchange');\n    }\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        var newPoster = this.tech_.poster() || '';\n\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n          this.trigger('posterchange');\n        }\n      }\n    }\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean}\n     *         The current value of controls when getting\n     */\n    ;\n\n    _proto.controls = function controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.controls_ === bool) {\n        return;\n      }\n\n      this.controls_ = bool;\n\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsenabled');\n\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsdisabled');\n\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls) or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean}\n     *         The current value of native controls when getting\n     */\n    ;\n\n    _proto.usingNativeControls = function usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n\n      this.usingNativeControls_ = bool;\n\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingcustomcontrols');\n      }\n    }\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null}\n     *         The current MediaError when getting (or null)\n     */\n    ;\n\n    _proto.error = function error(err) {\n      var _this17 = this;\n\n      if (err === undefined) {\n        return this.error_ || null;\n      } // allow hooks to modify error object\n\n\n      hooks('beforeerror').forEach(function (hookFunction) {\n        var newErr = hookFunction(_this17, err);\n\n        if (!(isObject$1(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n          _this17.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n          return;\n        }\n\n        err = newErr;\n      }); // Suppress the first error message for no compatible source until\n      // user interaction\n\n      if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n        var triggerSuppressedError = function triggerSuppressedError() {\n          this.error(err);\n        };\n\n        this.options_.suppressNotSupportedError = false;\n        this.any(['click', 'touchstart'], triggerSuppressedError);\n        this.one('loadstart', function () {\n          this.off(['click', 'touchstart'], triggerSuppressedError);\n        });\n        return;\n      } // restoring to default\n\n\n      if (err === null) {\n        this.error_ = err;\n        this.removeClass('vjs-error');\n\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n\n        return;\n      }\n\n      this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n      this.addClass('vjs-error'); // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n      log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n      /**\n       * @event Player#error\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('error'); // notify hooks of the per player error\n\n      hooks('error').forEach(function (hookFunction) {\n        return hookFunction(_this17, _this17.error_);\n      });\n      return;\n    }\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    ;\n\n    _proto.reportUserActivity = function reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean}\n     *         The current value of userActive when getting\n     */\n    ;\n\n    _proto.userActive = function userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n\n      bool = !!bool;\n\n      if (bool === this.userActive_) {\n        return;\n      }\n\n      this.userActive_ = bool;\n\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('useractive');\n        return;\n      } // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('userinactive');\n    }\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    ;\n\n    _proto.listenForUserActivity_ = function listenForUserActivity_() {\n      var mouseInProgress;\n      var lastMoveX;\n      var lastMoveY;\n      var handleActivity = bind(this, this.reportUserActivity);\n\n      var handleMouseMove = function handleMouseMove(e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n\n      var handleMouseDown = function handleMouseDown() {\n        handleActivity(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n\n      var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n        handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n        this.clearInterval(mouseInProgress);\n      }; // Any mouse movement will be considered user activity\n\n\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUpAndMouseLeave);\n      this.on('mouseleave', handleMouseUpAndMouseLeave);\n      var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          if (this.player().options_.inactivityTimeout !== 0) {\n            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          }\n\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      } // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n\n\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n\n      var inactivityTimeout;\n      this.setInterval(function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        } // Reset the activity tracker\n\n\n        this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n        this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n        this.clearTimeout(inactivityTimeout);\n        var timeout = this.options_.inactivityTimeout;\n\n        if (timeout <= 0) {\n          return;\n        } // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n\n\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      }, 250);\n    }\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number}\n     *         The current playback rate when getting or 1.0\n     */\n    ;\n\n    _proto.playbackRate = function playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|Player}\n     *         - The default playback rate when getting or 1.0\n     *         - the player when setting\n     */\n    ;\n\n    _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} bool\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean}\n     *         The current value of isAudio when getting\n     */\n    ;\n\n    _proto.isAudio = function isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n\n      return !!this.isAudio_;\n    }\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n     * When manualCleanup is set to false, the track will be automatically removed\n     * on source changes.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     *                                       removed on a source change\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     *             to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n      if (obj === void 0) {\n        obj = {};\n      }\n\n      var _obj = obj,\n          track = _obj.track;\n\n      if (!track) {\n        track = obj;\n      } // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    ;\n\n    _proto.videoWidth = function videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    ;\n\n    _proto.videoHeight = function videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n    /**\n     * The player's language code.\n     *\n     * Changing the langauge will trigger\n     * [languagechange]{@link Player#event:languagechange}\n     * which Components can use to update control text.\n     * ClickableComponent will update its control text by default on\n     * [languagechange]{@link Player#event:languagechange}.\n     *\n     * @fires Player#languagechange\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string}\n     *         The current language code when getting\n     */\n    ;\n\n    _proto.language = function language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n\n      if (this.language_ !== String(code).toLowerCase()) {\n        this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n        if (isEvented(this)) {\n          /**\n          * fires when the player language change\n          *\n          * @event Player#languagechange\n          * @type {EventTarget~Event}\n          */\n          this.trigger('languagechange');\n        }\n      }\n    }\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    ;\n\n    _proto.languages = function languages() {\n      return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n    }\n    /**\n     * returns a JavaScript object reperesenting the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      var options = mergeOptions$3(this.options_);\n      var tracks = options.tracks;\n      options.tracks = [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n        track = mergeOptions$3(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n\n      return options;\n    }\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    ;\n\n    _proto.createModal = function createModal(content, options) {\n      var _this18 = this;\n\n      options = options || {};\n      options.content = content || '';\n      var modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', function () {\n        _this18.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n\n      var currentBreakpoint = this.currentBreakpoint();\n      var currentWidth = this.currentWidth();\n\n      for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        var candidateBreakpoint = BREAKPOINT_ORDER[i];\n        var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          } // Only remove a class if there is a current breakpoint.\n\n\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n      var className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    ;\n\n    _proto.breakpoints = function breakpoints(_breakpoints) {\n      // Used as a getter.\n      if (_breakpoints === undefined) {\n        return assign(this.breakpoints_);\n      }\n\n      this.breakpoint_ = '';\n      this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n\n      this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n      return assign(this.breakpoints_);\n    }\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} value\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     */\n    ;\n\n    _proto.responsive = function responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n\n      value = Boolean(value);\n      var current = this.responsive_; // Nothing changed.\n\n      if (value === current) {\n        return;\n      } // The value actually changed, set it.\n\n\n      this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n\n      if (value) {\n        this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n\n      return value;\n    }\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    ;\n\n    _proto.currentBreakpoint = function currentBreakpoint() {\n      return this.breakpoint_;\n    }\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    ;\n\n    _proto.currentBreakpointClass = function currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    ;\n\n    _proto.loadMedia = function loadMedia(media, ready) {\n      var _this19 = this;\n\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n\n      this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n      this.cache_.media = mergeOptions$3(media);\n      var _this$cache_$media = this.cache_.media,\n          artwork = _this$cache_$media.artwork,\n          poster = _this$cache_$media.poster,\n          src = _this$cache_$media.src,\n          textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n\n      if (src) {\n        this.src(src);\n      }\n\n      if (poster) {\n        this.poster(poster);\n      }\n\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(function (tt) {\n          return _this19.addRemoteTextTrack(tt, false);\n        });\n      }\n\n      this.ready(ready);\n    }\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    ;\n\n    _proto.getMedia = function getMedia() {\n      if (!this.cache_.media) {\n        var poster = this.poster();\n        var src = this.currentSources();\n        var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n          return {\n            kind: tt.kind,\n            label: tt.label,\n            language: tt.language,\n            src: tt.src\n          };\n        });\n        var media = {\n          src: src,\n          textTracks: textTracks\n        };\n\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n\n        return media;\n      }\n\n      return mergeOptions$3(this.cache_.media);\n    }\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    ;\n\n    Player.getTagSettings = function getTagSettings(tag) {\n      var baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      var tagOptions = getAttributes(tag);\n      var dataSetup = tagOptions['data-setup'];\n\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      } // Check if data-setup attr exists.\n\n\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        var _safeParseTuple = tuple(dataSetup || '{}'),\n            err = _safeParseTuple[0],\n            data = _safeParseTuple[1];\n\n        if (err) {\n          log$1.error(err);\n        }\n\n        assign(tagOptions, data);\n      }\n\n      assign(baseOptions, tagOptions); // Get tag children settings\n\n      if (tag.hasChildNodes()) {\n        var children = tag.childNodes;\n\n        for (var i = 0, j = children.length; i < j; i++) {\n          var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n          var childName = child.nodeName.toLowerCase();\n\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n\n      return baseOptions;\n    }\n    /**\n     * Determine whether or not flexbox is supported\n     *\n     * @return {boolean}\n     *         - true if flexbox is supported\n     *         - false if flexbox is not supported\n     */\n    ;\n\n    _proto.flexNotSupported_ = function flexNotSupported_() {\n      var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n      // common flex features that we can rely on when checking for flex support.\n\n      return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n      'msFlexOrder' in elem.style);\n    }\n    /**\n     * Set debug mode to enable/disable logs at info level.\n     *\n     * @param {boolean} enabled\n     * @fires Player#debugon\n     * @fires Player#debugoff\n     */\n    ;\n\n    _proto.debug = function debug(enabled) {\n      if (enabled === undefined) {\n        return this.debugEnabled_;\n      }\n\n      if (enabled) {\n        this.trigger('debugon');\n        this.previousLogLevel_ = this.log.level;\n        this.log.level('debug');\n        this.debugEnabled_ = true;\n      } else {\n        this.trigger('debugoff');\n        this.log.level(this.previousLogLevel_);\n        this.previousLogLevel_ = undefined;\n        this.debugEnabled_ = false;\n      }\n    }\n    /**\n     * Set or get current playback rates.\n     * Takes an array and updates the playback rates menu with the new items.\n     * Pass in an empty array to hide the menu.\n     * Values other than arrays are ignored.\n     *\n     * @fires Player#playbackrateschange\n     * @param {number[]} newRates\n     *                   The new rates that the playback rates menu should update to.\n     *                   An empty array will hide the menu\n     * @return {number[]} When used as a getter will return the current playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates(newRates) {\n      if (newRates === undefined) {\n        return this.cache_.playbackRates;\n      } // ignore any value that isn't an array\n\n\n      if (!Array.isArray(newRates)) {\n        return;\n      } // ignore any arrays that don't only contain numbers\n\n\n      if (!newRates.every(function (rate) {\n        return typeof rate === 'number';\n      })) {\n        return;\n      }\n\n      this.cache_.playbackRates = newRates;\n      /**\n      * fires when the playback rates in a player are changed\n      *\n      * @event Player#playbackrateschange\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('playbackrateschange');\n    };\n\n    return Player;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n\n\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n  Player.prototype.crossorigin = Player.prototype.crossOrigin;\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n\n  Player.players = {};\n  var navigator = window.navigator;\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    normalizeAutoplay: false,\n    fullscreen: {\n      options: {\n        navigationUI: 'hide'\n      }\n    },\n    breakpoints: {},\n    responsive: false\n  };\n  [\n  /**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player#ended\n   */\n  'ended',\n  /**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player#seeking\n   */\n  'seeking',\n  /**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player#seekable\n   */\n  'seekable',\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player#networkState\n   */\n  'networkState',\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player#readyState\n   */\n  'readyState'].forEach(function (fn) {\n    Player.prototype[fn] = function () {\n      return this.techGet_(fn);\n    };\n  });\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n      return this.trigger(event);\n    };\n  });\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component$1.registerComponent('Player', Player);\n\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n  });\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  var isNativeReflectConstruct = _isNativeReflectConstruct;\n\n  var construct = createCommonjsModule(function (module) {\n    function _construct(Parent, args, Class) {\n      if (isNativeReflectConstruct()) {\n        module.exports = _construct = Reflect.construct;\n      } else {\n        module.exports = _construct = function _construct(Parent, args, Class) {\n          var a = [null];\n          a.push.apply(a, args);\n          var Constructor = Function.bind.apply(Parent, a);\n          var instance = new Constructor();\n          if (Class) setPrototypeOf(instance, Class.prototype);\n          return instance;\n        };\n      }\n\n      return _construct.apply(null, arguments);\n    }\n\n    module.exports = _construct;\n  });\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n\n  var BASE_PLUGIN_NAME = 'plugin';\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n\n  var PLUGIN_CACHE_KEY = 'activePlugins_';\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n\n  var pluginStorage = {};\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n\n  var pluginExists = function pluginExists(name) {\n    return pluginStorage.hasOwnProperty(name);\n  };\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {Function|undefined}\n   *          The plugin (or undefined).\n   */\n\n\n  var getPlugin = function getPlugin(name) {\n    return pluginExists(name) ? pluginStorage[name] : undefined;\n  };\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n\n\n  var markPluginAsActive = function markPluginAsActive(player, name) {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {Plugin~PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n\n\n  var triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n    var eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n\n\n  var createBasicPlugin = function createBasicPlugin(name, plugin) {\n    var basicPluginWrapper = function basicPluginWrapper() {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: null\n      }, true);\n      var instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: instance\n      });\n      return instance;\n    };\n\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n\n\n  var createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function () {\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var instance = construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n      this[name] = function () {\n        return instance;\n      };\n\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n\n\n  var Plugin = /*#__PURE__*/function () {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    function Plugin(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n\n      this.player = player;\n\n      if (!this.log) {\n        this.log = this.player.log.createLogger(this.name);\n      } // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n\n\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n\n      this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n      player.on('dispose', this.dispose);\n    }\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n\n\n    var _proto = Plugin.prototype;\n\n    _proto.version = function version() {\n      return this.constructor.VERSION;\n    }\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {Plugin~PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    ;\n\n    _proto.getEventHash = function getEventHash(hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link Plugin~PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    ;\n\n    _proto.trigger = function trigger$1(event, hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    ;\n\n    _proto.handleStateChanged = function handleStateChanged(e) {}\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var name = this.name,\n          player = this.player;\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {EventTarget~Event}\n       */\n\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    ;\n\n    Plugin.isBasic = function isBasic(plugin) {\n      var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    ;\n\n    Plugin.registerPlugin = function registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n      }\n\n      if (pluginExists(name)) {\n        log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n      }\n\n      if (typeof plugin !== 'function') {\n        throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n      }\n\n      pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n\n      return plugin;\n    }\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    ;\n\n    Plugin.deregisterPlugin = function deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    ;\n\n    Plugin.getPlugins = function getPlugins(names) {\n      if (names === void 0) {\n        names = Object.keys(pluginStorage);\n      }\n\n      var result;\n      names.forEach(function (name) {\n        var plugin = getPlugin(name);\n\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    ;\n\n    Plugin.getPluginVersion = function getPluginVersion(name) {\n      var plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    };\n\n    return Plugin;\n  }();\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n\n\n  Plugin.getPlugin = getPlugin;\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} Plugin~PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n\n  var inherits = _inherits;\n\n  /**\n   * @file extend.js\n   * @module extend\n   */\n  /**\n   * Used to subclass an existing class by emulating ES subclassing using the\n   * `extends` keyword.\n   *\n   * @function\n   * @example\n   * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n   *   myCustomMethod: function() {\n   *     // Do things in my method.\n   *   }\n   * });\n   *\n   * @param    {Function} superClass\n   *           The class to inherit from\n   *\n   * @param    {Object}   [subClassMethods={}]\n   *           Methods of the new class\n   *\n   * @return   {Function}\n   *           The new class with subClassMethods that inherited superClass.\n   */\n\n  var extend = function extend(superClass, subClassMethods) {\n    if (subClassMethods === void 0) {\n      subClassMethods = {};\n    }\n\n    var subClass = function subClass() {\n      superClass.apply(this, arguments);\n    };\n\n    var methods = {};\n\n    if (typeof subClassMethods === 'object') {\n      if (subClassMethods.constructor !== Object.prototype.constructor) {\n        subClass = subClassMethods.constructor;\n      }\n\n      methods = subClassMethods;\n    } else if (typeof subClassMethods === 'function') {\n      subClass = subClassMethods;\n    }\n\n    inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n    if (superClass) {\n      subClass.super_ = superClass;\n    } // Extend subObj's prototype with functions and other properties from props\n\n\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        subClass.prototype[name] = methods[name];\n      }\n    }\n\n    return subClass;\n  };\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n\n  var normalizeId = function normalizeId(id) {\n    return id.indexOf('#') === 0 ? id.slice(1) : id;\n  };\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:computed-style~computedStyle as computedStyle\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:extend~extend as extend\n   * @borrows module:fn.bind as bind\n   * @borrows module:format-time.formatTime as formatTime\n   * @borrows module:format-time.resetFormatTime as resetFormatTime\n   * @borrows module:format-time.setFormatTime as setFormatTime\n   * @borrows module:merge-options.mergeOptions as mergeOptions\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows module:time-ranges.createTimeRanges as createTimeRange\n   * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n   * @borrows module:url.isCrossOrigin as isCrossOrigin\n   * @borrows module:url.parseUrl as parseUrl\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {Component~ReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n\n\n  function videojs(id, options, ready) {\n    var player = videojs.getPlayer(id);\n\n    if (player) {\n      if (options) {\n        log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n      }\n\n      if (ready) {\n        player.ready(ready);\n      }\n\n      return player;\n    }\n\n    var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    } // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n    if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n      log$1.warn('The element supplied is not included in the DOM');\n    }\n\n    options = options || {};\n    hooks('beforesetup').forEach(function (hookFunction) {\n      var opts = hookFunction(el, mergeOptions$3(options));\n\n      if (!isObject$1(opts) || Array.isArray(opts)) {\n        log$1.error('please return an object in beforesetup hooks');\n        return;\n      }\n\n      options = mergeOptions$3(options, opts);\n    }); // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n\n    var PlayerComponent = Component$1.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    hooks('setup').forEach(function (hookFunction) {\n      return hookFunction(player);\n    });\n    return player;\n  }\n\n  videojs.hooks_ = hooks_;\n  videojs.hooks = hooks;\n  videojs.hook = hook;\n  videojs.hookOnce = hookOnce;\n  videojs.removeHook = removeHook; // Add default styles\n\n  if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    var style = $('.vjs-styles-defaults');\n\n    if (!style) {\n      style = createStyleElement('vjs-styles-defaults');\n      var head = $('head');\n\n      if (head) {\n        head.insertBefore(style, head.firstChild);\n      }\n\n      setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n    }\n  } // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n\n\n  autoSetupTimeout(1, videojs);\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n\n  videojs.VERSION = version$5;\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n\n  videojs.options = Player.prototype.options_;\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n\n  videojs.getPlayers = function () {\n    return Player.players;\n  };\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n\n\n  videojs.getPlayer = function (id) {\n    var players = Player.players;\n    var tag;\n\n    if (typeof id === 'string') {\n      var nId = normalizeId(id);\n      var player = players[nId];\n\n      if (player) {\n        return player;\n      }\n\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n\n    if (isEl(tag)) {\n      var _tag = tag,\n          _player = _tag.player,\n          playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n\n      if (_player || players[playerId]) {\n        return _player || players[playerId];\n      }\n    }\n  };\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n\n\n  videojs.getAllPlayers = function () {\n    return (// Disposed players leave a key with a `null` value, so we need to make sure\n      // we filter those out.\n      Object.keys(Player.players).map(function (k) {\n        return Player.players[k];\n      }).filter(Boolean)\n    );\n  };\n\n  videojs.players = Player.players;\n  videojs.getComponent = Component$1.getComponent;\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {Component} comp\n   *        The component class\n   *\n   * @return {Component}\n   *         The newly registered component\n   */\n\n  videojs.registerComponent = function (name, comp) {\n    if (Tech.isTech(comp)) {\n      log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n    }\n\n    Component$1.registerComponent.call(Component$1, name, comp);\n  };\n\n  videojs.getTech = Tech.getTech;\n  videojs.registerTech = Tech.registerTech;\n  videojs.use = use;\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n\n  videojs.browser = browser;\n  /**\n   * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n   * included for backward-compatibility with 4.x.\n   *\n   * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n   * @type {boolean}\n   */\n\n  videojs.TOUCH_ENABLED = TOUCH_ENABLED;\n  videojs.extend = extend;\n  videojs.mergeOptions = mergeOptions$3;\n  videojs.bind = bind;\n  videojs.registerPlugin = Plugin.registerPlugin;\n  videojs.deregisterPlugin = Plugin.deregisterPlugin;\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n   *\n   * @param {string} name\n   *        The plugin name\n   *\n   * @param {Plugin|Function} plugin\n   *         The plugin sub-class or function\n   */\n\n  videojs.plugin = function (name, plugin) {\n    log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name, plugin);\n  };\n\n  videojs.getPlugins = Plugin.getPlugins;\n  videojs.getPlugin = Plugin.getPlugin;\n  videojs.getPluginVersion = Plugin.getPluginVersion;\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n\n  videojs.addLanguage = function (code, data) {\n    var _mergeOptions;\n\n    code = ('' + code).toLowerCase();\n    videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n    return videojs.options.languages[code];\n  };\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n\n\n  videojs.log = log$1;\n  videojs.createLogger = createLogger;\n  videojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n  videojs.formatTime = formatTime;\n  videojs.setFormatTime = setFormatTime;\n  videojs.resetFormatTime = resetFormatTime;\n  videojs.parseUrl = parseUrl;\n  videojs.isCrossOrigin = isCrossOrigin;\n  videojs.EventTarget = EventTarget$2;\n  videojs.on = on;\n  videojs.one = one;\n  videojs.off = off;\n  videojs.trigger = trigger;\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n\n  videojs.xhr = lib;\n  videojs.TextTrack = TextTrack;\n  videojs.AudioTrack = AudioTrack;\n  videojs.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n    videojs[k] = function () {\n      log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs.computedStyle = computedStyle;\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:dom|dom}\n   */\n\n  videojs.dom = Dom;\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:url|url}\n   */\n\n  videojs.url = Url;\n  videojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n  // In a major update this could become the default text and key.\n\n  videojs.addLanguage('en', {\n    'Non-Fullscreen': 'Exit Fullscreen'\n  });\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n    (function (root) {\n      var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/?#]*\\/)*[^;?#]*)?(;[^?#]*)?(\\?[^#]*)?(#[^]*)?$/;\n      var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)([^]*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n      var URLToolkit = {\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n          opts = opts || {}; // remove any remaining space and CRLF\n\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n\n          var baseParts = URLToolkit.parseURL(baseURL);\n\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function parseURL(url) {\n          var parts = URL_REGEX.exec(url);\n\n          if (!parts) {\n            return null;\n          }\n\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function normalizePath(path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {}\n\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function buildURLFromParts(parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      module.exports = URLToolkit;\n    })();\n  });\n\n  var DEFAULT_LOCATION$1 = 'http://example.com';\n\n  var resolveUrl$2 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION$1);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION$1.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n\n  var atob = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  /*! @name m3u8-parser @version 4.7.0 @license Apache-2.0 */\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n  var LineStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(LineStream, _Stream);\n\n    function LineStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.buffer = '';\n      return _this;\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n\n    var _proto = LineStream.prototype;\n\n    _proto.push = function push(data) {\n      var nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    };\n\n    return LineStream;\n  }(Stream);\n\n  var TAB = String.fromCharCode(0x09);\n\n  var parseByterange = function parseByterange(byterangeString) {\n    // optionally match and capture 0+ digits before `@`\n    // optionally match and capture 0+ digits after `@`\n    var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n    var result = {};\n\n    if (match[1]) {\n      result.length = parseInt(match[1], 10);\n    }\n\n    if (match[2]) {\n      result.offset = parseInt(match[2], 10);\n    }\n\n    return result;\n  };\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n\n  var attributeSeparator = function attributeSeparator() {\n    var key = '[^=]*';\n    var value = '\"[^\"]*\"|[^,]*';\n    var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n\n  var parseAttributes$1 = function parseAttributes(attributes) {\n    // split the string using attributes as the separator\n    var attrs = attributes.split(attributeSeparator());\n    var result = {};\n    var i = attrs.length;\n    var attr;\n\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n\n  var ParseStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(ParseStream, _Stream);\n\n    function ParseStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.customParsers = [];\n      _this.tagMappers = [];\n      return _this;\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n\n    var _proto = ParseStream.prototype;\n\n    _proto.push = function push(line) {\n      var _this2 = this;\n\n      var match;\n      var event; // strip whitespace\n\n      line = line.trim();\n\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n\n      var newLines = this.tagMappers.reduce(function (acc, mapper) {\n        var mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(function (newLine) {\n        for (var i = 0; i < _this2.customParsers.length; i++) {\n          if (_this2.customParsers[i].call(_this2, newLine)) {\n            return;\n          }\n        } // Comments\n\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          _this2.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n\n          return;\n        }\n\n        match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n\n          if (match[2]) {\n            event.title = match[2];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = _extends_1(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n\n          if (match[1]) {\n            var attributes = parseAttributes$1(match[1]);\n\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n\n            if (event.attributes.RESOLUTION) {\n              var split = event.attributes.RESOLUTION.split('x');\n              var resolution = {};\n\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n\n              event.attributes.RESOLUTION = resolution;\n            }\n\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        } // unknown tag type\n\n\n        _this2.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(_ref) {\n      var _this3 = this;\n\n      var expression = _ref.expression,\n          customType = _ref.customType,\n          dataParser = _ref.dataParser,\n          segment = _ref.segment;\n\n      if (typeof dataParser !== 'function') {\n        dataParser = function dataParser(line) {\n          return line;\n        };\n      }\n\n      this.customParsers.push(function (line) {\n        var match = expression.exec(line);\n\n        if (match) {\n          _this3.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType: customType,\n            segment: segment\n          });\n\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(_ref2) {\n      var expression = _ref2.expression,\n          map = _ref2.map;\n\n      var mapFn = function mapFn(line) {\n        if (expression.test(line)) {\n          return map(line);\n        }\n\n        return line;\n      };\n\n      this.tagMappers.push(mapFn);\n    };\n\n    return ParseStream;\n  }(Stream);\n\n  var camelCase = function camelCase(str) {\n    return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n      return a[1].toUpperCase();\n    });\n  };\n\n  var camelCaseKeys = function camelCaseKeys(attributes) {\n    var result = {};\n    Object.keys(attributes).forEach(function (key) {\n      result[camelCase(key)] = attributes[key];\n    });\n    return result;\n  }; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n  // we need this helper because defaults are based upon targetDuration and\n  // partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n  // target durations are set.\n\n\n  var setHoldBack = function setHoldBack(manifest) {\n    var serverControl = manifest.serverControl,\n        targetDuration = manifest.targetDuration,\n        partTargetDuration = manifest.partTargetDuration;\n\n    if (!serverControl) {\n      return;\n    }\n\n    var tag = '#EXT-X-SERVER-CONTROL';\n    var hb = 'holdBack';\n    var phb = 'partHoldBack';\n    var minTargetDuration = targetDuration && targetDuration * 3;\n    var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n    if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n      serverControl[hb] = minTargetDuration;\n      this.trigger('info', {\n        message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n      });\n    }\n\n    if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n      });\n      serverControl[hb] = minTargetDuration;\n    } // default no part hold back to part target duration * 3\n\n\n    if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n      serverControl[phb] = partTargetDuration * 3;\n      this.trigger('info', {\n        message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n      });\n    } // if part hold back is too small default it to part target duration * 2\n\n\n    if (partTargetDuration && serverControl[phb] < minPartDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n      });\n      serverControl[phb] = minPartDuration;\n    }\n  };\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n\n  var Parser = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(Parser, _Stream);\n\n    function Parser() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.lineStream = new LineStream();\n      _this.parseStream = new ParseStream();\n\n      _this.lineStream.pipe(_this.parseStream);\n      /* eslint-disable consistent-this */\n\n\n      var self = assertThisInitialized(_this);\n      /* eslint-enable consistent-this */\n\n\n      var uris = [];\n      var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      var currentMap; // if specified, the active decryption key\n\n      var _key;\n\n      var hasParts = false;\n\n      var noop = function noop() {};\n\n      var defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n      // used in MPDs with Widevine encrypted streams.\n\n      var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n      var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      _this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        segments: []\n      }; // keep track of the last seen segment's byte range end, as segments are not required\n      // to provide the offset, in which case it defaults to the next byte after the\n      // previous segment\n\n      var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n      var lastPartByterangeEnd = 0;\n\n      _this.on('end', function () {\n        // only add preloadSegment if we don't yet have a uri for it.\n        // and we actually have parts/preloadHints\n        if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n          return;\n        }\n\n        if (!currentUri.map && currentMap) {\n          currentUri.map = currentMap;\n        }\n\n        if (!currentUri.key && _key) {\n          currentUri.key = _key;\n        }\n\n        if (!currentUri.timeline && typeof currentTimeline === 'number') {\n          currentUri.timeline = currentTimeline;\n        }\n\n        _this.manifest.preloadSegment = currentUri;\n      }); // update the manifest with the m3u8 entry from the parse stream\n\n\n      _this.parseStream.on('data', function (entry) {\n        var mediaGroup;\n        var rendition;\n        ({\n          tag: function tag() {\n            // switch based on the tag type\n            (({\n              version: function version() {\n                if (entry.version) {\n                  this.manifest.version = entry.version;\n                }\n              },\n              'allow-cache': function allowCache() {\n                this.manifest.allowCache = entry.allowed;\n\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange: function byterange() {\n                var byterange = {};\n\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n\n                  if (!('offset' in entry)) {\n                    /*\n                     * From the latest spec (as of this writing):\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                     *\n                     * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                     *\n                     * \"If o [offset] is not present, the sub-range begins at the next byte\n                     * following the sub-range of the previous media segment.\"\n                     */\n                    entry.offset = lastByterangeEnd;\n                  }\n                }\n\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n\n                lastByterangeEnd = byterange.offset + byterange.length;\n              },\n              endlist: function endlist() {\n                this.manifest.endList = true;\n              },\n              inf: function inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n\n                this.manifest.segments = uris;\n              },\n              key: function key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  _key = null;\n                  return;\n                }\n\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                    attributes: entry.attributes\n                  };\n                  return;\n                } // check if the content is encrypted for Widevine\n                // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n                if (entry.attributes.KEYFORMAT === widevineUuid) {\n                  var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                  if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                    this.trigger('warn', {\n                      message: 'invalid key method provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                    this.trigger('warn', {\n                      message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                    });\n                  }\n\n                  if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                    this.trigger('warn', {\n                      message: 'invalid key URI provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                    this.trigger('warn', {\n                      message: 'invalid key ID provided for Widevine'\n                    });\n                    return;\n                  } // if Widevine key attributes are valid, store them as `contentProtection`\n                  // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                  this.manifest.contentProtection = this.manifest.contentProtection || {};\n                  this.manifest.contentProtection['com.widevine.alpha'] = {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                  };\n                  return;\n                }\n\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n\n                _key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  _key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence': function mediaSequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence': function discontinuitySequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type': function playlistType() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map: function map() {\n                currentMap = {};\n\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n\n                if (_key) {\n                  currentMap.key = _key;\n                }\n              },\n              'stream-inf': function streamInf() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n\n                _extends_1(currentUri.attributes, entry.attributes);\n              },\n              media: function media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n\n                var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  \"default\": /yes/i.test(entry.attributes.DEFAULT)\n                };\n\n                if (rendition[\"default\"]) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity: function discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time': function programDateTime() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n              },\n              targetduration: function targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n\n                this.manifest.targetDuration = entry.duration;\n                setHoldBack.call(this, this.manifest);\n              },\n              start: function start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out': function cueOut() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont': function cueOutCont() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in': function cueIn() {\n                currentUri.cueIn = entry.data;\n              },\n              'skip': function skip() {\n                this.manifest.skip = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n              },\n              'part': function part() {\n                var _this2 = this;\n\n                hasParts = true; // parts are always specifed before a segment\n\n                var segmentIndex = this.manifest.segments.length;\n                var part = camelCaseKeys(entry.attributes);\n                currentUri.parts = currentUri.parts || [];\n                currentUri.parts.push(part);\n\n                if (part.byterange) {\n                  if (!part.byterange.hasOwnProperty('offset')) {\n                    part.byterange.offset = lastPartByterangeEnd;\n                  }\n\n                  lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n                }\n\n                var partIndex = currentUri.parts.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n                if (this.manifest.renditionReports) {\n                  this.manifest.renditionReports.forEach(function (r, i) {\n                    if (!r.hasOwnProperty('lastPart')) {\n                      _this2.trigger('warn', {\n                        message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                      });\n                    }\n                  });\n                }\n              },\n              'server-control': function serverControl() {\n                var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n                if (!attrs.hasOwnProperty('canBlockReload')) {\n                  attrs.canBlockReload = false;\n                  this.trigger('info', {\n                    message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                  });\n                }\n\n                setHoldBack.call(this, this.manifest);\n\n                if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                  this.trigger('warn', {\n                    message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                  });\n                }\n              },\n              'preload-hint': function preloadHint() {\n                // parts are always specifed before a segment\n                var segmentIndex = this.manifest.segments.length;\n                var hint = camelCaseKeys(entry.attributes);\n                var isPart = hint.type && hint.type === 'PART';\n                currentUri.preloadHints = currentUri.preloadHints || [];\n                currentUri.preloadHints.push(hint);\n\n                if (hint.byterange) {\n                  if (!hint.byterange.hasOwnProperty('offset')) {\n                    // use last part byterange end or zero if not a part.\n                    hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                    if (isPart) {\n                      lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                    }\n                  }\n                }\n\n                var index = currentUri.preloadHints.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n                if (!hint.type) {\n                  return;\n                } // search through all preload hints except for the current one for\n                // a duplicate type.\n\n\n                for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                  var otherHint = currentUri.preloadHints[i];\n\n                  if (!otherHint.type) {\n                    continue;\n                  }\n\n                  if (otherHint.type === hint.type) {\n                    this.trigger('warn', {\n                      message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                    });\n                  }\n                }\n              },\n              'rendition-report': function renditionReport() {\n                var report = camelCaseKeys(entry.attributes);\n                this.manifest.renditionReports = this.manifest.renditionReports || [];\n                this.manifest.renditionReports.push(report);\n                var index = this.manifest.renditionReports.length - 1;\n                var required = ['LAST-MSN', 'URI'];\n\n                if (hasParts) {\n                  required.push('LAST-PART');\n                }\n\n                this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n              },\n              'part-inf': function partInf() {\n                this.manifest.partInf = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n                if (this.manifest.partInf.partTarget) {\n                  this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n                }\n\n                setHoldBack.call(this, this.manifest);\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri: function uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n\n            if (_key) {\n              currentUri.key = _key;\n            }\n\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // reset the last byterange end as it needs to be 0 between parts\n\n\n            lastPartByterangeEnd = 0; // prepare for the next URI\n\n            currentUri = {};\n          },\n          comment: function comment() {// comments are not important for playback\n          },\n          custom: function custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n\n      return _this;\n    }\n\n    var _proto = Parser.prototype;\n\n    _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n      var missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n\n      if (missing.length) {\n        this.trigger('warn', {\n          message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n    ;\n\n    _proto.push = function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n    ;\n\n    _proto.end = function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.type         the type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    };\n\n    return Parser;\n  }(Stream);\n\n  var regexs = {\n    // to determine mime types\n    mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n    webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n    ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n    // to determine if a codec is audio or video\n    video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n    audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n    text: /^(stpp.ttml.im1t)/,\n    // mux.js support regex\n    muxerVideo: /^(avc0?1)/,\n    muxerAudio: /^(mp4a)/,\n    // match nothing as muxer does not support text right now.\n    // there cannot never be a character before the start of a string\n    // so this matches nothing.\n    muxerText: /a^/\n  };\n  var mediaTypes = ['video', 'audio', 'text'];\n  var upperMediaTypes = ['Video', 'Audio', 'Text'];\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {string} codec\n   *        Codec string to translate\n   * @return {string}\n   *         The translated codec string\n   */\n\n  var translateLegacyCodec = function translateLegacyCodec(codec) {\n    if (!codec) {\n      return codec;\n    }\n\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  };\n  /**\n   * @typedef {Object} ParsedCodecInfo\n   * @property {number} codecCount\n   *           Number of codecs parsed\n   * @property {string} [videoCodec]\n   *           Parsed video codec (if found)\n   * @property {string} [videoObjectTypeIndicator]\n   *           Video object type indicator (if found)\n   * @property {string|null} audioProfile\n   *           Audio profile\n   */\n\n  /**\n   * Parses a codec string to retrieve the number of codecs specified, the video codec and\n   * object type indicator, and the audio profile.\n   *\n   * @param {string} [codecString]\n   *        The codec string to parse\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var parseCodecs = function parseCodecs(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    var codecs = codecString.split(',');\n    var result = [];\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n      var codecType;\n      mediaTypes.forEach(function (name) {\n        var match = regexs[name].exec(codec.toLowerCase());\n\n        if (!match || match.length <= 1) {\n          return;\n        }\n\n        codecType = name; // maintain codec case\n\n        var type = codec.substring(0, match[1].length);\n        var details = codec.replace(type, '');\n        result.push({\n          type: type,\n          details: details,\n          mediaType: name\n        });\n      });\n\n      if (!codecType) {\n        result.push({\n          type: codec,\n          details: '',\n          mediaType: 'unknown'\n        });\n      }\n    });\n    return result;\n  };\n  /**\n   * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n   * a default alternate audio playlist for the provided audio group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   * @param {string} audioGroupId\n   *        ID of the audio group for which to find the default codec info\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n    if (!audioGroup) {\n      return null;\n    }\n\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n\n      if (audioType[\"default\"] && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS);\n      }\n    }\n\n    return null;\n  };\n  var isAudioCodec = function isAudioCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.audio.test(codec.trim().toLowerCase());\n  };\n  var isTextCodec = function isTextCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.text.test(codec.trim().toLowerCase());\n  };\n  var getMimeForCodec = function getMimeForCodec(codecString) {\n    if (!codecString || typeof codecString !== 'string') {\n      return;\n    }\n\n    var codecs = codecString.toLowerCase().split(',').map(function (c) {\n      return translateLegacyCodec(c.trim());\n    }); // default to video type\n\n    var type = 'video'; // only change to audio type if the only codec we have is\n    // audio\n\n    if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n      type = 'audio';\n    } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n      // text uses application/<container> for now\n      type = 'application';\n    } // default the container to mp4\n\n\n    var container = 'mp4'; // every codec must be able to go into the container\n    // for that container to be the correct one\n\n    if (codecs.every(function (c) {\n      return regexs.mp4.test(c);\n    })) {\n      container = 'mp4';\n    } else if (codecs.every(function (c) {\n      return regexs.webm.test(c);\n    })) {\n      container = 'webm';\n    } else if (codecs.every(function (c) {\n      return regexs.ogg.test(c);\n    })) {\n      container = 'ogg';\n    }\n\n    return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n  };\n  var browserSupportsCodec = function browserSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n  };\n  var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return codecString.toLowerCase().split(',').every(function (codec) {\n      codec = codec.trim(); // any match is supported.\n\n      for (var i = 0; i < upperMediaTypes.length; i++) {\n        var type = upperMediaTypes[i];\n\n        if (regexs[\"muxer\" + type].test(codec)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\n  var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';\n\n  var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n  var DASH_REGEX = /^application\\/dash\\+xml/i;\n  /**\n   * Returns a string that describes the type of source based on a video source object's\n   * media type.\n   *\n   * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n   *\n   * @param {string} type\n   *        Video source object media type\n   * @return {('hls'|'dash'|'vhs-json'|null)}\n   *         VHS source type string\n   */\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    if (MPEGURL_REGEX.test(type)) {\n      return 'hls';\n    }\n\n    if (DASH_REGEX.test(type)) {\n      return 'dash';\n    } // Denotes the special case of a manifest object passed to http-streaming instead of a\n    // source URL.\n    //\n    // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n    //\n    // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n    // project, and the +json suffix identifies the structure of the media type.\n\n\n    if (type === 'application/vnd.videojs.vhs+json') {\n      return 'vhs-json';\n    }\n\n    return null;\n  };\n\n  var DEFAULT_LOCATION = 'http://example.com';\n\n  var resolveUrl$1 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * \"Shallow freezes\" an object to render it immutable.\n   * Uses `Object.freeze` if available,\n   * otherwise the immutability is only in the type.\n   *\n   * Is used to create \"enum like\" objects.\n   *\n   * @template T\n   * @param {T} object the object to freeze\n   * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n   * \t\t\t\tallows to inject custom object constructor for tests\n   * @returns {Readonly<T>}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n\n  function freeze(object, oc) {\n    if (oc === undefined) {\n      oc = Object;\n    }\n\n    return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n  }\n  /**\n   * All mime types that are allowed as input to `DOMParser.parseFromString`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n   * @see DOMParser.prototype.parseFromString\n   */\n\n\n  var MIME_TYPE = freeze({\n    /**\n     * `text/html`, the only mime type that triggers treating an XML document as HTML.\n     *\n     * @see DOMParser.SupportedType.isHTML\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n     */\n    HTML: 'text/html',\n\n    /**\n     * Helper method to check a mime type if it indicates an HTML document\n     *\n     * @param {string} [value]\n     * @returns {boolean}\n     *\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n    isHTML: function isHTML(value) {\n      return value === MIME_TYPE.HTML;\n    },\n\n    /**\n     * `application/xml`, the standard mime type for XML documents.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_APPLICATION: 'application/xml',\n\n    /**\n     * `text/html`, an alias for `application/xml`.\n     *\n     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_TEXT: 'text/xml',\n\n    /**\n     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n     * but is parsed as an XML document.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n     */\n    XML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n    /**\n     * `image/svg+xml`,\n     *\n     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n     */\n    XML_SVG_IMAGE: 'image/svg+xml'\n  });\n  /**\n   * Namespaces that are used in this code base.\n   *\n   * @see http://www.w3.org/TR/REC-xml-names\n   */\n\n  var NAMESPACE$3 = freeze({\n    /**\n     * The XHTML namespace.\n     *\n     * @see http://www.w3.org/1999/xhtml\n     */\n    HTML: 'http://www.w3.org/1999/xhtml',\n\n    /**\n     * Checks if `uri` equals `NAMESPACE.HTML`.\n     *\n     * @param {string} [uri]\n     *\n     * @see NAMESPACE.HTML\n     */\n    isHTML: function isHTML(uri) {\n      return uri === NAMESPACE$3.HTML;\n    },\n\n    /**\n     * The SVG namespace.\n     *\n     * @see http://www.w3.org/2000/svg\n     */\n    SVG: 'http://www.w3.org/2000/svg',\n\n    /**\n     * The `xml:` namespace.\n     *\n     * @see http://www.w3.org/XML/1998/namespace\n     */\n    XML: 'http://www.w3.org/XML/1998/namespace',\n\n    /**\n     * The `xmlns:` namespace\n     *\n     * @see https://www.w3.org/2000/xmlns/\n     */\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n  });\n  var freeze_1 = freeze;\n  var MIME_TYPE_1 = MIME_TYPE;\n  var NAMESPACE_1 = NAMESPACE$3;\n  var conventions = {\n    freeze: freeze_1,\n    MIME_TYPE: MIME_TYPE_1,\n    NAMESPACE: NAMESPACE_1\n  };\n\n  var NAMESPACE$2 = conventions.NAMESPACE;\n  /**\n   * A prerequisite for `[].filter`, to drop elements that are empty\n   * @param {string} input\n   * @returns {boolean}\n   */\n\n  function notEmptyString(input) {\n    return input !== '';\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n   * @see https://infra.spec.whatwg.org/#ascii-whitespace\n   *\n   * @param {string} input\n   * @returns {string[]} (can be empty)\n   */\n\n\n  function splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n  }\n  /**\n   * Adds element as a key to current if it is not already present.\n   *\n   * @param {Record<string, boolean | undefined>} current\n   * @param {string} element\n   * @returns {Record<string, boolean | undefined>}\n   */\n\n\n  function orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) {\n      current[element] = true;\n    }\n\n    return current;\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#ordered-set\n   * @param {string} input\n   * @returns {string[]}\n   */\n\n\n  function toOrderedSet(input) {\n    if (!input) return [];\n    var list = splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce(orderedSetReducer, {}));\n  }\n  /**\n   * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n   * which we can not rely on being available.\n   *\n   * @param {any[]} list\n   * @returns {function(any): boolean}\n   */\n\n\n  function arrayIncludes(list) {\n    return function (element) {\n      return list && list.indexOf(element) !== -1;\n    };\n  }\n\n  function copy(src, dest) {\n    for (var p in src) {\n      dest[p] = src[p];\n    }\n  }\n  /**\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n   */\n\n\n  function _extends(Class, Super) {\n    var pt = Class.prototype;\n\n    if (!(pt instanceof Super)) {\n      var t = function t() {};\n      t.prototype = Super.prototype;\n      t = new t();\n      copy(pt, t);\n      Class.prototype = pt = t;\n    }\n\n    if (pt.constructor != Class) {\n      if (typeof Class != 'function') {\n        console.error(\"unknown Class:\" + Class);\n      }\n\n      pt.constructor = Class;\n    }\n  } // Node Types\n\n\n  var NodeType = {};\n  var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = NodeType.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = NodeType.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = NodeType.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = NodeType.NOTATION_NODE = 12; // ExceptionCode\n\n  var ExceptionCode = {};\n  var ExceptionMessage = {};\n  ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\n  ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\n  var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\n  ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\n  ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\n  ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\n  ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\n  var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\n  ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\n  var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10); //level2\n\n  ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\n  ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\n  ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\n  ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\n  ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n  /**\n   * DOM Level 2\n   * Object DOMException\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n   * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n   */\n\n  function DOMException(code, message) {\n    if (message instanceof Error) {\n      var error = message;\n    } else {\n      error = this;\n      Error.call(this, ExceptionMessage[code]);\n      this.message = ExceptionMessage[code];\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n    }\n\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n  }\n  DOMException.prototype = Error.prototype;\n  copy(ExceptionCode, DOMException);\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n   * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n   * The items in the NodeList are accessible via an integral index, starting from 0.\n   */\n\n  function NodeList() {}\n  NodeList.prototype = {\n    /**\n     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n     * @standard level1\n     */\n    length: 0,\n\n    /**\n     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n     * @standard level1\n     * @param index  unsigned long\n     *   Index into the collection.\n     * @return Node\n     * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n     */\n    item: function item(index) {\n      return this[index] || null;\n    },\n    toString: function toString(isHTML, nodeFilter) {\n      for (var buf = [], i = 0; i < this.length; i++) {\n        serializeToString(this[i], buf, isHTML, nodeFilter);\n      }\n\n      return buf.join('');\n    }\n  };\n\n  function LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n\n    _updateLiveList(this);\n  }\n\n  function _updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n\n    if (list._inc != inc) {\n      var ls = list._refresh(list._node); //console.log(ls.length)\n\n\n      __set__(list, 'length', ls.length);\n\n      copy(ls, list);\n      list._inc = inc;\n    }\n  }\n\n  LiveNodeList.prototype.item = function (i) {\n    _updateLiveList(this);\n\n    return this[i];\n  };\n\n  _extends(LiveNodeList, NodeList);\n  /**\n   * Objects implementing the NamedNodeMap interface are used\n   * to represent collections of nodes that can be accessed by name.\n   * Note that NamedNodeMap does not inherit from NodeList;\n   * NamedNodeMaps are not maintained in any particular order.\n   * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n   * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n   * and does not imply that the DOM specifies an order to these Nodes.\n   * NamedNodeMap objects in the DOM are live.\n   * used for attributes or DocumentType entities\n   */\n\n\n  function NamedNodeMap() {}\n\n  function _findNodeIndex(list, node) {\n    var i = list.length;\n\n    while (i--) {\n      if (list[i] === node) {\n        return i;\n      }\n    }\n  }\n\n  function _addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) {\n      list[_findNodeIndex(list, oldAttr)] = newAttr;\n    } else {\n      list[list.length++] = newAttr;\n    }\n\n    if (el) {\n      newAttr.ownerElement = el;\n      var doc = el.ownerDocument;\n\n      if (doc) {\n        oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n\n        _onAddAttribute(doc, el, newAttr);\n      }\n    }\n  }\n\n  function _removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = _findNodeIndex(list, attr);\n\n    if (i >= 0) {\n      var lastIndex = list.length - 1;\n\n      while (i < lastIndex) {\n        list[i] = list[++i];\n      }\n\n      list.length = lastIndex;\n\n      if (el) {\n        var doc = el.ownerDocument;\n\n        if (doc) {\n          _onRemoveAttribute(doc, el, attr);\n\n          attr.ownerElement = null;\n        }\n      }\n    } else {\n      throw DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n    }\n  }\n\n  NamedNodeMap.prototype = {\n    length: 0,\n    item: NodeList.prototype.item,\n    getNamedItem: function getNamedItem(key) {\n      //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n      //\t\t\treturn null;\n      //\t\t}\n      //console.log()\n      var i = this.length;\n\n      while (i--) {\n        var attr = this[i]; //console.log(attr.nodeName,key)\n\n        if (attr.nodeName == key) {\n          return attr;\n        }\n      }\n    },\n    setNamedItem: function setNamedItem(attr) {\n      var el = attr.ownerElement;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      var oldAttr = this.getNamedItem(attr.nodeName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    setNamedItemNS: function setNamedItemNS(attr) {\n      // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n      var el = attr.ownerElement,\n          oldAttr;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    removeNamedItem: function removeNamedItem(key) {\n      var attr = this.getNamedItem(key);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n    //for level2\n    removeNamedItemNS: function removeNamedItemNS(namespaceURI, localName) {\n      var attr = this.getNamedItemNS(namespaceURI, localName);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    getNamedItemNS: function getNamedItemNS(namespaceURI, localName) {\n      var i = this.length;\n\n      while (i--) {\n        var node = this[i];\n\n        if (node.localName == localName && node.namespaceURI == namespaceURI) {\n          return node;\n        }\n      }\n\n      return null;\n    }\n  };\n  /**\n   * The DOMImplementation interface represents an object providing methods\n   * which are not dependent on any particular document.\n   * Such an object is returned by the `Document.implementation` property.\n   *\n   * __The individual methods describe the differences compared to the specs.__\n   *\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n   * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n   */\n\n  function DOMImplementation$1() {}\n\n  DOMImplementation$1.prototype = {\n    /**\n     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n     * The different implementations fairly diverged in what kind of features were reported.\n     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n     *\n     * @deprecated It is deprecated and modern browsers return true in all cases.\n     *\n     * @param {string} feature\n     * @param {string} [version]\n     * @returns {boolean} always true\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n     */\n    hasFeature: function hasFeature(feature, version) {\n      return true;\n    },\n\n    /**\n     * Creates an XML Document object of the specified type with its document element.\n     *\n     * __It behaves slightly different from the description in the living standard__:\n     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string|null} namespaceURI\n     * @param {string} qualifiedName\n     * @param {DocumentType=null} doctype\n     * @returns {Document}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocument: function createDocument(namespaceURI, qualifiedName, doctype) {\n      var doc = new Document();\n      doc.implementation = this;\n      doc.childNodes = new NodeList();\n      doc.doctype = doctype || null;\n\n      if (doctype) {\n        doc.appendChild(doctype);\n      }\n\n      if (qualifiedName) {\n        var root = doc.createElementNS(namespaceURI, qualifiedName);\n        doc.appendChild(root);\n      }\n\n      return doc;\n    },\n\n    /**\n     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n     *\n     * __This behavior is slightly different from the in the specs__:\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string} qualifiedName\n     * @param {string} [publicId]\n     * @param {string} [systemId]\n     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n     * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\n      var node = new DocumentType();\n      node.name = qualifiedName;\n      node.nodeName = qualifiedName;\n      node.publicId = publicId || '';\n      node.systemId = systemId || '';\n      return node;\n    }\n  };\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n   */\n\n  function Node() {}\n  Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises\n      return _insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function replaceChild(newChild, oldChild) {\n      //raises\n      this.insertBefore(newChild, oldChild);\n\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n    },\n    removeChild: function removeChild(oldChild) {\n      return _removeChild(this, oldChild);\n    },\n    appendChild: function appendChild(newChild) {\n      return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.firstChild != null;\n    },\n    cloneNode: function cloneNode(deep) {\n      return _cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function normalize() {\n      var child = this.firstChild;\n\n      while (child) {\n        var next = child.nextSibling;\n\n        if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n          this.removeChild(next);\n          child.appendData(next.data);\n        } else {\n          child.normalize();\n          child = next;\n        }\n      }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function isSupported(feature, version) {\n      return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function hasAttributes() {\n      return this.attributes.length > 0;\n    },\n\n    /**\n     * Look up the prefix associated to the given namespace URI, starting from this node.\n     * **The default namespace declarations are ignored by this method.**\n     * See Namespace Prefix Lookup for details on the algorithm used by this method.\n     *\n     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n     *\n     * @param {string | null} namespaceURI\n     * @returns {string | null}\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n     * @see https://github.com/xmldom/xmldom/issues/322\n     */\n    lookupPrefix: function lookupPrefix(namespaceURI) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          for (var n in map) {\n            if (map[n] == namespaceURI) {\n              return n;\n            }\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function lookupNamespaceURI(prefix) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          if (prefix in map) {\n            return map[prefix];\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function isDefaultNamespace(namespaceURI) {\n      var prefix = this.lookupPrefix(namespaceURI);\n      return prefix == null;\n    }\n  };\n\n  function _xmlEncoder(c) {\n    return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n  }\n\n  copy(NodeType, Node);\n  copy(NodeType, Node.prototype);\n  /**\n   * @param callback return true for continue,false for break\n   * @return boolean true: break visit;\n   */\n\n  function _visitNode(node, callback) {\n    if (callback(node)) {\n      return true;\n    }\n\n    if (node = node.firstChild) {\n      do {\n        if (_visitNode(node, callback)) {\n          return true;\n        }\n      } while (node = node.nextSibling);\n    }\n  }\n\n  function Document() {}\n\n  function _onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n    }\n  }\n\n  function _onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n    }\n  }\n\n  function _onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n      doc._inc++; //update childNodes\n\n      var cs = el.childNodes;\n\n      if (newChild) {\n        cs[cs.length++] = newChild;\n      } else {\n        //console.log(1)\n        var child = el.firstChild;\n        var i = 0;\n\n        while (child) {\n          cs[i++] = child;\n          child = child.nextSibling;\n        }\n\n        cs.length = i;\n      }\n    }\n  }\n  /**\n   * attributes;\n   * children;\n   *\n   * writeable properties:\n   * nodeValue,Attr:value,CharacterData:data\n   * prefix\n   */\n\n\n  function _removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n\n    if (previous) {\n      previous.nextSibling = next;\n    } else {\n      parentNode.firstChild = next;\n    }\n\n    if (next) {\n      next.previousSibling = previous;\n    } else {\n      parentNode.lastChild = previous;\n    }\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode);\n\n    return child;\n  }\n  /**\n   * preformance key(refChild == null)\n   */\n\n\n  function _insertBefore(parentNode, newChild, nextChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      cp.removeChild(newChild); //remove and update\n    }\n\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      var newFirst = newChild.firstChild;\n\n      if (newFirst == null) {\n        return newChild;\n      }\n\n      var newLast = newChild.lastChild;\n    } else {\n      newFirst = newLast = newChild;\n    }\n\n    var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = nextChild;\n\n    if (pre) {\n      pre.nextSibling = newFirst;\n    } else {\n      parentNode.firstChild = newFirst;\n    }\n\n    if (nextChild == null) {\n      parentNode.lastChild = newLast;\n    } else {\n      nextChild.previousSibling = newLast;\n    }\n\n    do {\n      newFirst.parentNode = parentNode;\n    } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n\n    _onUpdateChild(parentNode.ownerDocument || parentNode, parentNode); //console.log(parentNode.lastChild.nextSibling == null)\n\n\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      newChild.firstChild = newChild.lastChild = null;\n    }\n\n    return newChild;\n  }\n\n  function _appendSingleChild(parentNode, newChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      var pre = parentNode.lastChild;\n      cp.removeChild(newChild); //remove and update\n\n      var pre = parentNode.lastChild;\n    }\n\n    var pre = parentNode.lastChild;\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = pre;\n    newChild.nextSibling = null;\n\n    if (pre) {\n      pre.nextSibling = newChild;\n    } else {\n      parentNode.firstChild = newChild;\n    }\n\n    parentNode.lastChild = newChild;\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\n    return newChild; //console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n  }\n\n  Document.prototype = {\n    //implementation : null,\n    nodeName: '#document',\n    nodeType: DOCUMENT_NODE,\n\n    /**\n     * The DocumentType node of the document.\n     *\n     * @readonly\n     * @type DocumentType\n     */\n    doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises\n      if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n        var child = newChild.firstChild;\n\n        while (child) {\n          var next = child.nextSibling;\n          this.insertBefore(child, refChild);\n          child = next;\n        }\n\n        return newChild;\n      }\n\n      if (this.documentElement == null && newChild.nodeType == ELEMENT_NODE) {\n        this.documentElement = newChild;\n      }\n\n      return _insertBefore(this, newChild, refChild), newChild.ownerDocument = this, newChild;\n    },\n    removeChild: function removeChild(oldChild) {\n      if (this.documentElement == oldChild) {\n        this.documentElement = null;\n      }\n\n      return _removeChild(this, oldChild);\n    },\n    // Introduced in DOM Level 2:\n    importNode: function importNode(importedNode, deep) {\n      return _importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function getElementById(id) {\n      var rtv = null;\n\n      _visitNode(this.documentElement, function (node) {\n        if (node.nodeType == ELEMENT_NODE) {\n          if (node.getAttribute('id') == id) {\n            rtv = node;\n            return true;\n          }\n        }\n      });\n\n      return rtv;\n    },\n\n    /**\n     * The `getElementsByClassName` method of `Document` interface returns an array-like object\n     * of all child elements which have **all** of the given class name(s).\n     *\n     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n     *\n     *\n     * Warning: This is a live LiveNodeList.\n     * Changes in the DOM will reflect in the array as the changes occur.\n     * If an element selected by this array no longer qualifies for the selector,\n     * it will automatically be removed. Be aware of this for iteration purposes.\n     *\n     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n     */\n    getElementsByClassName: function getElementsByClassName(classNames) {\n      var classNamesSet = toOrderedSet(classNames);\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        if (classNamesSet.length > 0) {\n          _visitNode(base.documentElement, function (node) {\n            if (node !== base && node.nodeType === ELEMENT_NODE) {\n              var nodeClassNames = node.getAttribute('class'); // can be null if the attribute does not exist\n\n              if (nodeClassNames) {\n                // before splitting and iterating just compare them for the most common case\n                var matches = classNames === nodeClassNames;\n\n                if (!matches) {\n                  var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                  matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n                }\n\n                if (matches) {\n                  ls.push(node);\n                }\n              }\n            }\n          });\n        }\n\n        return ls;\n      });\n    },\n    //document factory method:\n    createElement: function createElement(tagName) {\n      var node = new Element();\n      node.ownerDocument = this;\n      node.nodeName = tagName;\n      node.tagName = tagName;\n      node.localName = tagName;\n      node.childNodes = new NodeList();\n      var attrs = node.attributes = new NamedNodeMap();\n      attrs._ownerElement = node;\n      return node;\n    },\n    createDocumentFragment: function createDocumentFragment() {\n      var node = new DocumentFragment();\n      node.ownerDocument = this;\n      node.childNodes = new NodeList();\n      return node;\n    },\n    createTextNode: function createTextNode(data) {\n      var node = new Text();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createComment: function createComment(data) {\n      var node = new Comment();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createCDATASection: function createCDATASection(data) {\n      var node = new CDATASection();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createProcessingInstruction: function createProcessingInstruction(target, data) {\n      var node = new ProcessingInstruction();\n      node.ownerDocument = this;\n      node.tagName = node.target = target;\n      node.nodeValue = node.data = data;\n      return node;\n    },\n    createAttribute: function createAttribute(name) {\n      var node = new Attr();\n      node.ownerDocument = this;\n      node.name = name;\n      node.nodeName = name;\n      node.localName = name;\n      node.specified = true;\n      return node;\n    },\n    createEntityReference: function createEntityReference(name) {\n      var node = new EntityReference();\n      node.ownerDocument = this;\n      node.nodeName = name;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function createElementNS(namespaceURI, qualifiedName) {\n      var node = new Element();\n      var pl = qualifiedName.split(':');\n      var attrs = node.attributes = new NamedNodeMap();\n      node.childNodes = new NodeList();\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.tagName = qualifiedName;\n      node.namespaceURI = namespaceURI;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      attrs._ownerElement = node;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function createAttributeNS(namespaceURI, qualifiedName) {\n      var node = new Attr();\n      var pl = qualifiedName.split(':');\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.name = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      node.specified = true;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      return node;\n    }\n  };\n\n  _extends(Document, Node);\n\n  function Element() {\n    this._nsMap = {};\n  }\n  Element.prototype = {\n    nodeType: ELEMENT_NODE,\n    hasAttribute: function hasAttribute(name) {\n      return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function getAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      return attr && attr.value || '';\n    },\n    getAttributeNode: function getAttributeNode(name) {\n      return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function setAttribute(name, value) {\n      var attr = this.ownerDocument.createAttribute(name);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    removeAttribute: function removeAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function appendChild(newChild) {\n      if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n        return this.insertBefore(newChild, null);\n      } else {\n        return _appendSingleChild(this, newChild);\n      }\n    },\n    setAttributeNode: function setAttributeNode(newAttr) {\n      return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function setAttributeNodeNS(newAttr) {\n      return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function removeAttributeNode(oldAttr) {\n      //console.log(this == oldAttr.ownerElement)\n      return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function removeAttributeNS(namespaceURI, localName) {\n      var old = this.getAttributeNodeNS(namespaceURI, localName);\n      old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function hasAttributeNS(namespaceURI, localName) {\n      return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function getAttributeNS(namespaceURI, localName) {\n      var attr = this.getAttributeNodeNS(namespaceURI, localName);\n      return attr && attr.value || '';\n    },\n    setAttributeNS: function setAttributeNS(namespaceURI, qualifiedName, value) {\n      var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function getAttributeNodeNS(namespaceURI, localName) {\n      return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function getElementsByTagName(tagName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    },\n    getElementsByTagNameNS: function getElementsByTagNameNS(namespaceURI, localName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    }\n  };\n  Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n  Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n  _extends(Element, Node);\n\n  function Attr() {}\n  Attr.prototype.nodeType = ATTRIBUTE_NODE;\n\n  _extends(Attr, Node);\n\n  function CharacterData() {}\n  CharacterData.prototype = {\n    data: '',\n    substringData: function substringData(offset, count) {\n      return this.data.substring(offset, offset + count);\n    },\n    appendData: function appendData(text) {\n      text = this.data + text;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    },\n    insertData: function insertData(offset, text) {\n      this.replaceData(offset, 0, text);\n    },\n    appendChild: function appendChild(newChild) {\n      throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function deleteData(offset, count) {\n      this.replaceData(offset, count, \"\");\n    },\n    replaceData: function replaceData(offset, count, text) {\n      var start = this.data.substring(0, offset);\n      var end = this.data.substring(offset + count);\n      text = start + text + end;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    }\n  };\n\n  _extends(CharacterData, Node);\n\n  function Text() {}\n  Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: TEXT_NODE,\n    splitText: function splitText(offset) {\n      var text = this.data;\n      var newText = text.substring(offset);\n      text = text.substring(0, offset);\n      this.data = this.nodeValue = text;\n      this.length = text.length;\n      var newNode = this.ownerDocument.createTextNode(newText);\n\n      if (this.parentNode) {\n        this.parentNode.insertBefore(newNode, this.nextSibling);\n      }\n\n      return newNode;\n    }\n  };\n\n  _extends(Text, CharacterData);\n\n  function Comment() {}\n  Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: COMMENT_NODE\n  };\n\n  _extends(Comment, CharacterData);\n\n  function CDATASection() {}\n  CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: CDATA_SECTION_NODE\n  };\n\n  _extends(CDATASection, CharacterData);\n\n  function DocumentType() {}\n  DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n\n  _extends(DocumentType, Node);\n\n  function Notation() {}\n  Notation.prototype.nodeType = NOTATION_NODE;\n\n  _extends(Notation, Node);\n\n  function Entity() {}\n  Entity.prototype.nodeType = ENTITY_NODE;\n\n  _extends(Entity, Node);\n\n  function EntityReference() {}\n  EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n\n  _extends(EntityReference, Node);\n\n  function DocumentFragment() {}\n  DocumentFragment.prototype.nodeName = \"#document-fragment\";\n  DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n\n  _extends(DocumentFragment, Node);\n\n  function ProcessingInstruction() {}\n\n  ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n\n  _extends(ProcessingInstruction, Node);\n\n  function XMLSerializer$1() {}\n\n  XMLSerializer$1.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n    return nodeSerializeToString.call(node, isHtml, nodeFilter);\n  };\n\n  Node.prototype.toString = nodeSerializeToString;\n\n  function nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n\n    if (uri && prefix == null) {\n      //console.log(prefix)\n      var prefix = refNode.lookupPrefix(uri);\n\n      if (prefix == null) {\n        //isHTML = true;\n        var visibleNamespaces = [{\n          namespace: uri,\n          prefix: null\n        } //{namespace:uri,prefix:''}\n        ];\n      }\n    }\n\n    serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces); //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\n    return buf.join('');\n  }\n\n  function needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || '';\n    var uri = node.namespaceURI; // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\n    if (!uri) {\n      return false;\n    }\n\n    if (prefix === \"xml\" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) {\n      return false;\n    }\n\n    var i = visibleNamespaces.length;\n\n    while (i--) {\n      var ns = visibleNamespaces[i]; // get namespace prefix\n\n      if (ns.prefix === prefix) {\n        return ns.namespace !== uri;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Well-formed constraint: No < in Attribute Values\n   * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n   * @see https://www.w3.org/TR/xml/#CleanAttrVals\n   * @see https://www.w3.org/TR/xml/#NT-AttValue\n   */\n\n\n  function addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g, _xmlEncoder), '\"');\n  }\n\n  function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) {\n      visibleNamespaces = [];\n    }\n\n    if (nodeFilter) {\n      node = nodeFilter(node);\n\n      if (node) {\n        if (typeof node == 'string') {\n          buf.push(node);\n          return;\n        }\n      } else {\n        return;\n      } //buf.sort.apply(attrs, attributeSorter);\n\n    }\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var len = attrs.length;\n        var child = node.firstChild;\n        var nodeName = node.tagName;\n        isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;\n        var prefixedNodeName = nodeName;\n\n        if (!isHTML && !node.prefix && node.namespaceURI) {\n          var defaultNS; // lookup current default ns from `xmlns` attribute\n\n          for (var ai = 0; ai < attrs.length; ai++) {\n            if (attrs.item(ai).name === 'xmlns') {\n              defaultNS = attrs.item(ai).value;\n              break;\n            }\n          }\n\n          if (!defaultNS) {\n            // lookup current default ns in visibleNamespaces\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n                defaultNS = namespace.namespace;\n                break;\n              }\n            }\n          }\n\n          if (defaultNS !== node.namespaceURI) {\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.namespace === node.namespaceURI) {\n                if (namespace.prefix) {\n                  prefixedNodeName = namespace.prefix + ':' + nodeName;\n                }\n\n                break;\n              }\n            }\n          }\n        }\n\n        buf.push('<', prefixedNodeName);\n\n        for (var i = 0; i < len; i++) {\n          // add namespaces for attributes\n          var attr = attrs.item(i);\n\n          if (attr.prefix == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: attr.localName,\n              namespace: attr.value\n            });\n          } else if (attr.nodeName == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: '',\n              namespace: attr.value\n            });\n          }\n        }\n\n        for (var i = 0; i < len; i++) {\n          var attr = attrs.item(i);\n\n          if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n            var prefix = attr.prefix || '';\n            var uri = attr.namespaceURI;\n            addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n            visibleNamespaces.push({\n              prefix: prefix,\n              namespace: uri\n            });\n          }\n\n          serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n        } // add namespace for current node\n\n\n        if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n          var prefix = node.prefix || '';\n          var uri = node.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n\n        if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n          buf.push('>'); //if is cdata child node\n\n          if (isHTML && /^script$/i.test(nodeName)) {\n            while (child) {\n              if (child.data) {\n                buf.push(child.data);\n              } else {\n                serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              }\n\n              child = child.nextSibling;\n            }\n          } else {\n            while (child) {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              child = child.nextSibling;\n            }\n          }\n\n          buf.push('</', prefixedNodeName, '>');\n        } else {\n          buf.push('/>');\n        } // remove added visible namespaces\n        //visibleNamespaces.length = startVisibleNamespaces;\n\n\n        return;\n\n      case DOCUMENT_NODE:\n      case DOCUMENT_FRAGMENT_NODE:\n        var child = node.firstChild;\n\n        while (child) {\n          serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n          child = child.nextSibling;\n        }\n\n        return;\n\n      case ATTRIBUTE_NODE:\n        return addSerializedAttribute(buf, node.name, node.value);\n\n      case TEXT_NODE:\n        /**\n         * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n         * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n         * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n         * `&amp;` and `&lt;` respectively.\n         * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n         * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n         * when that string is not marking the end of a CDATA section.\n         *\n         * In the content of elements, character data is any string of characters\n         * which does not contain the start-delimiter of any markup\n         * and does not include the CDATA-section-close delimiter, `]]>`.\n         *\n         * @see https://www.w3.org/TR/xml/#NT-CharData\n         */\n        return buf.push(node.data.replace(/[<&]/g, _xmlEncoder).replace(/]]>/g, ']]&gt;'));\n\n      case CDATA_SECTION_NODE:\n        return buf.push('<![CDATA[', node.data, ']]>');\n\n      case COMMENT_NODE:\n        return buf.push(\"<!--\", node.data, \"-->\");\n\n      case DOCUMENT_TYPE_NODE:\n        var pubid = node.publicId;\n        var sysid = node.systemId;\n        buf.push('<!DOCTYPE ', node.name);\n\n        if (pubid) {\n          buf.push(' PUBLIC ', pubid);\n\n          if (sysid && sysid != '.') {\n            buf.push(' ', sysid);\n          }\n\n          buf.push('>');\n        } else if (sysid && sysid != '.') {\n          buf.push(' SYSTEM ', sysid, '>');\n        } else {\n          var sub = node.internalSubset;\n\n          if (sub) {\n            buf.push(\" [\", sub, \"]\");\n          }\n\n          buf.push(\">\");\n        }\n\n        return;\n\n      case PROCESSING_INSTRUCTION_NODE:\n        return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n\n      case ENTITY_REFERENCE_NODE:\n        return buf.push('&', node.nodeName, ';');\n      //case ENTITY_NODE:\n      //case NOTATION_NODE:\n\n      default:\n        buf.push('??', node.nodeName);\n    }\n  }\n\n  function _importNode(doc, node, deep) {\n    var node2;\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        node2 = node.cloneNode(false);\n        node2.ownerDocument = doc;\n      //var attrs = node2.attributes;\n      //var len = attrs.length;\n      //for(var i=0;i<len;i++){\n      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n      //}\n\n      case DOCUMENT_FRAGMENT_NODE:\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n        break;\n      //case ENTITY_REFERENCE_NODE:\n      //case PROCESSING_INSTRUCTION_NODE:\n      ////case TEXT_NODE:\n      //case CDATA_SECTION_NODE:\n      //case COMMENT_NODE:\n      //\tdeep = false;\n      //\tbreak;\n      //case DOCUMENT_NODE:\n      //case DOCUMENT_TYPE_NODE:\n      //cannot be imported.\n      //case ENTITY_NODE:\n      //case NOTATION_NODE：\n      //can not hit in level3\n      //default:throw e;\n    }\n\n    if (!node2) {\n      node2 = node.cloneNode(false); //false\n    }\n\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_importNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  } //\n  //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n  //\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n\n\n  function _cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n\n    for (var n in node) {\n      var v = node[n];\n\n      if (typeof v != 'object') {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n\n    if (node.childNodes) {\n      node2.childNodes = new NodeList();\n    }\n\n    node2.ownerDocument = doc;\n\n    switch (node2.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var attrs2 = node2.attributes = new NamedNodeMap();\n        var len = attrs.length;\n        attrs2._ownerElement = node2;\n\n        for (var i = 0; i < len; i++) {\n          node2.setAttributeNode(_cloneNode(doc, attrs.item(i), true));\n        }\n\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n    }\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_cloneNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  }\n\n  function __set__(object, key, value) {\n    object[key] = value;\n  } //do dynamic\n\n\n  try {\n    if (Object.defineProperty) {\n      var getTextContent = function getTextContent(node) {\n        switch (node.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            var buf = [];\n            node = node.firstChild;\n\n            while (node) {\n              if (node.nodeType !== 7 && node.nodeType !== 8) {\n                buf.push(getTextContent(node));\n              }\n\n              node = node.nextSibling;\n            }\n\n            return buf.join('');\n\n          default:\n            return node.nodeValue;\n        }\n      };\n\n      Object.defineProperty(LiveNodeList.prototype, 'length', {\n        get: function get() {\n          _updateLiveList(this);\n\n          return this.$$length;\n        }\n      });\n      Object.defineProperty(Node.prototype, 'textContent', {\n        get: function get() {\n          return getTextContent(this);\n        },\n        set: function set(data) {\n          switch (this.nodeType) {\n            case ELEMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              while (this.firstChild) {\n                this.removeChild(this.firstChild);\n              }\n\n              if (data || String(data)) {\n                this.appendChild(this.ownerDocument.createTextNode(data));\n              }\n\n              break;\n\n            default:\n              this.data = data;\n              this.value = data;\n              this.nodeValue = data;\n          }\n        }\n      });\n\n      __set__ = function __set__(object, key, value) {\n        //console.log(value)\n        object['$$' + key] = value;\n      };\n    }\n  } catch (e) {//ie8\n  } //if(typeof require == 'function'){\n\n\n  var DocumentType_1 = DocumentType;\n  var DOMException_1 = DOMException;\n  var DOMImplementation_1$1 = DOMImplementation$1;\n  var Element_1 = Element;\n  var Node_1 = Node;\n  var NodeList_1 = NodeList;\n  var XMLSerializer_1 = XMLSerializer$1; //}\n\n  var dom = {\n    DocumentType: DocumentType_1,\n    DOMException: DOMException_1,\n    DOMImplementation: DOMImplementation_1$1,\n    Element: Element_1,\n    Node: Node_1,\n    NodeList: NodeList_1,\n    XMLSerializer: XMLSerializer_1\n  };\n\n  var entities = createCommonjsModule(function (module, exports) {\n    var freeze = conventions.freeze;\n    /**\n     * The entities that are predefined in every XML document.\n     *\n     * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n     * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n     */\n\n    exports.XML_ENTITIES = freeze({\n      amp: '&',\n      apos: \"'\",\n      gt: '>',\n      lt: '<',\n      quot: '\"'\n    });\n    /**\n     * A map of currently 241 entities that are detected in an HTML document.\n     * They contain all entries from `XML_ENTITIES`.\n     *\n     * @see XML_ENTITIES\n     * @see DOMParser.parseFromString\n     * @see DOMImplementation.prototype.createHTMLDocument\n     * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n     * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n     * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n     */\n\n    exports.HTML_ENTITIES = freeze({\n      lt: '<',\n      gt: '>',\n      amp: '&',\n      quot: '\"',\n      apos: \"'\",\n      Agrave: \"À\",\n      Aacute: \"Á\",\n      Acirc: \"Â\",\n      Atilde: \"Ã\",\n      Auml: \"Ä\",\n      Aring: \"Å\",\n      AElig: \"Æ\",\n      Ccedil: \"Ç\",\n      Egrave: \"È\",\n      Eacute: \"É\",\n      Ecirc: \"Ê\",\n      Euml: \"Ë\",\n      Igrave: \"Ì\",\n      Iacute: \"Í\",\n      Icirc: \"Î\",\n      Iuml: \"Ï\",\n      ETH: \"Ð\",\n      Ntilde: \"Ñ\",\n      Ograve: \"Ò\",\n      Oacute: \"Ó\",\n      Ocirc: \"Ô\",\n      Otilde: \"Õ\",\n      Ouml: \"Ö\",\n      Oslash: \"Ø\",\n      Ugrave: \"Ù\",\n      Uacute: \"Ú\",\n      Ucirc: \"Û\",\n      Uuml: \"Ü\",\n      Yacute: \"Ý\",\n      THORN: \"Þ\",\n      szlig: \"ß\",\n      agrave: \"à\",\n      aacute: \"á\",\n      acirc: \"â\",\n      atilde: \"ã\",\n      auml: \"ä\",\n      aring: \"å\",\n      aelig: \"æ\",\n      ccedil: \"ç\",\n      egrave: \"è\",\n      eacute: \"é\",\n      ecirc: \"ê\",\n      euml: \"ë\",\n      igrave: \"ì\",\n      iacute: \"í\",\n      icirc: \"î\",\n      iuml: \"ï\",\n      eth: \"ð\",\n      ntilde: \"ñ\",\n      ograve: \"ò\",\n      oacute: \"ó\",\n      ocirc: \"ô\",\n      otilde: \"õ\",\n      ouml: \"ö\",\n      oslash: \"ø\",\n      ugrave: \"ù\",\n      uacute: \"ú\",\n      ucirc: \"û\",\n      uuml: \"ü\",\n      yacute: \"ý\",\n      thorn: \"þ\",\n      yuml: \"ÿ\",\n      nbsp: \"\\xA0\",\n      iexcl: \"¡\",\n      cent: \"¢\",\n      pound: \"£\",\n      curren: \"¤\",\n      yen: \"¥\",\n      brvbar: \"¦\",\n      sect: \"§\",\n      uml: \"¨\",\n      copy: \"©\",\n      ordf: \"ª\",\n      laquo: \"«\",\n      not: \"¬\",\n      shy: \"­­\",\n      reg: \"®\",\n      macr: \"¯\",\n      deg: \"°\",\n      plusmn: \"±\",\n      sup2: \"²\",\n      sup3: \"³\",\n      acute: \"´\",\n      micro: \"µ\",\n      para: \"¶\",\n      middot: \"·\",\n      cedil: \"¸\",\n      sup1: \"¹\",\n      ordm: \"º\",\n      raquo: \"»\",\n      frac14: \"¼\",\n      frac12: \"½\",\n      frac34: \"¾\",\n      iquest: \"¿\",\n      times: \"×\",\n      divide: \"÷\",\n      forall: \"∀\",\n      part: \"∂\",\n      exist: \"∃\",\n      empty: \"∅\",\n      nabla: \"∇\",\n      isin: \"∈\",\n      notin: \"∉\",\n      ni: \"∋\",\n      prod: \"∏\",\n      sum: \"∑\",\n      minus: \"−\",\n      lowast: \"∗\",\n      radic: \"√\",\n      prop: \"∝\",\n      infin: \"∞\",\n      ang: \"∠\",\n      and: \"∧\",\n      or: \"∨\",\n      cap: \"∩\",\n      cup: \"∪\",\n      'int': \"∫\",\n      there4: \"∴\",\n      sim: \"∼\",\n      cong: \"≅\",\n      asymp: \"≈\",\n      ne: \"≠\",\n      equiv: \"≡\",\n      le: \"≤\",\n      ge: \"≥\",\n      sub: \"⊂\",\n      sup: \"⊃\",\n      nsub: \"⊄\",\n      sube: \"⊆\",\n      supe: \"⊇\",\n      oplus: \"⊕\",\n      otimes: \"⊗\",\n      perp: \"⊥\",\n      sdot: \"⋅\",\n      Alpha: \"Α\",\n      Beta: \"Β\",\n      Gamma: \"Γ\",\n      Delta: \"Δ\",\n      Epsilon: \"Ε\",\n      Zeta: \"Ζ\",\n      Eta: \"Η\",\n      Theta: \"Θ\",\n      Iota: \"Ι\",\n      Kappa: \"Κ\",\n      Lambda: \"Λ\",\n      Mu: \"Μ\",\n      Nu: \"Ν\",\n      Xi: \"Ξ\",\n      Omicron: \"Ο\",\n      Pi: \"Π\",\n      Rho: \"Ρ\",\n      Sigma: \"Σ\",\n      Tau: \"Τ\",\n      Upsilon: \"Υ\",\n      Phi: \"Φ\",\n      Chi: \"Χ\",\n      Psi: \"Ψ\",\n      Omega: \"Ω\",\n      alpha: \"α\",\n      beta: \"β\",\n      gamma: \"γ\",\n      delta: \"δ\",\n      epsilon: \"ε\",\n      zeta: \"ζ\",\n      eta: \"η\",\n      theta: \"θ\",\n      iota: \"ι\",\n      kappa: \"κ\",\n      lambda: \"λ\",\n      mu: \"μ\",\n      nu: \"ν\",\n      xi: \"ξ\",\n      omicron: \"ο\",\n      pi: \"π\",\n      rho: \"ρ\",\n      sigmaf: \"ς\",\n      sigma: \"σ\",\n      tau: \"τ\",\n      upsilon: \"υ\",\n      phi: \"φ\",\n      chi: \"χ\",\n      psi: \"ψ\",\n      omega: \"ω\",\n      thetasym: \"ϑ\",\n      upsih: \"ϒ\",\n      piv: \"ϖ\",\n      OElig: \"Œ\",\n      oelig: \"œ\",\n      Scaron: \"Š\",\n      scaron: \"š\",\n      Yuml: \"Ÿ\",\n      fnof: \"ƒ\",\n      circ: \"ˆ\",\n      tilde: \"˜\",\n      ensp: \" \",\n      emsp: \" \",\n      thinsp: \" \",\n      zwnj: \"‌\",\n      zwj: \"‍\",\n      lrm: \"‎\",\n      rlm: \"‏\",\n      ndash: \"–\",\n      mdash: \"—\",\n      lsquo: \"‘\",\n      rsquo: \"’\",\n      sbquo: \"‚\",\n      ldquo: \"“\",\n      rdquo: \"”\",\n      bdquo: \"„\",\n      dagger: \"†\",\n      Dagger: \"‡\",\n      bull: \"•\",\n      hellip: \"…\",\n      permil: \"‰\",\n      prime: \"′\",\n      Prime: \"″\",\n      lsaquo: \"‹\",\n      rsaquo: \"›\",\n      oline: \"‾\",\n      euro: \"€\",\n      trade: \"™\",\n      larr: \"←\",\n      uarr: \"↑\",\n      rarr: \"→\",\n      darr: \"↓\",\n      harr: \"↔\",\n      crarr: \"↵\",\n      lceil: \"⌈\",\n      rceil: \"⌉\",\n      lfloor: \"⌊\",\n      rfloor: \"⌋\",\n      loz: \"◊\",\n      spades: \"♠\",\n      clubs: \"♣\",\n      hearts: \"♥\",\n      diams: \"♦\"\n    });\n    /**\n     * @deprecated use `HTML_ENTITIES` instead\n     * @see HTML_ENTITIES\n     */\n\n    exports.entityMap = exports.HTML_ENTITIES;\n  });\n  entities.XML_ENTITIES;\n  entities.HTML_ENTITIES;\n  entities.entityMap;\n\n  var NAMESPACE$1 = conventions.NAMESPACE; //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n  //[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n\n  var nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n\n  var nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\n  var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$'); //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n  //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n  //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n  //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\n  var S_TAG = 0; //tag name offerring\n\n  var S_ATTR = 1; //attr name offerring\n\n  var S_ATTR_SPACE = 2; //attr name end and space offer\n\n  var S_EQ = 3; //=space?\n\n  var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n\n  var S_ATTR_END = 5; //attr value end and no space(quot end)\n\n  var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n\n  var S_TAG_CLOSE = 7; //closed el<el />\n\n  /**\n   * Creates an error that will not be caught by XMLReader aka the SAX parser.\n   *\n   * @param {string} message\n   * @param {any?} locator Optional, can provide details about the location in the source\n   * @constructor\n   */\n\n  function ParseError$1(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);\n  }\n\n  ParseError$1.prototype = new Error();\n  ParseError$1.prototype.name = ParseError$1.name;\n\n  function XMLReader$1() {}\n\n  XMLReader$1.prototype = {\n    parse: function parse(source, defaultNSMap, entityMap) {\n      var domBuilder = this.domBuilder;\n      domBuilder.startDocument();\n\n      _copy(defaultNSMap, defaultNSMap = {});\n\n      _parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n\n      domBuilder.endDocument();\n    }\n  };\n\n  function _parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n      // String.prototype.fromCharCode does not supports\n      // > 2 bytes unicode chars directly\n      if (code > 0xffff) {\n        code -= 0x10000;\n        var surrogate1 = 0xd800 + (code >> 10),\n            surrogate2 = 0xdc00 + (code & 0x3ff);\n        return String.fromCharCode(surrogate1, surrogate2);\n      } else {\n        return String.fromCharCode(code);\n      }\n    }\n\n    function entityReplacer(a) {\n      var k = a.slice(1, -1);\n\n      if (k in entityMap) {\n        return entityMap[k];\n      } else if (k.charAt(0) === '#') {\n        return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n      } else {\n        errorHandler.error('entity not found:' + a);\n        return a;\n      }\n    }\n\n    function appendText(end) {\n      //has some bugs\n      if (end > start) {\n        var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n        locator && position(start);\n        domBuilder.characters(xt, 0, end - start);\n        start = end;\n      }\n    }\n\n    function position(p, m) {\n      while (p >= lineEnd && (m = linePattern.exec(source))) {\n        lineStart = m.index;\n        lineEnd = lineStart + m[0].length;\n        locator.lineNumber++; //console.log('line++:',locator,startPos,endPos)\n      }\n\n      locator.columnNumber = p - lineStart + 1;\n    }\n\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [{\n      currentNSMap: defaultNSMapCopy\n    }];\n    var closeMap = {};\n    var start = 0;\n\n    while (true) {\n      try {\n        var tagStart = source.indexOf('<', start);\n\n        if (tagStart < 0) {\n          if (!source.substr(start).match(/^\\s*$/)) {\n            var doc = domBuilder.doc;\n            var text = doc.createTextNode(source.substr(start));\n            doc.appendChild(text);\n            domBuilder.currentElement = text;\n          }\n\n          return;\n        }\n\n        if (tagStart > start) {\n          appendText(tagStart);\n        }\n\n        switch (source.charAt(tagStart + 1)) {\n          case '/':\n            var end = source.indexOf('>', tagStart + 3);\n            var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n            var config = parseStack.pop();\n\n            if (end < 0) {\n              tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n              end = tagStart + 1 + tagName.length;\n            } else if (tagName.match(/\\s</)) {\n              tagName = tagName.replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n              end = tagStart + 1 + tagName.length;\n            }\n\n            var localNSMap = config.localNSMap;\n            var endMatch = config.tagName == tagName;\n            var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n\n            if (endIgnoreCaseMach) {\n              domBuilder.endElement(config.uri, config.localName, tagName);\n\n              if (localNSMap) {\n                for (var prefix in localNSMap) {\n                  domBuilder.endPrefixMapping(prefix);\n                }\n              }\n\n              if (!endMatch) {\n                errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n              }\n            } else {\n              parseStack.push(config);\n            }\n\n            end++;\n            break;\n          // end elment\n\n          case '?':\n            // <?...?>\n            locator && position(tagStart);\n            end = parseInstruction(source, tagStart, domBuilder);\n            break;\n\n          case '!':\n            // <!doctype,<![CDATA,<!--\n            locator && position(tagStart);\n            end = parseDCC(source, tagStart, domBuilder, errorHandler);\n            break;\n\n          default:\n            locator && position(tagStart);\n            var el = new ElementAttributes();\n            var currentNSMap = parseStack[parseStack.length - 1].currentNSMap; //elStartEnd\n\n            var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n            var len = el.length;\n\n            if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n              el.closed = true;\n\n              if (!entityMap.nbsp) {\n                errorHandler.warning('unclosed xml attribute');\n              }\n            }\n\n            if (locator && len) {\n              var locator2 = copyLocator(locator, {}); //try{//attribute position fixed\n\n              for (var i = 0; i < len; i++) {\n                var a = el[i];\n                position(a.offset);\n                a.locator = copyLocator(locator, {});\n              }\n\n              domBuilder.locator = locator2;\n\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n\n              domBuilder.locator = locator;\n            } else {\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n            }\n\n            if (NAMESPACE$1.isHTML(el.uri) && !el.closed) {\n              end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n            } else {\n              end++;\n            }\n\n        }\n      } catch (e) {\n        if (e instanceof ParseError$1) {\n          throw e;\n        }\n\n        errorHandler.error('element parse error: ' + e);\n        end = -1;\n      }\n\n      if (end > start) {\n        start = end;\n      } else {\n        //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n      }\n    }\n  }\n\n  function copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n  }\n  /**\n   * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n   * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n   */\n\n\n  function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n     * @param {string} qname\n     * @param {string} value\n     * @param {number} startIndex\n     */\n    function addAttribute(qname, value, startIndex) {\n      if (el.attributeNames.hasOwnProperty(qname)) {\n        errorHandler.fatalError('Attribute ' + qname + ' redefined');\n      }\n\n      el.addValue(qname, value, startIndex);\n    }\n\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = S_TAG; //status\n\n    while (true) {\n      var c = source.charAt(p);\n\n      switch (c) {\n        case '=':\n          if (s === S_ATTR) {\n            //attrName\n            attrName = source.slice(start, p);\n            s = S_EQ;\n          } else if (s === S_ATTR_SPACE) {\n            s = S_EQ;\n          } else {\n            //fatalError: equal must after attrName or space after attrName\n            throw new Error('attribute equal must after attrName'); // No known test case\n          }\n\n          break;\n\n        case '\\'':\n        case '\"':\n          if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n          ) {\n              //equal\n              if (s === S_ATTR) {\n                errorHandler.warning('attribute value must after \"=\"');\n                attrName = source.slice(start, p);\n              }\n\n              start = p + 1;\n              p = source.indexOf(c, start);\n\n              if (p > 0) {\n                value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                addAttribute(attrName, value, start - 1);\n                s = S_ATTR_END;\n              } else {\n                //fatalError: no end quot match\n                throw new Error('attribute value no end \\'' + c + '\\' match');\n              }\n            } else if (s == S_ATTR_NOQUOT_VALUE) {\n            value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer); //console.log(attrName,value,start,p)\n\n            addAttribute(attrName, value, start); //console.dir(el)\n\n            errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n            start = p + 1;\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no equal before\n            throw new Error('attribute value must after \"=\"'); // No known test case\n          }\n\n          break;\n\n        case '/':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              s = S_TAG_CLOSE;\n              el.closed = true;\n\n            case S_ATTR_NOQUOT_VALUE:\n            case S_ATTR:\n            case S_ATTR_SPACE:\n              break;\n            //case S_EQ:\n\n            default:\n              throw new Error(\"attribute invalid close char('/')\");\n            // No known test case\n          }\n\n          break;\n\n        case '':\n          //end document\n          errorHandler.error('unexpected end of input');\n\n          if (s == S_TAG) {\n            el.setTagName(source.slice(start, p));\n          }\n\n          return p;\n\n        case '>':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              break;\n            //normal\n\n            case S_ATTR_NOQUOT_VALUE: //Compatible state\n\n            case S_ATTR:\n              value = source.slice(start, p);\n\n              if (value.slice(-1) === '/') {\n                el.closed = true;\n                value = value.slice(0, -1);\n              }\n\n            case S_ATTR_SPACE:\n              if (s === S_ATTR_SPACE) {\n                value = attrName;\n              }\n\n              if (s == S_ATTR_NOQUOT_VALUE) {\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                addAttribute(attrName, value.replace(/&#?\\w+;/g, entityReplacer), start);\n              } else {\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                }\n\n                addAttribute(value, value, start);\n              }\n\n              break;\n\n            case S_EQ:\n              throw new Error('attribute value missed!!');\n          } //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\n\n          return p;\n\n        /*xml space '\\x20' | #x9 | #xD | #xA; */\n\n        case \"\\x80\":\n          c = ' ';\n\n        default:\n          if (c <= ' ') {\n            //space\n            switch (s) {\n              case S_TAG:\n                el.setTagName(source.slice(start, p)); //tagName\n\n                s = S_TAG_SPACE;\n                break;\n\n              case S_ATTR:\n                attrName = source.slice(start, p);\n                s = S_ATTR_SPACE;\n                break;\n\n              case S_ATTR_NOQUOT_VALUE:\n                var value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                addAttribute(attrName, value, start);\n\n              case S_ATTR_END:\n                s = S_TAG_SPACE;\n                break;\n              //case S_TAG_SPACE:\n              //case S_EQ:\n              //case S_ATTR_SPACE:\n              //\tvoid();break;\n              //case S_TAG_CLOSE:\n              //ignore warning\n            }\n          } else {\n            //not space\n            //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n            //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n            switch (s) {\n              //case S_TAG:void();break;\n              //case S_ATTR:void();break;\n              //case S_ATTR_NOQUOT_VALUE:void();break;\n              case S_ATTR_SPACE:\n                el.tagName;\n\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                }\n\n                addAttribute(attrName, attrName, start);\n                start = p;\n                s = S_ATTR;\n                break;\n\n              case S_ATTR_END:\n                errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n\n              case S_TAG_SPACE:\n                s = S_ATTR;\n                start = p;\n                break;\n\n              case S_EQ:\n                s = S_ATTR_NOQUOT_VALUE;\n                start = p;\n                break;\n\n              case S_TAG_CLOSE:\n                throw new Error(\"elements closed character '/' and '>' must be connected to\");\n            }\n          }\n\n      } //end outer switch\n      //console.log('p++',p)\n\n\n      p++;\n    }\n  }\n  /**\n   * @return true if has new namespace define\n   */\n\n\n  function appendElement$1(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null; //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\n    var i = el.length;\n\n    while (i--) {\n      var a = el[i];\n      var qName = a.qName;\n      var value = a.value;\n      var nsp = qName.indexOf(':');\n\n      if (nsp > 0) {\n        var prefix = a.prefix = qName.slice(0, nsp);\n        var localName = qName.slice(nsp + 1);\n        var nsPrefix = prefix === 'xmlns' && localName;\n      } else {\n        localName = qName;\n        prefix = null;\n        nsPrefix = qName === 'xmlns' && '';\n      } //can not set prefix,because prefix !== ''\n\n\n      a.localName = localName; //prefix == null for no ns prefix attribute\n\n      if (nsPrefix !== false) {\n        //hack!!\n        if (localNSMap == null) {\n          localNSMap = {}; //console.log(currentNSMap,0)\n\n          _copy(currentNSMap, currentNSMap = {}); //console.log(currentNSMap,1)\n\n        }\n\n        currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n        a.uri = NAMESPACE$1.XMLNS;\n        domBuilder.startPrefixMapping(nsPrefix, value);\n      }\n    }\n\n    var i = el.length;\n\n    while (i--) {\n      a = el[i];\n      var prefix = a.prefix;\n\n      if (prefix) {\n        //no prefix attribute has no namespace\n        if (prefix === 'xml') {\n          a.uri = NAMESPACE$1.XML;\n        }\n\n        if (prefix !== 'xmlns') {\n          a.uri = currentNSMap[prefix || '']; //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n        }\n      }\n    }\n\n    var nsp = tagName.indexOf(':');\n\n    if (nsp > 0) {\n      prefix = el.prefix = tagName.slice(0, nsp);\n      localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n      prefix = null; //important!!\n\n      localName = el.localName = tagName;\n    } //no prefix element has default namespace\n\n\n    var ns = el.uri = currentNSMap[prefix || ''];\n    domBuilder.startElement(ns, localName, tagName, el); //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n\n    if (el.closed) {\n      domBuilder.endElement(ns, localName, tagName);\n\n      if (localNSMap) {\n        for (prefix in localNSMap) {\n          domBuilder.endPrefixMapping(prefix);\n        }\n      }\n    } else {\n      el.currentNSMap = currentNSMap;\n      el.localNSMap = localNSMap; //parseStack.push(el);\n\n      return true;\n    }\n  }\n\n  function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n      var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n      var text = source.substring(elStartEnd + 1, elEndStart);\n\n      if (/[&<]/.test(text)) {\n        if (/^script$/i.test(tagName)) {\n          //if(!/\\]\\]>/.test(text)){\n          //lexHandler.startCDATA();\n          domBuilder.characters(text, 0, text.length); //lexHandler.endCDATA();\n\n          return elEndStart; //}\n        } //}else{//text area\n\n\n        text = text.replace(/&#?\\w+;/g, entityReplacer);\n        domBuilder.characters(text, 0, text.length);\n        return elEndStart; //}\n      }\n    }\n\n    return elStartEnd + 1;\n  }\n\n  function fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n\n    if (pos == null) {\n      //console.log(tagName)\n      pos = source.lastIndexOf('</' + tagName + '>');\n\n      if (pos < elStartEnd) {\n        //忘记闭合\n        pos = source.lastIndexOf('</' + tagName);\n      }\n\n      closeMap[tagName] = pos;\n    }\n\n    return pos < elStartEnd; //}\n  }\n\n  function _copy(source, target) {\n    for (var n in source) {\n      target[n] = source[n];\n    }\n  }\n\n  function parseDCC(source, start, domBuilder, errorHandler) {\n    //sure start with '<!'\n    var next = source.charAt(start + 2);\n\n    switch (next) {\n      case '-':\n        if (source.charAt(start + 3) === '-') {\n          var end = source.indexOf('-->', start + 4); //append comment source.substring(4,end)//<!--\n\n          if (end > start) {\n            domBuilder.comment(source, start + 4, end - start - 4);\n            return end + 3;\n          } else {\n            errorHandler.error(\"Unclosed comment\");\n            return -1;\n          }\n        } else {\n          //error\n          return -1;\n        }\n\n      default:\n        if (source.substr(start + 3, 6) == 'CDATA[') {\n          var end = source.indexOf(']]>', start + 9);\n          domBuilder.startCDATA();\n          domBuilder.characters(source, start + 9, end - start - 9);\n          domBuilder.endCDATA();\n          return end + 3;\n        } //<!DOCTYPE\n        //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\n\n        var matchs = split(source, start);\n        var len = matchs.length;\n\n        if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n          var name = matchs[1][0];\n          var pubid = false;\n          var sysid = false;\n\n          if (len > 3) {\n            if (/^public$/i.test(matchs[2][0])) {\n              pubid = matchs[3][0];\n              sysid = len > 4 && matchs[4][0];\n            } else if (/^system$/i.test(matchs[2][0])) {\n              sysid = matchs[3][0];\n            }\n          }\n\n          var lastMatch = matchs[len - 1];\n          domBuilder.startDTD(name, pubid, sysid);\n          domBuilder.endDTD();\n          return lastMatch.index + lastMatch[0].length;\n        }\n\n    }\n\n    return -1;\n  }\n\n  function parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf('?>', start);\n\n    if (end) {\n      var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\n      if (match) {\n        match[0].length;\n        domBuilder.processingInstruction(match[1], match[2]);\n        return end + 2;\n      } else {\n        //error\n        return -1;\n      }\n    }\n\n    return -1;\n  }\n\n  function ElementAttributes() {\n    this.attributeNames = {};\n  }\n\n  ElementAttributes.prototype = {\n    setTagName: function setTagName(tagName) {\n      if (!tagNamePattern.test(tagName)) {\n        throw new Error('invalid tagName:' + tagName);\n      }\n\n      this.tagName = tagName;\n    },\n    addValue: function addValue(qName, value, offset) {\n      if (!tagNamePattern.test(qName)) {\n        throw new Error('invalid attribute:' + qName);\n      }\n\n      this.attributeNames[qName] = this.length;\n      this[this.length++] = {\n        qName: qName,\n        value: value,\n        offset: offset\n      };\n    },\n    length: 0,\n    getLocalName: function getLocalName(i) {\n      return this[i].localName;\n    },\n    getLocator: function getLocator(i) {\n      return this[i].locator;\n    },\n    getQName: function getQName(i) {\n      return this[i].qName;\n    },\n    getURI: function getURI(i) {\n      return this[i].uri;\n    },\n    getValue: function getValue(i) {\n      return this[i].value;\n    } //\t,getIndex:function(uri, localName)){\n    //\t\tif(localName){\n    //\n    //\t\t}else{\n    //\t\t\tvar qName = uri\n    //\t\t}\n    //\t},\n    //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n    //\tgetType:function(uri,localName){}\n    //\tgetType:function(i){},\n\n  };\n\n  function split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n\n    while (match = reg.exec(source)) {\n      buf.push(match);\n      if (match[1]) return buf;\n    }\n  }\n\n  var XMLReader_1 = XMLReader$1;\n  var ParseError_1 = ParseError$1;\n  var sax = {\n    XMLReader: XMLReader_1,\n    ParseError: ParseError_1\n  };\n\n  var DOMImplementation = dom.DOMImplementation;\n  var NAMESPACE = conventions.NAMESPACE;\n  var ParseError = sax.ParseError;\n  var XMLReader = sax.XMLReader;\n\n  function DOMParser$1(options) {\n    this.options = options || {\n      locator: {}\n    };\n  }\n\n  DOMParser$1.prototype.parseFromString = function (source, mimeType) {\n    var options = this.options;\n    var sax = new XMLReader();\n    var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n\n    var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\n    if (locator) {\n      domBuilder.setDocumentLocator(locator);\n    }\n\n    sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n\n    if (isHTML) {\n      defaultNSMap[''] = NAMESPACE.HTML;\n    }\n\n    defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\n    if (source && typeof source === 'string') {\n      sax.parse(source, defaultNSMap, entityMap);\n    } else {\n      sax.errorHandler.error(\"invalid doc source\");\n    }\n\n    return domBuilder.doc;\n  };\n\n  function buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n      if (domBuilder instanceof DOMHandler) {\n        return domBuilder;\n      }\n\n      errorImpl = domBuilder;\n    }\n\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n\n    function build(key) {\n      var fn = errorImpl[key];\n\n      if (!fn && isCallback) {\n        fn = errorImpl.length == 2 ? function (msg) {\n          errorImpl(key, msg);\n        } : errorImpl;\n      }\n\n      errorHandler[key] = fn && function (msg) {\n        fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n      } || function () {};\n    }\n\n    build('warning');\n    build('error');\n    build('fatalError');\n    return errorHandler;\n  } //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n\n  /**\n   * +ContentHandler+ErrorHandler\n   * +LexicalHandler+EntityResolver2\n   * -DeclHandler-DTDHandler\n   *\n   * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n   * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n   */\n\n\n  function DOMHandler() {\n    this.cdata = false;\n  }\n\n  function position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n  }\n  /**\n   * @see org.xml.sax.ContentHandler#startDocument\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n   */\n\n\n  DOMHandler.prototype = {\n    startDocument: function startDocument() {\n      this.doc = new DOMImplementation().createDocument(null, null, null);\n\n      if (this.locator) {\n        this.doc.documentURI = this.locator.systemId;\n      }\n    },\n    startElement: function startElement(namespaceURI, localName, qName, attrs) {\n      var doc = this.doc;\n      var el = doc.createElementNS(namespaceURI, qName || localName);\n      var len = attrs.length;\n      appendElement(this, el);\n      this.currentElement = el;\n      this.locator && position(this.locator, el);\n\n      for (var i = 0; i < len; i++) {\n        var namespaceURI = attrs.getURI(i);\n        var value = attrs.getValue(i);\n        var qName = attrs.getQName(i);\n        var attr = doc.createAttributeNS(namespaceURI, qName);\n        this.locator && position(attrs.getLocator(i), attr);\n        attr.value = attr.nodeValue = value;\n        el.setAttributeNode(attr);\n      }\n    },\n    endElement: function endElement(namespaceURI, localName, qName) {\n      var current = this.currentElement;\n      current.tagName;\n      this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function startPrefixMapping(prefix, uri) {},\n    endPrefixMapping: function endPrefixMapping(prefix) {},\n    processingInstruction: function processingInstruction(target, data) {\n      var ins = this.doc.createProcessingInstruction(target, data);\n      this.locator && position(this.locator, ins);\n      appendElement(this, ins);\n    },\n    ignorableWhitespace: function ignorableWhitespace(ch, start, length) {},\n    characters: function characters(chars, start, length) {\n      chars = _toString.apply(this, arguments); //console.log(chars)\n\n      if (chars) {\n        if (this.cdata) {\n          var charNode = this.doc.createCDATASection(chars);\n        } else {\n          var charNode = this.doc.createTextNode(chars);\n        }\n\n        if (this.currentElement) {\n          this.currentElement.appendChild(charNode);\n        } else if (/^\\s*$/.test(chars)) {\n          this.doc.appendChild(charNode); //process xml\n        }\n\n        this.locator && position(this.locator, charNode);\n      }\n    },\n    skippedEntity: function skippedEntity(name) {},\n    endDocument: function endDocument() {\n      this.doc.normalize();\n    },\n    setDocumentLocator: function setDocumentLocator(locator) {\n      if (this.locator = locator) {\n        // && !('lineNumber' in locator)){\n        locator.lineNumber = 0;\n      }\n    },\n    //LexicalHandler\n    comment: function comment(chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      var comm = this.doc.createComment(chars);\n      this.locator && position(this.locator, comm);\n      appendElement(this, comm);\n    },\n    startCDATA: function startCDATA() {\n      //used in characters() methods\n      this.cdata = true;\n    },\n    endCDATA: function endCDATA() {\n      this.cdata = false;\n    },\n    startDTD: function startDTD(name, publicId, systemId) {\n      var impl = this.doc.implementation;\n\n      if (impl && impl.createDocumentType) {\n        var dt = impl.createDocumentType(name, publicId, systemId);\n        this.locator && position(this.locator, dt);\n        appendElement(this, dt);\n        this.doc.doctype = dt;\n      }\n    },\n\n    /**\n     * @see org.xml.sax.ErrorHandler\n     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n     */\n    warning: function warning(error) {\n      console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n    },\n    error: function error(_error) {\n      console.error('[xmldom error]\\t' + _error, _locator(this.locator));\n    },\n    fatalError: function fatalError(error) {\n      throw new ParseError(error, this.locator);\n    }\n  };\n\n  function _locator(l) {\n    if (l) {\n      return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n    }\n  }\n\n  function _toString(chars, start, length) {\n    if (typeof chars == 'string') {\n      return chars.substr(start, length);\n    } else {\n      //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n      if (chars.length >= start + length || start) {\n        return new java.lang.String(chars, start, length) + '';\n      }\n\n      return chars;\n    }\n  }\n  /*\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n   * used method of org.xml.sax.ext.LexicalHandler:\n   *  #comment(chars, start, length)\n   *  #startCDATA()\n   *  #endCDATA()\n   *  #startDTD(name, publicId, systemId)\n   *\n   *\n   * IGNORED method of org.xml.sax.ext.LexicalHandler:\n   *  #endDTD()\n   *  #startEntity(name)\n   *  #endEntity(name)\n   *\n   *\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n   * IGNORED method of org.xml.sax.ext.DeclHandler\n   * \t#attributeDecl(eName, aName, type, mode, value)\n   *  #elementDecl(name, model)\n   *  #externalEntityDecl(name, publicId, systemId)\n   *  #internalEntityDecl(name, value)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n   * IGNORED method of org.xml.sax.EntityResolver2\n   *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n   *  #resolveEntity(publicId, systemId)\n   *  #getExternalSubset(name, baseURI)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n   * IGNORED method of org.xml.sax.DTDHandler\n   *  #notationDecl(name, publicId, systemId) {};\n   *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n   */\n\n\n  \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n    DOMHandler.prototype[key] = function () {\n      return null;\n    };\n  });\n  /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n\n  function appendElement(hander, node) {\n    if (!hander.currentElement) {\n      hander.doc.appendChild(node);\n    } else {\n      hander.currentElement.appendChild(node);\n    }\n  } //appendChild and setAttributeNS are preformance key\n\n\n  var __DOMHandler = DOMHandler;\n  var DOMParser_1 = DOMParser$1;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var DOMImplementation_1 = dom.DOMImplementation;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var XMLSerializer = dom.XMLSerializer;\n  var domParser = {\n    __DOMHandler: __DOMHandler,\n    DOMParser: DOMParser_1,\n    DOMImplementation: DOMImplementation_1,\n    XMLSerializer: XMLSerializer\n  };\n\n  var DOMParser = domParser.DOMParser;\n\n  /*! @name mpd-parser @version 0.19.2 @license Apache-2.0 */\n\n  var isObject = function isObject(obj) {\n    return !!obj && typeof obj === 'object';\n  };\n\n  var merge = function merge() {\n    for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n      objects[_key] = arguments[_key];\n    }\n\n    return objects.reduce(function (result, source) {\n      if (typeof source !== 'object') {\n        return result;\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject(result[key]) && isObject(source[key])) {\n          result[key] = merge(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n\n  var values = function values(o) {\n    return Object.keys(o).map(function (k) {\n      return o[k];\n    });\n  };\n\n  var range = function range(start, end) {\n    var result = [];\n\n    for (var i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  };\n\n  var flatten = function flatten(lists) {\n    return lists.reduce(function (x, y) {\n      return x.concat(y);\n    }, []);\n  };\n\n  var from = function from(list) {\n    if (!list.length) {\n      return [];\n    }\n\n    var result = [];\n\n    for (var i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n\n    return result;\n  };\n\n  var findIndexes = function findIndexes(l, key) {\n    return l.reduce(function (a, e, i) {\n      if (e[key]) {\n        a.push(i);\n      }\n\n      return a;\n    }, []);\n  };\n\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls,\n   *   follows  RFC 2616, Clause 14.35.1\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n  var urlTypeToSegment = function urlTypeToSegment(_ref) {\n    var _ref$baseUrl = _ref.baseUrl,\n        baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n        _ref$source = _ref.source,\n        source = _ref$source === void 0 ? '' : _ref$source,\n        _ref$range = _ref.range,\n        range = _ref$range === void 0 ? '' : _ref$range,\n        _ref$indexRange = _ref.indexRange,\n        indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n    var segment = {\n      uri: source,\n      resolvedUri: resolveUrl$1(baseUrl || '', source)\n    };\n\n    if (range || indexRange) {\n      var rangeStr = range ? range : indexRange;\n      var ranges = rangeStr.split('-');\n      var startRange = parseInt(ranges[0], 10);\n      var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n      // RFC 2616, Clause 14.35.1\n\n      segment.byterange = {\n        length: endRange - startRange + 1,\n        offset: startRange\n      };\n    }\n\n    return segment;\n  };\n\n  var byteRangeToString = function byteRangeToString(byterange) {\n    // `endRange` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var endRange = byterange.offset + byterange.length - 1;\n    return byterange.offset + \"-\" + endRange;\n  };\n  /**\n   * parse the end number attribue that can be a string\n   * number, or undefined.\n   *\n   * @param {string|number|undefined} endNumber\n   *        The end number attribute.\n   *\n   * @return {number|null}\n   *          The result of parsing the end number.\n   */\n\n\n  var parseEndNumber = function parseEndNumber(endNumber) {\n    if (endNumber && typeof endNumber !== 'number') {\n      endNumber = parseInt(endNumber, 10);\n    }\n\n    if (isNaN(endNumber)) {\n      return null;\n    }\n\n    return endNumber;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n\n  var segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    \"static\": function _static(attributes) {\n      var duration = attributes.duration,\n          _attributes$timescale = attributes.timescale,\n          timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n          sourceDuration = attributes.sourceDuration,\n          periodDuration = attributes.periodDuration;\n      var endNumber = parseEndNumber(attributes.endNumber);\n      var segmentDuration = duration / timescale;\n\n      if (typeof endNumber === 'number') {\n        return {\n          start: 0,\n          end: endNumber\n        };\n      }\n\n      if (typeof periodDuration === 'number') {\n        return {\n          start: 0,\n          end: periodDuration / segmentDuration\n        };\n      }\n\n      return {\n        start: 0,\n        end: sourceDuration / segmentDuration\n      };\n    },\n\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic: function dynamic(attributes) {\n      var NOW = attributes.NOW,\n          clientOffset = attributes.clientOffset,\n          availabilityStartTime = attributes.availabilityStartTime,\n          _attributes$timescale2 = attributes.timescale,\n          timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n          duration = attributes.duration,\n          _attributes$start = attributes.start,\n          start = _attributes$start === void 0 ? 0 : _attributes$start,\n          _attributes$minimumUp = attributes.minimumUpdatePeriod,\n          minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n          _attributes$timeShift = attributes.timeShiftBufferDepth,\n          timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n      var endNumber = parseEndNumber(attributes.endNumber);\n      var now = (NOW + clientOffset) / 1000;\n      var periodStartWC = availabilityStartTime + start;\n      var periodEndWC = now + minimumUpdatePeriod;\n      var periodDuration = periodEndWC - periodStartWC;\n      var segmentCount = Math.ceil(periodDuration * timescale / duration);\n      var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  var toSegments = function toSegments(attributes) {\n    return function (number, index) {\n      var duration = attributes.duration,\n          _attributes$timescale3 = attributes.timescale,\n          timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n          periodIndex = attributes.periodIndex,\n          _attributes$startNumb = attributes.startNumber,\n          startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n      return {\n        number: startNumber + number,\n        duration: duration / timescale,\n        timeline: periodIndex,\n        time: index * duration\n      };\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByDuration = function parseByDuration(attributes) {\n    var type = attributes.type,\n        duration = attributes.duration,\n        _attributes$timescale4 = attributes.timescale,\n        timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n        periodDuration = attributes.periodDuration,\n        sourceDuration = attributes.sourceDuration;\n\n    var _segmentRange$type = segmentRange[type](attributes),\n        start = _segmentRange$type.start,\n        end = _segmentRange$type.end;\n\n    var segments = range(start, end).map(toSegments(attributes));\n\n    if (type === 'static') {\n      var index = segments.length - 1; // section is either a period or the full source\n\n      var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n      segments[index].duration = sectionDuration - duration / timescale * index;\n    }\n\n    return segments;\n  };\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromBase = function segmentsFromBase(attributes) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$indexRang = attributes.indexRange,\n        indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n        duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: baseUrl,\n      indexRange: indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      var segmentTimeInfo = parseByDuration(attributes);\n\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration;\n      segment.timeline = 0;\n    } // This is used for mediaSequence\n\n\n    segment.number = 0;\n    return [segment];\n  };\n  /**\n   * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n   * according to the sidx information given.\n   *\n   * playlist.sidx has metadadata about the sidx where-as the sidx param\n   * is the parsed sidx box itself.\n   *\n   * @param {Object} playlist the playlist to update the sidx information for\n   * @param {Object} sidx the parsed sidx box\n   * @return {Object} the playlist object with the updated sidx information\n   */\n\n\n  var addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\n    // Retain init segment information\n    var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n    var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n    var timeline = playlist.timeline || 0;\n    var sidxByteRange = playlist.sidx.byterange;\n    var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n    var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n    var mediaReferences = sidx.references.filter(function (r) {\n      return r.referenceType !== 1;\n    });\n    var segments = [];\n    var type = playlist.endList ? 'static' : 'dynamic'; // firstOffset is the offset from the end of the sidx box\n\n    var startIndex = sidxEnd + sidx.firstOffset;\n\n    for (var i = 0; i < mediaReferences.length; i++) {\n      var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n      var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n      // this will be converted to seconds when generating segments\n\n      var duration = reference.subsegmentDuration; // should be an inclusive range\n\n      var endIndex = startIndex + size - 1;\n      var indexRange = startIndex + \"-\" + endIndex;\n      var attributes = {\n        baseUrl: baseUrl,\n        timescale: timescale,\n        timeline: timeline,\n        // this is used in parseByDuration\n        periodIndex: timeline,\n        duration: duration,\n        sourceDuration: sourceDuration,\n        indexRange: indexRange,\n        type: type\n      };\n      var segment = segmentsFromBase(attributes)[0];\n\n      if (initSegment) {\n        segment.map = initSegment;\n      }\n\n      segments.push(segment);\n      startIndex += size;\n    }\n\n    playlist.segments = segments;\n    return playlist;\n  };\n\n  var generateSidxKey = function generateSidxKey(sidx) {\n    return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n  };\n\n  var mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n    var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n      if (acc[name]) {\n        var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      } else {\n        // first Period\n        acc[name] = playlist;\n      }\n\n      return acc;\n    }, {}));\n    return mergedPlaylists.map(function (playlist) {\n      playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n      return playlist;\n    });\n  };\n\n  var addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist$1(playlist, sidxMapping) {\n    var sidxKey = generateSidxKey(playlist.sidx);\n    var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (sidxMatch) {\n      addSidxSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n\n    return playlist;\n  };\n\n  var addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (!Object.keys(sidxMapping).length) {\n      return playlists;\n    }\n\n    for (var i in playlists) {\n      playlists[i] = addSidxSegmentsToPlaylist$1(playlists[i], sidxMapping);\n    }\n\n    return playlists;\n  };\n\n  var formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\n    var _attributes;\n\n    var attributes = _ref.attributes,\n        segments = _ref.segments,\n        sidx = _ref.sidx;\n    var playlist = {\n      attributes: (_attributes = {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs\n      }, _attributes['PROGRAM-ID'] = 1, _attributes),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    if (isAudioOnly) {\n      playlist.attributes.AUDIO = 'audio';\n      playlist.attributes.SUBTITLES = 'subs';\n    }\n\n    return playlist;\n  };\n\n  var formatVttPlaylist = function formatVttPlaylist(_ref2) {\n    var _m3u8Attributes;\n\n    var attributes = _ref2.attributes,\n        segments = _ref2.segments;\n\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodIndex,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n\n    var m3u8Attributes = (_m3u8Attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\n\n    if (attributes.codecs) {\n      m3u8Attributes.CODECS = attributes.codecs;\n    }\n\n    return {\n      attributes: m3u8Attributes,\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n  };\n\n  var organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (isAudioOnly === void 0) {\n      isAudioOnly = false;\n    }\n\n    var mainPlaylist;\n    var formattedPlaylists = playlists.reduce(function (a, playlist) {\n      var role = playlist.attributes.role && playlist.attributes.role.value || '';\n      var language = playlist.attributes.lang || '';\n      var label = playlist.attributes.label || 'main';\n\n      if (language && !playlist.attributes.label) {\n        var roleLabel = role ? \" (\" + role + \")\" : '';\n        label = \"\" + playlist.attributes.lang + roleLabel;\n      }\n\n      if (!a[label]) {\n        a[label] = {\n          language: language,\n          autoselect: true,\n          \"default\": role === 'main',\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      var formatted = addSidxSegmentsToPlaylist$1(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n      a[label].playlists.push(formatted);\n\n      if (typeof mainPlaylist === 'undefined' && role === 'main') {\n        mainPlaylist = playlist;\n        mainPlaylist[\"default\"] = true;\n      }\n\n      return a;\n    }, {}); // if no playlists have role \"main\", mark the first as main\n\n    if (!mainPlaylist) {\n      var firstLabel = Object.keys(formattedPlaylists)[0];\n      formattedPlaylists[firstLabel][\"default\"] = true;\n    }\n\n    return formattedPlaylists;\n  };\n\n  var organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    return playlists.reduce(function (a, playlist) {\n      var label = playlist.attributes.lang || 'text';\n\n      if (!a[label]) {\n        a[label] = {\n          language: label,\n          \"default\": false,\n          autoselect: false,\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      a[label].playlists.push(addSidxSegmentsToPlaylist$1(formatVttPlaylist(playlist), sidxMapping));\n      return a;\n    }, {});\n  };\n\n  var organizeCaptionServices = function organizeCaptionServices(captionServices) {\n    return captionServices.reduce(function (svcObj, svc) {\n      if (!svc) {\n        return svcObj;\n      }\n\n      svc.forEach(function (service) {\n        var channel = service.channel,\n            language = service.language;\n        svcObj[language] = {\n          autoselect: false,\n          \"default\": false,\n          instreamId: channel,\n          language: language\n        };\n\n        if (service.hasOwnProperty('aspectRatio')) {\n          svcObj[language].aspectRatio = service.aspectRatio;\n        }\n\n        if (service.hasOwnProperty('easyReader')) {\n          svcObj[language].easyReader = service.easyReader;\n        }\n\n        if (service.hasOwnProperty('3D')) {\n          svcObj[language]['3D'] = service['3D'];\n        }\n      });\n      return svcObj;\n    }, {});\n  };\n\n  var formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n    var _attributes2;\n\n    var attributes = _ref3.attributes,\n        segments = _ref3.segments,\n        sidx = _ref3.sidx;\n    var playlist = {\n      attributes: (_attributes2 = {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth\n      }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    return playlist;\n  };\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var toM3u8 = function toM3u8(dashPlaylists, locations, sidxMapping) {\n    var _mediaGroups;\n\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all main manifest attributes\n\n\n    var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n        duration = _dashPlaylists$0$attr.sourceDuration,\n        type = _dashPlaylists$0$attr.type,\n        suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\n        minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\n    var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    var vttPlaylists = dashPlaylists.filter(vttOnly);\n    var captions = dashPlaylists.map(function (playlist) {\n      return playlist.attributes.captionServices;\n    }).filter(Boolean);\n    var manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: (_mediaGroups = {\n        AUDIO: {},\n        VIDEO: {}\n      }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n      uri: '',\n      duration: duration,\n      playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n    };\n\n    if (minimumUpdatePeriod >= 0) {\n      manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n    }\n\n    if (locations) {\n      manifest.locations = locations;\n    }\n\n    if (type === 'dynamic') {\n      manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n    }\n\n    var isAudioOnly = manifest.playlists.length === 0;\n\n    if (audioPlaylists.length) {\n      manifest.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly);\n    }\n\n    if (vttPlaylists.length) {\n      manifest.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n    }\n\n    if (captions.length) {\n      manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n    }\n\n    return manifest;\n  };\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n\n\n  var getLiveRValue = function getLiveRValue(attributes, time, duration) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n    var type = attributes.type,\n        _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n        _attributes$media = attributes.media,\n        media = _attributes$media === void 0 ? '' : _attributes$media,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n        timeline = attributes.periodIndex;\n    var segments = [];\n    var time = -1;\n\n    for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      var S = segmentTimeline[sIndex];\n      var duration = S.d;\n      var repeat = S.r || 0;\n      var segmentTime = S.t || 0;\n\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n\n      var count = void 0;\n\n      if (repeat < 0) {\n        var nextS = sIndex + 1;\n\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n\n      var end = startNumber + segments.length + count;\n      var number = startNumber + segments.length;\n\n      while (number < end) {\n        segments.push({\n          number: number,\n          duration: duration / timescale,\n          time: time,\n          timeline: timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n\n    return segments;\n  };\n\n  var identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  var identifierReplacement = function identifierReplacement(values) {\n    return function (match, identifier, format, width) {\n      if (match === '$$') {\n        // escape sequence\n        return '$';\n      }\n\n      if (typeof values[identifier] === 'undefined') {\n        return match;\n      }\n\n      var value = '' + values[identifier];\n\n      if (identifier === 'RepresentationID') {\n        // Format tag shall not be present with RepresentationID\n        return value;\n      }\n\n      if (!format) {\n        width = 1;\n      } else {\n        width = parseInt(width, 10);\n      }\n\n      if (value.length >= width) {\n        return value;\n      }\n\n      return \"\" + new Array(width - value.length + 1).join('0') + value;\n    };\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n\n  var constructTemplateUrl = function constructTemplateUrl(url, values) {\n    return url.replace(identifierPattern, identifierReplacement(values));\n  };\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodIndex\n      }];\n    }\n\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n\n  var segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n    var templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    var _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {\n      sourceURL: '',\n      range: ''\n    } : _attributes$initializ;\n    var mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    var segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(function (segment) {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n      // calculated in mpd-parser prior to this, so it's assumed to be available.\n      attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n      var map = {\n        uri: uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl$1(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number,\n        presentationTime: presentationTime\n      };\n      return map;\n    });\n  };\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n\n  var SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n    var duration = attributes.duration,\n        _attributes$segmentUr = attributes.segmentUrls,\n        segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\n        periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n\n    var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n      return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n    });\n    var segmentTimeInfo;\n\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n\n    var segments = segmentTimeInfo.map(function (segmentTime, index) {\n      if (segmentUrlMap[index]) {\n        var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n        // - if timescale isn't present on any level, default to 1.\n\n        var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n        var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n\n    }).filter(function (segment) {\n      return segment;\n    });\n    return segments;\n  };\n\n  var generateSegments = function generateSegments(_ref) {\n    var attributes = _ref.attributes,\n        segmentInfo = _ref.segmentInfo;\n    var segmentAttributes;\n    var segmentsFn;\n\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge(attributes, segmentInfo.list);\n    }\n\n    var segmentsInfo = {\n      attributes: attributes\n    };\n\n    if (!segmentsFn) {\n      return segmentsInfo;\n    }\n\n    var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      var _segmentAttributes = segmentAttributes,\n          duration = _segmentAttributes.duration,\n          _segmentAttributes$ti = _segmentAttributes.timescale,\n          timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce(function (max, segment) {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n\n    segmentsInfo.attributes = segmentAttributes;\n    segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n    if (segmentInfo.base && segmentAttributes.indexRange) {\n      segmentsInfo.sidx = segments[0];\n      segmentsInfo.segments = [];\n    }\n\n    return segmentsInfo;\n  };\n\n  var toPlaylists = function toPlaylists(representations) {\n    return representations.map(generateSegments);\n  };\n\n  var findChildren = function findChildren(element, name) {\n    return from(element.childNodes).filter(function (_ref) {\n      var tagName = _ref.tagName;\n      return tagName === name;\n    });\n  };\n\n  var getContent = function getContent(element) {\n    return element.textContent.trim();\n  };\n\n  var parseDuration = function parseDuration(str) {\n    var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    var SECONDS_IN_DAY = 24 * 60 * 60;\n    var SECONDS_IN_HOUR = 60 * 60;\n    var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    var match = durationRegex.exec(str);\n\n    if (!match) {\n      return 0;\n    }\n\n    var _match$slice = match.slice(1),\n        year = _match$slice[0],\n        month = _match$slice[1],\n        day = _match$slice[2],\n        hour = _match$slice[3],\n        minute = _match$slice[4],\n        second = _match$slice[5];\n\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n\n  var parseDate = function parseDate(str) {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n\n    return Date.parse(str);\n  };\n\n  var parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration: function mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime: function availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the suggested presentation delay. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    suggestedPresentationDelay: function suggestedPresentationDelay(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     *\n     * @return {string}\n     *         The type as a string\n     */\n    type: function type(value) {\n      return value;\n    },\n\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start: function start(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width: function width(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height: function height(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth: function bandwidth(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber: function startNumber(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed timescale\n     */\n    timescale: function timescale(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the presentationTimeOffset.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTimeOffset\n     */\n    presentationTimeOffset: function presentationTimeOffset(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration: function duration(value) {\n      var parsedValue = parseInt(value, 10);\n\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n\n      return parsedValue;\n    },\n\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d: function d(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t: function t(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r: function r(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT: function DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  var parseAttributes = function parseAttributes(el) {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n\n    return from(el.attributes).reduce(function (a, e) {\n      var parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n\n  var keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {string[]} referenceUrls\n   *        List of reference urls to resolve to\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {string[]}\n   *         List of resolved urls\n   */\n\n  var buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n    if (!baseUrlElements.length) {\n      return referenceUrls;\n    }\n\n    return flatten(referenceUrls.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        return resolveUrl$1(reference, getContent(baseUrlElement));\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} segmentTimeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n\n  var getSegmentInformation = function getSegmentInformation(adaptationSet) {\n    var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n      return merge({\n        tag: 'SegmentURL'\n      }, parseAttributes(s));\n    });\n    var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    var segmentTimelineParentNode = segmentList || segmentTemplate;\n    var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n\n    var segmentInfo = {\n      template: template,\n      segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n        return parseAttributes(s);\n      }),\n      list: segmentList && merge(parseAttributes(segmentList), {\n        segmentUrls: segmentUrls,\n        initialization: parseAttributes(segmentInitialization)\n      }),\n      base: segmentBase && merge(parseAttributes(segmentBase), {\n        initialization: parseAttributes(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(function (key) {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {string[]} adaptationSetBaseUrls\n   *        Contains list of resolved base urls inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n\n  var inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n    return function (representation) {\n      var repBaseUrlElements = findChildren(representation, 'BaseURL');\n      var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n      var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n      var representationSegmentInfo = getSegmentInformation(representation);\n      return repBaseUrls.map(function (baseUrl) {\n        return {\n          segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n          attributes: merge(attributes, {\n            baseUrl: baseUrl\n          })\n        };\n      });\n    };\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n\n  var generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n    return contentProtectionNodes.reduce(function (acc, node) {\n      var attributes = parseAttributes(node);\n      var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes: attributes\n        };\n        var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n        if (psshNode) {\n          var pssh = getContent(psshNode);\n          var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n          acc[keySystem].pssh = psshBuffer;\n        }\n      }\n\n      return acc;\n    }, {});\n  }; // defined in ANSI_SCTE 214-1 2016\n\n\n  var parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\n    // 608 captions\n    if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n      var values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(function (value) {\n        var channel;\n        var language; // default language to value\n\n        language = value;\n\n        if (/^CC\\d=/.test(value)) {\n          var _value$split = value.split('=');\n\n          channel = _value$split[0];\n          language = _value$split[1];\n        } else if (/^CC\\d$/.test(value)) {\n          channel = value;\n        }\n\n        return {\n          channel: channel,\n          language: language\n        };\n      });\n    } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n      var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\n\n      return _values.map(function (value) {\n        var flags = {\n          // service or channel number 1-63\n          'channel': undefined,\n          // language is a 3ALPHA per ISO 639.2/B\n          // field is required\n          'language': undefined,\n          // BIT 1/0 or ?\n          // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n          'aspectRatio': 1,\n          // BIT 1/0\n          // easy reader flag indicated the text is tailed to the needs of beginning readers\n          // default 0, or off\n          'easyReader': 0,\n          // BIT 1/0\n          // If 3d metadata is present (CEA-708.1) then 1\n          // default 0\n          '3D': 0\n        };\n\n        if (/=/.test(value)) {\n          var _value$split2 = value.split('='),\n              channel = _value$split2[0],\n              _value$split2$ = _value$split2[1],\n              opts = _value$split2$ === void 0 ? '' : _value$split2$;\n\n          flags.channel = channel;\n          flags.language = value;\n          opts.split(',').forEach(function (opt) {\n            var _opt$split = opt.split(':'),\n                name = _opt$split[0],\n                val = _opt$split[1];\n\n            if (name === 'lang') {\n              flags.language = val; // er for easyReadery\n            } else if (name === 'er') {\n              flags.easyReader = Number(val); // war for wide aspect ratio\n            } else if (name === 'war') {\n              flags.aspectRatio = Number(val);\n            } else if (name === '3D') {\n              flags['3D'] = Number(val);\n            }\n          });\n        } else {\n          flags.language = value;\n        }\n\n        if (flags.channel) {\n          flags.channel = 'SERVICE' + flags.channel;\n        }\n\n        return flags;\n      });\n    }\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {string[]} periodBaseUrls\n   *        Contains list of resolved base urls inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n\n  var toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n    return function (adaptationSet) {\n      var adaptationSetAttributes = parseAttributes(adaptationSet);\n      var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n      var role = findChildren(adaptationSet, 'Role')[0];\n      var roleAttributes = {\n        role: parseAttributes(role)\n      };\n      var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n      var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n      var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n      if (captionServices) {\n        attrs = merge(attrs, {\n          captionServices: captionServices\n        });\n      }\n\n      var label = findChildren(adaptationSet, 'Label')[0];\n\n      if (label && label.childNodes.length) {\n        var labelVal = label.childNodes[0].nodeValue.trim();\n        attrs = merge(attrs, {\n          label: labelVal\n        });\n      }\n\n      var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n      if (Object.keys(contentProtection).length) {\n        attrs = merge(attrs, {\n          contentProtection: contentProtection\n        });\n      }\n\n      var segmentInfo = getSegmentInformation(adaptationSet);\n      var representations = findChildren(adaptationSet, 'Representation');\n      var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n      return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n    };\n  };\n  /**\n   * Contains all period information for mapping nodes onto adaptation sets.\n   *\n   * @typedef {Object} PeriodInformation\n   * @property {Node} period.node\n   *           Period node from the mpd\n   * @property {Object} period.attributes\n   *           Parsed period attributes from node plus any added\n   */\n\n  /**\n   * Maps a PeriodInformation object to a list of Representation information objects for all\n   * AdaptationSet nodes contained within the Period.\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {PeriodInformation} period\n   *        Period object containing necessary period information\n   * @param {number} periodIndex\n   *        Index of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n   * @param {string[]} mpdBaseUrls\n   *        Contains list of resolved base urls inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n\n  var toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n    return function (period, index) {\n      var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n      var parsedPeriodId = parseInt(period.attributes.id, 10); // fallback to mapping index if Period@id is not a number\n\n      var periodIndex = window.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n      var periodAttributes = merge(mpdAttributes, {\n        periodIndex: periodIndex,\n        periodStart: period.attributes.start\n      });\n\n      if (typeof period.attributes.duration === 'number') {\n        periodAttributes.periodDuration = period.attributes.duration;\n      }\n\n      var adaptationSets = findChildren(period.node, 'AdaptationSet');\n      var periodSegmentInfo = getSegmentInformation(period.node);\n      return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n    };\n  };\n  /**\n   * Gets Period@start property for a given period.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {Object} options.attributes\n   *        Period attributes\n   * @param {Object} [options.priorPeriodAttributes]\n   *        Prior period attributes (if prior period is available)\n   * @param {string} options.mpdType\n   *        The MPD@type these periods came from\n   * @return {number|null}\n   *         The period start, or null if it's an early available period or error\n   */\n\n\n  var getPeriodStart = function getPeriodStart(_ref) {\n    var attributes = _ref.attributes,\n        priorPeriodAttributes = _ref.priorPeriodAttributes,\n        mpdType = _ref.mpdType; // Summary of period start time calculation from DASH spec section 5.3.2.1\n    //\n    // A period's start is the first period's start + time elapsed after playing all\n    // prior periods to this one. Periods continue one after the other in time (without\n    // gaps) until the end of the presentation.\n    //\n    // The value of Period@start should be:\n    // 1. if Period@start is present: value of Period@start\n    // 2. if previous period exists and it has @duration: previous Period@start +\n    //    previous Period@duration\n    // 3. if this is first period and MPD@type is 'static': 0\n    // 4. in all other cases, consider the period an \"early available period\" (note: not\n    //    currently supported)\n    // (1)\n\n    if (typeof attributes.start === 'number') {\n      return attributes.start;\n    } // (2)\n\n\n    if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n      return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n    } // (3)\n\n\n    if (!priorPeriodAttributes && mpdType === 'static') {\n      return 0;\n    } // (4)\n    // There is currently no logic for calculating the Period@start value if there is\n    // no Period@start or prior Period@start and Period@duration available. This is not made\n    // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n    // nothing about any other resolution strategies, it's implied. Thus, this case should\n    // be considered an early available period, or error, and null should suffice for both\n    // of those cases.\n\n\n    return null;\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n\n  var inheritAttributes = function inheritAttributes(mpd, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$manifestUri = _options.manifestUri,\n        manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n        _options$NOW = _options.NOW,\n        NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n        _options$clientOffset = _options.clientOffset,\n        clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n    var periodNodes = findChildren(mpd, 'Period');\n\n    if (!periodNodes.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n\n    var locations = findChildren(mpd, 'Location');\n    var mpdAttributes = parseAttributes(mpd);\n    var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n    mpdAttributes.type = mpdAttributes.type || 'static';\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n\n    if (locations.length) {\n      mpdAttributes.locations = locations.map(getContent);\n    }\n\n    var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n    // adding properties that require looking at prior periods is to parse attributes and add\n    // missing ones before toAdaptationSets is called. If more such properties are added, it\n    // may be better to refactor toAdaptationSets.\n\n    periodNodes.forEach(function (node, index) {\n      var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n      // for this period.\n\n      var priorPeriod = periods[index - 1];\n      attributes.start = getPeriodStart({\n        attributes: attributes,\n        priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n        mpdType: mpdAttributes.type\n      });\n      periods.push({\n        node: node,\n        attributes: attributes\n      });\n    });\n    return {\n      locations: mpdAttributes.locations,\n      representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n    };\n  };\n\n  var stringToMpdXml = function stringToMpdXml(manifestString) {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n\n    var parser = new DOMParser();\n    var xml;\n    var mpd;\n\n    try {\n      xml = parser.parseFromString(manifestString, 'application/xml');\n      mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n    } catch (e) {// ie 11 throwsw on invalid xml\n    }\n\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n\n    return mpd;\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n    var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n    if (!UTCTimingNode) {\n      return null;\n    }\n\n    var attributes = parseAttributes(UTCTimingNode);\n\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n\n    return attributes;\n  };\n\n  var parse = function parse(manifestString, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n    var playlists = toPlaylists(parsedManifestInfo.representationInfo);\n    return toM3u8(playlists, parsedManifestInfo.locations, options.sidxMapping);\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTiming = function parseUTCTiming(manifestString) {\n    return parseUTCTimingScheme(stringToMpdXml(manifestString));\n  };\n\n  var MAX_UINT32 = Math.pow(2, 32);\n\n  var parseSidx = function parseSidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8)\n    },\n        i = 12;\n\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = view.getUint32(i) * MAX_UINT32 + view.getUint32(i + 4);\n      result.firstOffset = view.getUint32(i + 8) * MAX_UINT32 + view.getUint32(i + 12);\n      i += 16;\n    }\n\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  };\n\n  var parseSidx_1 = parseSidx;\n\n  // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n  // we used to do this with log2 but BigInt does not support builtin math\n  // Math.ceil(log2(x));\n\n\n  var countBits = function countBits(x) {\n    return x.toString(2).length;\n  }; // count the number of whole bytes it would take to represent a number\n\n  var countBytes = function countBytes(x) {\n    return Math.ceil(countBits(x) / 8);\n  };\n  var isTypedArray = function isTypedArray(obj) {\n    return ArrayBuffer.isView(obj);\n  };\n  var toUint8 = function toUint8(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return bytes;\n    }\n\n    if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n      // any non-number or NaN leads to empty uint8array\n      // eslint-disable-next-line\n      if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n        bytes = 0;\n      } else {\n        bytes = [bytes];\n      }\n    }\n\n    return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n  };\n  var BigInt = window.BigInt || Number;\n  var BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  var bytesToNumber = function bytesToNumber(bytes, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$signed = _ref.signed,\n        signed = _ref$signed === void 0 ? false : _ref$signed,\n        _ref$le = _ref.le,\n        le = _ref$le === void 0 ? false : _ref$le;\n\n    bytes = toUint8(bytes);\n    var fn = le ? 'reduce' : 'reduceRight';\n    var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n    var number = obj.call(bytes, function (total, _byte, i) {\n      var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n      return total + BigInt(_byte) * BYTE_TABLE[exponent];\n    }, BigInt(0));\n\n    if (signed) {\n      var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n      number = BigInt(number);\n\n      if (number > max) {\n        number -= max;\n        number -= max;\n        number -= BigInt(2);\n      }\n    }\n\n    return Number(number);\n  };\n  var numberToBytes = function numberToBytes(number, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$le = _ref2.le,\n        le = _ref2$le === void 0 ? false : _ref2$le; // eslint-disable-next-line\n\n\n    if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n      number = 0;\n    }\n\n    number = BigInt(number);\n    var byteCount = countBytes(number);\n    var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n    for (var i = 0; i < byteCount; i++) {\n      var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n      bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n      if (number < 0) {\n        bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n        bytes[byteIndex] -= i === 0 ? 1 : 2;\n      }\n    }\n\n    return bytes;\n  };\n  var stringToBytes = function stringToBytes(string, stringIsBytes) {\n    if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n      string = string.toString();\n    }\n\n    if (typeof string !== 'string') {\n      return new Uint8Array();\n    } // If the string already is bytes, we don't have to do this\n    // otherwise we do this so that we split multi length characters\n    // into individual bytes\n\n\n    if (!stringIsBytes) {\n      string = unescape(encodeURIComponent(string));\n    }\n\n    var view = new Uint8Array(string.length);\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view;\n  };\n  var concatTypedArrays = function concatTypedArrays() {\n    for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n      buffers[_key] = arguments[_key];\n    }\n\n    buffers = buffers.filter(function (b) {\n      return b && (b.byteLength || b.length) && typeof b !== 'string';\n    });\n\n    if (buffers.length <= 1) {\n      // for 0 length we will return empty uint8\n      // for 1 length we return the first uint8\n      return toUint8(buffers[0]);\n    }\n\n    var totalLen = buffers.reduce(function (total, buf, i) {\n      return total + (buf.byteLength || buf.length);\n    }, 0);\n    var tempBuffer = new Uint8Array(totalLen);\n    var offset = 0;\n    buffers.forEach(function (buf) {\n      buf = toUint8(buf);\n      tempBuffer.set(buf, offset);\n      offset += buf.byteLength;\n    });\n    return tempBuffer;\n  };\n  /**\n   * Check if the bytes \"b\" are contained within bytes \"a\".\n   *\n   * @param {Uint8Array|Array} a\n   *        Bytes to check in\n   *\n   * @param {Uint8Array|Array} b\n   *        Bytes to check for\n   *\n   * @param {Object} options\n   *        options\n   *\n   * @param {Array|Uint8Array} [offset=0]\n   *        offset to use when looking at bytes in a\n   *\n   * @param {Array|Uint8Array} [mask=[]]\n   *        mask to use on bytes before comparison.\n   *\n   * @return {boolean}\n   *         If all bytes in b are inside of a, taking into account\n   *         bit masks.\n   */\n\n  var bytesMatch = function bytesMatch(a, b, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        _ref3$offset = _ref3.offset,\n        offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n        _ref3$mask = _ref3.mask,\n        mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n    a = toUint8(a);\n    b = toUint8(b); // ie 11 does not support uint8 every\n\n    var fn = b.every ? b.every : Array.prototype.every;\n    return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n    fn.call(b, function (bByte, i) {\n      var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n      return bByte === aByte;\n    });\n  };\n\n  var ID3 = toUint8([0x49, 0x44, 0x33]);\n  var getId3Size = function getId3Size(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n    var flags = bytes[offset + 5];\n    var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n    var footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n  var getId3Offset = function getId3Offset(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n\n    if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n      offset: offset\n    })) {\n      return offset;\n    }\n\n    offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n    // have multiple ID3 tag sections even though\n    // they should not.\n\n    return getId3Offset(bytes, offset);\n  };\n\n  var normalizePath$1 = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return stringToBytes(path);\n    }\n\n    if (typeof path === 'number') {\n      return path;\n    }\n\n    return path;\n  };\n\n  var normalizePaths$1 = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath$1(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath$1(p);\n    });\n  };\n  /**\n   * find any number of boxes by name given a path to it in an iso bmff\n   * such as mp4.\n   *\n   * @param {TypedArray} bytes\n   *        bytes for the iso bmff to search for boxes in\n   *\n   * @param {Uint8Array[]|string[]|string|Uint8Array} name\n   *        An array of paths or a single path representing the name\n   *        of boxes to search through in bytes. Paths may be\n   *        uint8 (character codes) or strings.\n   *\n   * @param {boolean} [complete=false]\n   *        Should we search only for complete boxes on the final path.\n   *        This is very useful when you do not want to get back partial boxes\n   *        in the case of streaming files.\n   *\n   * @return {Uint8Array[]}\n   *         An array of the end paths that we found.\n   */\n\n  var findBox = function findBox(bytes, paths, complete) {\n    if (complete === void 0) {\n      complete = false;\n    }\n\n    paths = normalizePaths$1(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      // short-circuit the search for empty paths\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n      var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n      if (size === 0) {\n        break;\n      }\n\n      var end = i + size;\n\n      if (end > bytes.length) {\n        // this box is bigger than the number of bytes we have\n        // and complete is set, we cannot find any more boxes.\n        if (complete) {\n          break;\n        }\n\n        end = bytes.length;\n      }\n\n      var data = bytes.subarray(i + 8, end);\n\n      if (bytesMatch(type, paths[0])) {\n        if (paths.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next box along the path\n          results.push.apply(results, findBox(data, paths.slice(1), complete));\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of bytes\n\n\n    return results;\n  };\n\n  // https://matroska-org.github.io/libebml/specs.html\n  // https://www.matroska.org/technical/elements.html\n  // https://www.webmproject.org/docs/container/\n\n  var EBML_TAGS = {\n    EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n    DocType: toUint8([0x42, 0x82]),\n    Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n    SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n    Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n    Track: toUint8([0xAE]),\n    TrackNumber: toUint8([0xd7]),\n    DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n    TrackEntry: toUint8([0xAE]),\n    TrackType: toUint8([0x83]),\n    FlagDefault: toUint8([0x88]),\n    CodecID: toUint8([0x86]),\n    CodecPrivate: toUint8([0x63, 0xA2]),\n    VideoTrack: toUint8([0xe0]),\n    AudioTrack: toUint8([0xe1]),\n    // Not used yet, but will be used for live webm/mkv\n    // see https://www.matroska.org/technical/basics.html#block-structure\n    // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n    Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n    Timestamp: toUint8([0xE7]),\n    TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n    BlockGroup: toUint8([0xA0]),\n    BlockDuration: toUint8([0x9B]),\n    Block: toUint8([0xA1]),\n    SimpleBlock: toUint8([0xA3])\n  };\n  /**\n   * This is a simple table to determine the length\n   * of things in ebml. The length is one based (starts at 1,\n   * rather than zero) and for every zero bit before a one bit\n   * we add one to length. We also need this table because in some\n   * case we have to xor all the length bits from another value.\n   */\n\n  var LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\n  var getLength = function getLength(_byte) {\n    var len = 1;\n\n    for (var i = 0; i < LENGTH_TABLE.length; i++) {\n      if (_byte & LENGTH_TABLE[i]) {\n        break;\n      }\n\n      len++;\n    }\n\n    return len;\n  }; // length in ebml is stored in the first 4 to 8 bits\n  // of the first byte. 4 for the id length and 8 for the\n  // data size length. Length is measured by converting the number to binary\n  // then 1 + the number of zeros before a 1 is encountered starting\n  // from the left.\n\n\n  var getvint = function getvint(bytes, offset, removeLength, signed) {\n    if (removeLength === void 0) {\n      removeLength = true;\n    }\n\n    if (signed === void 0) {\n      signed = false;\n    }\n\n    var length = getLength(bytes[offset]);\n    var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n    // as they will be modified below to remove the dataSizeLen bits and we do not\n    // want to modify the original data. normally we could just call slice on\n    // uint8array but ie 11 does not support that...\n\n    if (removeLength) {\n      valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n      valueBytes[0] ^= LENGTH_TABLE[length - 1];\n    }\n\n    return {\n      length: length,\n      value: bytesToNumber(valueBytes, {\n        signed: signed\n      }),\n      bytes: valueBytes\n    };\n  };\n\n  var normalizePath = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return path.match(/.{1,2}/g).map(function (p) {\n        return normalizePath(p);\n      });\n    }\n\n    if (typeof path === 'number') {\n      return numberToBytes(path);\n    }\n\n    return path;\n  };\n\n  var normalizePaths = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath(p);\n    });\n  };\n\n  var getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n    if (offset >= bytes.length) {\n      return bytes.length;\n    }\n\n    var innerid = getvint(bytes, offset, false);\n\n    if (bytesMatch(id.bytes, innerid.bytes)) {\n      return offset;\n    }\n\n    var dataHeader = getvint(bytes, offset + innerid.length);\n    return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n  };\n  /**\n   * Notes on the EBLM format.\n   *\n   * EBLM uses \"vints\" tags. Every vint tag contains\n   * two parts\n   *\n   * 1. The length from the first byte. You get this by\n   *    converting the byte to binary and counting the zeros\n   *    before a 1. Then you add 1 to that. Examples\n   *    00011111 = length 4 because there are 3 zeros before a 1.\n   *    00100000 = length 3 because there are 2 zeros before a 1.\n   *    00000011 = length 7 because there are 6 zeros before a 1.\n   *\n   * 2. The bits used for length are removed from the first byte\n   *    Then all the bytes are merged into a value. NOTE: this\n   *    is not the case for id ebml tags as there id includes\n   *    length bits.\n   *\n   */\n\n\n  var findEbml = function findEbml(bytes, paths) {\n    paths = normalizePaths(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var id = getvint(bytes, i, false);\n      var dataHeader = getvint(bytes, i + id.length);\n      var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n      if (dataHeader.value === 0x7f) {\n        dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n        if (dataHeader.value !== bytes.length) {\n          dataHeader.value -= dataStart;\n        }\n      }\n\n      var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n      var data = bytes.subarray(dataStart, dataEnd);\n\n      if (bytesMatch(paths[0], id.bytes)) {\n        if (paths.length === 1) {\n          // this is the end of the paths and we've found the tag we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next tag inside of the data\n          // of this one\n          results = results.concat(findEbml(data, paths.slice(1)));\n        }\n      }\n\n      var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n      i += totalLength;\n    }\n\n    return results;\n  }; // see https://www.matroska.org/technical/basics.html#block-structure\n\n  var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\n  var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\n  var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   *\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n    var positions = [];\n    var i = 1; // Find all `Emulation Prevention Bytes`\n\n    while (i < bytes.length - 2) {\n      if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n        positions.push(i + 2);\n        i++;\n      }\n\n      i++;\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (positions.length === 0) {\n      return bytes;\n    } // Create a new array to hold the NAL unit data\n\n\n    var newLength = bytes.length - positions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === positions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        positions.shift();\n      }\n\n      newData[i] = bytes[sourceIndex];\n    }\n\n    return newData;\n  };\n  var findNal = function findNal(bytes, dataType, types, nalLimit) {\n    if (nalLimit === void 0) {\n      nalLimit = Infinity;\n    }\n\n    bytes = toUint8(bytes);\n    types = [].concat(types);\n    var i = 0;\n    var nalStart;\n    var nalsFound = 0; // keep searching until:\n    // we reach the end of bytes\n    // we reach the maximum number of nals they want to seach\n    // NOTE: that we disregard nalLimit when we have found the start\n    // of the nal we want so that we can find the end of the nal we want.\n\n    while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n      var nalOffset = void 0;\n\n      if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n        nalOffset = 4;\n      } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n        nalOffset = 3;\n      } // we are unsynced,\n      // find the next nal unit\n\n\n      if (!nalOffset) {\n        i++;\n        continue;\n      }\n\n      nalsFound++;\n\n      if (nalStart) {\n        return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n      }\n\n      var nalType = void 0;\n\n      if (dataType === 'h264') {\n        nalType = bytes[i + nalOffset] & 0x1f;\n      } else if (dataType === 'h265') {\n        nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n      }\n\n      if (types.indexOf(nalType) !== -1) {\n        nalStart = i + nalOffset;\n      } // nal header is 1 length for h264, and 2 for h265\n\n\n      i += nalOffset + (dataType === 'h264' ? 1 : 2);\n    }\n\n    return bytes.subarray(0, 0);\n  };\n  var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h264', type, nalLimit);\n  };\n  var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h265', type, nalLimit);\n  };\n\n  var CONSTANTS = {\n    // \"webm\" string literal in hex\n    'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n    // \"matroska\" string literal in hex\n    'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n    // \"fLaC\" string literal in hex\n    'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n    // \"OggS\" string literal in hex\n    'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n    // ac-3 sync byte, also works for ec-3 as that is simply a codec\n    // of ac-3\n    'ac3': toUint8([0x0b, 0x77]),\n    // \"RIFF\" string literal in hex used for wav and avi\n    'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n    // \"AVI\" string literal in hex\n    'avi': toUint8([0x41, 0x56, 0x49]),\n    // \"WAVE\" string literal in hex\n    'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n    // \"ftyp3g\" string literal in hex\n    '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n    // \"ftyp\" string literal in hex\n    'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n    // \"styp\" string literal in hex\n    'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n    // \"ftypqt\" string literal in hex\n    'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n    // moov string literal in hex\n    'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n    // moof string literal in hex\n    'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n  };\n  var _isLikely = {\n    aac: function aac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x10], {\n        offset: offset,\n        mask: [0xFF, 0x16]\n      });\n    },\n    mp3: function mp3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x02], {\n        offset: offset,\n        mask: [0xFF, 0x06]\n      });\n    },\n    webm: function webm(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n      return bytesMatch(docType, CONSTANTS.webm);\n    },\n    mkv: function mkv(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n      return bytesMatch(docType, CONSTANTS.matroska);\n    },\n    mp4: function mp4(bytes) {\n      // if this file is another base media file format, it is not mp4\n      if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n        return false;\n      } // if this file starts with a ftyp or styp box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.mp4, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n        offset: 4\n      })) {\n        return true;\n      } // if this file starts with a moof/moov box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.moof, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.moov, {\n        offset: 4\n      })) {\n        return true;\n      }\n    },\n    mov: function mov(bytes) {\n      return bytesMatch(bytes, CONSTANTS.mov, {\n        offset: 4\n      });\n    },\n    '3gp': function gp(bytes) {\n      return bytesMatch(bytes, CONSTANTS['3gp'], {\n        offset: 4\n      });\n    },\n    ac3: function ac3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.ac3, {\n        offset: offset\n      });\n    },\n    ts: function ts(bytes) {\n      if (bytes.length < 189 && bytes.length >= 1) {\n        return bytes[0] === 0x47;\n      }\n\n      var i = 0; // check the first 376 bytes for two matching sync bytes\n\n      while (i + 188 < bytes.length && i < 188) {\n        if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    flac: function flac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.flac, {\n        offset: offset\n      });\n    },\n    ogg: function ogg(bytes) {\n      return bytesMatch(bytes, CONSTANTS.ogg);\n    },\n    avi: function avi(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n        offset: 8\n      });\n    },\n    wav: function wav(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n        offset: 8\n      });\n    },\n    'h264': function h264(bytes) {\n      // find seq_parameter_set_rbsp\n      return findH264Nal(bytes, 7, 3).length;\n    },\n    'h265': function h265(bytes) {\n      // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n      return findH265Nal(bytes, [32, 33], 3).length;\n    }\n  }; // get all the isLikely functions\n  // but make sure 'ts' is above h264 and h265\n  // but below everything else as it is the least specific\n\n  var isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n  .filter(function (t) {\n    return t !== 'ts' && t !== 'h264' && t !== 'h265';\n  }) // add it back to the bottom\n  .concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\n  isLikelyTypes.forEach(function (type) {\n    var isLikelyFn = _isLikely[type];\n\n    _isLikely[type] = function (bytes) {\n      return isLikelyFn(toUint8(bytes));\n    };\n  }); // export after wrapping\n\n  var isLikely = _isLikely; // A useful list of file signatures can be found here\n  // https://en.wikipedia.org/wiki/List_of_file_signatures\n\n  var detectContainerForBytes = function detectContainerForBytes(bytes) {\n    bytes = toUint8(bytes);\n\n    for (var i = 0; i < isLikelyTypes.length; i++) {\n      var type = isLikelyTypes[i];\n\n      if (isLikely[type](bytes)) {\n        return type;\n      }\n    }\n\n    return '';\n  }; // fmp4 is not a container\n\n  var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n    return findBox(bytes, ['moof']).length > 0;\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  var ONE_SECOND_IN_TS = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  var clock_1 = clock.ONE_SECOND_IN_TS;\n\n  /*! @name @videojs/http-streaming @version 2.12.0 @license Apache-2.0 */\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n\n  var resolveUrl = resolveUrl$2;\n  /**\n   * Checks whether xhr request was redirected and returns correct url depending\n   * on `handleManifestRedirects` option\n   *\n   * @api private\n   *\n   * @param  {string} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {string}\n   */\n\n  var resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n\n    return url;\n  };\n\n  var logger = function logger(source) {\n    if (videojs.log.debug) {\n      return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n    }\n\n    return function () {};\n  };\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n\n\n  var TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  var SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\n  var filterRanges = function filterRanges(timeRanges, predicate) {\n    var results = [];\n    var i;\n\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n\n    return videojs.createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object\n   */\n\n\n  var findRange = function findRange(buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   *\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object.\n   */\n\n\n  var findNextRange = function findNextRange(timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n\n  var findGaps = function findGaps(buffered) {\n    if (buffered.length < 2) {\n      return videojs.createTimeRanges();\n    }\n\n    var ranges = [];\n\n    for (var i = 1; i < buffered.length; i++) {\n      var start = buffered.end(i - 1);\n      var end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Calculate the intersection of two TimeRanges\n   *\n   * @param {TimeRanges} bufferA\n   * @param {TimeRanges} bufferB\n   * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n   */\n\n\n  var bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n    var start = null;\n    var end = null;\n    var arity = 0;\n    var extents = [];\n    var ranges = [];\n\n    if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n      return videojs.createTimeRange();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n\n    var count = bufferA.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: bufferA.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferA.end(count),\n        type: 'end'\n      });\n    }\n\n    count = bufferB.length;\n\n    while (count--) {\n      extents.push({\n        time: bufferB.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferB.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @return {string} a human readable string\n   */\n\n\n  var printableRange = function printableRange(range) {\n    var strArr = [];\n\n    if (!range || !range.length) {\n      return '';\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n\n  var timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n    if (playbackRate === void 0) {\n      playbackRate = 1;\n    }\n\n    var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   *\n   * @param {TimeRanges} timeRanges\n   * @return {Array}\n   */\n\n\n  var timeRangesToArray = function timeRangesToArray(timeRanges) {\n    var timeRangesList = [];\n\n    for (var i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n\n    return timeRangesList;\n  };\n  /**\n   * Determines if two time range objects are different.\n   *\n   * @param {TimeRange} a\n   *        the first time range object to check\n   *\n   * @param {TimeRange} b\n   *        the second time range object to check\n   *\n   * @return {Boolean}\n   *         Whether the time range objects differ\n   */\n\n\n  var isRangeDifferent = function isRangeDifferent(a, b) {\n    // same object\n    if (a === b) {\n      return false;\n    } // one or the other is undefined\n\n\n    if (!a && b || !b && a) {\n      return true;\n    } // length is different\n\n\n    if (a.length !== b.length) {\n      return true;\n    } // see if any start/end pair is different\n\n\n    for (var i = 0; i < a.length; i++) {\n      if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n        return true;\n      }\n    } // if the length and every pair is the same\n    // this is the same time range\n\n\n    return false;\n  };\n\n  var lastBufferedEnd = function lastBufferedEnd(a) {\n    if (!a || !a.length || !a.end) {\n      return;\n    }\n\n    return a.end(a.length - 1);\n  };\n  /**\n   * A utility function to add up the amount of time in a timeRange\n   * after a specified startTime.\n   * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n   *     would return 40 as there are 40s seconds after 0 in the timeRange\n   *\n   * @param {TimeRange} range\n   *        The range to check against\n   * @param {number} startTime\n   *        The time in the time range that you should start counting from\n   *\n   * @return {number}\n   *          The number of seconds in the buffer passed the specified time.\n   */\n\n\n  var timeAheadOf = function timeAheadOf(range, startTime) {\n    var time = 0;\n\n    if (!range || !range.length) {\n      return time;\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      var start = range.start(i);\n      var end = range.end(i); // startTime is after this range entirely\n\n      if (startTime > end) {\n        continue;\n      } // startTime is within this range\n\n\n      if (startTime > start && startTime <= end) {\n        time += end - startTime;\n        continue;\n      } // startTime is before this range.\n\n\n      time += end - start;\n    }\n\n    return time;\n  };\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n\n\n  var createTimeRange = videojs.createTimeRange;\n  /**\n   * Get the duration of a segment, with special cases for\n   * llhls segments that do not have a duration yet.\n   *\n   * @param {Object} playlist\n   *        the playlist that the segment belongs to.\n   * @param {Object} segment\n   *        the segment to get a duration for.\n   *\n   * @return {number}\n   *          the segment duration\n   */\n\n  var segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n    // if this isn't a preload segment\n    // then we will have a segment duration that is accurate.\n    if (!segment.preload) {\n      return segment.duration;\n    } // otherwise we have to add up parts and preload hints\n    // to get an up to date duration.\n\n\n    var result = 0;\n    (segment.parts || []).forEach(function (p) {\n      result += p.duration;\n    }); // for preload hints we have to use partTargetDuration\n    // as they won't even have a duration yet.\n\n    (segment.preloadHints || []).forEach(function (p) {\n      if (p.type === 'PART') {\n        result += playlist.partTargetDuration;\n      }\n    });\n    return result;\n  };\n  /**\n   * A function to get a combined list of parts and segments with durations\n   * and indexes.\n   *\n   * @param {Playlist} playlist the playlist to get the list for.\n   *\n   * @return {Array} The part/segment list.\n   */\n\n\n  var getPartsAndSegments = function getPartsAndSegments(playlist) {\n    return (playlist.segments || []).reduce(function (acc, segment, si) {\n      if (segment.parts) {\n        segment.parts.forEach(function (part, pi) {\n          acc.push({\n            duration: part.duration,\n            segmentIndex: si,\n            partIndex: pi,\n            part: part,\n            segment: segment\n          });\n        });\n      } else {\n        acc.push({\n          duration: segment.duration,\n          segmentIndex: si,\n          partIndex: null,\n          segment: segment,\n          part: null\n        });\n      }\n\n      return acc;\n    }, []);\n  };\n\n  var getLastParts = function getLastParts(media) {\n    var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n    return lastSegment && lastSegment.parts || [];\n  };\n\n  var getKnownPartCount = function getKnownPartCount(_ref) {\n    var preloadSegment = _ref.preloadSegment;\n\n    if (!preloadSegment) {\n      return;\n    }\n\n    var parts = preloadSegment.parts,\n        preloadHints = preloadSegment.preloadHints;\n    var partCount = (preloadHints || []).reduce(function (count, hint) {\n      return count + (hint.type === 'PART' ? 1 : 0);\n    }, 0);\n    partCount += parts && parts.length ? parts.length : 0;\n    return partCount;\n  };\n  /**\n   * Get the number of seconds to delay from the end of a\n   * live playlist.\n   *\n   * @param {Playlist} master the master playlist\n   * @param {Playlist} media the media playlist\n   * @return {number} the hold back in seconds.\n   */\n\n\n  var liveEdgeDelay = function liveEdgeDelay(master, media) {\n    if (media.endList) {\n      return 0;\n    } // dash suggestedPresentationDelay trumps everything\n\n\n    if (master && master.suggestedPresentationDelay) {\n      return master.suggestedPresentationDelay;\n    }\n\n    var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n    if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n      return media.serverControl.partHoldBack;\n    } else if (hasParts && media.partTargetDuration) {\n      return media.partTargetDuration * 3; // finally look for full segment delays\n    } else if (media.serverControl && media.serverControl.holdBack) {\n      return media.serverControl.holdBack;\n    } else if (media.targetDuration) {\n      return media.targetDuration * 3;\n    }\n\n    return 0;\n  };\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var backwardDuration = function backwardDuration(playlist, endSequence) {\n    var result = 0;\n    var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n\n    while (i--) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n\n    return {\n      result: result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var forwardDuration = function forwardDuration(playlist, endSequence) {\n    var result = 0;\n    var segment;\n    var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {number} the duration between the first available segment\n    * and end index.\n    */\n\n\n  var intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n\n    var backward = backwardDuration(playlist, endSequence);\n\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n\n    var forward = forwardDuration(playlist, endSequence);\n\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {number} the duration between the start index and end\n    * index.\n    */\n\n\n  var duration = function duration(playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n\n      if (!playlist.endList) {\n        return window.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Array} options.durationList list to iterate over for durations.\n    * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n    * @param {number} options.startIndex partsAndSegments index to start\n    * @param {number} options.endIndex partsAndSegments index to end.\n    * @return {number} the number of seconds between startIndex and endIndex\n    */\n\n\n  var sumDurations = function sumDurations(_ref2) {\n    var defaultDuration = _ref2.defaultDuration,\n        durationList = _ref2.durationList,\n        startIndex = _ref2.startIndex,\n        endIndex = _ref2.endIndex;\n    var durations = 0;\n\n    if (startIndex > endIndex) {\n      var _ref3 = [endIndex, startIndex];\n      startIndex = _ref3[0];\n      endIndex = _ref3[1];\n    }\n\n    if (startIndex < 0) {\n      for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += defaultDuration;\n      }\n\n      startIndex = 0;\n    }\n\n    for (var _i = startIndex; _i < endIndex; _i++) {\n      durations += durationList[_i].duration;\n    }\n\n    return durations;\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   *                        This takes into account the value of liveEdgePadding.\n   *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n   * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n   *                 If this is provided, it is used in the safe live end calculation.\n   *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n   *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n   * @return {number} the end time of playlist\n   * @function playlistEnd\n   */\n\n\n  var playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n\n    if (expired === null) {\n      return null;\n    }\n\n    expired = expired || 0;\n    var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n    if (useSafeLiveEnd) {\n      liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n      lastSegmentEndTime -= liveEdgePadding;\n    } // don't return a time less than zero\n\n\n    return Math.max(0, lastSegmentEndTime);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n    *        Corresponds to suggestedPresentationDelay in DASH manifests.\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n\n  var seekable = function seekable(playlist, expired, liveEdgePadding) {\n    var useSafeLiveEnd = true;\n    var seekableStart = expired || 0;\n    var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n    if (seekableEnd === null) {\n      return createTimeRange();\n    }\n\n    return createTimeRange(seekableStart, seekableEnd);\n  };\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} options.playlist the media playlist to query\n   * @param {number} options.currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {number} options.startTime the time when the segment/part starts\n   * @param {number} options.startingSegmentIndex the segment index to start looking at.\n   * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n   *\n   * @return {Object} an object with partIndex, segmentIndex, and startTime.\n   */\n\n\n  var getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n    var playlist = _ref4.playlist,\n        currentTime = _ref4.currentTime,\n        startingSegmentIndex = _ref4.startingSegmentIndex,\n        startingPartIndex = _ref4.startingPartIndex,\n        startTime = _ref4.startTime,\n        experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n    var time = currentTime - startTime;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    var startIndex = 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      var partAndSegment = partsAndSegments[i];\n\n      if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n        continue;\n      } // skip this if part index does not match.\n\n\n      if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n        continue;\n      }\n\n      startIndex = i;\n      break;\n    }\n\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n          var _partAndSegment = partsAndSegments[_i2];\n          time += _partAndSegment.duration;\n\n          if (experimentalExactManifestTimings) {\n            if (time < 0) {\n              continue;\n            }\n          } else if (time + TIME_FUDGE_FACTOR <= 0) {\n            continue;\n          }\n\n          return {\n            partIndex: _partAndSegment.partIndex,\n            segmentIndex: _partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex: startIndex,\n              endIndex: _i2\n            })\n          };\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n\n      return {\n        partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n        segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n\n    if (startIndex < 0) {\n      for (var _i3 = startIndex; _i3 < 0; _i3++) {\n        time -= playlist.targetDuration;\n\n        if (time < 0) {\n          return {\n            partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n            segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n            startTime: currentTime\n          };\n        }\n      }\n\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n\n    for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n      var _partAndSegment2 = partsAndSegments[_i4];\n      time -= _partAndSegment2.duration;\n\n      if (experimentalExactManifestTimings) {\n        if (time > 0) {\n          continue;\n        }\n      } else if (time - TIME_FUDGE_FACTOR >= 0) {\n        continue;\n      }\n\n      return {\n        partIndex: _partAndSegment2.partIndex,\n        segmentIndex: _partAndSegment2.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex: startIndex,\n          endIndex: _i4\n        })\n      };\n    } // We are out of possible candidates so load the last one...\n\n\n    return {\n      segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n      partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is blacklisted or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is blacklisted or not\n   * @function isBlacklisted\n   */\n\n\n  var isBlacklisted = function isBlacklisted(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been blacklisted permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n\n  var isIncompatible = function isIncompatible(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n\n  var isEnabled = function isEnabled(playlist) {\n    var blacklisted = isBlacklisted(playlist);\n    return !playlist.disabled && !blacklisted;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n\n  var isDisabled = function isDisabled(playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {boolean} true if it's an AES encrypted HLS stream\n   */\n\n\n  var isAes = function isAes(media) {\n    for (var i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {string} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n\n  var hasAttribute = function hasAttribute(attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {number} segmentDuration\n   *        Duration of requested segment\n   * @param {number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n\n  var estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n    if (bytesReceived === void 0) {\n      bytesReceived = 0;\n    }\n\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n\n    var size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n\n  var isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n    if (master.playlists.length === 1) {\n      return true;\n    }\n\n    var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return master.playlists.filter(function (playlist) {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  };\n\n  var playlistMatch = function playlistMatch(a, b) {\n    // both playlits are null\n    // or only one playlist is non-null\n    // no match\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // playlist objects are the same, match\n\n\n    if (a === b) {\n      return true;\n    } // first try to use id as it should be the most\n    // accurate\n\n\n    if (a.id && b.id && a.id === b.id) {\n      return true;\n    } // next try to use reslovedUri as it should be the\n    // second most accurate.\n\n\n    if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n      return true;\n    } // finally try to use uri as it should be accurate\n    // but might miss a few cases for relative uris\n\n\n    if (a.uri && b.uri && a.uri === b.uri) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var someAudioVariant = function someAudioVariant(master, callback) {\n    var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n    var found = false;\n\n    for (var groupName in AUDIO) {\n      for (var label in AUDIO[groupName]) {\n        found = callback(AUDIO[groupName][label]);\n\n        if (found) {\n          break;\n        }\n      }\n\n      if (found) {\n        break;\n      }\n    }\n\n    return !!found;\n  };\n\n  var isAudioOnly = function isAudioOnly(master) {\n    // we are audio only if we have no main playlists but do\n    // have media group playlists.\n    if (!master || !master.playlists || !master.playlists.length) {\n      // without audio variants or playlists this\n      // is not an audio only master.\n      var found = someAudioVariant(master, function (variant) {\n        return variant.playlists && variant.playlists.length || variant.uri;\n      });\n      return found;\n    } // if every playlist has only an audio codec it is audio only\n\n\n    var _loop = function _loop(i) {\n      var playlist = master.playlists[i];\n      var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n      if (CODECS && CODECS.split(',').every(function (c) {\n        return isAudioCodec(c);\n      })) {\n        return \"continue\";\n      } // playlist is in an audio group it is audio only\n\n\n      var found = someAudioVariant(master, function (variant) {\n        return playlistMatch(playlist, variant);\n      });\n\n      if (found) {\n        return \"continue\";\n      } // if we make it here this playlist isn't audio and we\n      // are not audio only\n\n\n      return {\n        v: false\n      };\n    };\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    } // if we make it past every playlist without returning, then\n    // this is an audio only playlist.\n\n\n    return true;\n  }; // exports\n\n\n  var Playlist = {\n    liveEdgeDelay: liveEdgeDelay,\n    duration: duration,\n    seekable: seekable,\n    getMediaInfoForTime: getMediaInfoForTime,\n    isEnabled: isEnabled,\n    isDisabled: isDisabled,\n    isBlacklisted: isBlacklisted,\n    isIncompatible: isIncompatible,\n    playlistEnd: playlistEnd,\n    isAes: isAes,\n    hasAttribute: hasAttribute,\n    estimateSegmentRequestTime: estimateSegmentRequestTime,\n    isLowestEnabledRendition: isLowestEnabledRendition,\n    isAudioOnly: isAudioOnly,\n    playlistMatch: playlistMatch,\n    segmentDurationWithParts: segmentDurationWithParts\n  };\n  var log = videojs.log;\n\n  var createPlaylistID = function createPlaylistID(index, uri) {\n    return index + \"-\" + uri;\n  };\n  /**\n   * Parses a given m3u8 playlist\n   *\n   * @param {Function} [onwarn]\n   *        a function to call when the parser triggers a warning event.\n   * @param {Function} [oninfo]\n   *        a function to call when the parser triggers an info event.\n   * @param {string} manifestString\n   *        The downloaded manifest string\n   * @param {Object[]} [customTagParsers]\n   *        An array of custom tag parsers for the m3u8-parser instance\n   * @param {Object[]} [customTagMappers]\n   *        An array of custom tag mappers for the m3u8-parser instance\n   * @param {boolean} [experimentalLLHLS=false]\n   *        Whether to keep ll-hls features in the manifest after parsing.\n   * @return {Object}\n   *         The manifest object\n   */\n\n\n  var parseManifest = function parseManifest(_ref) {\n    var onwarn = _ref.onwarn,\n        oninfo = _ref.oninfo,\n        manifestString = _ref.manifestString,\n        _ref$customTagParsers = _ref.customTagParsers,\n        customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n        _ref$customTagMappers = _ref.customTagMappers,\n        customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n        experimentalLLHLS = _ref.experimentalLLHLS;\n    var parser = new Parser();\n\n    if (onwarn) {\n      parser.on('warn', onwarn);\n    }\n\n    if (oninfo) {\n      parser.on('info', oninfo);\n    }\n\n    customTagParsers.forEach(function (customParser) {\n      return parser.addParser(customParser);\n    });\n    customTagMappers.forEach(function (mapper) {\n      return parser.addTagMapper(mapper);\n    });\n    parser.push(manifestString);\n    parser.end();\n    var manifest = parser.manifest; // remove llhls features from the parsed manifest\n    // if we don't want llhls support.\n\n    if (!experimentalLLHLS) {\n      ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n        if (manifest.hasOwnProperty(k)) {\n          delete manifest[k];\n        }\n      });\n\n      if (manifest.segments) {\n        manifest.segments.forEach(function (segment) {\n          ['parts', 'preloadHints'].forEach(function (k) {\n            if (segment.hasOwnProperty(k)) {\n              delete segment[k];\n            }\n          });\n        });\n      }\n    }\n\n    if (!manifest.targetDuration) {\n      var targetDuration = 10;\n\n      if (manifest.segments && manifest.segments.length) {\n        targetDuration = manifest.segments.reduce(function (acc, s) {\n          return Math.max(acc, s.duration);\n        }, 0);\n      }\n\n      if (onwarn) {\n        onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n      }\n\n      manifest.targetDuration = targetDuration;\n    }\n\n    var parts = getLastParts(manifest);\n\n    if (parts.length && !manifest.partTargetDuration) {\n      var partTargetDuration = parts.reduce(function (acc, p) {\n        return Math.max(acc, p.duration);\n      }, 0);\n\n      if (onwarn) {\n        onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n        log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n      }\n\n      manifest.partTargetDuration = partTargetDuration;\n    }\n\n    return manifest;\n  };\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n\n  var forEachMediaGroup = function forEachMediaGroup(master, callback) {\n    if (!master.mediaGroups) {\n      return;\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n      if (!master.mediaGroups[mediaType]) {\n        return;\n      }\n\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n   * Adds properties and attributes to the playlist to keep consistent functionality for\n   * playlists throughout VHS.\n   *\n   * @param {Object} config\n   *        Arguments object\n   * @param {Object} config.playlist\n   *        The media playlist\n   * @param {string} [config.uri]\n   *        The uri to the media playlist (if media playlist is not from within a master\n   *        playlist)\n   * @param {string} id\n   *        ID to use for the playlist\n   */\n\n\n  var setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n    var playlist = _ref2.playlist,\n        uri = _ref2.uri,\n        id = _ref2.id;\n    playlist.id = id;\n    playlist.playlistErrors_ = 0;\n\n    if (uri) {\n      // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n      // playlists do not contain their own source URI, but one is needed for consistency in\n      // VHS.\n      playlist.uri = uri;\n    } // For HLS master playlists, even though certain attributes MUST be defined, the\n    // stream may still be played without them.\n    // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n    // manifest.\n    //\n    // To avoid undefined reference errors through the project, and make the code easier\n    // to write/read, add an empty attributes object for these cases.\n\n\n    playlist.attributes = playlist.attributes || {};\n  };\n  /**\n   * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n   * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n   * playlist references to the playlists array.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var setupMediaPlaylists = function setupMediaPlaylists(master) {\n    var i = master.playlists.length;\n\n    while (i--) {\n      var playlist = master.playlists[i];\n      setupMediaPlaylist({\n        playlist: playlist,\n        id: createPlaylistID(i, playlist.uri)\n      });\n      playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n      master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n      master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n      // the stream can be played without it. Although an attributes property may have been\n      // added to the playlist to prevent undefined references, issue a warning to fix the\n      // manifest.\n\n      if (!playlist.attributes.BANDWIDTH) {\n        log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n  /**\n   * Adds resolvedUri properties to each media group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n    forEachMediaGroup(master, function (properties) {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Creates a master playlist wrapper to insert a sole media playlist into.\n   *\n   * @param {Object} media\n   *        Media playlist\n   * @param {string} uri\n   *        The media URI\n   *\n   * @return {Object}\n   *         Master playlist\n   */\n\n\n  var masterForMedia = function masterForMedia(media, uri) {\n    var id = createPlaylistID(0, uri);\n    var master = {\n      mediaGroups: {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      },\n      uri: window.location.href,\n      resolvedUri: window.location.href,\n      playlists: [{\n        uri: uri,\n        id: id,\n        resolvedUri: uri,\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        attributes: {}\n      }]\n    }; // set up ID reference\n\n    master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n    master.playlists[uri] = master.playlists[0];\n    return master;\n  };\n  /**\n   * Does an in-place update of the master manifest to add updated playlist URI references\n   * as well as other properties needed by VHS that aren't included by the parser.\n   *\n   * @param {Object} master\n   *        Master manifest object\n   * @param {string} uri\n   *        The source URI\n   */\n\n\n  var addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n    master.uri = uri;\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      if (!master.playlists[i].uri) {\n        // Set up phony URIs for the playlists since playlists are referenced by their URIs\n        // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n        // TODO: consider adding dummy URIs in mpd-parser\n        var phonyUri = \"placeholder-uri-\" + i;\n        master.playlists[i].uri = phonyUri;\n      }\n    }\n\n    var audioOnlyMaster = isAudioOnly(master);\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey; // add a playlist array under properties\n\n      if (!properties.playlists || !properties.playlists.length) {\n        // If the manifest is audio only and this media group does not have a uri, check\n        // if the media group is located in the main list of playlists. If it is, don't add\n        // placeholder properties as it shouldn't be considered an alternate audio track.\n        if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n          for (var _i = 0; _i < master.playlists.length; _i++) {\n            var p = master.playlists[_i];\n\n            if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n              return;\n            }\n          }\n        }\n\n        properties.playlists = [_extends_1({}, properties)];\n      }\n\n      properties.playlists.forEach(function (p, i) {\n        var id = createPlaylistID(i, groupId);\n\n        if (p.uri) {\n          p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n        } else {\n          // DEPRECATED, this has been added to prevent a breaking change.\n          // previously we only ever had a single media group playlist, so\n          // we mark the first playlist uri without prepending the index as we used to\n          // ideally we would do all of the playlists the same way.\n          p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n          // the placeholder again\n\n          p.resolvedUri = p.uri;\n        }\n\n        p.id = p.id || id; // add an empty attributes object, all playlists are\n        // expected to have this.\n\n        p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n        master.playlists[p.id] = p;\n        master.playlists[p.uri] = p;\n      });\n    });\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n  };\n\n  var mergeOptions$2 = videojs.mergeOptions,\n      EventTarget$1 = videojs.EventTarget;\n\n  var addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n    if (media.endList || !media.serverControl) {\n      return uri;\n    }\n\n    var parameters = {};\n\n    if (media.serverControl.canBlockReload) {\n      var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n      var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n      // that we are going to request a part of that preload segment.\n      // the logic below is used to determine that.\n\n      if (preloadSegment) {\n        var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n        var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n        // length of parts, then we know we had part preload hints\n        // and we need to add the _HLS_part= query\n\n        if (nextPart > -1 && nextPart !== parts.length - 1) {\n          // add existing parts to our preload hints\n          // eslint-disable-next-line\n          parameters._HLS_part = nextPart;\n        } // this if statement makes sure that we request the msn\n        // of the preload segment if:\n        // 1. the preload segment had parts (and was not yet a full segment)\n        //    but was added to our segments array\n        // 2. the preload segment had preload hints for parts that are not in\n        //    the manifest yet.\n        // in all other cases we want the segment after the preload segment\n        // which will be given by using media.segments.length because it is 1 based\n        // rather than 0 based.\n\n\n        if (nextPart > -1 || parts.length) {\n          nextMSN--;\n        }\n      } // add _HLS_msn= in front of any _HLS_part query\n      // eslint-disable-next-line\n\n\n      parameters._HLS_msn = nextMSN;\n    }\n\n    if (media.serverControl && media.serverControl.canSkipUntil) {\n      // add _HLS_skip= infront of all other queries.\n      // eslint-disable-next-line\n      parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n    }\n\n    if (Object.keys(parameters).length) {\n      var parsedUri = new window.URL(uri);\n      ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n        if (!parameters.hasOwnProperty(name)) {\n          return;\n        }\n\n        parsedUri.searchParams.set(name, parameters[name]);\n      });\n      uri = parsedUri.toString();\n    }\n\n    return uri;\n  };\n  /**\n   * Returns a new segment object with properties and\n   * the parts array merged.\n   *\n   * @param {Object} a the old segment\n   * @param {Object} b the new segment\n   *\n   * @return {Object} the merged segment\n   */\n\n\n  var updateSegment = function updateSegment(a, b) {\n    if (!a) {\n      return b;\n    }\n\n    var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n    // and the new one does not, remove preload hints.\n\n    if (a.preloadHints && !b.preloadHints) {\n      delete result.preloadHints;\n    } // if only the old segment has parts\n    // then the parts are no longer valid\n\n\n    if (a.parts && !b.parts) {\n      delete result.parts; // if both segments have parts\n      // copy part propeties from the old segment\n      // to the new one.\n    } else if (a.parts && b.parts) {\n      for (var i = 0; i < b.parts.length; i++) {\n        if (a.parts && a.parts[i]) {\n          result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n        }\n      }\n    } // set skipped to false for segments that have\n    // have had information merged from the old segment.\n\n\n    if (!a.skipped && b.skipped) {\n      result.skipped = false;\n    } // set preload to false for segments that have\n    // had information added in the new segment.\n\n\n    if (a.preload && !b.preload) {\n      result.preload = false;\n    }\n\n    return result;\n  };\n  /**\n   * Returns a new array of segments that is the result of merging\n   * properties from an older list of segments onto an updated\n   * list. No properties on the updated playlist will be ovewritten.\n   *\n   * @param {Array} original the outdated list of segments\n   * @param {Array} update the updated list of segments\n   * @param {number=} offset the index of the first update\n   * segment in the original segment list. For non-live playlists,\n   * this should always be zero and does not need to be\n   * specified. For live playlists, it should be the difference\n   * between the media sequence numbers in the original and updated\n   * playlists.\n   * @return {Array} a list of merged segment objects\n   */\n\n\n  var updateSegments = function updateSegments(original, update, offset) {\n    var oldSegments = original.slice();\n    var newSegments = update.slice();\n    offset = offset || 0;\n    var result = [];\n    var currentMap;\n\n    for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n      var oldSegment = oldSegments[newIndex + offset];\n      var newSegment = newSegments[newIndex];\n\n      if (oldSegment) {\n        currentMap = oldSegment.map || currentMap;\n        result.push(updateSegment(oldSegment, newSegment));\n      } else {\n        // carry over map to new segment if it is missing\n        if (currentMap && !newSegment.map) {\n          newSegment.map = currentMap;\n        }\n\n        result.push(newSegment);\n      }\n    }\n\n    return result;\n  };\n\n  var resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n    // preloadSegment will not have a uri at all\n    // as the segment isn't actually in the manifest yet, only parts\n    if (!segment.resolvedUri && segment.uri) {\n      segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n    }\n\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n    }\n\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n    }\n\n    if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n      segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n    }\n\n    if (segment.parts && segment.parts.length) {\n      segment.parts.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n\n    if (segment.preloadHints && segment.preloadHints.length) {\n      segment.preloadHints.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n  };\n\n  var getAllSegments = function getAllSegments(media) {\n    var segments = media.segments || [];\n    var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n    // a usable segment, only include a preloadSegment that has\n    // parts.\n\n    if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n      // if preloadHints has a MAP that means that the\n      // init segment is going to change. We cannot use any of the parts\n      // from this preload segment.\n      if (preloadSegment.preloadHints) {\n        for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n          if (preloadSegment.preloadHints[i].type === 'MAP') {\n            return segments;\n          }\n        }\n      } // set the duration for our preload segment to target duration.\n\n\n      preloadSegment.duration = media.targetDuration;\n      preloadSegment.preload = true;\n      segments.push(preloadSegment);\n    }\n\n    return segments;\n  }; // consider the playlist unchanged if the playlist object is the same or\n  // the number of segments is equal, the media sequence number is unchanged,\n  // and this playlist hasn't become the end of the playlist\n\n\n  var isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n    return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n  };\n  /**\n    * Returns a new master playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original master playlist, null is returned.\n    *\n    * @param {Object} master a parsed master M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * master playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n\n  var updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n    if (unchangedCheck === void 0) {\n      unchangedCheck = isPlaylistUnchanged;\n    }\n\n    var result = mergeOptions$2(master, {});\n    var oldMedia = result.playlists[newMedia.id];\n\n    if (!oldMedia) {\n      return null;\n    }\n\n    if (unchangedCheck(oldMedia, newMedia)) {\n      return null;\n    }\n\n    newMedia.segments = getAllSegments(newMedia);\n    var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n    if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n      delete mergedPlaylist.preloadSegment;\n    } // if the update could overlap existing segment information, merge the two segment lists\n\n\n    if (oldMedia.segments) {\n      if (newMedia.skip) {\n        newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n        // old properties into the new segments\n\n        for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n          newMedia.segments.unshift({\n            skipped: true\n          });\n        }\n      }\n\n      mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n\n    mergedPlaylist.segments.forEach(function (segment) {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (var _i = 0; _i < result.playlists.length; _i++) {\n      if (result.playlists[_i].id === newMedia.id) {\n        result.playlists[_i] = mergedPlaylist;\n      }\n    }\n\n    result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n    result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (!properties.playlists) {\n        return;\n      }\n\n      for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n        if (newMedia.id === properties.playlists[_i2].id) {\n          properties.playlists[_i2] = newMedia;\n        }\n      }\n    });\n    return result;\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n\n  var refreshDelay = function refreshDelay(media, update) {\n    var segments = media.segments || [];\n    var lastSegment = segments[segments.length - 1];\n    var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n    var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n    if (update && lastDuration) {\n      return lastDuration * 1000;\n    } // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n\n\n    return (media.partTargetDuration || media.targetDuration || 10) * 500;\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {string|Object} src url or object of manifest\n   * @param {boolean} withCredentials the withCredentials xhr option\n   * @class\n   */\n\n\n  var PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(PlaylistLoader, _EventTarget);\n\n    function PlaylistLoader(src, vhs, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or object is required');\n      }\n\n      _this.logger_ = logger('PlaylistLoader');\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.src = src;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n      var vhsOptions = vhs.options_;\n      _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n      _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n      _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n      if (videojs.browser.IE_VERSION) {\n        _this.experimentalLLHLS = false;\n      } // initialize the loader state\n\n\n      _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(assertThisInitialized(_this));\n\n      _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n      return _this;\n    }\n\n    var _proto = PlaylistLoader.prototype;\n\n    _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n      var _this2 = this;\n\n      if (this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      var media = this.media();\n      var uri = resolveUrl(this.master.uri, media.uri);\n\n      if (this.experimentalLLHLS) {\n        uri = addLLHLSQueryDirectives(uri, media);\n      }\n\n      this.state = 'HAVE_CURRENT_METADATA';\n      this.request = this.vhs_.xhr({\n        uri: uri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata({\n          playlistString: _this2.request.responseText,\n          url: _this2.media().uri,\n          id: _this2.media().id\n        });\n      });\n    };\n\n    _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: \"HLS playlist request error at URL: \" + uri + \".\",\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    };\n\n    _proto.parseManifest_ = function parseManifest_(_ref) {\n      var _this3 = this;\n\n      var url = _ref.url,\n          manifestString = _ref.manifestString;\n      return parseManifest({\n        onwarn: function onwarn(_ref2) {\n          var message = _ref2.message;\n          return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n        },\n        oninfo: function oninfo(_ref3) {\n          var message = _ref3.message;\n          return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n        },\n        manifestString: manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        experimentalLLHLS: this.experimentalLLHLS\n      });\n    }\n    /**\n     * Update the playlist loader's state in response to a new or updated playlist.\n     *\n     * @param {string} [playlistString]\n     *        Playlist string (if playlistObject is not provided)\n     * @param {Object} [playlistObject]\n     *        Playlist object (if playlistString is not provided)\n     * @param {string} url\n     *        URL of playlist\n     * @param {string} id\n     *        ID to use for playlist\n     */\n    ;\n\n    _proto.haveMetadata = function haveMetadata(_ref4) {\n      var playlistString = _ref4.playlistString,\n          playlistObject = _ref4.playlistObject,\n          url = _ref4.url,\n          id = _ref4.id; // any in-flight request is now finished\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var playlist = playlistObject || this.parseManifest_({\n        url: url,\n        manifestString: playlistString\n      });\n      playlist.lastRequest = Date.now();\n      setupMediaPlaylist({\n        playlist: playlist,\n        uri: url,\n        id: id\n      }); // merge this playlist into the master\n\n      var update = updateMaster$1(this.master, playlist);\n      this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n      this.pendingMedia_ = null;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n      this.trigger('loadedplaylist');\n    }\n    /**\n      * Abort any outstanding work and clean up.\n      */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      window.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n      * When called without any arguments, returns the currently\n      * active media playlist. When called with a single argument,\n      * triggers the playlist loader to asynchronously switch to the\n      * specified media playlist. Calling this method while the\n      * loader is in the HAVE_NOTHING causes an error to be emitted\n      * but otherwise has no effect.\n      *\n      * @param {Object=} playlist the parsed media playlist\n      * object to switch to\n      * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n      *\n      * @return {Playlist} the current loaded media\n      */\n    ;\n\n    _proto.media = function media(playlist, shouldDelay) {\n      var _this4 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window.clearTimeout(this.finalRenditionTimeout);\n\n      if (shouldDelay) {\n        var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n      var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n      if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n      // media playlist or, for the case of demuxed audio, a resolved audio media group)\n      playlist.endList && playlist.segments.length) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n\n          if (startingState === 'HAVE_MASTER') {\n            // The initial playlist was a master manifest, and the first media selected was\n            // also provided (in the form of a resolved playlist object) as part of the\n            // source object (rather than just a URL). Therefore, since the media playlist\n            // doesn't need to be requested, loadedmetadata won't trigger as part of the\n            // normal flow, and needs an explicit trigger here.\n            this.trigger('loadedmetadata');\n          } else {\n            this.trigger('mediachange');\n          }\n        }\n\n        return;\n      } // We update/set the timeout here so that live playlists\n      // that are not a media change will \"start\" the loader as expected.\n      // We expect that this function will start the media update timeout\n      // cycle again. This also prevents a playlist switch failure from\n      // causing us to stall during live.\n\n\n      this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.pendingMedia_ = playlist;\n      this.request = this.vhs_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        playlist.lastRequest = Date.now();\n        playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this4.playlistRequestError(_this4.request, playlist, startingState);\n        }\n\n        _this4.haveMetadata({\n          playlistString: req.responseText,\n          url: playlist.uri,\n          id: playlist.id\n        }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this4.trigger('loadedmetadata');\n        } else {\n          _this4.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      this.stopRequest();\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.load = function load(shouldDelay) {\n      var _this5 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      var media = this.media();\n\n      if (shouldDelay) {\n        var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          _this5.mediaUpdateTimeout = null;\n\n          _this5.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n      var _this6 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      } // we only have use mediaupdatetimeout for live playlists.\n\n\n      if (!this.media() || this.media().endList) {\n        return;\n      }\n\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        _this6.mediaUpdateTimeout = null;\n\n        _this6.trigger('mediaupdatetimeout');\n\n        _this6.updateMediaUpdateTimeout_(delay);\n      }, delay);\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.start = function start() {\n      var _this7 = this;\n\n      this.started = true;\n\n      if (typeof this.src === 'object') {\n        // in the case of an entirely constructed manifest object (meaning there's no actual\n        // manifest on a server), default the uri to the page's href\n        if (!this.src.uri) {\n          this.src.uri = window.location.href;\n        } // resolvedUri is added on internally after the initial request. Since there's no\n        // request for pre-resolved manifests, add on resolvedUri here.\n\n\n        this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n        // request can be skipped (since the top level of the manifest, at a minimum, is\n        // already available as a parsed manifest object). However, if the manifest object\n        // represents a master playlist, some media playlists may need to be resolved before\n        // the starting segment list is available. Therefore, go directly to setup of the\n        // initial playlist, and let the normal flow continue from there.\n        //\n        // Note that the call to setup is asynchronous, as other sections of VHS may assume\n        // that the first request is asynchronous.\n\n        setTimeout(function () {\n          _this7.setupInitialPlaylist(_this7.src);\n        }, 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.vhs_.xhr({\n        uri: this.src,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this7.request = null;\n\n        if (error) {\n          _this7.error = {\n            status: req.status,\n            message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this7.state === 'HAVE_NOTHING') {\n            _this7.started = false;\n          }\n\n          return _this7.trigger('error');\n        }\n\n        _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n        var manifest = _this7.parseManifest_({\n          manifestString: req.responseText,\n          url: _this7.src\n        });\n\n        _this7.setupInitialPlaylist(manifest);\n      });\n    };\n\n    _proto.srcUri = function srcUri() {\n      return typeof this.src === 'string' ? this.src : this.src.uri;\n    }\n    /**\n     * Given a manifest object that's either a master or media playlist, trigger the proper\n     * events and set the state of the playlist loader.\n     *\n     * If the manifest object represents a master playlist, `loadedplaylist` will be\n     * triggered to allow listeners to select a playlist. If none is selected, the loader\n     * will default to the first one in the playlists array.\n     *\n     * If the manifest object represents a media playlist, `loadedplaylist` will be\n     * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n     *\n     * In the case of a media playlist, a master playlist object wrapper with one playlist\n     * will be created so that all logic can handle playlists in the same fashion (as an\n     * assumed manifest object schema).\n     *\n     * @param {Object} manifest\n     *        The parsed manifest object\n     */\n    ;\n\n    _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n      this.state = 'HAVE_MASTER';\n\n      if (manifest.playlists) {\n        this.master = manifest;\n        addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n        // then resolve URIs in advance, as they are usually done after a playlist request,\n        // which may not happen if the playlist is resolved.\n\n        manifest.playlists.forEach(function (playlist) {\n          playlist.segments = getAllSegments(playlist);\n          playlist.segments.forEach(function (segment) {\n            resolveSegmentUris(segment, playlist.resolvedUri);\n          });\n        });\n        this.trigger('loadedplaylist');\n\n        if (!this.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          this.media(this.master.playlists[0]);\n        }\n\n        return;\n      } // In order to support media playlists passed in as vhs-json, the case where the uri\n      // is not provided as part of the manifest should be considered, and an appropriate\n      // default used.\n\n\n      var uri = this.srcUri() || window.location.href;\n      this.master = masterForMedia(manifest, uri);\n      this.haveMetadata({\n        playlistObject: manifest,\n        url: uri,\n        id: this.master.playlists[0].id\n      });\n      this.trigger('loadedmetadata');\n    };\n\n    return PlaylistLoader;\n  }(EventTarget$1);\n  /**\n   * @file xhr.js\n   */\n\n\n  var videojsXHR = videojs.xhr,\n      mergeOptions$1 = videojs.mergeOptions;\n\n  var callbackWrapper = function callbackWrapper(request, error, response, callback) {\n    var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n    if (!error && reqResponse) {\n      request.responseTime = Date.now();\n      request.roundTripTime = request.responseTime - request.requestTime;\n      request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n      if (!request.bandwidth) {\n        request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n      }\n    }\n\n    if (response.headers) {\n      request.responseHeaders = response.headers;\n    } // videojs.xhr now uses a specific code on the error\n    // object to signal that a request has timed out instead\n    // of setting a boolean on the request object\n\n\n    if (error && error.code === 'ETIMEDOUT') {\n      request.timedout = true;\n    } // videojs.xhr no longer considers status codes outside of 200 and 0\n    // (for file uris) to be errors, but the old XHR did, so emulate that\n    // behavior. Status 206 may be used in response to byterange requests.\n\n\n    if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n      error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n    }\n\n    callback(error, request);\n  };\n\n  var xhrFactory = function xhrFactory() {\n    var xhr = function XhrFunction(options, callback) {\n      // Add a default timeout\n      options = mergeOptions$1({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n\n      var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        var newOptions = beforeRequest(options);\n\n        if (newOptions) {\n          options = newOptions;\n        }\n      } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n      // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n      var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n      var request = xhrMethod(options, function (error, response) {\n        return callbackWrapper(request, error, response, callback);\n      });\n      var originalAbort = request.abort;\n\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n\n      request.uri = options.uri;\n      request.requestTime = Date.now();\n      return request;\n    };\n\n    xhr.original = true;\n    return xhr;\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n\n  var byterangeStr = function byterangeStr(byterange) {\n    // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var byterangeEnd = byterange.offset + byterange.length - 1;\n    var byterangeStart = byterange.offset;\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n\n  var segmentXhrHeaders = function segmentXhrHeaders(segment) {\n    var headers = {};\n\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n\n    return headers;\n  };\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {number} i the iterator on the range to convert\n   * @return {string} the range in string format\n   */\n\n\n  var textRange = function textRange(range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {number} e The number\n   * @param {number} i the iterator\n   * @return {string} the hex formatted number as a string\n   */\n\n\n  var formatHexString = function formatHexString(e, i) {\n    var value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n\n  var formatAsciiString = function formatAsciiString(e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (ArrayBuffer.isView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   *\n   * @param {Object} initSegment\n   *        the init segment object.\n   *\n   * @return {string} the generated init segment id\n   */\n\n\n  var initSegmentId = function initSegmentId(initSegment) {\n    var byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * Returns a unique string identifier for a media segment key.\n   *\n   * @param {Object} key the encryption key\n   * @return {string} the unique id for the media segment key.\n   */\n\n\n  var segmentKeyId = function segmentKeyId(key) {\n    return key.resolvedUri;\n  };\n  /**\n   * utils to help dump binary data to the console\n   *\n   * @param {Array|TypedArray} data\n   *        data to dump to a string\n   *\n   * @return {string} the data as a hex string.\n   */\n\n\n  var hexDump = function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex;\n    var ascii;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n\n    return result;\n  };\n\n  var tagDump = function tagDump(_ref) {\n    var bytes = _ref.bytes;\n    return hexDump(bytes);\n  };\n\n  var textRanges = function textRanges(ranges) {\n    var result = '';\n    var i;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n\n    return result;\n  };\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    segmentKeyId: segmentKeyId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  }); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  var SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  var playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n\n    var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    var offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n\n  var originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {string} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    var dateTimeObject;\n\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segment = playlist.segments[0];\n\n    if (dateTimeObject < segment.dateTimeObject) {\n      // Requested time is before stream start.\n      return null;\n    }\n\n    for (var i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n    var lastSegmentStart = lastSegment.dateTimeObject;\n    var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n\n    if (dateTimeObject > lastSegmentStart) {\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segmentEnd = 0;\n    var segment;\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {string} programTime The programTime as an ISO-8601 string\n   * @return {number} offset\n   */\n\n\n  var getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n    var segmentDateTime;\n    var programDateTime;\n\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n\n    var segmentTimeEpoch = segmentDateTime.getTime();\n    var programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n\n  var verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      var segment = playlist.segments[i];\n\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @return {string} err.message A detailed error message\n   * @return {Object} programTime\n   * @return {number} programTime.mediaSeconds The streamTime in seconds\n   * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n\n  var getProgramTime = function getProgramTime(_ref) {\n    var playlist = _ref.playlist,\n        _ref$time = _ref.time,\n        time = _ref$time === void 0 ? undefined : _ref$time,\n        callback = _ref.callback;\n\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n\n    var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n\n    var programTimeObject = {\n      mediaSeconds: time\n    };\n    var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @return {string} err.message A detailed error message\n   * @return {number} newTime The exact time that was seeked to in seconds\n   */\n\n\n  var seekToProgramTime = function seekToProgramTime(_ref2) {\n    var programTime = _ref2.programTime,\n        playlist = _ref2.playlist,\n        _ref2$retryCount = _ref2.retryCount,\n        retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n        seekTo = _ref2.seekTo,\n        _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n        pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n        tech = _ref2.tech,\n        callback = _ref2.callback;\n\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n\n    var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: programTime + \" was not found in the stream\"\n      });\n    }\n\n    var segment = matchedSegment.segment;\n    var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: programTime + \" is not buffered yet. Try again\"\n        });\n      }\n\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', function () {\n        seekToProgramTime({\n          programTime: programTime,\n          playlist: playlist,\n          retryCount: retryCount - 1,\n          seekTo: seekTo,\n          pauseAfterSeek: pauseAfterSeek,\n          tech: tech,\n          callback: callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n\n    var seekToTime = segment.start + mediaOffset;\n\n    var seekedCallback = function seekedCallback() {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n\n    seekTo(seekToTime);\n  }; // which will only happen if the request is complete.\n\n\n  var callbackOnCompleted = function callbackOnCompleted(request, cb) {\n    if (request.readyState === 4) {\n      return cb();\n    }\n\n    return;\n  };\n\n  var containerRequest = function containerRequest(uri, xhr, cb) {\n    var bytes = [];\n    var id3Offset;\n    var finished = false;\n\n    var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n      req.abort();\n      finished = true;\n      return cb(err, req, type, _bytes);\n    };\n\n    var progressListener = function progressListener(error, request) {\n      if (finished) {\n        return;\n      }\n\n      if (error) {\n        return endRequestAndCallback(error, request, '', bytes);\n      } // grap the new part of content that was just downloaded\n\n\n      var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n      bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n      id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n      // or we need at least two bytes after an id3Offset\n\n      if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n      // to see the second sync byte, wait until we have enough data\n      // before declaring it ts\n\n      if (type === 'ts' && bytes.length < 188) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      } // this may be an unsynced ts segment\n      // wait for 376 bytes before detecting no container\n\n\n      if (!type && bytes.length < 376) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      return endRequestAndCallback(null, request, type, bytes);\n    };\n\n    var options = {\n      uri: uri,\n      beforeSend: function beforeSend(request) {\n        // this forces the browser to pass the bytes to us unprocessed\n        request.overrideMimeType('text/plain; charset=x-user-defined');\n        request.addEventListener('progress', function (_ref) {\n          _ref.total;\n          _ref.loaded;\n          return callbackWrapper(request, null, {\n            statusCode: request.status\n          }, progressListener);\n        });\n      }\n    };\n    var request = xhr(options, function (error, response) {\n      return callbackWrapper(request, error, response, progressListener);\n    });\n    return request;\n  };\n\n  var EventTarget = videojs.EventTarget,\n      mergeOptions = videojs.mergeOptions;\n\n  var dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n    if (!isPlaylistUnchanged(a, b)) {\n      return false;\n    } // for dash the above check will often return true in scenarios where\n    // the playlist actually has changed because mediaSequence isn't a\n    // dash thing, and we often set it to 1. So if the playlists have the same amount\n    // of segments we return true.\n    // So for dash we need to make sure that the underlying segments are different.\n    // if sidx changed then the playlists are different.\n\n\n    if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n      return false;\n    } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n      return false;\n    } // one or the other does not have segments\n    // there was a change.\n\n\n    if (a.segments && !b.segments || !a.segments && b.segments) {\n      return false;\n    } // neither has segments nothing changed\n\n\n    if (!a.segments && !b.segments) {\n      return true;\n    } // check segments themselves\n\n\n    for (var i = 0; i < a.segments.length; i++) {\n      var aSegment = a.segments[i];\n      var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n      if (aSegment.uri !== bSegment.uri) {\n        return false;\n      } // neither segment has a byterange, there will be no byterange change.\n\n\n      if (!aSegment.byterange && !bSegment.byterange) {\n        continue;\n      }\n\n      var aByterange = aSegment.byterange;\n      var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n      if (aByterange && !bByterange || !aByterange && bByterange) {\n        return false;\n      } // if both segments have byterange with different offsets, there was a change.\n\n\n      if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n        return false;\n      }\n    } // if everything was the same with segments, this is the same playlist.\n\n\n    return true;\n  };\n  /**\n   * Parses the master XML string and updates playlist URI references.\n   *\n   * @param {Object} config\n   *        Object of arguments\n   * @param {string} config.masterXml\n   *        The mpd XML\n   * @param {string} config.srcUrl\n   *        The mpd URL\n   * @param {Date} config.clientOffset\n   *         A time difference between server and client\n   * @param {Object} config.sidxMapping\n   *        SIDX mappings for moof/mdat URIs and byte ranges\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  var parseMasterXml = function parseMasterXml(_ref) {\n    var masterXml = _ref.masterXml,\n        srcUrl = _ref.srcUrl,\n        clientOffset = _ref.clientOffset,\n        sidxMapping = _ref.sidxMapping;\n    var master = parse(masterXml, {\n      manifestUri: srcUrl,\n      clientOffset: clientOffset,\n      sidxMapping: sidxMapping\n    });\n    addPropertiesToMaster(master, srcUrl);\n    return master;\n  };\n  /**\n   * Returns a new master manifest that is the result of merging an updated master manifest\n   * into the original version.\n   *\n   * @param {Object} oldMaster\n   *        The old parsed mpd object\n   * @param {Object} newMaster\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original master manifest with the updated media\n   *         playlists merged in\n   */\n\n\n  var updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n    var noChanges = true;\n    var update = mergeOptions(oldMaster, {\n      // These are top level properties that can be updated\n      duration: newMaster.duration,\n      minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n    }); // First update the playlists in playlist list\n\n    for (var i = 0; i < newMaster.playlists.length; i++) {\n      var playlist = newMaster.playlists[i];\n\n      if (playlist.sidx) {\n        var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n        if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n          addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n        }\n      }\n\n      var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n      if (playlistUpdate) {\n        update = playlistUpdate;\n        noChanges = false;\n      }\n    } // Then update media group playlists\n\n\n    forEachMediaGroup(newMaster, function (properties, type, group, label) {\n      if (properties.playlists && properties.playlists.length) {\n        var id = properties.playlists[0].id;\n\n        var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n        if (_playlistUpdate) {\n          update = _playlistUpdate; // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n          noChanges = false;\n        }\n      }\n    });\n\n    if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      noChanges = false;\n    }\n\n    if (noChanges) {\n      return null;\n    }\n\n    return update;\n  }; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n  // If the SIDXs have maps, the two maps should match,\n  // both `a` and `b` missing SIDXs is considered matching.\n  // If `a` or `b` but not both have a map, they aren't matching.\n\n\n  var equivalentSidx = function equivalentSidx(a, b) {\n    var neitherMap = Boolean(!a.map && !b.map);\n    var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n    return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n  }; // exported for testing\n\n\n  var compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n    var newSidxMapping = {};\n\n    for (var id in playlists) {\n      var playlist = playlists[id];\n      var currentSidxInfo = playlist.sidx;\n\n      if (currentSidxInfo) {\n        var key = generateSidxKey(currentSidxInfo);\n\n        if (!oldSidxMapping[key]) {\n          break;\n        }\n\n        var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n        if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n          newSidxMapping[key] = oldSidxMapping[key];\n        }\n      }\n    }\n\n    return newSidxMapping;\n  };\n  /**\n   *  A function that filters out changed items as they need to be requested separately.\n   *\n   *  The method is exported for testing\n   *\n   *  @param {Object} master the parsed mpd XML returned via mpd-parser\n   *  @param {Object} oldSidxMapping the SIDX to compare against\n   */\n\n\n  var filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n    var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n    var mediaGroupSidx = videoSidx;\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var playlists = properties.playlists;\n        mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n      }\n    });\n    return mediaGroupSidx;\n  };\n\n  var DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n\n\n    function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.masterPlaylistLoader_ = masterPlaylistLoader || assertThisInitialized(_this);\n\n      if (!masterPlaylistLoader) {\n        _this.isMaster_ = true;\n      }\n\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or object is required');\n      } // event naming?\n\n\n      _this.on('minimumUpdatePeriod', function () {\n        _this.refreshXml_();\n      }); // live playlist staleness timeout\n\n\n      _this.on('mediaupdatetimeout', function () {\n        _this.refreshMedia_(_this.media().id);\n      });\n\n      _this.state = 'HAVE_NOTHING';\n      _this.loadedPlaylists_ = {};\n      _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n      // The masterPlaylistLoader will be created with a string\n\n      if (_this.isMaster_) {\n        _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n        // once multi-period is refactored\n\n        _this.masterPlaylistLoader_.sidxMapping_ = {};\n      } else {\n        _this.childPlaylist_ = srcUrlOrPlaylist;\n      }\n\n      return _this;\n    }\n\n    var _proto = DashPlaylistLoader.prototype;\n\n    _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n      // disposed\n      if (!this.request) {\n        return true;\n      } // pending request is cleared\n\n\n      this.request = null;\n\n      if (err) {\n        // use the provided error object or create one\n        // based on the request/response\n        this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n          status: request.status,\n          message: 'DASH request error at URL: ' + request.uri,\n          response: request.response,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (startingState) {\n          this.state = startingState;\n        }\n\n        this.trigger('error');\n        return true;\n      }\n    }\n    /**\n     * Verify that the container of the sidx segment can be parsed\n     * and if it can, get and parse that segment.\n     */\n    ;\n\n    _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n      var _this2 = this;\n\n      var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n      if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n        // keep this function async\n        this.mediaRequest_ = window.setTimeout(function () {\n          return cb(false);\n        }, 0);\n        return;\n      } // resolve the segment URL relative to the playlist\n\n\n      var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n      var fin = function fin(err, request) {\n        if (_this2.requestErrored_(err, request, startingState)) {\n          return;\n        }\n\n        var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n        var sidx;\n\n        try {\n          sidx = parseSidx_1(toUint8(request.response).subarray(8));\n        } catch (e) {\n          // sidx parsing failed.\n          _this2.requestErrored_(e, request, startingState);\n\n          return;\n        }\n\n        sidxMapping[sidxKey] = {\n          sidxInfo: playlist.sidx,\n          sidx: sidx\n        };\n        addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n        return cb(true);\n      };\n\n      this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n        if (err) {\n          return fin(err, request);\n        }\n\n        if (!container || container !== 'mp4') {\n          return fin({\n            status: request.status,\n            message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n            // response is just bytes in this case\n            // but we really don't want to return that.\n            response: '',\n            playlist: playlist,\n            internal: true,\n            blacklistDuration: Infinity,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          }, request);\n        } // if we already downloaded the sidx bytes in the container request, use them\n\n\n        var _playlist$sidx$bytera = playlist.sidx.byterange,\n            offset = _playlist$sidx$bytera.offset,\n            length = _playlist$sidx$bytera.length;\n\n        if (bytes.length >= length + offset) {\n          return fin(err, {\n            response: bytes.subarray(offset, offset + length),\n            status: request.status,\n            uri: request.uri\n          });\n        } // otherwise request sidx bytes\n\n\n        _this2.request = _this2.vhs_.xhr({\n          uri: uri,\n          responseType: 'arraybuffer',\n          headers: segmentXhrHeaders({\n            byterange: playlist.sidx.byterange\n          })\n        }, fin);\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window.clearTimeout(this.mediaRequest_);\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      this.mediaRequest_ = null;\n      this.minimumUpdatePeriodTimeout_ = null;\n\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.off();\n    };\n\n    _proto.hasPendingRequest = function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    };\n\n    _proto.media = function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n        // everything is ready just continue to haveMetadata\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: playlist\n        });\n      });\n    };\n\n    _proto.haveMetadata = function haveMetadata(_ref2) {\n      var startingState = _ref2.startingState,\n          playlist = _ref2.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    };\n\n    _proto.pause = function pause() {\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n\n      if (this.isMaster_) {\n        window.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n        this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    };\n\n    _proto.load = function load(isFinalRendition) {\n      var _this4 = this;\n\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        // Check to see if this is the master loader and the MUP was cleared (this happens\n        // when the loader was paused). `media` should be set at this point since one is always\n        // set during `start()`.\n        if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n          // Trigger minimumUpdatePeriod to refresh the master manifest\n          this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n          this.updateMinimumUpdatePeriodTimeout_();\n        }\n\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.start = function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (!this.isMaster_) {\n        this.mediaRequest_ = window.setTimeout(function () {\n          return _this5.haveMaster_();\n        }, 0);\n        return;\n      }\n\n      this.requestMaster_(function (req, masterChanged) {\n        _this5.haveMaster_();\n\n        if (!_this5.hasPendingRequest() && !_this5.media_) {\n          _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n        }\n      });\n    };\n\n    _proto.requestMaster_ = function requestMaster_(cb) {\n      var _this6 = this;\n\n      this.request = this.vhs_.xhr({\n        uri: this.masterPlaylistLoader_.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        if (_this6.requestErrored_(error, req)) {\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return;\n        }\n\n        var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n        _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this6.masterLoaded_ = Date.now();\n        }\n\n        _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n        if (masterChanged) {\n          _this6.handleMaster_();\n\n          _this6.syncClientServerClock_(function () {\n            return cb(req, masterChanged);\n          });\n\n          return;\n        }\n\n        return cb(req, masterChanged);\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n    ;\n\n    _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n      var _this7 = this;\n\n      var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.vhs_.xhr({\n        uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this7.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    };\n\n    _proto.haveMaster_ = function haveMaster_() {\n      this.state = 'HAVE_MASTER';\n\n      if (this.isMaster_) {\n        // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    };\n\n    _proto.handleMaster_ = function handleMaster_() {\n      // clear media request\n      this.mediaRequest_ = null;\n      var newMaster = parseMasterXml({\n        masterXml: this.masterPlaylistLoader_.masterXml_,\n        srcUrl: this.masterPlaylistLoader_.srcUrl,\n        clientOffset: this.masterPlaylistLoader_.clientOffset_,\n        sidxMapping: this.masterPlaylistLoader_.sidxMapping_\n      });\n      var oldMaster = this.masterPlaylistLoader_.master; // if we have an old master to compare the new master against\n\n      if (oldMaster) {\n        newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n      } // only update master if we have a new master\n\n\n      this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n      var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n      if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n        this.masterPlaylistLoader_.srcUrl = location;\n      }\n\n      if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      return Boolean(newMaster);\n    };\n\n    _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n      var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n      // a new one will be added if needed.\n\n      if (mpl.createMupOnMedia_) {\n        mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n        mpl.createMupOnMedia_ = null;\n      } // clear any pending timeouts\n\n\n      if (mpl.minimumUpdatePeriodTimeout_) {\n        window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n        mpl.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n      // MPD has no future validity, so a new one will need to be acquired when new\n      // media segments are to be made available. Thus, we use the target duration\n      // in this case\n\n      if (mup === 0) {\n        if (mpl.media()) {\n          mup = mpl.media().targetDuration * 1000;\n        } else {\n          mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n          mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n        }\n      } // if minimumUpdatePeriod is invalid or <= zero, which\n      // can happen when a live video becomes VOD. skip timeout\n      // creation.\n\n\n      if (typeof mup !== 'number' || mup <= 0) {\n        if (mup < 0) {\n          this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n        }\n\n        return;\n      }\n\n      this.createMUPTimeout_(mup);\n    };\n\n    _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n      var mpl = this.masterPlaylistLoader_;\n      mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(function () {\n        mpl.minimumUpdatePeriodTimeout_ = null;\n        mpl.trigger('minimumUpdatePeriod');\n        mpl.createMUPTimeout_(mup);\n      }, mup);\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     */\n    ;\n\n    _proto.refreshXml_ = function refreshXml_() {\n      var _this8 = this;\n\n      this.requestMaster_(function (req, masterChanged) {\n        if (!masterChanged) {\n          return;\n        }\n\n        if (_this8.media_) {\n          _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n        } // This will filter out updated sidx info from the mapping\n\n\n        _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n        _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n          // TODO: do we need to reload the current playlist?\n          _this8.refreshMedia_(_this8.media().id);\n        });\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n    ;\n\n    _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      } // for master we have to reparse the master xml\n      // to re-create segments based on current timing values\n      // which may change media. We only skip updating master\n      // if this is the first time this.media_ is being set.\n      // as master was just parsed in that case.\n\n\n      if (this.media_ && this.isMaster_) {\n        this.handleMaster_();\n      }\n\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n      if (mediaChanged) {\n        this.media_ = playlists[mediaID];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.mediaUpdateTimeout) {\n        var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n          if (_this9.media().endList) {\n            return;\n          }\n\n          _this9.mediaUpdateTimeout = window.setTimeout(function () {\n            _this9.trigger('mediaupdatetimeout');\n\n            createMediaUpdateTimeout();\n          }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n        };\n\n        createMediaUpdateTimeout();\n      }\n\n      this.trigger('loadedplaylist');\n    };\n\n    return DashPlaylistLoader;\n  }(EventTarget);\n\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    BACK_BUFFER_LENGTH: 30,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    // TODO: Remove this when experimentalBufferBasedABR is removed\n    EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n    BUFFER_LOW_WATER_LINE_RATE: 1,\n    // If the buffer is greater than the high water line, we won't switch down\n    BUFFER_HIGH_WATER_LINE: 30\n  };\n\n  var stringToArrayBuffer = function stringToArrayBuffer(string) {\n    var view = new Uint8Array(new ArrayBuffer(string.length));\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view.buffer;\n  };\n  /* global Blob, BlobBuilder, Worker */\n  // unify worker interface\n\n\n  var browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n    // node only supports on/off\n    workerObj.on = workerObj.addEventListener;\n    workerObj.off = workerObj.removeEventListener;\n    return workerObj;\n  };\n\n  var createObjectURL = function createObjectURL(str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: 'application/javascript'\n      }));\n    } catch (e) {\n      var blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob());\n    }\n  };\n\n  var factory = function factory(code) {\n    return function () {\n      var objectUrl = createObjectURL(code);\n      var worker = browserWorkerPolyFill(new Worker(objectUrl));\n      worker.objURL = objectUrl;\n      var terminate = worker.terminate;\n      worker.on = worker.addEventListener;\n      worker.off = worker.removeEventListener;\n\n      worker.terminate = function () {\n        URL.revokeObjectURL(objectUrl);\n        return terminate.call(this);\n      };\n\n      return worker;\n    };\n  };\n\n  var transform = function transform(code) {\n    return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n  };\n\n  var getWorkerString = function getWorkerString(fn) {\n    return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n  };\n  /* rollup-plugin-worker-factory start for worker!/Users/gkatsevman/p/http-streaming-release/src/transmuxer-worker.js */\n\n\n  var workerCode$1 = transform(getWorkerString(function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun$1(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      trun$1 = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable$1,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    var silence;\n\n    var silence_1 = function silence_1() {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n\n    var ONE_SECOND_IN_TS$4 = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$4;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$4;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence_1()[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      return audioFillDuration;\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$3;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n          if (userIdentifier === 'GA94') {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } else {\n            result.payload = void 0;\n          }\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // Link To Transport\n    // -----------------\n\n    var CaptionStream$1 = function CaptionStream(options) {\n      options = options || {};\n      CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n      this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      if (this.parse708captions_) {\n        this.cc708Stream_ = new Cea708Stream({\n          captionServices: options.captionServices\n        }); // eslint-disable-line no-use-before-define\n      }\n\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n\n      if (this.parse708captions_) {\n        this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n        this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n      }\n    };\n\n    CaptionStream$1.prototype = new stream();\n\n    CaptionStream$1.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n      if (!sei.payload) {\n        return;\n      } // ignore everything but user_data_registered_itu_t_t35\n\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream$1.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } else {\n          // Dispatch packet to the Cea708Stream\n          this.dispatchCea708Packet(packet);\n        }\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream$1.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream$1.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream$1.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    };\n\n    CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n      if (this.parse708captions_) {\n        this.cc708Stream_.push(packet);\n      }\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps special and extended character codes to their\n    // proper Unicode equivalent. The first one-byte key is just a\n    // non-standard character code. The two-byte keys that follow are\n    // the extended CEA708 character codes, along with the preceding\n    // 0x10 extended character byte to distinguish these codes from\n    // non-extended character codes. Every CEA708 character code that\n    // is not in this object maps directly to a standard unicode\n    // character code.\n    // The transparent space and non-breaking transparent space are\n    // technically not fully supported since there is no code to\n    // make them transparent, so they have normal non-transparent\n    // stand-ins.\n    // The special closed caption (CC) character isn't a standard\n    // unicode character, so a fairly similar unicode character was\n    // chosen in it's place.\n\n\n    var CHARACTER_TRANSLATION_708 = {\n      0x7f: 0x266a,\n      // ♪\n      0x1020: 0x20,\n      // Transparent Space\n      0x1021: 0xa0,\n      // Nob-breaking Transparent Space\n      0x1025: 0x2026,\n      // …\n      0x102a: 0x0160,\n      // Š\n      0x102c: 0x0152,\n      // Œ\n      0x1030: 0x2588,\n      // █\n      0x1031: 0x2018,\n      // ‘\n      0x1032: 0x2019,\n      // ’\n      0x1033: 0x201c,\n      // “\n      0x1034: 0x201d,\n      // ”\n      0x1035: 0x2022,\n      // •\n      0x1039: 0x2122,\n      // ™\n      0x103a: 0x0161,\n      // š\n      0x103c: 0x0153,\n      // œ\n      0x103d: 0x2120,\n      // ℠\n      0x103f: 0x0178,\n      // Ÿ\n      0x1076: 0x215b,\n      // ⅛\n      0x1077: 0x215c,\n      // ⅜\n      0x1078: 0x215d,\n      // ⅝\n      0x1079: 0x215e,\n      // ⅞\n      0x107a: 0x23d0,\n      // ⏐\n      0x107b: 0x23a4,\n      // ⎤\n      0x107c: 0x23a3,\n      // ⎣\n      0x107d: 0x23af,\n      // ⎯\n      0x107e: 0x23a6,\n      // ⎦\n      0x107f: 0x23a1,\n      // ⎡\n      0x10a0: 0x3138 // ㄸ (CC char)\n\n    };\n\n    var get708CharFromCode = function get708CharFromCode(code) {\n      var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n      if (code & 0x1000 && code === newCode) {\n        // Invalid extended code\n        return '';\n      }\n\n      return String.fromCharCode(newCode);\n    };\n\n    var within708TextBlock = function within708TextBlock(b) {\n      return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n    };\n\n    var Cea708Window = function Cea708Window(windowNum) {\n      this.windowNum = windowNum;\n      this.reset();\n    };\n\n    Cea708Window.prototype.reset = function () {\n      this.clearText();\n      this.pendingNewLine = false;\n      this.winAttr = {};\n      this.penAttr = {};\n      this.penLoc = {};\n      this.penColor = {}; // These default values are arbitrary,\n      // defineWindow will usually override them\n\n      this.visible = 0;\n      this.rowLock = 0;\n      this.columnLock = 0;\n      this.priority = 0;\n      this.relativePositioning = 0;\n      this.anchorVertical = 0;\n      this.anchorHorizontal = 0;\n      this.anchorPoint = 0;\n      this.rowCount = 1;\n      this.virtualRowCount = this.rowCount + 1;\n      this.columnCount = 41;\n      this.windowStyle = 0;\n      this.penStyle = 0;\n    };\n\n    Cea708Window.prototype.getText = function () {\n      return this.rows.join('\\n');\n    };\n\n    Cea708Window.prototype.clearText = function () {\n      this.rows = [''];\n      this.rowIdx = 0;\n    };\n\n    Cea708Window.prototype.newLine = function (pts) {\n      if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n        this.beforeRowOverflow(pts);\n      }\n\n      if (this.rows.length > 0) {\n        this.rows.push('');\n        this.rowIdx++;\n      } // Show all virtual rows since there's no visible scrolling\n\n\n      while (this.rows.length > this.virtualRowCount) {\n        this.rows.shift();\n        this.rowIdx--;\n      }\n    };\n\n    Cea708Window.prototype.isEmpty = function () {\n      if (this.rows.length === 0) {\n        return true;\n      } else if (this.rows.length === 1) {\n        return this.rows[0] === '';\n      }\n\n      return false;\n    };\n\n    Cea708Window.prototype.addText = function (text) {\n      this.rows[this.rowIdx] += text;\n    };\n\n    Cea708Window.prototype.backspace = function () {\n      if (!this.isEmpty()) {\n        var row = this.rows[this.rowIdx];\n        this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n      }\n    };\n\n    var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n      this.serviceNum = serviceNum;\n      this.text = '';\n      this.currentWindow = new Cea708Window(-1);\n      this.windows = [];\n      this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n      if (typeof encoding === 'string') {\n        this.createTextDecoder(encoding);\n      }\n    };\n    /**\n     * Initialize service windows\n     * Must be run before service use\n     *\n     * @param  {Integer}  pts               PTS value\n     * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n     */\n\n\n    Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n      this.startPts = pts;\n\n      for (var win = 0; win < 8; win++) {\n        this.windows[win] = new Cea708Window(win);\n\n        if (typeof beforeRowOverflow === 'function') {\n          this.windows[win].beforeRowOverflow = beforeRowOverflow;\n        }\n      }\n    };\n    /**\n     * Set current window of service to be affected by commands\n     *\n     * @param  {Integer} windowNum Window number\n     */\n\n\n    Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n      this.currentWindow = this.windows[windowNum];\n    };\n    /**\n     * Try to create a TextDecoder if it is natively supported\n     */\n\n\n    Cea708Service.prototype.createTextDecoder = function (encoding) {\n      if (typeof TextDecoder === 'undefined') {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'The `encoding` option is unsupported without TextDecoder support'\n        });\n      } else {\n        try {\n          this.textDecoder_ = new TextDecoder(encoding);\n        } catch (error) {\n          this.stream.trigger('log', {\n            level: 'warn',\n            message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n          });\n        }\n      }\n    };\n\n    var Cea708Stream = function Cea708Stream(options) {\n      options = options || {};\n      Cea708Stream.prototype.init.call(this);\n      var self = this;\n      var captionServices = options.captionServices || {};\n      var captionServiceEncodings = {};\n      var serviceProps; // Get service encodings from captionServices option block\n\n      Object.keys(captionServices).forEach(function (serviceName) {\n        serviceProps = captionServices[serviceName];\n\n        if (/^SERVICE/.test(serviceName)) {\n          captionServiceEncodings[serviceName] = serviceProps.encoding;\n        }\n      });\n      this.serviceEncodings = captionServiceEncodings;\n      this.current708Packet = null;\n      this.services = {};\n\n      this.push = function (packet) {\n        if (packet.type === 3) {\n          // 708 packet start\n          self.new708Packet();\n          self.add708Bytes(packet);\n        } else {\n          if (self.current708Packet === null) {\n            // This should only happen at the start of a file if there's no packet start.\n            self.new708Packet();\n          }\n\n          self.add708Bytes(packet);\n        }\n      };\n    };\n\n    Cea708Stream.prototype = new stream();\n    /**\n     * Push current 708 packet, create new 708 packet.\n     */\n\n    Cea708Stream.prototype.new708Packet = function () {\n      if (this.current708Packet !== null) {\n        this.push708Packet();\n      }\n\n      this.current708Packet = {\n        data: [],\n        ptsVals: []\n      };\n    };\n    /**\n     * Add pts and both bytes from packet into current 708 packet.\n     */\n\n\n    Cea708Stream.prototype.add708Bytes = function (packet) {\n      var data = packet.ccData;\n      var byte0 = data >>> 8;\n      var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n      // that service blocks will always line up with byte pairs.\n\n      this.current708Packet.ptsVals.push(packet.pts);\n      this.current708Packet.data.push(byte0);\n      this.current708Packet.data.push(byte1);\n    };\n    /**\n     * Parse completed 708 packet into service blocks and push each service block.\n     */\n\n\n    Cea708Stream.prototype.push708Packet = function () {\n      var packet708 = this.current708Packet;\n      var packetData = packet708.data;\n      var serviceNum = null;\n      var blockSize = null;\n      var i = 0;\n      var b = packetData[i++];\n      packet708.seq = b >> 6;\n      packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n      for (; i < packetData.length; i++) {\n        b = packetData[i++];\n        serviceNum = b >> 5;\n        blockSize = b & 0x1f; // 0b00011111\n\n        if (serviceNum === 7 && blockSize > 0) {\n          // Extended service num\n          b = packetData[i++];\n          serviceNum = b;\n        }\n\n        this.pushServiceBlock(serviceNum, i, blockSize);\n\n        if (blockSize > 0) {\n          i += blockSize - 1;\n        }\n      }\n    };\n    /**\n     * Parse service block, execute commands, read text.\n     *\n     * Note: While many of these commands serve important purposes,\n     * many others just parse out the parameters or attributes, but\n     * nothing is done with them because this is not a full and complete\n     * implementation of the entire 708 spec.\n     *\n     * @param  {Integer} serviceNum Service number\n     * @param  {Integer} start      Start index of the 708 packet data\n     * @param  {Integer} size       Block size\n     */\n\n\n    Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n      var b;\n      var i = start;\n      var packetData = this.current708Packet.data;\n      var service = this.services[serviceNum];\n\n      if (!service) {\n        service = this.initService(serviceNum, i);\n      }\n\n      for (; i < start + size && i < packetData.length; i++) {\n        b = packetData[i];\n\n        if (within708TextBlock(b)) {\n          i = this.handleText(i, service);\n        } else if (b === 0x18) {\n          i = this.multiByteCharacter(i, service);\n        } else if (b === 0x10) {\n          i = this.extendedCommands(i, service);\n        } else if (0x80 <= b && b <= 0x87) {\n          i = this.setCurrentWindow(i, service);\n        } else if (0x98 <= b && b <= 0x9f) {\n          i = this.defineWindow(i, service);\n        } else if (b === 0x88) {\n          i = this.clearWindows(i, service);\n        } else if (b === 0x8c) {\n          i = this.deleteWindows(i, service);\n        } else if (b === 0x89) {\n          i = this.displayWindows(i, service);\n        } else if (b === 0x8a) {\n          i = this.hideWindows(i, service);\n        } else if (b === 0x8b) {\n          i = this.toggleWindows(i, service);\n        } else if (b === 0x97) {\n          i = this.setWindowAttributes(i, service);\n        } else if (b === 0x90) {\n          i = this.setPenAttributes(i, service);\n        } else if (b === 0x91) {\n          i = this.setPenColor(i, service);\n        } else if (b === 0x92) {\n          i = this.setPenLocation(i, service);\n        } else if (b === 0x8f) {\n          service = this.reset(i, service);\n        } else if (b === 0x08) {\n          // BS: Backspace\n          service.currentWindow.backspace();\n        } else if (b === 0x0c) {\n          // FF: Form feed\n          service.currentWindow.clearText();\n        } else if (b === 0x0d) {\n          // CR: Carriage return\n          service.currentWindow.pendingNewLine = true;\n        } else if (b === 0x0e) {\n          // HCR: Horizontal carriage return\n          service.currentWindow.clearText();\n        } else if (b === 0x8d) {\n          // DLY: Delay, nothing to do\n          i++;\n        } else ;\n      }\n    };\n    /**\n     * Execute an extended command\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.extendedCommands = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service, {\n          isExtended: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Get PTS value of a given byte index\n     *\n     * @param  {Integer} byteIndex  Index of the byte\n     * @return {Integer}            PTS\n     */\n\n\n    Cea708Stream.prototype.getPts = function (byteIndex) {\n      // There's 1 pts value per 2 bytes\n      return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n    };\n    /**\n     * Initializes a service\n     *\n     * @param  {Integer} serviceNum Service number\n     * @return {Service}            Initialized service object\n     */\n\n\n    Cea708Stream.prototype.initService = function (serviceNum, i) {\n      var serviceName = 'SERVICE' + serviceNum;\n      var self = this;\n      var serviceName;\n      var encoding;\n\n      if (serviceName in this.serviceEncodings) {\n        encoding = this.serviceEncodings[serviceName];\n      }\n\n      this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n      this.services[serviceNum].init(this.getPts(i), function (pts) {\n        self.flushDisplayed(pts, self.services[serviceNum]);\n      });\n      return this.services[serviceNum];\n    };\n    /**\n     * Execute text writing to current window\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.handleText = function (i, service, options) {\n      var isExtended = options && options.isExtended;\n      var isMultiByte = options && options.isMultiByte;\n      var packetData = this.current708Packet.data;\n      var extended = isExtended ? 0x1000 : 0x0000;\n      var currentByte = packetData[i];\n      var nextByte = packetData[i + 1];\n      var win = service.currentWindow;\n\n      var _char;\n\n      var charCodeArray; // Use the TextDecoder if one was created for this service\n\n      if (service.textDecoder_ && !isExtended) {\n        if (isMultiByte) {\n          charCodeArray = [currentByte, nextByte];\n          i++;\n        } else {\n          charCodeArray = [currentByte];\n        }\n\n        _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n      } else {\n        _char = get708CharFromCode(extended | currentByte);\n      }\n\n      if (win.pendingNewLine && !win.isEmpty()) {\n        win.newLine(this.getPts(i));\n      }\n\n      win.pendingNewLine = false;\n      win.addText(_char);\n      return i;\n    };\n    /**\n     * Handle decoding of multibyte character\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var firstByte = packetData[i + 1];\n      var secondByte = packetData[i + 2];\n\n      if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n        i = this.handleText(++i, service, {\n          isMultiByte: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CW# command.\n     *\n     * Set the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      return i;\n    };\n    /**\n     * Parse and execute the DF# command.\n     *\n     * Define a window and set it as the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.defineWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      var win = service.currentWindow;\n      b = packetData[++i];\n      win.visible = (b & 0x20) >> 5; // v\n\n      win.rowLock = (b & 0x10) >> 4; // rl\n\n      win.columnLock = (b & 0x08) >> 3; // cl\n\n      win.priority = b & 0x07; // p\n\n      b = packetData[++i];\n      win.relativePositioning = (b & 0x80) >> 7; // rp\n\n      win.anchorVertical = b & 0x7f; // av\n\n      b = packetData[++i];\n      win.anchorHorizontal = b; // ah\n\n      b = packetData[++i];\n      win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n      win.rowCount = b & 0x0f; // rc\n\n      b = packetData[++i];\n      win.columnCount = b & 0x3f; // cc\n\n      b = packetData[++i];\n      win.windowStyle = (b & 0x38) >> 3; // ws\n\n      win.penStyle = b & 0x07; // ps\n      // The spec says there are (rowCount+1) \"virtual rows\"\n\n      win.virtualRowCount = win.rowCount + 1;\n      return i;\n    };\n    /**\n     * Parse and execute the SWA command.\n     *\n     * Set attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var winAttr = service.currentWindow.winAttr;\n      b = packetData[++i];\n      winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n      winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n      winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n      winAttr.fillBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n      winAttr.borderRed = (b & 0x30) >> 4; // br\n\n      winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n      winAttr.borderBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      winAttr.borderType += (b & 0x80) >> 5; // bt\n\n      winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n      winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n      winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n      winAttr.justify = b & 0x03; // j\n\n      b = packetData[++i];\n      winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n      winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n      winAttr.displayEffect = b & 0x03; // de\n\n      return i;\n    };\n    /**\n     * Gather text from all displayed windows and push a caption to output.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n      var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n      // display text in the correct order, but sample files so far have not shown any issue.\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n          displayedText.push(service.windows[winId].getText());\n        }\n      }\n\n      service.endPts = pts;\n      service.text = displayedText.join('\\n\\n');\n      this.pushCaption(service);\n      service.startPts = pts;\n    };\n    /**\n     * Push a caption to output if the caption contains text.\n     *\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.pushCaption = function (service) {\n      if (service.text !== '') {\n        this.trigger('data', {\n          startPts: service.startPts,\n          endPts: service.endPts,\n          text: service.text,\n          stream: 'cc708_' + service.serviceNum\n        });\n        service.text = '';\n        service.startPts = service.endPts;\n      }\n    };\n    /**\n     * Parse and execute the DSW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.displayWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the HDW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.hideWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 0;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the TGW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.toggleWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible ^= 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CLW command.\n     *\n     * Clear text of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.clearWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].clearText();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the DLW command.\n     *\n     * Re-initialize windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.deleteWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].reset();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPA command.\n     *\n     * Set pen attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penAttr = service.currentWindow.penAttr;\n      b = packetData[++i];\n      penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n      penAttr.offset = (b & 0x0c) >> 2; // o\n\n      penAttr.penSize = b & 0x03; // s\n\n      b = packetData[++i];\n      penAttr.italics = (b & 0x80) >> 7; // i\n\n      penAttr.underline = (b & 0x40) >> 6; // u\n\n      penAttr.edgeType = (b & 0x38) >> 3; // et\n\n      penAttr.fontStyle = b & 0x07; // fs\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPC command.\n     *\n     * Set pen color of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenColor = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penColor = service.currentWindow.penColor;\n      b = packetData[++i];\n      penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n      penColor.fgRed = (b & 0x30) >> 4; // fr\n\n      penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n      penColor.fgBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n      penColor.bgRed = (b & 0x30) >> 4; // br\n\n      penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n      penColor.bgBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      penColor.edgeRed = (b & 0x30) >> 4; // er\n\n      penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n      penColor.edgeBlue = b & 0x03; // eb\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPL command.\n     *\n     * Set pen location of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenLocation = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n      service.currentWindow.pendingNewLine = true;\n      b = packetData[++i];\n      penLoc.row = b & 0x0f; // r\n\n      b = packetData[++i];\n      penLoc.column = b & 0x3f; // c\n\n      return i;\n    };\n    /**\n     * Execute the RST command.\n     *\n     * Reset service to a clean slate. Re-initialize.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Service}          Re-initialized service\n     */\n\n\n    Cea708Stream.prototype.reset = function (i, service) {\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      return this.initService(service.serviceNum, i);\n    }; // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row, index) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping a malformed 608 caption at index ' + index + '.'\n          });\n          return '';\n        }\n      }, this) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char2) {\n      return _char2 >= 0x20 && _char2 <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream$1,\n      Cea608Stream: Cea608Stream,\n      Cea708Stream: Cea708Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover$1 = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover$1(data.dts, referenceDTS);\n        data.pts = handleRollover$1(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream$1.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      handleRollover: handleRollover$1\n    };\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591$1(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping unrecognized metadata packet'\n          });\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            this.trigger('log', {\n              level: 'warn',\n              message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n            });\n            return;\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH$1 = 188,\n        // bytes\n    SYNC_BYTE$1 = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH$1,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH$1;\n            endIndex += MP2T_PACKET_LENGTH$1;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          segmentHadPmt = false,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n        var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n                stream = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream.data.push(data);\n            stream.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            segmentHadPmt = true;\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        // if on flush we haven't had a pmt emitted\n        // and we have a pmt to emit. emit the pmt\n        // so that we trigger a trackinfo downstream.\n        if (!segmentHadPmt && programMapTable) {\n          var pmt = {\n            type: 'metadata',\n            tracks: []\n          }; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          self.trigger('data', pmt);\n        }\n\n        segmentHadPmt = false;\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      Cea708Stream: captionStream.Cea708Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.skipWarn_ = function (start, end) {\n        this.trigger('log', {\n          level: 'warn',\n          message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n        });\n      };\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer && buffer.length) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        var skip; // We use i + 7 here because we want to be able to parse the entire header.\n        // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n        while (i + 7 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            if (typeof skip !== 'number') {\n              skip = i;\n            } // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n\n\n            i++;\n            continue;\n          }\n\n          if (typeof skip === 'number') {\n            this.skipWarn_(skip, i);\n            skip = null;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          // NOTE: frame length includes the size of the header\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n          // then we have to wait for more data\n\n          if (buffer.byteLength - i < frameLength) {\n            break;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            // data is the frame without it's header\n            data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n          });\n          frameNum++;\n          i += frameLength;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // remove processed bytes from the buffer.\n\n\n        buffer = buffer.subarray(i);\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      // TODO: the three profiles below don't\n      // appear to have sps data in the specificiation anymore?\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data,\n          nalUnitTypeCode: data[0] & 0x1f\n        };\n\n        switch (event.nalUnitTypeCode) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio = [1, 1],\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          // sar is sample aspect ratio\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n      returnSize = returnSize >= 0 ? returnSize : 0;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var getId3Offset = function getId3Offset(data, offset) {\n      if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n        return offset;\n      }\n\n      offset += parseId3TagSize(data, offset);\n      return getId3Offset(data, offset);\n    }; // TODO: use vhs-utils\n\n\n    var isLikelyAacData$1 = function isLikelyAacData(data) {\n      var offset = getId3Offset(data, 0);\n      return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n      // is not mp3 data but aac data.\n      (data[offset + 1] & 0x16) === 0x10;\n    };\n\n    var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$2 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData$1,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$2,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    };\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES;\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    var retriggerForStream = function retriggerForStream(key, event) {\n      event.stream = key;\n      this.trigger('log', event);\n    };\n\n    var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n      var keys = Object.keys(pipeline);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i]; // skip non-stream keys and headOfPipeline\n        // which is just a duplicate\n\n        if (key === 'headOfPipeline' || !pipeline[key].on) {\n          continue;\n        }\n\n        pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n      }\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          audioProperties.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n        videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          segmentDuration = frames.length * frameDuration;\n          this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n          // frame info is in video clock cycles. Convert to match expectation of\n          // listeners (that all timestamps will be based on video clock cycles).\n          clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n          frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + segmentDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          videoProperties.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        videoProperties.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        audioProperties.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n            return;\n          }\n\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n          pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n          pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream(options);\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n              pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      this.getLogTrigger_ = function (key) {\n        var self = this;\n        return function (event) {\n          event.stream = key;\n          self.trigger('log', event);\n        };\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: audioProperties,\n      VIDEO_PROPERTIES: videoProperties,\n      // exported for testing\n      generateSegmentTimingInfo: generateSegmentTimingInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned$3 = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var toHexString$1 = function toHexString(value) {\n      return ('00' + value.toString(16)).slice(-2);\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned$3,\n      toHexString: toHexString$1\n    };\n\n    var parseType$1 = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    var parseType_1 = parseType$1;\n    var toUnsigned$2 = bin.toUnsigned;\n\n    var findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType_1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n\n    var findBox_1 = findBox;\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var tfdt = function tfdt(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7])\n      };\n\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += toUnsigned$1(data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11]);\n      }\n\n      return result;\n    };\n\n    var parseTfdt = tfdt;\n\n    var parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    };\n\n    var parseSampleFlags_1 = parseSampleFlags;\n\n    var trun = function trun(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n          view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n          // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n          // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n          // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n          // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n          // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n          // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n          offset = 8,\n          sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n      }\n\n      return result;\n    };\n\n    var parseTrun = trun;\n\n    var tfhd = function tfhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n          baseDataOffsetPresent = result.flags[2] & 0x01,\n          sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n          defaultSampleDurationPresent = result.flags[2] & 0x08,\n          defaultSampleSizePresent = result.flags[2] & 0x10,\n          defaultSampleFlagsPresent = result.flags[2] & 0x20,\n          durationIsEmpty = result.flags[0] & 0x010000,\n          defaultBaseIsMoof = result.flags[0] & 0x020000,\n          i;\n      i = 8;\n\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n\n      return result;\n    };\n\n    var parseTfhd = tfhd;\n    var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = {\n        logs: [],\n        seiNals: []\n      },\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else if (lastMatchedSample) {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            } else {\n              result.logs.push({\n                level: 'warn',\n                message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n              });\n              break;\n            }\n\n            result.seiNals.push(seiNal);\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = findBox_1(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = findBox_1(traf, ['trun']);\n        var samples;\n        var result; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          result = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = {\n              seiNals: [],\n              logs: []\n            };\n          }\n\n          captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n          captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n      if (trackId === null) {\n        return null;\n      }\n\n      captionNals = parseCaptionNals(segment, trackId);\n      var trackNals = captionNals[trackId] || {};\n      return {\n        seiNals: trackNals.seiNals,\n        logs: trackNals.logs,\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser = function CaptionParser() {\n      var isInitialized = false;\n      var captionStream; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions; // Stores whether we are receiving partial data or not\n\n      var parsingPartial;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function (options) {\n        captionStream = new CaptionStream();\n        isInitialized = true;\n        parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n        captionStream.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n        captionStream.on('log', function (log) {\n          parsedCaptions.logs.push(log);\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one.\n          // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n        } else if (trackId === null || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData && parsedData.logs) {\n          parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n        }\n\n        if (parsedData === null || !parsedData.seiNals) {\n          if (parsedCaptions.logs.length) {\n            return {\n              logs: parsedCaptions.logs,\n              captions: [],\n              captionStreams: []\n            };\n          }\n\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        if (!parsingPartial) {\n          captionStream.flush();\n        } else {\n          captionStream.partialFlush();\n        }\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n        parsedCaptions.logs = [];\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {},\n            logs: []\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser;\n    var toUnsigned = bin.toUnsigned;\n    var toHexString = bin.toHexString;\n    var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = findBox_1(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return findBox_1(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = findBox_1(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = typeof baseTime === 'number' && !isNaN(baseTime) ? baseTime : Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n     * Determine the composition start, in seconds, for an MP4\n     * fragment.\n     *\n     * The composition start time of a fragment can be calculated using the base\n     * media decode time, composition time offset, and timescale, as follows:\n     *\n     * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n     *\n     * All of the aforementioned information is contained within a media fragment's\n     * `traf` box, except for timescale info, which comes from the initialization\n     * segment, so a track id (also contained within a `traf`) is also necessary to\n     * associate it with a timescale\n     *\n     *\n     * @param timescales {object} - a hash of track ids to timescale values.\n     * @param fragment {Unit8Array} - the bytes of a media segment\n     * @return {number} the composition start time for the fragment, in seconds\n     **/\n\n\n    compositionStartTime = function compositionStartTime(timescales, fragment) {\n      var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n      var baseMediaDecodeTime = 0;\n      var compositionTimeOffset = 0;\n      var trackId;\n\n      if (trafBoxes && trafBoxes.length) {\n        // The spec states that track run samples contained within a `traf` box are contiguous, but\n        // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n        // We will assume that they are, so we only need the first to calculate start time.\n        var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n        var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n        var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n        if (tfhd) {\n          var parsedTfhd = parseTfhd(tfhd);\n          trackId = parsedTfhd.trackId;\n        }\n\n        if (tfdt) {\n          var parsedTfdt = parseTfdt(tfdt);\n          baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n        }\n\n        if (trun) {\n          var parsedTrun = parseTrun(trun);\n\n          if (parsedTrun.samples && parsedTrun.samples.length) {\n            compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n          }\n        }\n      } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n      // specified.\n\n\n      var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n      return (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n        var tkhds = findBox_1(trak, ['tkhd']);\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType_1(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    };\n    /**\n     * Get all the video, audio, and hint tracks from a non fragmented\n     * mp4 segment\n     */\n\n\n    getTracks = function getTracks(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var tracks = [];\n      traks.forEach(function (trak) {\n        var track = {};\n        var tkhd = findBox_1(trak, ['tkhd'])[0];\n        var view, tkhdVersion; // id\n\n        if (tkhd) {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          tkhdVersion = view.getUint8(0);\n          track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n        }\n\n        var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n        if (hdlr) {\n          var type = parseType_1(hdlr.subarray(8, 12));\n\n          if (type === 'vide') {\n            track.type = 'video';\n          } else if (type === 'soun') {\n            track.type = 'audio';\n          } else {\n            track.type = type;\n          }\n        } // codec\n\n\n        var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n        if (stsd) {\n          var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n          track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n          var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n          var codecConfig, codecConfigType;\n\n          if (codecBox) {\n            // https://tools.ietf.org/html/rfc6381#section-3.3\n            if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n              // we don't need anything but the \"config\" parameter of the\n              // avc1 codecBox\n              codecConfig = codecBox.subarray(78);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n                track.codec += '.'; // left padded with zeroes for single digit hex\n                // profile idc\n\n                track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n                track.codec += toHexString(codecConfig[10]); // level idc\n\n                track.codec += toHexString(codecConfig[11]);\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'avc1.4d400d';\n              }\n            } else if (/^mp4[a,v]$/i.test(track.codec)) {\n              // we do not need anything but the streamDescriptor of the mp4a codecBox\n              codecConfig = codecBox.subarray(28);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n                track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n                track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'mp4a.40.2';\n              }\n            } else {\n              // flac, opus, etc\n              track.codec = track.codec.toLowerCase();\n            }\n          }\n        }\n\n        var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (mdhd) {\n          track.timescale = getTimescaleFromMediaHeader(mdhd);\n        }\n\n        tracks.push(track);\n      });\n      return tracks;\n    };\n\n    var probe$2 = {\n      // export mp4 inspector's findBox and parseType for backwards compatibility\n      findBox: findBox_1,\n      parseType: parseType_1,\n      timescale: timescale,\n      startTime: startTime,\n      compositionStartTime: compositionStartTime,\n      videoTrackIds: getVideoTrackIds,\n      tracks: getTracks,\n      getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n    };\n\n    var parsePid = function parsePid(packet) {\n      var pid = packet[1] & 0x1f;\n      pid <<= 8;\n      pid |= packet[2];\n      return pid;\n    };\n\n    var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n      return !!(packet[1] & 0x40);\n    };\n\n    var parseAdaptionField = function parseAdaptionField(packet) {\n      var offset = 0; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[4] + 1;\n      }\n\n      return offset;\n    };\n\n    var parseType = function parseType(packet, pmtPid) {\n      var pid = parsePid(packet);\n\n      if (pid === 0) {\n        return 'pat';\n      } else if (pid === pmtPid) {\n        return 'pmt';\n      } else if (pmtPid) {\n        return 'pes';\n      }\n\n      return null;\n    };\n\n    var parsePat = function parsePat(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        offset += packet[offset] + 1;\n      }\n\n      return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n    };\n\n    var parsePmt = function parsePmt(packet) {\n      var programMapTable = {};\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var payloadOffset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        payloadOffset += packet[payloadOffset] + 1;\n      } // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n\n      if (!(packet[payloadOffset + 5] & 0x01)) {\n        return;\n      }\n\n      var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n      sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n      var offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n        programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n      }\n\n      return programMapTable;\n    };\n\n    var parsePesType = function parsePesType(packet, programMapTable) {\n      var pid = parsePid(packet);\n      var type = programMapTable[pid];\n\n      switch (type) {\n        case streamTypes.H264_STREAM_TYPE:\n          return 'video';\n\n        case streamTypes.ADTS_STREAM_TYPE:\n          return 'audio';\n\n        case streamTypes.METADATA_STREAM_TYPE:\n          return 'timed-metadata';\n\n        default:\n          return null;\n      }\n    };\n\n    var parsePesTime = function parsePesTime(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n\n      if (!pusi) {\n        return null;\n      }\n\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (offset >= packet.byteLength) {\n        // From the H 222.0 MPEG-TS spec\n        // \"For transport stream packets carrying PES packets, stuffing is needed when there\n        //  is insufficient PES packet data to completely fill the transport stream packet\n        //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n        //  the sum of the lengths of the data elements in it, so that the payload bytes\n        //  remaining after the adaptation field exactly accommodates the available PES packet\n        //  data.\"\n        //\n        // If the offset is >= the length of the packet, then the packet contains no data\n        // and instead is just adaption field stuffing bytes\n        return null;\n      }\n\n      var pes = null;\n      var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        pes = {}; // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n        pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n\n      return pes;\n    };\n\n    var parseNalUnitType = function parseNalUnitType(type) {\n      switch (type) {\n        case 0x05:\n          return 'slice_layer_without_partitioning_rbsp_idr';\n\n        case 0x06:\n          return 'sei_rbsp';\n\n        case 0x07:\n          return 'seq_parameter_set_rbsp';\n\n        case 0x08:\n          return 'pic_parameter_set_rbsp';\n\n        case 0x09:\n          return 'access_unit_delimiter_rbsp';\n\n        default:\n          return null;\n      }\n    };\n\n    var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n      var offset = 4 + parseAdaptionField(packet);\n      var frameBuffer = packet.subarray(offset);\n      var frameI = 0;\n      var frameSyncPoint = 0;\n      var foundKeyFrame = false;\n      var nalType; // advance the sync point to a NAL start, if necessary\n\n      for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n        if (frameBuffer[frameSyncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          frameI = frameSyncPoint + 5;\n          break;\n        }\n      }\n\n      while (frameI < frameBuffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (frameBuffer[frameI]) {\n          case 0:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0) {\n              frameI += 2;\n              break;\n            } else if (frameBuffer[frameI - 2] !== 0) {\n              frameI++;\n              break;\n            }\n\n            if (frameSyncPoint + 3 !== frameI - 2) {\n              nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n              if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n                foundKeyFrame = true;\n              }\n            } // drop trailing zeroes\n\n\n            do {\n              frameI++;\n            } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n              frameI += 3;\n              break;\n            }\n\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            frameI += 3;\n            break;\n        }\n      }\n\n      frameBuffer = frameBuffer.subarray(frameSyncPoint);\n      frameI -= frameSyncPoint;\n      frameSyncPoint = 0; // parse the final nal\n\n      if (frameBuffer && frameBuffer.byteLength > 3) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      return foundKeyFrame;\n    };\n\n    var probe$1 = {\n      parseType: parseType,\n      parsePat: parsePat,\n      parsePmt: parsePmt,\n      parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n      parsePesType: parsePesType,\n      parsePesTime: parsePesTime,\n      videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n    };\n    var handleRollover = timestampRolloverStream.handleRollover;\n    var probe = {};\n    probe.ts = probe$1;\n    probe.aac = utils;\n    var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * walks through segment data looking for pat and pmt packets to parse out\n     * program map table information\n     */\n\n    var parsePsi_ = function parsePsi_(bytes, pmt) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type;\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pat':\n              pmt.pid = probe.ts.parsePat(packet);\n              break;\n\n            case 'pmt':\n              var table = probe.ts.parsePmt(packet);\n              pmt.table = pmt.table || {};\n              Object.keys(table).forEach(function (key) {\n                pmt.table[key] = table[key];\n              });\n              break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last audio pes packets\n     */\n\n\n    var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed;\n      var endLoop = false; // Start walking from start of segment to get first audio packet\n\n      while (endIndex <= bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last audio packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last video pes packets as well as timing information for the first\n     * key frame.\n     */\n\n\n    var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed,\n          frame,\n          i,\n          pes;\n      var endLoop = false;\n      var currentFrame = {\n        data: [],\n        size: 0\n      }; // Start walking from start of segment to get first video packet\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video') {\n                if (pusi && !endLoop) {\n                  parsed = probe.ts.parsePesTime(packet);\n\n                  if (parsed) {\n                    parsed.type = 'video';\n                    result.video.push(parsed);\n                    endLoop = true;\n                  }\n                }\n\n                if (!result.firstKeyFrame) {\n                  if (pusi) {\n                    if (currentFrame.size !== 0) {\n                      frame = new Uint8Array(currentFrame.size);\n                      i = 0;\n\n                      while (currentFrame.data.length) {\n                        pes = currentFrame.data.shift();\n                        frame.set(pes, i);\n                        i += pes.byteLength;\n                      }\n\n                      if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                        var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                        // the keyframe seems to work fine with HLS playback\n                        // and definitely preferable to a crash with TypeError...\n\n                        if (firstKeyFrame) {\n                          result.firstKeyFrame = firstKeyFrame;\n                          result.firstKeyFrame.type = 'video';\n                        } else {\n                          // eslint-disable-next-line\n                          console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                        }\n                      }\n\n                      currentFrame.size = 0;\n                    }\n                  }\n\n                  currentFrame.data.push(packet);\n                  currentFrame.size += packet.byteLength;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop && result.firstKeyFrame) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last video packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * Adjusts the timestamp information for the segment to account for\n     * rollover and convert to seconds based on pes packet timescale (90khz clock)\n     */\n\n\n    var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n      if (segmentInfo.audio && segmentInfo.audio.length) {\n        var audioBaseTimestamp = baseTimestamp;\n\n        if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n          audioBaseTimestamp = segmentInfo.audio[0].dts;\n        }\n\n        segmentInfo.audio.forEach(function (info) {\n          info.dts = handleRollover(info.dts, audioBaseTimestamp);\n          info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n      }\n\n      if (segmentInfo.video && segmentInfo.video.length) {\n        var videoBaseTimestamp = baseTimestamp;\n\n        if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n          videoBaseTimestamp = segmentInfo.video[0].dts;\n        }\n\n        segmentInfo.video.forEach(function (info) {\n          info.dts = handleRollover(info.dts, videoBaseTimestamp);\n          info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n\n        if (segmentInfo.firstKeyFrame) {\n          var frame = segmentInfo.firstKeyFrame;\n          frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n          frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n          frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n          frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n        }\n      }\n    };\n    /**\n     * inspects the aac data stream for start and end time information\n     */\n\n\n    var inspectAac_ = function inspectAac_(bytes) {\n      var endLoop = false,\n          audioCount = 0,\n          sampleRate = null,\n          timestamp = null,\n          frameSize = 0,\n          byteIndex = 0,\n          packet;\n\n      while (bytes.length - byteIndex >= 3) {\n        var type = probe.aac.parseType(bytes, byteIndex);\n\n        switch (type) {\n          case 'timed-metadata':\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (bytes.length - byteIndex < 10) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (timestamp === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              timestamp = probe.aac.parseAacTimestamp(packet);\n            }\n\n            byteIndex += frameSize;\n            break;\n\n          case 'audio':\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (bytes.length - byteIndex < 7) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (sampleRate === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              sampleRate = probe.aac.parseSampleRate(packet);\n            }\n\n            audioCount++;\n            byteIndex += frameSize;\n            break;\n\n          default:\n            byteIndex++;\n            break;\n        }\n\n        if (endLoop) {\n          return null;\n        }\n      }\n\n      if (sampleRate === null || timestamp === null) {\n        return null;\n      }\n\n      var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n      var result = {\n        audio: [{\n          type: 'audio',\n          dts: timestamp,\n          pts: timestamp\n        }, {\n          type: 'audio',\n          dts: timestamp + audioCount * 1024 * audioTimescale,\n          pts: timestamp + audioCount * 1024 * audioTimescale\n        }]\n      };\n      return result;\n    };\n    /**\n     * inspects the transport stream segment data for start and end time information\n     * of the audio and video tracks (when present) as well as the first key frame's\n     * start time.\n     */\n\n\n    var inspectTs_ = function inspectTs_(bytes) {\n      var pmt = {\n        pid: null,\n        table: null\n      };\n      var result = {};\n      parsePsi_(bytes, pmt);\n\n      for (var pid in pmt.table) {\n        if (pmt.table.hasOwnProperty(pid)) {\n          var type = pmt.table[pid];\n\n          switch (type) {\n            case streamTypes.H264_STREAM_TYPE:\n              result.video = [];\n              parseVideoPes_(bytes, pmt, result);\n\n              if (result.video.length === 0) {\n                delete result.video;\n              }\n\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              result.audio = [];\n              parseAudioPes_(bytes, pmt, result);\n\n              if (result.audio.length === 0) {\n                delete result.audio;\n              }\n\n              break;\n          }\n        }\n      }\n\n      return result;\n    };\n    /**\n     * Inspects segment byte data and returns an object with start and end timing information\n     *\n     * @param {Uint8Array} bytes The segment byte data\n     * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n     *  timestamps for rollover. This value must be in 90khz clock.\n     * @return {Object} Object containing start and end frame timing info of segment.\n     */\n\n\n    var inspect = function inspect(bytes, baseTimestamp) {\n      var isAacData = probe.aac.isLikelyAacData(bytes);\n      var result;\n\n      if (isAacData) {\n        result = inspectAac_(bytes);\n      } else {\n        result = inspectTs_(bytes);\n      }\n\n      if (!result || !result.audio && !result.video) {\n        return null;\n      }\n\n      adjustTimestamp_(result, baseTimestamp);\n      return result;\n    };\n\n    var tsInspector = {\n      inspect: inspect,\n      parseAudioPes_: parseAudioPes_\n    };\n    /* global self */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n        var videoSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n      transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n        // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n        var audioSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'audioSegmentTimingInfo',\n          audioSegmentTimingInfo: audioSegmentTimingInfo\n        });\n      });\n      transmuxer.on('id3Frame', function (id3Frame) {\n        self.postMessage({\n          action: 'id3Frame',\n          id3Frame: id3Frame\n        });\n      });\n      transmuxer.on('caption', function (caption) {\n        self.postMessage({\n          action: 'caption',\n          caption: caption\n        });\n      });\n      transmuxer.on('trackinfo', function (trackInfo) {\n        self.postMessage({\n          action: 'trackinfo',\n          trackInfo: trackInfo\n        });\n      });\n      transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n        // convert to video TS since we prioritize video time over audio\n        self.postMessage({\n          action: 'audioTimingInfo',\n          audioTimingInfo: {\n            start: clock.videoTsToSeconds(audioTimingInfo.start),\n            end: clock.videoTsToSeconds(audioTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n        self.postMessage({\n          action: 'videoTimingInfo',\n          videoTimingInfo: {\n            start: clock.videoTsToSeconds(videoTimingInfo.start),\n            end: clock.videoTsToSeconds(videoTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('log', function (log) {\n        self.postMessage({\n          action: 'log',\n          log: log\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = /*#__PURE__*/function () {\n      function MessageHandlers(self, options) {\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      var _proto = MessageHandlers.prototype;\n\n      _proto.init = function init() {\n        if (this.transmuxer) {\n          this.transmuxer.dispose();\n        }\n\n        this.transmuxer = new transmuxer.Transmuxer(this.options);\n        wireTransmuxerEvents(this.self, this.transmuxer);\n      };\n\n      _proto.pushMp4Captions = function pushMp4Captions(data) {\n        if (!this.captionParser) {\n          this.captionParser = new captionParser();\n          this.captionParser.init();\n        }\n\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n        this.self.postMessage({\n          action: 'mp4Captions',\n          captions: parsed && parsed.captions || [],\n          logs: parsed && parsed.logs || [],\n          data: segment.buffer\n        }, [segment.buffer]);\n      };\n\n      _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n        var timescales = _ref.timescales,\n            data = _ref.data;\n        var startTime = probe$2.startTime(timescales, data);\n        this.self.postMessage({\n          action: 'probeMp4StartTime',\n          startTime: startTime,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n        var data = _ref2.data;\n        var tracks = probe$2.tracks(data);\n        this.self.postMessage({\n          action: 'probeMp4Tracks',\n          tracks: tracks,\n          data: data\n        }, [data.buffer]);\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n       * internal \"media time,\" as well as whether it contains video and/or audio.\n       *\n       * @private\n       * @param {Uint8Array} bytes - segment bytes\n       * @param {number} baseStartTime\n       *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n       *        This value should be in seconds, as it's converted to a 90khz clock within the\n       *        function body.\n       * @return {Object} The start time of the current segment in \"media time\" as well as\n       *                  whether it contains video and/or audio\n       */\n      ;\n\n      _proto.probeTs = function probeTs(_ref3) {\n        var data = _ref3.data,\n            baseStartTime = _ref3.baseStartTime;\n        var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n        var timeInfo = tsInspector.inspect(data, tsStartTime);\n        var result = null;\n\n        if (timeInfo) {\n          result = {\n            // each type's time info comes back as an array of 2 times, start and end\n            hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n            hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n          };\n\n          if (result.hasVideo) {\n            result.videoStart = timeInfo.video[0].ptsTime;\n          }\n\n          if (result.hasAudio) {\n            result.audioStart = timeInfo.audio[0].ptsTime;\n          }\n        }\n\n        this.self.postMessage({\n          action: 'probeTs',\n          result: result,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearAllCaptions();\n        }\n      };\n\n      _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearParsedCaptions();\n        }\n      }\n      /**\n       * Adds data (a ts segment) to the start of the transmuxer pipeline for\n       * processing.\n       *\n       * @param {ArrayBuffer} data data to push into the muxer\n       */\n      ;\n\n      _proto.push = function push(data) {\n        // Cast array buffer to correct type for transmuxer\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        this.transmuxer.push(segment);\n      }\n      /**\n       * Recreate the transmuxer so that the next segment added via `push`\n       * start with a fresh transmuxer.\n       */\n      ;\n\n      _proto.reset = function reset() {\n        this.transmuxer.reset();\n      }\n      /**\n       * Set the value that will be used as the `baseMediaDecodeTime` time for the\n       * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n       * set relative to the first based on the PTS values.\n       *\n       * @param {Object} data used to set the timestamp offset in the muxer\n       */\n      ;\n\n      _proto.setTimestampOffset = function setTimestampOffset(data) {\n        var timestampOffset = data.timestampOffset || 0;\n        this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n      };\n\n      _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n        this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n      };\n\n      _proto.setRemux = function setRemux(data) {\n        this.transmuxer.setRemux(data.remux);\n      }\n      /**\n       * Forces the pipeline to finish processing the last segment and emit it's\n       * results.\n       *\n       * @param {Object} data event data, not really used\n       */\n      ;\n\n      _proto.flush = function flush(data) {\n        this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n        self.postMessage({\n          action: 'done',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.endTimeline = function endTimeline() {\n        this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n        // timelines\n\n        self.postMessage({\n          action: 'endedtimeline',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.alignGopsWith = function alignGopsWith(data) {\n        this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n      };\n\n      return MessageHandlers;\n    }();\n    /**\n     * Our web worker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    self.onmessage = function (event) {\n      if (event.data.action === 'init' && event.data.options) {\n        this.messageHandlers = new MessageHandlers(self, event.data.options);\n        return;\n      }\n\n      if (!this.messageHandlers) {\n        this.messageHandlers = new MessageHandlers(self);\n      }\n\n      if (event.data && event.data.action && event.data.action !== 'init') {\n        if (this.messageHandlers[event.data.action]) {\n          this.messageHandlers[event.data.action](event.data);\n        }\n      }\n    };\n  }));\n  var TransmuxWorker = factory(workerCode$1);\n  /* rollup-plugin-worker-factory end for worker!/Users/gkatsevman/p/http-streaming-release/src/transmuxer-worker.js */\n\n  var handleData_ = function handleData_(event, transmuxedData, callback) {\n    var _event$data$segment = event.data.segment,\n        type = _event$data$segment.type,\n        initSegment = _event$data$segment.initSegment,\n        captions = _event$data$segment.captions,\n        captionStreams = _event$data$segment.captionStreams,\n        metadata = _event$data$segment.metadata,\n        videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n        videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n    transmuxedData.buffer.push({\n      captions: captions,\n      captionStreams: captionStreams,\n      metadata: metadata\n    });\n    var boxes = event.data.segment.boxes || {\n      data: event.data.segment.data\n    };\n    var result = {\n      type: type,\n      // cast ArrayBuffer to TypedArray\n      data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n      initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n    };\n\n    if (typeof videoFrameDtsTime !== 'undefined') {\n      result.videoFrameDtsTime = videoFrameDtsTime;\n    }\n\n    if (typeof videoFramePtsTime !== 'undefined') {\n      result.videoFramePtsTime = videoFramePtsTime;\n    }\n\n    callback(result);\n  };\n\n  var handleDone_ = function handleDone_(_ref) {\n    var transmuxedData = _ref.transmuxedData,\n        callback = _ref.callback; // Previously we only returned data on data events,\n    // not on done events. Clear out the buffer to keep that consistent.\n\n    transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n    // have received\n\n    callback(transmuxedData);\n  };\n\n  var handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n    transmuxedData.gopInfo = event.data.gopInfo;\n  };\n\n  var processTransmux = function processTransmux(options) {\n    var transmuxer = options.transmuxer,\n        bytes = options.bytes,\n        audioAppendStart = options.audioAppendStart,\n        gopsToAlignWith = options.gopsToAlignWith,\n        remux = options.remux,\n        onData = options.onData,\n        onTrackInfo = options.onTrackInfo,\n        onAudioTimingInfo = options.onAudioTimingInfo,\n        onVideoTimingInfo = options.onVideoTimingInfo,\n        onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n        onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n        onId3 = options.onId3,\n        onCaptions = options.onCaptions,\n        onDone = options.onDone,\n        onEndedTimeline = options.onEndedTimeline,\n        onTransmuxerLog = options.onTransmuxerLog,\n        isEndOfTimeline = options.isEndOfTimeline;\n    var transmuxedData = {\n      buffer: []\n    };\n    var waitForEndedTimelineEvent = isEndOfTimeline;\n\n    var handleMessage = function handleMessage(event) {\n      if (transmuxer.currentTransmux !== options) {\n        // disposed\n        return;\n      }\n\n      if (event.data.action === 'data') {\n        handleData_(event, transmuxedData, onData);\n      }\n\n      if (event.data.action === 'trackinfo') {\n        onTrackInfo(event.data.trackInfo);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        handleGopInfo_(event, transmuxedData);\n      }\n\n      if (event.data.action === 'audioTimingInfo') {\n        onAudioTimingInfo(event.data.audioTimingInfo);\n      }\n\n      if (event.data.action === 'videoTimingInfo') {\n        onVideoTimingInfo(event.data.videoTimingInfo);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'audioSegmentTimingInfo') {\n        onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'id3Frame') {\n        onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n      }\n\n      if (event.data.action === 'caption') {\n        onCaptions(event.data.caption);\n      }\n\n      if (event.data.action === 'endedtimeline') {\n        waitForEndedTimelineEvent = false;\n        onEndedTimeline();\n      }\n\n      if (event.data.action === 'log') {\n        onTransmuxerLog(event.data.log);\n      } // wait for the transmuxed event since we may have audio and video\n\n\n      if (event.data.type !== 'transmuxed') {\n        return;\n      } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n      // of a timeline, that means there may still be data events before the segment\n      // processing can be considerred complete. In that case, the final event should be\n      // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n      if (waitForEndedTimelineEvent) {\n        return;\n      }\n\n      transmuxer.onmessage = null;\n      handleDone_({\n        transmuxedData: transmuxedData,\n        callback: onDone\n      });\n      /* eslint-disable no-use-before-define */\n\n      dequeue(transmuxer);\n      /* eslint-enable */\n    };\n\n    transmuxer.onmessage = handleMessage;\n\n    if (audioAppendStart) {\n      transmuxer.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioAppendStart\n      });\n    } // allow empty arrays to be passed to clear out GOPs\n\n\n    if (Array.isArray(gopsToAlignWith)) {\n      transmuxer.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsToAlignWith\n      });\n    }\n\n    if (typeof remux !== 'undefined') {\n      transmuxer.postMessage({\n        action: 'setRemux',\n        remux: remux\n      });\n    }\n\n    if (bytes.byteLength) {\n      var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n      var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n      transmuxer.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: byteOffset,\n        byteLength: bytes.byteLength\n      }, [buffer]);\n    }\n\n    if (isEndOfTimeline) {\n      transmuxer.postMessage({\n        action: 'endTimeline'\n      });\n    } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n    // the end of the segment\n\n\n    transmuxer.postMessage({\n      action: 'flush'\n    });\n  };\n\n  var dequeue = function dequeue(transmuxer) {\n    transmuxer.currentTransmux = null;\n\n    if (transmuxer.transmuxQueue.length) {\n      transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n      if (typeof transmuxer.currentTransmux === 'function') {\n        transmuxer.currentTransmux();\n      } else {\n        processTransmux(transmuxer.currentTransmux);\n      }\n    }\n  };\n\n  var processAction = function processAction(transmuxer, action) {\n    transmuxer.postMessage({\n      action: action\n    });\n    dequeue(transmuxer);\n  };\n\n  var enqueueAction = function enqueueAction(action, transmuxer) {\n    if (!transmuxer.currentTransmux) {\n      transmuxer.currentTransmux = action;\n      processAction(transmuxer, action);\n      return;\n    }\n\n    transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n  };\n\n  var reset = function reset(transmuxer) {\n    enqueueAction('reset', transmuxer);\n  };\n\n  var endTimeline = function endTimeline(transmuxer) {\n    enqueueAction('endTimeline', transmuxer);\n  };\n\n  var transmux = function transmux(options) {\n    if (!options.transmuxer.currentTransmux) {\n      options.transmuxer.currentTransmux = options;\n      processTransmux(options);\n      return;\n    }\n\n    options.transmuxer.transmuxQueue.push(options);\n  };\n\n  var createTransmuxer = function createTransmuxer(options) {\n    var transmuxer = new TransmuxWorker();\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue = [];\n    var term = transmuxer.terminate;\n\n    transmuxer.terminate = function () {\n      transmuxer.currentTransmux = null;\n      transmuxer.transmuxQueue.length = 0;\n      return term.call(transmuxer);\n    };\n\n    transmuxer.postMessage({\n      action: 'init',\n      options: options\n    });\n    return transmuxer;\n  };\n\n  var segmentTransmuxer = {\n    reset: reset,\n    endTimeline: endTimeline,\n    transmux: transmux,\n    createTransmuxer: createTransmuxer\n  };\n\n  var workerCallback = function workerCallback(options) {\n    var transmuxer = options.transmuxer;\n    var endAction = options.endAction || options.action;\n    var callback = options.callback;\n\n    var message = _extends_1({}, options, {\n      endAction: null,\n      transmuxer: null,\n      callback: null\n    });\n\n    var listenForEndEvent = function listenForEndEvent(event) {\n      if (event.data.action !== endAction) {\n        return;\n      }\n\n      transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n      if (event.data.data) {\n        event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n        if (options.data) {\n          options.data = event.data.data;\n        }\n      }\n\n      callback(event.data);\n    };\n\n    transmuxer.addEventListener('message', listenForEndEvent);\n\n    if (options.data) {\n      var isArrayBuffer = options.data instanceof ArrayBuffer;\n      message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n      message.byteLength = options.data.byteLength;\n      var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n      transmuxer.postMessage(message, transfers);\n    } else {\n      transmuxer.postMessage(message);\n    }\n  };\n\n  var REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n  var abortAll = function abortAll(activeXhrs) {\n    activeXhrs.forEach(function (xhr) {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n\n  var getRequestStats = function getRequestStats(request) {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n\n  var getProgressStats = function getProgressStats(progressEvent) {\n    var request = progressEvent.target;\n    var roundTripTime = Date.now() - request.requestTime;\n    var stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n\n  var handleErrors = function handleErrors(error, request) {\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request\n      };\n    }\n\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request\n      };\n    }\n\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n      return {\n        status: request.status,\n        message: 'Empty HLS response at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Array} objects - objects to add the key bytes to.\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      if (response.byteLength !== 16) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Invalid HLS key at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      var view = new DataView(response);\n      var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n      for (var i = 0; i < objects.length; i++) {\n        objects[i].bytes = bytes;\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var parseInitSegment = function parseInitSegment(segment, _callback) {\n    var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n    // only know how to parse mp4 init segments at the moment\n\n    if (type !== 'mp4') {\n      var uri = segment.map.resolvedUri || segment.map.uri;\n      return _callback({\n        internal: true,\n        message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n        code: REQUEST_ERRORS.FAILURE\n      });\n    }\n\n    workerCallback({\n      action: 'probeMp4Tracks',\n      data: segment.map.bytes,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref) {\n        var tracks = _ref.tracks,\n            data = _ref.data; // transfer bytes back to us\n\n        segment.map.bytes = data;\n        tracks.forEach(function (track) {\n          segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n          if (segment.map.tracks[track.type]) {\n            return;\n          }\n\n          segment.map.tracks[track.type] = track;\n\n          if (typeof track.id === 'number' && track.timescale) {\n            segment.map.timescales = segment.map.timescales || {};\n            segment.map.timescales[track.id] = track.timescale;\n          }\n        });\n        return _callback(null);\n      }\n    });\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n    var segment = _ref2.segment,\n        finishProcessingFn = _ref2.finishProcessingFn;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n      // until the key request is done to decrypt.\n\n      if (segment.map.key) {\n        segment.map.encryptedBytes = bytes;\n        return finishProcessingFn(null, segment);\n      }\n\n      segment.map.bytes = bytes;\n      parseInitSegment(segment, function (parseError) {\n        if (parseError) {\n          parseError.xhr = request;\n          parseError.status = request.status;\n          return finishProcessingFn(parseError, segment);\n        }\n\n        finishProcessingFn(null, segment);\n      });\n    };\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleSegmentResponse = function handleSegmentResponse(_ref3) {\n    var segment = _ref3.segment,\n        finishProcessingFn = _ref3.finishProcessingFn,\n        responseType = _ref3.responseType;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n      // thrown for two primary cases:\n      // 1. the mime type override stops working, or is not implemented for a specific\n      //    browser\n      // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n      responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n      segment.stats = getRequestStats(request);\n\n      if (segment.key) {\n        segment.encryptedBytes = new Uint8Array(newBytes);\n      } else {\n        segment.bytes = new Uint8Array(newBytes);\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var transmuxAndNotify = function transmuxAndNotify(_ref4) {\n    var segment = _ref4.segment,\n        bytes = _ref4.bytes,\n        trackInfoFn = _ref4.trackInfoFn,\n        timingInfoFn = _ref4.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n        id3Fn = _ref4.id3Fn,\n        captionsFn = _ref4.captionsFn,\n        isEndOfTimeline = _ref4.isEndOfTimeline,\n        endedTimelineFn = _ref4.endedTimelineFn,\n        dataFn = _ref4.dataFn,\n        doneFn = _ref4.doneFn,\n        onTransmuxerLog = _ref4.onTransmuxerLog;\n    var fmp4Tracks = segment.map && segment.map.tracks || {};\n    var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n    // One reason for this is that in the case of full segments, we want to trust start\n    // times from the probe, rather than the transmuxer.\n\n    var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n    var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n    var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n    var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n    var finish = function finish() {\n      return transmux({\n        bytes: bytes,\n        transmuxer: segment.transmuxer,\n        audioAppendStart: segment.audioAppendStart,\n        gopsToAlignWith: segment.gopsToAlignWith,\n        remux: isMuxed,\n        onData: function onData(result) {\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          dataFn(segment, result);\n        },\n        onTrackInfo: function onTrackInfo(trackInfo) {\n          if (trackInfoFn) {\n            if (isMuxed) {\n              trackInfo.isMuxed = true;\n            }\n\n            trackInfoFn(segment, trackInfo);\n          }\n        },\n        onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n          // we only want the first start value we encounter\n          if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n            audioStartFn(audioTimingInfo.start);\n            audioStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n            audioEndFn(audioTimingInfo.end);\n          }\n        },\n        onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n          // we only want the first start value we encounter\n          if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n            videoStartFn(videoTimingInfo.start);\n            videoStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n            videoEndFn(videoTimingInfo.end);\n          }\n        },\n        onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n          videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n        },\n        onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n          audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n        },\n        onId3: function onId3(id3Frames, dispatchType) {\n          id3Fn(segment, id3Frames, dispatchType);\n        },\n        onCaptions: function onCaptions(captions) {\n          captionsFn(segment, [captions]);\n        },\n        isEndOfTimeline: isEndOfTimeline,\n        onEndedTimeline: function onEndedTimeline() {\n          endedTimelineFn();\n        },\n        onTransmuxerLog: onTransmuxerLog,\n        onDone: function onDone(result) {\n          if (!doneFn) {\n            return;\n          }\n\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          doneFn(null, segment, result);\n        }\n      });\n    }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n    // Meaning cached frame data may corrupt our notion of where this segment\n    // really starts. To get around this, probe for the info needed.\n\n\n    workerCallback({\n      action: 'probeTs',\n      transmuxer: segment.transmuxer,\n      data: bytes,\n      baseStartTime: segment.baseStartTime,\n      callback: function callback(data) {\n        segment.bytes = bytes = data.data;\n        var probeResult = data.result;\n\n        if (probeResult) {\n          trackInfoFn(segment, {\n            hasAudio: probeResult.hasAudio,\n            hasVideo: probeResult.hasVideo,\n            isMuxed: isMuxed\n          });\n          trackInfoFn = null;\n\n          if (probeResult.hasAudio && !isMuxed) {\n            audioStartFn(probeResult.audioStart);\n          }\n\n          if (probeResult.hasVideo) {\n            videoStartFn(probeResult.videoStart);\n          }\n\n          audioStartFn = null;\n          videoStartFn = null;\n        }\n\n        finish();\n      }\n    });\n  };\n\n  var handleSegmentBytes = function handleSegmentBytes(_ref5) {\n    var segment = _ref5.segment,\n        bytes = _ref5.bytes,\n        trackInfoFn = _ref5.trackInfoFn,\n        timingInfoFn = _ref5.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n        id3Fn = _ref5.id3Fn,\n        captionsFn = _ref5.captionsFn,\n        isEndOfTimeline = _ref5.isEndOfTimeline,\n        endedTimelineFn = _ref5.endedTimelineFn,\n        dataFn = _ref5.dataFn,\n        doneFn = _ref5.doneFn,\n        onTransmuxerLog = _ref5.onTransmuxerLog;\n    var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n    // We should have a handler that fetches the number of bytes required\n    // to check if something is fmp4. This will allow us to save bandwidth\n    // because we can only blacklist a playlist and abort requests\n    // by codec after trackinfo triggers.\n\n    if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n      segment.isFmp4 = true;\n      var tracks = segment.map.tracks;\n      var trackInfo = {\n        isFmp4: true,\n        hasVideo: !!tracks.video,\n        hasAudio: !!tracks.audio\n      }; // if we have a audio track, with a codec that is not set to\n      // encrypted audio\n\n      if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n        trackInfo.audioCodec = tracks.audio.codec;\n      } // if we have a video track, with a codec that is not set to\n      // encrypted video\n\n\n      if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n        trackInfo.videoCodec = tracks.video.codec;\n      }\n\n      if (tracks.video && tracks.audio) {\n        trackInfo.isMuxed = true;\n      } // since we don't support appending fmp4 data on progress, we know we have the full\n      // segment here\n\n\n      trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n      // time. The end time can be roughly calculated by the receiver using the duration.\n      //\n      // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n      // that is the true start of the segment (where the playback engine should begin\n      // decoding).\n\n      var finishLoading = function finishLoading(captions) {\n        // if the track still has audio at this point it is only possible\n        // for it to be audio only. See `tracks.video && tracks.audio` if statement\n        // above.\n        // we make sure to use segment.bytes here as that\n        dataFn(segment, {\n          data: bytesAsUint8Array,\n          type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n        });\n\n        if (captions && captions.length) {\n          captionsFn(segment, captions);\n        }\n\n        doneFn(null, segment, {});\n      };\n\n      workerCallback({\n        action: 'probeMp4StartTime',\n        timescales: segment.map.timescales,\n        data: bytesAsUint8Array,\n        transmuxer: segment.transmuxer,\n        callback: function callback(_ref6) {\n          var data = _ref6.data,\n              startTime = _ref6.startTime; // transfer bytes back to us\n\n          bytes = data.buffer;\n          segment.bytes = bytesAsUint8Array = data;\n\n          if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n            timingInfoFn(segment, 'audio', 'start', startTime);\n          }\n\n          if (trackInfo.hasVideo) {\n            timingInfoFn(segment, 'video', 'start', startTime);\n          } // Run through the CaptionParser in case there are captions.\n          // Initialize CaptionParser if it hasn't been yet\n\n\n          if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n            finishLoading();\n            return;\n          }\n\n          workerCallback({\n            action: 'pushMp4Captions',\n            endAction: 'mp4Captions',\n            transmuxer: segment.transmuxer,\n            data: bytesAsUint8Array,\n            timescales: segment.map.timescales,\n            trackIds: [tracks.video.id],\n            callback: function callback(message) {\n              // transfer bytes back to us\n              bytes = message.data.buffer;\n              segment.bytes = bytesAsUint8Array = message.data;\n              message.logs.forEach(function (log) {\n                onTransmuxerLog(videojs.mergeOptions(log, {\n                  stream: 'mp4CaptionParser'\n                }));\n              });\n              finishLoading(message.captions);\n            }\n          });\n        }\n      });\n      return;\n    } // VTT or other segments that don't need processing\n\n\n    if (!segment.transmuxer) {\n      doneFn(null, segment, {});\n      return;\n    }\n\n    if (typeof segment.container === 'undefined') {\n      segment.container = detectContainerForBytes(bytesAsUint8Array);\n    }\n\n    if (segment.container !== 'ts' && segment.container !== 'aac') {\n      trackInfoFn(segment, {\n        hasAudio: false,\n        hasVideo: false\n      });\n      doneFn(null, segment, {});\n      return;\n    } // ts or aac\n\n\n    transmuxAndNotify({\n      segment: segment,\n      bytes: bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  };\n\n  var decrypt = function decrypt(_ref7, callback) {\n    var id = _ref7.id,\n        key = _ref7.key,\n        encryptedBytes = _ref7.encryptedBytes,\n        decryptionWorker = _ref7.decryptionWorker;\n\n    var decryptionHandler = function decryptionHandler(event) {\n      if (event.data.source === id) {\n        decryptionWorker.removeEventListener('message', decryptionHandler);\n        var decrypted = event.data.decrypted;\n        callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n      }\n    };\n\n    decryptionWorker.addEventListener('message', decryptionHandler);\n    var keyBytes;\n\n    if (key.bytes.slice) {\n      keyBytes = key.bytes.slice();\n    } else {\n      keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n    } // incrementally decrypt the bytes\n\n\n    decryptionWorker.postMessage(createTransferableMessage({\n      source: id,\n      encrypted: encryptedBytes,\n      key: keyBytes,\n      iv: key.iv\n    }), [encryptedBytes.buffer, keyBytes.buffer]);\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n\n  var decryptSegment = function decryptSegment(_ref8) {\n    var decryptionWorker = _ref8.decryptionWorker,\n        segment = _ref8.segment,\n        trackInfoFn = _ref8.trackInfoFn,\n        timingInfoFn = _ref8.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n        id3Fn = _ref8.id3Fn,\n        captionsFn = _ref8.captionsFn,\n        isEndOfTimeline = _ref8.isEndOfTimeline,\n        endedTimelineFn = _ref8.endedTimelineFn,\n        dataFn = _ref8.dataFn,\n        doneFn = _ref8.doneFn,\n        onTransmuxerLog = _ref8.onTransmuxerLog;\n    decrypt({\n      id: segment.requestId,\n      key: segment.key,\n      encryptedBytes: segment.encryptedBytes,\n      decryptionWorker: decryptionWorker\n    }, function (decryptedBytes) {\n      segment.bytes = decryptedBytes;\n      handleSegmentBytes({\n        segment: segment,\n        bytes: segment.bytes,\n        trackInfoFn: trackInfoFn,\n        timingInfoFn: timingInfoFn,\n        videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n        id3Fn: id3Fn,\n        captionsFn: captionsFn,\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: endedTimelineFn,\n        dataFn: dataFn,\n        doneFn: doneFn,\n        onTransmuxerLog: onTransmuxerLog\n      });\n    });\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n\n  var waitForCompletion = function waitForCompletion(_ref9) {\n    var activeXhrs = _ref9.activeXhrs,\n        decryptionWorker = _ref9.decryptionWorker,\n        trackInfoFn = _ref9.trackInfoFn,\n        timingInfoFn = _ref9.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n        id3Fn = _ref9.id3Fn,\n        captionsFn = _ref9.captionsFn,\n        isEndOfTimeline = _ref9.isEndOfTimeline,\n        endedTimelineFn = _ref9.endedTimelineFn,\n        dataFn = _ref9.dataFn,\n        doneFn = _ref9.doneFn,\n        onTransmuxerLog = _ref9.onTransmuxerLog;\n    var count = 0;\n    var didError = false;\n    return function (error, segment) {\n      if (didError) {\n        return;\n      }\n\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n\n      count += 1;\n\n      if (count === activeXhrs.length) {\n        var segmentFinish = function segmentFinish() {\n          if (segment.encryptedBytes) {\n            return decryptSegment({\n              decryptionWorker: decryptionWorker,\n              segment: segment,\n              trackInfoFn: trackInfoFn,\n              timingInfoFn: timingInfoFn,\n              videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n              audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n              id3Fn: id3Fn,\n              captionsFn: captionsFn,\n              isEndOfTimeline: isEndOfTimeline,\n              endedTimelineFn: endedTimelineFn,\n              dataFn: dataFn,\n              doneFn: doneFn,\n              onTransmuxerLog: onTransmuxerLog\n            });\n          } // Otherwise, everything is ready just continue\n\n\n          handleSegmentBytes({\n            segment: segment,\n            bytes: segment.bytes,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        }; // Keep track of when *all* of the requests have completed\n\n\n        segment.endOfAllRequests = Date.now();\n\n        if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n          return decrypt({\n            decryptionWorker: decryptionWorker,\n            // add -init to the \"id\" to differentiate between segment\n            // and init segment decryption, just in case they happen\n            // at the same time at some point in the future.\n            id: segment.requestId + '-init',\n            encryptedBytes: segment.map.encryptedBytes,\n            key: segment.map.key\n          }, function (decryptedBytes) {\n            segment.map.bytes = decryptedBytes;\n            parseInitSegment(segment, function (parseError) {\n              if (parseError) {\n                abortAll(activeXhrs);\n                return doneFn(parseError, segment);\n              }\n\n              segmentFinish();\n            });\n          });\n        }\n\n        segmentFinish();\n      }\n    };\n  };\n  /**\n   * Calls the abort callback if any request within the batch was aborted. Will only call\n   * the callback once per batch of requests, even if multiple were aborted.\n   *\n   * @param {Object} loadendState - state to check to see if the abort function was called\n   * @param {Function} abortFn - callback to call for abort\n   */\n\n\n  var handleLoadEnd = function handleLoadEnd(_ref10) {\n    var loadendState = _ref10.loadendState,\n        abortFn = _ref10.abortFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n        abortFn();\n        loadendState.calledAbortFn = true;\n      }\n    };\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n\n  var handleProgress = function handleProgress(_ref11) {\n    var segment = _ref11.segment,\n        progressFn = _ref11.progressFn;\n    _ref11.trackInfoFn;\n    _ref11.timingInfoFn;\n    _ref11.videoSegmentTimingInfoFn;\n    _ref11.audioSegmentTimingInfoFn;\n    _ref11.id3Fn;\n    _ref11.captionsFn;\n    _ref11.isEndOfTimeline;\n    _ref11.endedTimelineFn;\n    _ref11.dataFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted) {\n        return;\n      }\n\n      segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n      if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n        segment.stats.firstBytesReceivedAt = Date.now();\n      }\n\n      return progressFn(event, segment);\n    };\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [transmuxer]: Object,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n   *                             aborted\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n   *                            request, transmuxed if needed\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @return {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n\n  var mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n    var xhr = _ref12.xhr,\n        xhrOptions = _ref12.xhrOptions,\n        decryptionWorker = _ref12.decryptionWorker,\n        segment = _ref12.segment,\n        abortFn = _ref12.abortFn,\n        progressFn = _ref12.progressFn,\n        trackInfoFn = _ref12.trackInfoFn,\n        timingInfoFn = _ref12.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n        id3Fn = _ref12.id3Fn,\n        captionsFn = _ref12.captionsFn,\n        isEndOfTimeline = _ref12.isEndOfTimeline,\n        endedTimelineFn = _ref12.endedTimelineFn,\n        dataFn = _ref12.dataFn,\n        doneFn = _ref12.doneFn,\n        onTransmuxerLog = _ref12.onTransmuxerLog;\n    var activeXhrs = [];\n    var finishProcessingFn = waitForCompletion({\n      activeXhrs: activeXhrs,\n      decryptionWorker: decryptionWorker,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    }); // optionally, request the decryption key\n\n    if (segment.key && !segment.key.bytes) {\n      var objects = [segment.key];\n\n      if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n        objects.push(segment.map.key);\n      }\n\n      var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n      var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n\n    if (segment.map && !segment.map.bytes) {\n      var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n      if (differentMapKey) {\n        var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n          uri: segment.map.key.resolvedUri,\n          responseType: 'arraybuffer'\n        });\n        var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n        var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n        activeXhrs.push(mapKeyXhr);\n      }\n\n      var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map)\n      });\n      var initSegmentRequestCallback = handleInitSegmentResponse({\n        segment: segment,\n        finishProcessingFn: finishProcessingFn\n      });\n      var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n\n    var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment)\n    });\n    var segmentRequestCallback = handleSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn,\n      responseType: segmentRequestOptions.responseType\n    });\n    var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress({\n      segment: segment,\n      progressFn: progressFn,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn\n    }));\n    activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n    // multiple times, provide a shared state object\n\n    var loadendState = {};\n    activeXhrs.forEach(function (activeXhr) {\n      activeXhr.addEventListener('loadend', handleLoadEnd({\n        loadendState: loadendState,\n        abortFn: abortFn\n      }));\n    });\n    return function () {\n      return abortAll(activeXhrs);\n    };\n  };\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n\n\n  var logFn$1 = logger('CodecUtils');\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   *\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n  var getCodecs = function getCodecs(media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    var mediaAttributes = media.attributes || {};\n\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n  };\n\n  var isMaat = function isMaat(master, media) {\n    var mediaAttributes = media.attributes || {};\n    return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  };\n\n  var isMuxed = function isMuxed(master, media) {\n    if (!isMaat(master, media)) {\n      return true;\n    }\n\n    var mediaAttributes = media.attributes || {};\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    for (var groupId in audioGroup) {\n      // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n      // or there are listed playlists (the case for DASH, as the manifest will have already\n      // provided all of the details necessary to generate the audio playlist, as opposed to\n      // HLS' externally requested playlists), then the content is demuxed.\n      if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var unwrapCodecList = function unwrapCodecList(codecList) {\n    var codecs = {};\n    codecList.forEach(function (_ref) {\n      var mediaType = _ref.mediaType,\n          type = _ref.type,\n          details = _ref.details;\n      codecs[mediaType] = codecs[mediaType] || [];\n      codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n    });\n    Object.keys(codecs).forEach(function (mediaType) {\n      if (codecs[mediaType].length > 1) {\n        logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n        codecs[mediaType] = null;\n        return;\n      }\n\n      codecs[mediaType] = codecs[mediaType][0];\n    });\n    return codecs;\n  };\n\n  var codecCount = function codecCount(codecObj) {\n    var count = 0;\n\n    if (codecObj.audio) {\n      count++;\n    }\n\n    if (codecObj.video) {\n      count++;\n    }\n\n    return count;\n  };\n  /**\n   * Calculates the codec strings for a working configuration of\n   * SourceBuffers to play variant streams in a master playlist. If\n   * there is no possible working configuration, an empty object will be\n   * returned.\n   *\n   * @param master {Object} the m3u8 object for the master playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Object} the codec strings.\n   *\n   * @private\n   */\n\n\n  var codecsForPlaylist = function codecsForPlaylist(master, media) {\n    var mediaAttributes = media.attributes || {};\n    var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n    if (isMaat(master, media) && !codecInfo.audio) {\n      if (!isMuxed(master, media)) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n        if (defaultCodecs.audio) {\n          codecInfo.audio = defaultCodecs.audio;\n        }\n      }\n    }\n\n    return codecInfo;\n  };\n\n  var logFn = logger('PlaylistSelector');\n\n  var representationToString = function representationToString(representation) {\n    if (!representation || !representation.playlist) {\n      return;\n    }\n\n    var playlist = representation.playlist;\n    return JSON.stringify({\n      id: playlist.id,\n      bandwidth: representation.bandwidth,\n      width: representation.width,\n      height: representation.height,\n      codecs: playlist.attributes && playlist.attributes.CODECS || ''\n    });\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n\n  var safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n    if (!el) {\n      return '';\n    }\n\n    var result = window.getComputedStyle(el);\n\n    if (!result) {\n      return '';\n    }\n\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n\n  var stableSort = function stableSort(array, sortFn) {\n    var newArray = array.slice();\n    array.sort(function (left, right) {\n      var cmp = sortFn(left, right);\n\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n    var leftBandwidth;\n    var rightBandwidth;\n\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n\n    leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n\n    rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n    var leftWidth;\n    var rightWidth;\n\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n\n    leftWidth = leftWidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n\n    rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} master\n   *        Object representation of the master manifest\n   * @param {number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {number} playerWidth\n   *        Current width of the player element (should account for the device pixel ratio)\n   * @param {number} playerHeight\n   *        Current height of the player element (should account for the device pixel ratio)\n   * @param {boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @param {Object} masterPlaylistController\n   *        the current masterPlaylistController object\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n    // If we end up getting called before `master` is available, exit early\n    if (!master) {\n      return;\n    }\n\n    var options = {\n      bandwidth: playerBandwidth,\n      width: playerWidth,\n      height: playerHeight,\n      limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n    };\n    var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n    if (Playlist.isAudioOnly(master)) {\n      playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n      // at the buttom of this function for debugging.\n\n      options.audioOnly = true;\n    } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n    var sortedPlaylistReps = playlists.map(function (playlist) {\n      var bandwidth;\n      var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window.Number.MAX_VALUE;\n      return {\n        bandwidth: bandwidth,\n        width: width,\n        height: height,\n        playlist: playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, function (left, right) {\n      return left.bandwidth - right.bandwidth;\n    }); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isIncompatible(rep.playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return Playlist.isEnabled(rep.playlist);\n    });\n\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n        return !Playlist.isDisabled(rep.playlist);\n      });\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n\n    var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n      return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n    });\n    var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n      if (_chosenRep && _chosenRep.playlist) {\n        var type = 'sortedPlaylistReps';\n\n        if (bandwidthBestRep) {\n          type = 'bandwidthBestRep';\n        }\n\n        if (enabledPlaylistReps[0]) {\n          type = 'enabledPlaylistReps';\n        }\n\n        logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n        return _chosenRep.playlist;\n      }\n\n      logFn('could not choose a playlist with options', options);\n      return null;\n    } // filter out playlists without resolution information\n\n\n    var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.width && rep.height;\n    }); // sort variants by resolution\n\n    stableSort(haveResolution, function (left, right) {\n      return left.width - right.width;\n    }); // if we have the exact resolution as the player use it\n\n    var resolutionBestRepList = haveResolution.filter(function (rep) {\n      return rep.width === playerWidth && rep.height === playerHeight;\n    });\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n    var resolutionPlusOneList;\n    var resolutionPlusOneSmallest;\n    var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(function (rep) {\n        return rep.width > playerWidth || rep.height > playerHeight;\n      }); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n        return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n      }); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n        return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n      })[0];\n    }\n\n    var leastPixelDiffRep; // If this selector proves to be better than others,\n    // resolutionPlusOneRep and resolutionBestRep and all\n    // the code involving them should be removed.\n\n    if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n      // find the variant that is closest to the player's pixel size\n      var leastPixelDiffList = haveResolution.map(function (rep) {\n        rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n        return rep;\n      }); // get the highest bandwidth, closest resolution playlist\n\n      stableSort(leastPixelDiffList, function (left, right) {\n        // sort by highest bandwidth if pixelDiff is the same\n        if (left.pixelDiff === right.pixelDiff) {\n          return right.bandwidth - left.bandwidth;\n        }\n\n        return left.pixelDiff - right.pixelDiff;\n      });\n      leastPixelDiffRep = leastPixelDiffList[0];\n    } // fallback chain of variants\n\n\n    var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (chosenRep && chosenRep.playlist) {\n      var _type = 'sortedPlaylistReps';\n\n      if (leastPixelDiffRep) {\n        _type = 'leastPixelDiffRep';\n      } else if (resolutionPlusOneRep) {\n        _type = 'resolutionPlusOneRep';\n      } else if (resolutionBestRep) {\n        _type = 'resolutionBestRep';\n      } else if (bandwidthBestRep) {\n        _type = 'bandwidthBestRep';\n      } else if (enabledPlaylistReps[0]) {\n        _type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n      return chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  };\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var lastBandwidthSelector = function lastBandwidthSelector() {\n    var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n    return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n  /**\n   * Chooses the appropriate media playlist based on an\n   * exponential-weighted moving average of the bandwidth after\n   * filtering for player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @param {number} decay - a number between 0 and 1. Higher values of\n   * this parameter will cause previous bandwidth estimates to lose\n   * significance more quickly.\n   * @return {Function} a function which can be invoked to create a new\n   * playlist selector function.\n   * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n   */\n\n\n  var movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n    var average = -1;\n    var lastSystemBandwidth = -1;\n\n    if (decay < 0 || decay > 1) {\n      throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n    }\n\n    return function () {\n      var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n\n      if (average < 0) {\n        average = this.systemBandwidth;\n        lastSystemBandwidth = this.systemBandwidth;\n      } // stop the average value from decaying for every 250ms\n      // when the systemBandwidth is constant\n      // and\n      // stop average from setting to a very low value when the\n      // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n      if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n        average = decay * this.systemBandwidth + (1 - decay) * average;\n        lastSystemBandwidth = this.systemBandwidth;\n      }\n\n      return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n    };\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.master\n   *        Object representation of the master manifest\n   * @param {number} settings.currentTime\n   *        The current time of the player\n   * @param {number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {number} settings.duration\n   *        Duration of the media\n   * @param {number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n\n  var minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n    var master = settings.master,\n        currentTime = settings.currentTime,\n        bandwidth = settings.bandwidth,\n        duration = settings.duration,\n        segmentDuration = settings.segmentDuration,\n        timeUntilRebuffer = settings.timeUntilRebuffer,\n        currentTimeline = settings.currentTimeline,\n        syncController = settings.syncController; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    var compatiblePlaylists = master.playlists.filter(function (playlist) {\n      return !Playlist.isIncompatible(playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n        return !Playlist.isDisabled(playlist);\n      });\n    }\n\n    var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n      var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      var numRequests = syncPoint ? 1 : 2;\n      var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist: playlist,\n        rebufferingImpact: rebufferingImpact\n      };\n    });\n    var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n      return estimate.rebufferingImpact <= 0;\n    }); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, function (a, b) {\n      return comparePlaylistBandwidth(b.playlist, a.playlist);\n    });\n\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n\n    stableSort(rebufferingEstimates, function (a, b) {\n      return a.rebufferingImpact - b.rebufferingImpact;\n    });\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n\n  var lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n    var _this = this; // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n\n\n    var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, function (a, b) {\n      return comparePlaylistBandwidth(a, b);\n    }); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    var playlistsWithVideo = playlists.filter(function (playlist) {\n      return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n    });\n    return playlistsWithVideo[0] || null;\n  };\n  /**\n   * Combine all segments into a single Uint8Array\n   *\n   * @param {Object} segmentObj\n   * @return {Uint8Array} concatenated bytes\n   * @private\n   */\n\n\n  var concatSegments = function concatSegments(segmentObj) {\n    var offset = 0;\n    var tempBuffer;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n    }\n\n    return tempBuffer;\n  };\n  /**\n   * @file text-tracks.js\n   */\n\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStream the caption stream to create\n   * @private\n   */\n\n\n  var createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n    if (!inbandTextTracks[captionStream]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-608'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n      if (/^cc708_/.test(captionStream)) {\n        instreamId = 'SERVICE' + captionStream.split('_')[1];\n      }\n\n      var track = tech.textTracks().getTrackById(instreamId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[captionStream] = track;\n      } else {\n        // This section gets called when we have caption services that aren't specified in the manifest.\n        // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var label = captionStream;\n        var language = captionStream;\n        var def = false;\n        var captionService = captionServices[instreamId];\n\n        if (captionService) {\n          label = captionService.label;\n          language = captionService.language;\n          def = captionService[\"default\"];\n        } // Otherwise, create a track with the default `CC#` label and\n        // without a language\n\n\n        inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: instreamId,\n          // TODO: investigate why this doesn't seem to turn the caption on by default\n          \"default\": def,\n          label: label,\n          language: language\n        }, false).track;\n      }\n    }\n  };\n  /**\n   * Add caption text track data to a source handler given an array of captions\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {Array} captionArray an array of caption data\n   * @private\n   */\n\n\n  var addCaptionData = function addCaptionData(_ref) {\n    var inbandTextTracks = _ref.inbandTextTracks,\n        captionArray = _ref.captionArray,\n        timestampOffset = _ref.timestampOffset;\n\n    if (!captionArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    });\n  };\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n\n  var deprecateOldCue = function deprecateOldCue(cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get: function get() {\n          videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get: function get() {\n          videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get: function get() {\n          videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n  /**\n   * Add metadata text track data to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} metadataArray an array of meta data\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {number} videoDuration the duration of the video\n   * @private\n   */\n\n\n  var addMetadata = function addMetadata(_ref2) {\n    var inbandTextTracks = _ref2.inbandTextTracks,\n        metadataArray = _ref2.metadataArray,\n        timestampOffset = _ref2.timestampOffset,\n        videoDuration = _ref2.videoDuration;\n\n    if (!metadataArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    var metadataTrack = inbandTextTracks.metadataTrack_;\n\n    if (!metadataTrack) {\n      return;\n    }\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        metadataTrack.addCue(cue);\n      });\n    });\n\n    if (!metadataTrack.cues || !metadataTrack.cues.length) {\n      return;\n    } // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n\n    var cues = metadataTrack.cues;\n    var cuesArray = []; // Create a copy of the TextTrackCueList...\n    // ...disregarding cues with a falsey value\n\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i]) {\n        cuesArray.push(cues[i]);\n      }\n    } // Group cues by their startTime value\n\n\n    var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n      var timeSlot = obj[cue.startTime] || [];\n      timeSlot.push(cue);\n      obj[cue.startTime] = timeSlot;\n      return obj;\n    }, {}); // Sort startTimes by ascending order\n\n    var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }); // Map each cue group's endTime to the next group's startTime\n\n    sortedStartTimes.forEach(function (startTime, idx) {\n      var cueGroup = cuesGroupedByStartTime[startTime];\n      var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n      cueGroup.forEach(function (cue) {\n        cue.endTime = nextTime;\n      });\n    });\n  };\n  /**\n   * Create metadata text track on video.js if it does not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {string} dispatchType the inband metadata track dispatch type\n   * @param {Object} tech the video.js tech\n   * @private\n   */\n\n\n  var createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n    if (inbandTextTracks.metadataTrack_) {\n      return;\n    }\n\n    inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  };\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n\n  var removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n    var i;\n    var cue;\n\n    if (!track) {\n      return;\n    }\n\n    if (!track.cues) {\n      return;\n    }\n\n    i = track.cues.length;\n\n    while (i--) {\n      cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n      if (cue.startTime >= start && cue.endTime <= end) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * Remove duplicate cues from a track on video.js (a cue is considered a\n   * duplicate if it has the same time interval and text as another)\n   *\n   * @param {Object} track the text track to remove the duplicate cues from\n   * @private\n   */\n\n\n  var removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n    var cues = track.cues;\n\n    if (!cues) {\n      return;\n    }\n\n    for (var i = 0; i < cues.length; i++) {\n      var duplicates = [];\n      var occurrences = 0;\n\n      for (var j = 0; j < cues.length; j++) {\n        if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n          occurrences++;\n\n          if (occurrences > 1) {\n            duplicates.push(cues[j]);\n          }\n        }\n      }\n\n      if (duplicates.length) {\n        duplicates.forEach(function (dupe) {\n          return track.removeCue(dupe);\n        });\n      }\n    }\n  };\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n\n  var gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n    var currentTimePts = Math.ceil((currentTime - mapping + 3) * clock_1);\n    var i;\n\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n\n  var updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n    if (!gops.length) {\n      return buffer;\n    }\n\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n\n    var start = gops[0].pts;\n    var i = 0;\n\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n\n  var removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n    var startPts = Math.ceil((start - mapping) * clock_1);\n    var endPts = Math.ceil((end - mapping) * clock_1);\n    var updatedBuffer = buffer.slice();\n    var i = buffer.length;\n\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n\n    var j = i + 1;\n\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n\n  var shallowEqual = function shallowEqual(a, b) {\n    // if both are undefined\n    // or one or the other is undefined\n    // they are not equal\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // they are the same object and thus, equal\n\n\n    if (a === b) {\n      return true;\n    } // sort keys so we can make sure they have\n    // all the same keys later.\n\n\n    var akeys = Object.keys(a).sort();\n    var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n    if (akeys.length !== bkeys.length) {\n      return false;\n    }\n\n    for (var i = 0; i < akeys.length; i++) {\n      var key = akeys[i]; // different sorted keys, not equal\n\n      if (key !== bkeys[i]) {\n        return false;\n      } // different values, not equal\n\n\n      if (a[key] !== b[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\n  var QUOTA_EXCEEDED_ERR = 22;\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Array} segments - the segments array from a playlist.\n   * @return {number} An index of a segment from the playlist to load\n   */\n\n  var getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n    segments = segments || [];\n    var timelineSegments = [];\n    var time = 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (currentTimeline === segment.timeline) {\n        timelineSegments.push(i);\n        time += segment.duration;\n\n        if (time > targetTime) {\n          return i;\n        }\n      }\n    }\n\n    if (timelineSegments.length === 0) {\n      return 0;\n    } // default to the last timeline segment\n\n\n    return timelineSegments[timelineSegments.length - 1];\n  }; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n  // number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n  // as a start to prevent any potential issues with removing content too close to the\n  // playhead.\n\n\n  var MIN_BACK_BUFFER = 1; // in ms\n\n  var CHECK_BUFFER_DELAY = 500;\n\n  var finite = function finite(num) {\n    return typeof num === 'number' && isFinite(num);\n  }; // With most content hovering around 30fps, if a segment has a duration less than a half\n  // frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n  // not accurately reflect the rest of the content.\n\n\n  var MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\n  var illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n      return null;\n    }\n\n    if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n\n    if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interrupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {number} currentTime\n   *        The current time of the player\n   * @param {number} targetDuration\n   *        The target duration of the current playlist\n   * @return {number}\n   *         Time that is safe to remove from the back buffer without interrupting playback\n   */\n\n\n  var safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n    // 30 seconds before the playhead provides a safe default for trimming.\n    //\n    // Choosing a reasonable default is particularly important for high bitrate content and\n    // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n    // throw an APPEND_BUFFER_ERR.\n    var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n    if (seekable.length) {\n      // Some live playlists may have a shorter window of content than the full allowed back\n      // buffer. For these playlists, don't save content that's no longer within the window.\n      trimTime = Math.max(trimTime, seekable.start(0));\n    } // Don't remove within target duration of the current time to avoid the possibility of\n    // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n    var maxTrimTime = currentTime - targetDuration;\n    return Math.min(maxTrimTime, trimTime);\n  };\n\n  var segmentInfoString = function segmentInfoString(segmentInfo) {\n    var startOfSegment = segmentInfo.startOfSegment,\n        duration = segmentInfo.duration,\n        segment = segmentInfo.segment,\n        part = segmentInfo.part,\n        _segmentInfo$playlist = segmentInfo.playlist,\n        seq = _segmentInfo$playlist.mediaSequence,\n        id = _segmentInfo$playlist.id,\n        _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n        segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n        index = segmentInfo.mediaIndex,\n        partIndex = segmentInfo.partIndex,\n        timeline = segmentInfo.timeline;\n    var segmentLen = segments.length - 1;\n    var selection = 'mediaIndex/partIndex increment';\n\n    if (segmentInfo.getMediaInfoForTime) {\n      selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n    } else if (segmentInfo.isSyncRequest) {\n      selection = 'getSyncSegmentCandidate (isSyncRequest)';\n    }\n\n    if (segmentInfo.independent) {\n      selection += \" with independent \" + segmentInfo.independent;\n    }\n\n    var hasPartIndex = typeof partIndex === 'number';\n    var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n    var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n      preloadSegment: segment\n    }) - 1 : 0;\n    return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n  };\n\n  var timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n    return mediaType + \"TimingInfo\";\n  };\n  /**\n   * Returns the timestamp offset to use for the segment.\n   *\n   * @param {number} segmentTimeline\n   *        The timeline of the segment\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} startOfSegment\n   *        The estimated segment start\n   * @param {TimeRange[]} buffered\n   *        The loader's buffer\n   * @param {boolean} overrideCheck\n   *        If true, no checks are made to see if the timestamp offset value should be set,\n   *        but sets it directly to a value.\n   *\n   * @return {number|null}\n   *         Either a number representing a new timestamp offset, or null if the segment is\n   *         part of the same timeline\n   */\n\n\n  var timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n    var segmentTimeline = _ref.segmentTimeline,\n        currentTimeline = _ref.currentTimeline,\n        startOfSegment = _ref.startOfSegment,\n        buffered = _ref.buffered,\n        overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n    // timestamp offset on the transmuxer and source buffer.\n    //\n    // Previously, we changed the timestampOffset if the start of this segment was less than\n    // the currently set timestampOffset, but this isn't desirable as it can produce bad\n    // behavior, especially around long running live streams.\n\n    if (!overrideCheck && segmentTimeline === currentTimeline) {\n      return null;\n    } // When changing renditions, it's possible to request a segment on an older timeline. For\n    // instance, given two renditions with the following:\n    //\n    // #EXTINF:10\n    // segment1\n    // #EXT-X-DISCONTINUITY\n    // #EXTINF:10\n    // segment2\n    // #EXTINF:10\n    // segment3\n    //\n    // And the current player state:\n    //\n    // current time: 8\n    // buffer: 0 => 20\n    //\n    // The next segment on the current rendition would be segment3, filling the buffer from\n    // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n    // then the next segment to be requested will be segment1 from the new rendition in\n    // order to fill time 8 and onwards. Using the buffered end would result in repeated\n    // content (since it would position segment1 of the new rendition starting at 20s). This\n    // case can be identified when the new segment's timeline is a prior value. Instead of\n    // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n    // more accurate to the actual start time of the segment.\n\n\n    if (segmentTimeline < currentTimeline) {\n      return startOfSegment;\n    } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n    // value uses the end of the last segment if it is available. While this value\n    // should often be correct, it's better to rely on the buffered end, as the new\n    // content post discontinuity should line up with the buffered end as if it were\n    // time 0 for the new content.\n\n\n    return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n  };\n  /**\n   * Returns whether or not the loader should wait for a timeline change from the timeline\n   * change controller before processing the segment.\n   *\n   * Primary timing in VHS goes by video. This is different from most media players, as\n   * audio is more often used as the primary timing source. For the foreseeable future, VHS\n   * will continue to use video as the primary timing source, due to the current logic and\n   * expectations built around it.\n\n   * Since the timing follows video, in order to maintain sync, the video loader is\n   * responsible for setting both audio and video source buffer timestamp offsets.\n   *\n   * Setting different values for audio and video source buffers could lead to\n   * desyncing. The following examples demonstrate some of the situations where this\n   * distinction is important. Note that all of these cases involve demuxed content. When\n   * content is muxed, the audio and video are packaged together, therefore syncing\n   * separate media playlists is not an issue.\n   *\n   * CASE 1: Audio prepares to load a new timeline before video:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:                     ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader              ^\n   *\n   * In the above example, the audio loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the video loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the audio loader goes ahead and loads and appends the 6th segment before the video\n   * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n   * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n   * the audio loader must provide the audioAppendStart value to trim the content in the\n   * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n   * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n   * segment until that value is provided.\n   *\n   * CASE 2: Video prepares to load a new timeline before audio:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:             ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader                      ^\n   *\n   * In the above example, the video loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the audio loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the video loader goes ahead and loads and appends the 6th segment, then once the\n   * segment is loaded and processed, both the video and audio timestamp offsets will be\n   * set, since video is used as the primary timing source. This is to ensure content lines\n   * up appropriately, as any modifications to the video timing are reflected by audio when\n   * the video loader sets the audio and video timestamp offsets to the same value. However,\n   * setting the timestamp offset for audio before audio has had a chance to change\n   * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n   * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n   *\n   * CASE 3: When seeking, audio prepares to load a new timeline before video\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:           ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader            ^\n   *\n   * In the above example, both audio and video loaders are loading segments from timeline\n   * 0, but imagine that the seek originated from timeline 1.\n   *\n   * When seeking to a new timeline, the timestamp offset will be set based on the expected\n   * segment start of the loaded video segment. In order to maintain sync, the audio loader\n   * must wait for the video loader to load its segment and update both the audio and video\n   * timestamp offsets before it may load and append its own segment. This is the case\n   * whether the seek results in a mismatched segment request (e.g., the audio loader\n   * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n   * loaders choose to load the same segment index from each playlist, as the segments may\n   * not be aligned perfectly, even for matching segment indexes.\n   *\n   * @param {Object} timelinechangeController\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} segmentTimeline\n   *        The timeline of the segment being loaded\n   * @param {('main'|'audio')} loaderType\n   *        The loader type\n   * @param {boolean} audioDisabled\n   *        Whether the audio is disabled for the loader. This should only be true when the\n   *        loader may have muxed audio in its segment, but should not append it, e.g., for\n   *        the main loader when an alternate audio playlist is active.\n   *\n   * @return {boolean}\n   *         Whether the loader should wait for a timeline change from the timeline change\n   *         controller before processing the segment\n   */\n\n\n  var shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n    var timelineChangeController = _ref2.timelineChangeController,\n        currentTimeline = _ref2.currentTimeline,\n        segmentTimeline = _ref2.segmentTimeline,\n        loaderType = _ref2.loaderType,\n        audioDisabled = _ref2.audioDisabled;\n\n    if (currentTimeline === segmentTimeline) {\n      return false;\n    }\n\n    if (loaderType === 'audio') {\n      var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n        type: 'main'\n      }); // Audio loader should wait if:\n      //\n      // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n      // * main hasn't yet changed to the timeline audio is looking to load\n\n      return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n    } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n    // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n    // loader's segments (or the content is audio/video only and handled by the main\n    // loader).\n\n\n    if (loaderType === 'main' && audioDisabled) {\n      var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n        type: 'audio'\n      }); // Main loader should wait for the audio loader if audio is not pending a timeline\n      // change to the current timeline.\n      //\n      // Since the main loader is responsible for setting the timestamp offset for both\n      // audio and video, the main loader must wait for audio to be about to change to its\n      // timeline before setting the offset, otherwise, if audio is behind in loading,\n      // segments from the previous timeline would be adjusted by the new timestamp offset.\n      //\n      // This requirement means that video will not cross a timeline until the audio is\n      // about to cross to it, so that way audio and video will always cross the timeline\n      // together.\n      //\n      // In addition to normal timeline changes, these rules also apply to the start of a\n      // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n      // that these rules apply to the first timeline change because if they did not, it's\n      // possible that the main loader will cross two timelines before the audio loader has\n      // crossed one. Logic may be implemented to handle the startup as a special case, but\n      // it's easier to simply treat all timeline changes the same.\n\n      if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  var mediaDuration = function mediaDuration(audioTimingInfo, videoTimingInfo) {\n    var audioDuration = audioTimingInfo && typeof audioTimingInfo.start === 'number' && typeof audioTimingInfo.end === 'number' ? audioTimingInfo.end - audioTimingInfo.start : 0;\n    var videoDuration = videoTimingInfo && typeof videoTimingInfo.start === 'number' && typeof videoTimingInfo.end === 'number' ? videoTimingInfo.end - videoTimingInfo.start : 0;\n    return Math.max(audioDuration, videoDuration);\n  };\n\n  var segmentTooLong = function segmentTooLong(_ref3) {\n    var segmentDuration = _ref3.segmentDuration,\n        maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n    // information.\n\n    if (!segmentDuration) {\n      return false;\n    } // For HLS:\n    //\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n    // The EXTINF duration of each Media Segment in the Playlist\n    // file, when rounded to the nearest integer, MUST be less than or equal\n    // to the target duration; longer segments can trigger playback stalls\n    // or other errors.\n    //\n    // For DASH, the mpd-parser uses the largest reported segment duration as the target\n    // duration. Although that reported duration is occasionally approximate (i.e., not\n    // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n    return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n  };\n\n  var getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n    // Right now we aren't following DASH's timing model exactly, so only perform\n    // this check for HLS content.\n    if (sourceType !== 'hls') {\n      return null;\n    }\n\n    var segmentDuration = mediaDuration(segmentInfo.audioTimingInfo, segmentInfo.videoTimingInfo); // Don't report if we lack information.\n    //\n    // If the segment has a duration of 0 it is either a lack of information or a\n    // metadata only segment and shouldn't be reported here.\n\n    if (!segmentDuration) {\n      return null;\n    }\n\n    var targetDuration = segmentInfo.playlist.targetDuration;\n    var isSegmentWayTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration * 2\n    });\n    var isSegmentSlightlyTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration\n    });\n    var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n    if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n      return {\n        severity: isSegmentWayTooLong ? 'warn' : 'info',\n        message: segmentTooLongMessage\n      };\n    }\n\n    return null;\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n\n  var SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n    function SegmentLoader(settings, options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n\n      _this.bandwidth = settings.bandwidth;\n      _this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      _this.roundTrip = NaN;\n\n      _this.resetStats_();\n\n      _this.mediaIndex = null;\n      _this.partIndex = null; // private settings\n\n      _this.hasPlayed_ = settings.hasPlayed;\n      _this.currentTime_ = settings.currentTime;\n      _this.seekable_ = settings.seekable;\n      _this.seeking_ = settings.seeking;\n      _this.duration_ = settings.duration;\n      _this.mediaSource_ = settings.mediaSource;\n      _this.vhs_ = settings.vhs;\n      _this.loaderType_ = settings.loaderType;\n      _this.currentMediaInfo_ = void 0;\n      _this.startingMediaInfo_ = void 0;\n      _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      _this.goalBufferLength_ = settings.goalBufferLength;\n      _this.sourceType_ = settings.sourceType;\n      _this.sourceUpdater_ = settings.sourceUpdater;\n      _this.inbandTextTracks_ = settings.inbandTextTracks;\n      _this.state_ = 'INIT';\n      _this.timelineChangeController_ = settings.timelineChangeController;\n      _this.shouldSaveSegmentTimingInfo_ = true;\n      _this.parse708captions_ = settings.parse708captions;\n      _this.captionServices_ = settings.captionServices;\n      _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n      _this.checkBufferTimeout_ = null;\n      _this.error_ = void 0;\n      _this.currentTimeline_ = -1;\n      _this.pendingSegment_ = null;\n      _this.xhrOptions_ = null;\n      _this.pendingSegments_ = [];\n      _this.audioDisabled_ = false;\n      _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n      _this.gopBuffer_ = [];\n      _this.timeMapping_ = 0;\n      _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n      _this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      _this.playlistOfLastInitSegment_ = {\n        audio: null,\n        video: null\n      };\n      _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n      // information yet to start the loading process (e.g., if the audio loader wants to\n      // load a segment from the next timeline but the main loader hasn't yet crossed that\n      // timeline), then the load call will be added to the queue until it is ready to be\n      // processed.\n\n      _this.loadQueue_ = [];\n      _this.metadataQueue_ = {\n        id3: [],\n        caption: []\n      };\n      _this.waitingOnRemove_ = false;\n      _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n      _this.activeInitSegmentId_ = null;\n      _this.initSegments_ = {}; // HLSe playback\n\n      _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n      _this.keyCache_ = {};\n      _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      _this.syncController_ = settings.syncController;\n      _this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n      _this.transmuxer_ = _this.createTransmuxer_();\n\n      _this.triggerSyncInfoUpdate_ = function () {\n        return _this.trigger('syncinfoupdate');\n      };\n\n      _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n      _this.mediaSource_.addEventListener('sourceopen', function () {\n        if (!_this.isEndOfStream_()) {\n          _this.ended_ = false;\n        }\n      }); // ...for determining the fetch location\n\n\n      _this.fetchAtBuffer_ = false;\n      _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n      Object.defineProperty(assertThisInitialized(_this), 'state', {\n        get: function get() {\n          return this.state_;\n        },\n        set: function set(newState) {\n          if (newState !== this.state_) {\n            this.logger_(this.state_ + \" -> \" + newState);\n            this.state_ = newState;\n            this.trigger('statechange');\n          }\n        }\n      });\n\n      _this.sourceUpdater_.on('ready', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      }); // Only the main loader needs to listen for pending timeline changes, as the main\n      // loader should wait for audio to be ready to change its timeline so that both main\n      // and audio timelines change together. For more details, see the\n      // shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'main') {\n        _this.timelineChangeController_.on('pendingtimelinechange', function () {\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      } // The main loader only listens on pending timeline changes, but the audio loader,\n      // since its loads follow main, needs to listen on timeline changes. For more details,\n      // see the shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'audio') {\n        _this.timelineChangeController_.on('timelinechange', function () {\n          if (_this.hasEnoughInfoToLoad_()) {\n            _this.processLoadQueue_();\n          }\n\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      }\n\n      return _this;\n    }\n\n    var _proto = SegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      return segmentTransmuxer.createTransmuxer({\n        remux: false,\n        alignGopsAtEnd: this.safeAppend_,\n        keepOriginalTimestamps: true,\n        parse708captions: this.parse708captions_,\n        captionServices: this.captionServices_\n      });\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetStats_ = function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n      this.mediaAppends = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.resetStats_();\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    };\n\n    _proto.setAudio = function setAudio(enable) {\n      this.audioDisabled_ = !enable;\n\n      if (enable) {\n        this.appendInitSegment_.audio = true;\n      } else {\n        // remove current track audio if it gets disabled\n        this.sourceUpdater_.removeAudio(0, this.duration_());\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n    ;\n\n    _proto.abort = function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n    ;\n\n    _proto.abort_ = function abort_() {\n      if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      this.waitingOnRemove_ = false;\n      window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n      this.quotaExceededErrorRetryTimeout_ = null;\n    };\n\n    _proto.checkForAbort_ = function checkForAbort_(requestId) {\n      // If the state is APPENDING, then aborts will not modify the state, meaning the first\n      // callback that happens should reset the state to READY so that loading can continue.\n      if (this.state === 'APPENDING' && !this.pendingSegment_) {\n        this.state = 'READY';\n        return true;\n      }\n\n      if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n    ;\n\n    _proto.error = function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.logger_('error occurred:', _error);\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    };\n\n    _proto.endOfStream = function endOfStream() {\n      this.ended_ = true;\n\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.gopBuffer_.length = 0;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      var trackInfo = this.getMediaInfo_();\n\n      if (!this.sourceUpdater_ || !trackInfo) {\n        return videojs.createTimeRanges();\n      }\n\n      if (this.loaderType_ === 'main') {\n        var hasAudio = trackInfo.hasAudio,\n            hasVideo = trackInfo.hasVideo,\n            isMuxed = trackInfo.isMuxed;\n\n        if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n          return this.sourceUpdater_.buffered();\n        }\n\n        if (hasVideo) {\n          return this.sourceUpdater_.videoBuffered();\n        }\n      } // One case that can be ignored for now is audio only with alt audio,\n      // as we don't yet have proper support for that.\n\n\n      return this.sourceUpdater_.audioBuffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          tracks: map.tracks,\n          timescales: map.timescales\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n    ;\n\n    _proto.segmentKey = function segmentKey(key, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n    ;\n\n    _proto.load = function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // if all the configuration is ready, initialize and begin loading\n\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n      // audio data from the muxed content should be removed\n\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n    ;\n\n    _proto.playlist = function playlist(newPlaylist, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        }; // Setting the date time mapping means mapping the program date time (if available)\n        // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n        // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n        // be updated as the playlist is refreshed before the loader starts loading, the\n        // program date time mapping needs to be updated as well.\n        //\n        // This mapping is only done for the main loader because a program date time should\n        // map equivalently between playlists.\n\n        if (this.loaderType_ === 'main') {\n          this.syncController_.setDateTimeMappingForStart(newPlaylist);\n        }\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must reset/resync the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          // on playlist changes we want it to be possible to fetch\n          // at the buffer for vod but not for live. So we use resetLoader\n          // for live and resyncLoader for vod. We want this because\n          // if a playlist uses independent and non-independent segments/parts the\n          // buffer may not accurately reflect the next segment that we should try\n          // downloading.\n          if (!newPlaylist.endList) {\n            this.resetLoader();\n          } else {\n            this.resyncLoader();\n          }\n        }\n\n        this.currentMediaInfo_ = void 0;\n        this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n        // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n        // new playlist was incremented by 1.\n\n        if (this.mediaIndex < 0) {\n          this.mediaIndex = null;\n          this.partIndex = null;\n        } else {\n          var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n          // unless parts fell off of the playlist for this segment.\n          // In that case we need to reset partIndex and resync\n\n          if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n            var mediaIndex = this.mediaIndex;\n            this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n            this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n            // as the part was dropped from our current playlists segment.\n            // The mediaIndex will still be valid so keep that around.\n\n            this.mediaIndex = mediaIndex;\n          }\n        }\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        if (segmentInfo.mediaIndex < 0) {\n          segmentInfo.mediaIndex = null;\n          segmentInfo.partIndex = null;\n        } else {\n          // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n\n          if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n            segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n          }\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n    ;\n\n    _proto.paused = function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     *\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n    ;\n\n    _proto.resetEverything = function resetEverything(done) {\n      this.ended_ = false;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        }); // reset the cache in the transmuxer\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n    ;\n\n    _proto.resetLoader = function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n    ;\n\n    _proto.resyncLoader = function resyncLoader() {\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.mediaIndex = null;\n      this.partIndex = null;\n      this.syncPoint_ = null;\n      this.isPendingTimestampOffset_ = false;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.abort();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * @param {boolean} force - force all remove operations to happen\n     * operation is complete\n     */\n    ;\n\n    _proto.remove = function remove(start, end, done, force) {\n      if (done === void 0) {\n        done = function done() {};\n      }\n\n      if (force === void 0) {\n        force = false;\n      } // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n\n\n      if (end === Infinity) {\n        end = this.duration_();\n      } // skip removes that would throw an error\n      // commonly happens during a rendition switch at the start of a video\n      // from start 0 to end 0\n\n\n      if (end <= start) {\n        this.logger_('skipping remove because end ${end} is <= start ${start}');\n        return;\n      }\n\n      if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n        this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n        return;\n      } // set it to one to complete this function's removes\n\n\n      var removesRemaining = 1;\n\n      var removeFinished = function removeFinished() {\n        removesRemaining--;\n\n        if (removesRemaining === 0) {\n          done();\n        }\n      };\n\n      if (force || !this.audioDisabled_) {\n        removesRemaining++;\n        this.sourceUpdater_.removeAudio(start, end, removeFinished);\n      } // While it would be better to only remove video if the main loader has video, this\n      // should be safe with audio only as removeVideo will call back even if there's no\n      // video buffer.\n      //\n      // In theory we can check to see if there's video before calling the remove, but in\n      // the event that we're switching between renditions and from video to audio only\n      // (when we add support for that), we may need to clear the video contents despite\n      // what the new media will contain.\n\n\n      if (force || this.loaderType_ === 'main') {\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        removesRemaining++;\n        this.sourceUpdater_.removeVideo(start, end, removeFinished);\n      } // remove any captions and ID3 tags\n\n\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n      removeFinished();\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBuffer_ = function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBufferTick_ = function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      // TODO since the source buffer maintains a queue, and we shouldn't call this function\n      // except when we're ready for the next segment, this check can most likely be removed\n      if (this.sourceUpdater_.updating()) {\n        return;\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        this.isPendingTimestampOffset_ = false;\n        this.timelineChangeController_.pendingTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if we should call endOfStream on the media source based\n     * on the state of the buffer or if appened segment was the final\n     * segment in the playlist.\n     *\n     * @param {number} [mediaIndex] the media index of segment we last appended\n     * @param {Object} [playlist] a media playlist object\n     * @return {boolean} do we need to call endOfStream on the MediaSource\n     */\n    ;\n\n    _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n      if (mediaIndex === void 0) {\n        mediaIndex = this.mediaIndex;\n      }\n\n      if (playlist === void 0) {\n        playlist = this.playlist_;\n      }\n\n      if (partIndex === void 0) {\n        partIndex = this.partIndex;\n      }\n\n      if (!playlist || !this.mediaSource_) {\n        return false;\n      }\n\n      var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n      var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n      var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n      // so that MediaSources can trigger the `ended` event when it runs out of\n      // buffered data instead of waiting for me\n\n      return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n    }\n    /**\n     * Determines what request should be made given current segment loader state.\n     *\n     * @return {Object} a request object that describes the segment/part to load\n     */\n    ;\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      var buffered = this.buffered_();\n      var bufferedEnd = lastBufferedEnd(buffered) || 0;\n      var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n      var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n      var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n      var segments = this.playlist_.segments; // return no segment if:\n      // 1. we don't have segments\n      // 2. The video has not yet played and we already downloaded a segment\n      // 3. we already have enough buffered time\n\n      if (!segments.length || preloaded || haveEnoughBuffer) {\n        return null;\n      }\n\n      this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      var next = {\n        partIndex: null,\n        mediaIndex: null,\n        startOfSegment: null,\n        playlist: this.playlist_,\n        isSyncRequest: Boolean(!this.syncPoint_)\n      };\n\n      if (next.isSyncRequest) {\n        next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      } else if (this.mediaIndex !== null) {\n        var segment = segments[this.mediaIndex];\n        var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n        next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n        if (segment.parts && segment.parts[partIndex + 1]) {\n          next.mediaIndex = this.mediaIndex;\n          next.partIndex = partIndex + 1;\n        } else {\n          next.mediaIndex = this.mediaIndex + 1;\n        }\n      } else {\n        // Find the segment containing the end of the buffer or current time.\n        var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n          experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        }),\n            segmentIndex = _Playlist$getMediaInf.segmentIndex,\n            startTime = _Playlist$getMediaInf.startTime,\n            _partIndex = _Playlist$getMediaInf.partIndex;\n\n        next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n        next.mediaIndex = segmentIndex;\n        next.startOfSegment = startTime;\n        next.partIndex = _partIndex;\n      }\n\n      var nextSegment = segments[next.mediaIndex];\n      var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n      // the next partIndex is invalid do not choose a next segment.\n\n      if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n        return null;\n      } // if the next segment has parts, and we don't have a partIndex.\n      // Set partIndex to 0\n\n\n      if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n        next.partIndex = 0;\n        nextPart = nextSegment.parts[0];\n      } // if we have no buffered data then we need to make sure\n      // that the next part we append is \"independent\" if possible.\n      // So we check if the previous part is independent, and request\n      // it if it is.\n\n\n      if (!bufferedTime && nextPart && !nextPart.independent) {\n        if (next.partIndex === 0) {\n          var lastSegment = segments[next.mediaIndex - 1];\n          var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n          if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n            next.mediaIndex -= 1;\n            next.partIndex = lastSegment.parts.length - 1;\n            next.independent = 'previous segment';\n          }\n        } else if (nextSegment.parts[next.partIndex - 1].independent) {\n          next.partIndex -= 1;\n          next.independent = 'previous part';\n        }\n      }\n\n      var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n      // 1. this is the last segment in the playlist\n      // 2. end of stream has been called on the media source already\n      // 3. the player is not seeking\n\n      if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n        return null;\n      }\n\n      return this.generateSegmentInfo_(next);\n    };\n\n    _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n      var independent = options.independent,\n          playlist = options.playlist,\n          mediaIndex = options.mediaIndex,\n          startOfSegment = options.startOfSegment,\n          isSyncRequest = options.isSyncRequest,\n          partIndex = options.partIndex,\n          forceTimestampOffset = options.forceTimestampOffset,\n          getMediaInfoForTime = options.getMediaInfoForTime;\n      var segment = playlist.segments[mediaIndex];\n      var part = typeof partIndex === 'number' && segment.parts[partIndex];\n      var segmentInfo = {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: part && part.resolvedUri || segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        partIndex: part ? partIndex : null,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: part && part.duration || segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment,\n        part: part,\n        byteLength: 0,\n        transmuxer: this.transmuxer_,\n        // type of getMediaInfoForTime that was used to get this segment\n        getMediaInfoForTime: getMediaInfoForTime,\n        independent: independent\n      };\n      var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n      segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n        segmentTimeline: segment.timeline,\n        currentTimeline: this.currentTimeline_,\n        startOfSegment: startOfSegment,\n        buffered: this.buffered_(),\n        overrideCheck: overrideCheck\n      });\n      var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n      if (typeof audioBufferedEnd === 'number') {\n        // since the transmuxer is using the actual timing values, but the buffer is\n        // adjusted by the timestamp offset, we must adjust the value here\n        segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n      }\n\n      if (this.sourceUpdater_.videoBuffered().length) {\n        segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n        // adjusted by the timestmap offset, we must adjust the value here\n        this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n      }\n\n      return segmentInfo;\n    } // get the timestampoffset for a segment,\n    // added so that vtt segment loader can override and prevent\n    // adding timestamp offsets.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n      return timestampOffsetForSegment(options);\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @private\n     */\n    ;\n\n    _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n      if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$1) {\n        return;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.vhs_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.trigger('earlyabort');\n    };\n\n    _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n      this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n      this.mediaRequestsAborted += 1;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n    ;\n\n    _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      this.trigger('progress');\n    };\n\n    _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      if (this.checkForIllegalMediaSwitch(trackInfo)) {\n        return;\n      }\n\n      trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n      // Guard against cases where we're not getting track info at all until we are\n      // certain that all streams will provide it.\n\n      if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n        this.startingMediaInfo_ = trackInfo;\n        this.currentMediaInfo_ = trackInfo;\n        this.logger_('trackinfo update', trackInfo);\n        this.trigger('trackinfo');\n      } // trackinfo may cause an abort if the trackinfo\n      // causes a codec change to an unsupported codec.\n\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // set trackinfo on the pending segment so that\n      // it can append.\n\n\n      this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n      segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n      segmentInfo[timingInfoProperty][timeType] = time;\n      this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n      var _this2 = this;\n\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // This could only happen with fmp4 segments, but\n      // should still not happen in general\n\n\n      if (captionData.length === 0) {\n        this.logger_('SegmentLoader received no captions from a caption event');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n      // can be adjusted by the timestamp offset\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n      var captionTracks = {}; // get total start/end and captions for each track/stream\n\n      captionData.forEach(function (caption) {\n        // caption.stream is actually a track name...\n        // set to the existing values in tracks or default values\n        captionTracks[caption.stream] = captionTracks[caption.stream] || {\n          // Infinity, as any other value will be less than this\n          startTime: Infinity,\n          captions: [],\n          // 0 as an other value will be more than this\n          endTime: 0\n        };\n        var captionTrack = captionTracks[caption.stream];\n        captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n        captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n        captionTrack.captions.push(caption);\n      });\n      Object.keys(captionTracks).forEach(function (trackName) {\n        var _captionTracks$trackN = captionTracks[trackName],\n            startTime = _captionTracks$trackN.startTime,\n            endTime = _captionTracks$trackN.endTime,\n            captions = _captionTracks$trackN.captions;\n        var inbandTextTracks = _this2.inbandTextTracks_;\n\n        _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n        createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n        // We do this because a rendition change that also changes the timescale for captions\n        // will result in captions being re-parsed for certain segments. If we add them again\n        // without clearing we will have two of the same captions visible.\n\n        removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n        addCaptionData({\n          captionArray: captions,\n          inbandTextTracks: inbandTextTracks,\n          timestampOffset: timestampOffset\n        });\n      }); // Reset stored captions since we added parsed\n      // captions to a text track at this point\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    };\n\n    _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n      // audio/video source with a metadata track, and an alt audio with a metadata track.\n      // However, this probably won't happen, and if it does it can be handled then.\n\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n      addMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        metadataArray: id3Frames,\n        timestampOffset: timestampOffset,\n        videoDuration: this.duration_()\n      });\n    };\n\n    _proto.processMetadataQueue_ = function processMetadataQueue_() {\n      this.metadataQueue_.id3.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.caption.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n    };\n\n    _proto.processCallQueue_ = function processCallQueue_() {\n      var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.callQueue_ = [];\n      callQueue.forEach(function (fun) {\n        return fun();\n      });\n    };\n\n    _proto.processLoadQueue_ = function processLoadQueue_() {\n      var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.loadQueue_ = [];\n      loadQueue.forEach(function (fun) {\n        return fun();\n      });\n    }\n    /**\n     * Determines whether the loader has enough info to load the next segment.\n     *\n     * @return {boolean}\n     *         Whether or not the loader has enough info to load the next segment\n     */\n    ;\n\n    _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n      // Since primary timing goes by video, only the audio loader potentially needs to wait\n      // to load.\n      if (this.loaderType_ !== 'audio') {\n        return true;\n      }\n\n      var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n      // enough info to load.\n\n      if (!segmentInfo) {\n        return false;\n      } // The first segment can and should be loaded immediately so that source buffers are\n      // created together (before appending). Source buffer creation uses the presence of\n      // audio and video data to determine whether to create audio/video source buffers, and\n      // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n      if (!this.getCurrentMediaInfo_()) {\n        return true;\n      }\n\n      if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n      // can be requested and downloaded and only wait before it is transmuxed or parsed.\n      // But in practice, there are a few reasons why it is better to wait until a loader\n      // is ready to append that segment before requesting and downloading:\n      //\n      // 1. Because audio and main loaders cross discontinuities together, if this loader\n      //    is waiting for the other to catch up, then instead of requesting another\n      //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n      //    allotted to the loader currently behind.\n      // 2. media-segment-request doesn't have to have logic to consider whether a segment\n      // is ready to be processed or not, isolating the queueing behavior to the loader.\n      // 3. The audio loader bases some of its segment properties on timing information\n      //    provided by the main loader, meaning that, if the logic for waiting on\n      //    processing was in media-segment-request, then it would also need to know how\n      //    to re-generate the segment information after the main loader caught up.\n      shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n    };\n\n    _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n    };\n\n    _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n      if (!this.sourceUpdater_.ready()) {\n        return false;\n      } // If content needs to be removed or the loader is waiting on an append reattempt,\n      // then no additional content should be appended until the prior append is resolved.\n\n\n      if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n        return false;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n      // we do not have information on this specific\n      // segment yet\n\n      if (!segmentInfo || !trackInfo) {\n        return false;\n      }\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && !segmentInfo.videoTimingInfo) {\n        return false;\n      } // muxed content only relies on video timing information for now.\n\n\n      if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n        return false;\n      }\n\n      if (shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.handleData_ = function handleData_(simpleSegment, result) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // If there's anything in the call queue, then this data came later and should be\n      // executed after the calls currently queued.\n\n\n      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n        this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n      this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n      this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n      // logic may change behavior depending on the state, and changing state too early may\n      // inflate our estimates of bandwidth. In the future this should be re-examined to\n      // note more granular states.\n      // don't process and append data if the mediaSource is closed\n\n      if (this.mediaSource_.readyState === 'closed') {\n        return;\n      } // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n        segmentInfo.segment.map = simpleSegment.map;\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      segmentInfo.isFmp4 = simpleSegment.isFmp4;\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n      if (segmentInfo.isFmp4) {\n        this.trigger('fmp4');\n        segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n      } else {\n        var trackInfo = this.getCurrentMediaInfo_();\n        var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n        var firstVideoFrameTimeForData;\n\n        if (useVideoTimingInfo) {\n          firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n        } // Segment loader knows more about segment timing than the transmuxer (in certain\n        // aspects), so make any changes required for a more accurate start time.\n        // Don't set the end time yet, as the segment may not be finished processing.\n\n\n        segmentInfo.timingInfo.start = this.trueSegmentStart_({\n          currentStart: segmentInfo.timingInfo.start,\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex,\n          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n          useVideoTimingInfo: useVideoTimingInfo,\n          firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n          videoTimingInfo: segmentInfo.videoTimingInfo,\n          audioTimingInfo: segmentInfo.audioTimingInfo\n        });\n      } // Init segments for audio and video only need to be appended in certain cases. Now\n      // that data is about to be appended, we can check the final cases to determine\n      // whether we should append an init segment.\n\n\n      this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n      // as we use the start of the segment to offset the best guess (playlist provided)\n      // timestamp offset.\n\n      this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n      // be appended or not.\n\n      if (segmentInfo.isSyncRequest) {\n        // first save/update our timing info for this segment.\n        // this is what allows us to choose an accurate segment\n        // and the main reason we make a sync request.\n        this.updateTimingInfoEnd_(segmentInfo);\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n        var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n        // after taking into account its timing info, do not append it.\n\n        if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n          this.logger_('sync segment was incorrect, not appending');\n          return;\n        } // otherwise append it like any other segment as our guess was correct.\n\n\n        this.logger_('sync segment was correct, appending');\n      } // Save some state so that in the future anything waiting on first append (and/or\n      // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n      // we need some notion of whether the timestamp offset or other relevant information\n      // has had a chance to be set.\n\n\n      segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n      this.processMetadataQueue_();\n      this.appendData_(segmentInfo, result);\n    };\n\n    _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n      // alt audio doesn't manage timestamp offset\n      if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n      // segment for each chunk\n      !segmentInfo.changedTimestampOffset) {\n        // if the timestamp offset changed, the timeline may have changed, so we have to re-\n        // append init segments\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n      }\n\n      if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n        // make sure we append init segment on playlist changes, in case the media config\n        // changed\n        this.appendInitSegment_[type] = true;\n      }\n    };\n\n    _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n      var type = _ref4.type,\n          initSegment = _ref4.initSegment,\n          map = _ref4.map,\n          playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n      // (Section 3) required to parse the applicable Media Segments.  It applies to every\n      // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n      // or until the end of the playlist.\"\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n      if (map) {\n        var id = initSegmentId(map);\n\n        if (this.activeInitSegmentId_ === id) {\n          // don't need to re-append the init segment if the ID matches\n          return null;\n        } // a map-specified init segment takes priority over any transmuxed (or otherwise\n        // obtained) init segment\n        //\n        // this also caches the init segment for later use\n\n\n        initSegment = this.initSegmentForMap(map, true).bytes;\n        this.activeInitSegmentId_ = id;\n      } // We used to always prepend init segments for video, however, that shouldn't be\n      // necessary. Instead, we should only append on changes, similar to what we've always\n      // done for audio. This is more important (though may not be that important) for\n      // frame-by-frame appending for LHLS, simply because of the increased quantity of\n      // appends.\n\n\n      if (initSegment && this.appendInitSegment_[type]) {\n        // Make sure we track the playlist that we last used for the init segment, so that\n        // we can re-append the init segment in the event that we get data from a new\n        // playlist. Discontinuities and track changes are handled in other sections.\n        this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n        this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n        // we are appending the muxer init segment\n\n        this.activeInitSegmentId_ = null;\n        return initSegment;\n      }\n\n      return null;\n    };\n\n    _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n      var _this3 = this;\n\n      var segmentInfo = _ref5.segmentInfo,\n          type = _ref5.type,\n          bytes = _ref5.bytes;\n      var audioBuffered = this.sourceUpdater_.audioBuffered();\n      var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n      // should be cleared out during the buffer removals. However, log in case it helps\n      // debug.\n\n      if (audioBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n      }\n\n      if (videoBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n      }\n\n      var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n      var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n      var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n      var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n      if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n        // Can't remove enough buffer to make room for new segment (or the browser doesn't\n        // allow for appends of segments this size). In the future, it may be possible to\n        // split up the segment and append in pieces, but for now, error out this playlist\n        // in an attempt to switch to a more manageable rendition.\n        this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n        this.error({\n          message: 'Quota exceeded error with append of a single segment of content',\n          excludeUntil: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n      // that the segment-loader should block on future events until this one is handled, so\n      // that it doesn't keep moving onto further segments. Adding the call to the call\n      // queue will prevent further appends until waitingOnRemove_ and\n      // quotaExceededErrorRetryTimeout_ are cleared.\n      //\n      // Note that this will only block the current loader. In the case of demuxed content,\n      // the other load may keep filling as fast as possible. In practice, this should be\n      // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n      // source buffer, or video fills without enough room for audio to append (and without\n      // the availability of clearing out seconds of back buffer to make room for audio).\n      // But it might still be good to handle this case in the future as a TODO.\n\n\n      this.waitingOnRemove_ = true;\n      this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n      var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n      // before retrying.\n\n      var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n      this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n      this.remove(0, timeToRemoveUntil, function () {\n        _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n        _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n        // attempts (since we can't clear less than the minimum)\n\n        _this3.quotaExceededErrorRetryTimeout_ = window.setTimeout(function () {\n          _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n          _this3.quotaExceededErrorRetryTimeout_ = null;\n\n          _this3.processCallQueue_();\n        }, MIN_BACK_BUFFER * 1000);\n      }, true);\n    };\n\n    _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n      var segmentInfo = _ref6.segmentInfo,\n          type = _ref6.type,\n          bytes = _ref6.bytes; // if there's no error, nothing to do\n\n      if (!error) {\n        return;\n      }\n\n      if (error.code === QUOTA_EXCEEDED_ERR) {\n        this.handleQuotaExceededError_({\n          segmentInfo: segmentInfo,\n          type: type,\n          bytes: bytes\n        }); // A quota exceeded error should be recoverable with a future re-append, so no need\n        // to trigger an append error.\n\n        return;\n      }\n\n      this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n      this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n      // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n      //\n      // Trigger a special error so that it can be handled separately from normal,\n      // recoverable errors.\n\n      this.trigger('appenderror');\n    };\n\n    _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n      var segmentInfo = _ref7.segmentInfo,\n          type = _ref7.type,\n          initSegment = _ref7.initSegment,\n          data = _ref7.data,\n          bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n      if (!bytes) {\n        var segments = [data];\n        var byteLength = data.byteLength;\n\n        if (initSegment) {\n          // if the media initialization segment is changing, append it before the content\n          // segment\n          segments.unshift(initSegment);\n          byteLength += initSegment.byteLength;\n        } // Technically we should be OK appending the init segment separately, however, we\n        // haven't yet tested that, and prepending is how we have always done things.\n\n\n        bytes = concatSegments({\n          bytes: byteLength,\n          segments: segments\n        });\n      }\n\n      this.sourceUpdater_.appendBuffer({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }, this.handleAppendError_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n    };\n\n    _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n      var timingInfoProperty = type + \"TimingInfo\";\n\n      if (!segment[timingInfoProperty]) {\n        segment[timingInfoProperty] = {};\n      }\n\n      segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n      segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n      segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n      segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n      segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n      segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n    };\n\n    _proto.appendData_ = function appendData_(segmentInfo, result) {\n      var type = result.type,\n          data = result.data;\n\n      if (!data || !data.byteLength) {\n        return;\n      }\n\n      if (type === 'audio' && this.audioDisabled_) {\n        return;\n      }\n\n      var initSegment = this.getInitSegmentAndUpdateState_({\n        type: type,\n        initSegment: result.initSegment,\n        playlist: segmentInfo.playlist,\n        map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n      });\n      this.appendToSourceBuffer_({\n        segmentInfo: segmentInfo,\n        type: type,\n        initSegment: initSegment,\n        data: data\n      });\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n      var _this4 = this;\n\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'clearAllMp4Captions'\n          });\n        }\n      }\n\n      if (!this.hasEnoughInfoToLoad_()) {\n        this.loadQueue_.push(function () {\n          // regenerate the audioAppendStart, timestampOffset, etc as they\n          // may have changed since this function was added to the queue.\n          var options = _extends_1({}, segmentInfo, {\n            forceTimestampOffset: true\n          });\n\n          _extends_1(segmentInfo, _this4.generateSegmentInfo_(options));\n\n          _this4.isPendingTimestampOffset_ = false;\n\n          _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n        });\n        return;\n      }\n\n      this.updateTransmuxerAndRequestSegment_(segmentInfo);\n    };\n\n    _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n      var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n      // the transmuxer still needs to be updated before then.\n      //\n      // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n      // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n      if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n        this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n        segmentInfo.gopsToAlignWith = [];\n        this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n        this.transmuxer_.postMessage({\n          action: 'setTimestampOffset',\n          timestampOffset: segmentInfo.timestampOffset\n        });\n      }\n\n      var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n      var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n      var isWalkingForward = this.mediaIndex !== null;\n      var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n      // the first timeline\n      segmentInfo.timeline > 0;\n      var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n      this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n      // then this init segment has never been seen before and should be appended.\n      //\n      // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n      // both to true and leave the decision of whether to append the init segment to append time.\n\n      if (simpleSegment.map && !simpleSegment.map.bytes) {\n        this.logger_('going to request init segment.');\n        this.appendInitSegment_ = {\n          video: true,\n          audio: true\n        };\n      }\n\n      segmentInfo.abortRequests = mediaSegmentRequest({\n        xhr: this.vhs_.xhr,\n        xhrOptions: this.xhrOptions_,\n        decryptionWorker: this.decrypter_,\n        segment: simpleSegment,\n        abortFn: this.handleAbort_.bind(this, segmentInfo),\n        progressFn: this.handleProgress_.bind(this),\n        trackInfoFn: this.handleTrackInfo_.bind(this),\n        timingInfoFn: this.handleTimingInfo_.bind(this),\n        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n        captionsFn: this.handleCaptions_.bind(this),\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: function endedTimelineFn() {\n          _this5.logger_('received endedtimeline callback');\n        },\n        id3Fn: this.handleId3_.bind(this),\n        dataFn: this.handleData_.bind(this),\n        doneFn: this.segmentRequestFinished_.bind(this),\n        onTransmuxerLog: function onTransmuxerLog(_ref8) {\n          var message = _ref8.message,\n              level = _ref8.level,\n              stream = _ref8.stream;\n\n          _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n        }\n      });\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n    ;\n\n    _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @return {Object} a simplified segment object copy\n     */\n    ;\n\n    _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var simpleSegment = {\n        resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n        byterange: part ? part.byterange : segment.byterange,\n        requestId: segmentInfo.requestId,\n        transmuxer: segmentInfo.transmuxer,\n        audioAppendStart: segmentInfo.audioAppendStart,\n        gopsToAlignWith: segmentInfo.gopsToAlignWith,\n        part: segmentInfo.part\n      };\n      var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n      if (previousSegment && previousSegment.timeline === segment.timeline) {\n        // The baseStartTime of a segment is used to handle rollover when probing the TS\n        // segment to retrieve timing information. Since the probe only looks at the media's\n        // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n        // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n        // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n        // seconds of media time, so should be used here. The previous segment is used since\n        // the end of the previous segment should represent the beginning of the current\n        // segment, so long as they are on the same timeline.\n        if (previousSegment.videoTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n        } else if (previousSegment.audioTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n        }\n      }\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegmentForMap(segment.map);\n      }\n\n      return simpleSegment;\n    };\n\n    _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (stats) {\n        this.mediaBytesTransferred += stats.bytesReceived;\n        this.mediaTransferDuration += stats.roundTripTime;\n      }\n    };\n\n    _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n      // byteLength will be used for throughput, and should be based on bytes receieved,\n      // which we only know at the end of the request and should reflect total bytes\n      // downloaded rather than just bytes processed from components of the segment\n      this.pendingSegment_.byteLength = stats.bytesReceived;\n\n      if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      this.bandwidth = stats.bandwidth;\n      this.roundTrip = stats.roundTripTime;\n    };\n\n    _proto.handleTimeout_ = function handleTimeout_() {\n      // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functinality between segment loaders\n      this.mediaRequestsTimedout += 1;\n      this.bandwidth = 1;\n      this.roundTrip = NaN;\n      this.trigger('bandwidthupdate');\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n      // check the call queue directly since this function doesn't need to deal with any\n      // data, and can continue even if the source buffers are not set up and we didn't get\n      // any data from the segment\n      if (this.callQueue_.length) {\n        this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n      if (!this.pendingSegment_) {\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      if (result.gopInfo) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n      } // Although we may have already started appending on progress, we shouldn't switch the\n      // state away from loading until we are officially done loading the segment data.\n\n\n      this.state = 'APPENDING'; // used for testing\n\n      this.trigger('appending');\n      this.waitForAppendsToComplete_(segmentInfo);\n    };\n\n    _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n      var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n      if (timelineMapping !== null) {\n        this.timeMapping_ = timelineMapping;\n      }\n    };\n\n    _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n    };\n\n    _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n      if (timestampOffset === null) {\n        return false;\n      } // note that we're potentially using the same timestamp offset for both video and\n      // audio\n\n\n      if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        return true;\n      }\n\n      if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n      var currentStart = _ref9.currentStart,\n          playlist = _ref9.playlist,\n          mediaIndex = _ref9.mediaIndex,\n          firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n          currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n          useVideoTimingInfo = _ref9.useVideoTimingInfo,\n          videoTimingInfo = _ref9.videoTimingInfo,\n          audioTimingInfo = _ref9.audioTimingInfo;\n\n      if (typeof currentStart !== 'undefined') {\n        // if start was set once, keep using it\n        return currentStart;\n      }\n\n      if (!useVideoTimingInfo) {\n        return audioTimingInfo.start;\n      }\n\n      var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n      // within that segment. Since the transmuxer maintains a cache of incomplete data\n      // from and/or the last frame seen, the start time may reflect a frame that starts\n      // in the previous segment. Check for that case and ensure the start time is\n      // accurate for the segment.\n\n      if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n        return firstVideoFrameTimeForData;\n      }\n\n      return videoTimingInfo.start;\n    };\n\n    _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n      var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n      if (!trackInfo) {\n        this.error({\n          message: 'No starting media returned, likely due to an unsupported media format.',\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n      // on each queue this loader is responsible for to ensure that the appends are\n      // complete.\n\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n      var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n      var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n      segmentInfo.waitingOnAppends = 0; // segments with no data\n\n      if (!segmentInfo.hasAppendedData_) {\n        if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n          // When there's no audio or video data in the segment, there's no audio or video\n          // timing information.\n          //\n          // If there's no audio or video timing information, then the timestamp offset\n          // can't be adjusted to the appropriate value for the transmuxer and source\n          // buffers.\n          //\n          // Therefore, the next segment should be used to set the timestamp offset.\n          this.isPendingTimestampOffset_ = true;\n        } // override settings for metadata only segments\n\n\n        segmentInfo.timingInfo = {\n          start: 0\n        };\n        segmentInfo.waitingOnAppends++;\n\n        if (!this.isPendingTimestampOffset_) {\n          // update the timestampoffset\n          this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n          // no video/audio data.\n\n          this.processMetadataQueue_();\n        } // append is \"done\" instantly with no data.\n\n\n        this.checkAppendsDone_(segmentInfo);\n        return;\n      } // Since source updater could call back synchronously, do the increments first.\n\n\n      if (waitForVideo) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForAudio) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForVideo) {\n        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n\n      if (waitForAudio) {\n        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n    };\n\n    _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n      if (this.checkForAbort_(segmentInfo.requestId)) {\n        return;\n      }\n\n      segmentInfo.waitingOnAppends--;\n\n      if (segmentInfo.waitingOnAppends === 0) {\n        this.handleAppendsDone_();\n      }\n    };\n\n    _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n      if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n      // priority, timing-wise, so we must wait\n      typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n      segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n      this.loaderType_ !== 'main') {\n        return;\n      }\n\n      var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n      // the timing info here comes from video. In the event that the audio is longer than\n      // the video, this will trim the start of the audio.\n      // This also trims any offset from 0 at the beginning of the media\n\n      segmentInfo.timestampOffset -= segmentInfo.timingInfo.start; // In the event that there are part segment downloads, each will try to update the\n      // timestamp offset. Retaining this bit of state prevents us from updating in the\n      // future (within the same segment), however, there may be a better way to handle it.\n\n      segmentInfo.changedTimestampOffset = true;\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (didChange) {\n        this.trigger('timestampoffset');\n      }\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      var trackInfo = this.getMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n      if (!prioritizedTimingInfo) {\n        return;\n      }\n\n      segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n      // current example is the case of fmp4), so use the rough duration to calculate an\n      // end time.\n      prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleAppendsDone_ = function handleAppendsDone_() {\n      // appendsdone can cause an abort\n      if (this.pendingSegment_) {\n        this.trigger('appendsdone');\n      }\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n        // all appending cases?\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n      // best to wait until all appends are done so we're sure that the primary media is\n      // finished (and we have its end time).\n\n      this.updateTimingInfoEnd_(segmentInfo);\n\n      if (this.shouldSaveSegmentTimingInfo_) {\n        // Timeline mappings should only be saved for the main loader. This is for multiple\n        // reasons:\n        //\n        // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n        //    and the main loader try to save the timeline mapping, whichever comes later\n        //    will overwrite the first. In theory this is OK, as the mappings should be the\n        //    same, however, it breaks for (2)\n        // 2) In the event of a live stream, the initial live point will make for a somewhat\n        //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n        //    the mapping will be off for one of the streams, dependent on which one was\n        //    first saved (see (1)).\n        // 3) Primary timing goes by video in VHS, so the mapping should be video.\n        //\n        // Since the audio loader will wait for the main loader to load the first segment,\n        // the main loader will save the first timeline mapping, and ensure that there won't\n        // be a case where audio loads two segments without saving a mapping (thus leading\n        // to missing segment timing info).\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n      }\n\n      var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n      if (segmentDurationMessage) {\n        if (segmentDurationMessage.severity === 'warn') {\n          videojs.log.warn(segmentDurationMessage.message);\n        } else {\n          this.logger_(segmentDurationMessage.message);\n        }\n      }\n\n      this.recordThroughput_(segmentInfo);\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate'); // if the sync request was not appended\n        // then it was not the correct segment.\n        // throw it away and use the data it gave us\n        // to get the correct one.\n\n        if (!segmentInfo.hasAppendedData_) {\n          this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n          return;\n        }\n      }\n\n      this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.fetchAtBuffer_ = true;\n\n      if (this.currentTimeline_ !== segmentInfo.timeline) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        }); // If audio is not disabled, the main segment loader is responsible for updating\n        // the audio timeline as well. If the content is video only, this won't have any\n        // impact.\n\n        if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n          this.timelineChangeController_.lastTimelineChange({\n            type: 'audio',\n            from: this.currentTimeline_,\n            to: segmentInfo.timeline\n          });\n        }\n      }\n\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate');\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n      var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (badSegmentGuess || badPartGuess) {\n        this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n        this.resetEverything();\n        return;\n      }\n\n      var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress');\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n        this.endOfStream();\n      } // used for testing\n\n\n      this.trigger('appended');\n\n      if (segmentInfo.hasAppendedData_) {\n        this.mediaAppends++;\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n    ;\n\n    _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n      if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n    ;\n\n    _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window.WebKitDataCue || window.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    };\n\n    return SegmentLoader;\n  }(videojs.EventTarget);\n\n  function noop() {}\n\n  var toTitleCase = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n\n  var bufferTypes = ['video', 'audio'];\n\n  var _updating = function updating(type, sourceUpdater) {\n    var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n    return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n  };\n\n  var nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n    for (var i = 0; i < queue.length; i++) {\n      var queueEntry = queue[i];\n\n      if (queueEntry.type === 'mediaSource') {\n        // If the next entry is a media source entry (uses multiple source buffers), block\n        // processing to allow it to go through first.\n        return null;\n      }\n\n      if (queueEntry.type === type) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  var shiftQueue = function shiftQueue(type, sourceUpdater) {\n    if (sourceUpdater.queue.length === 0) {\n      return;\n    }\n\n    var queueIndex = 0;\n    var queueEntry = sourceUpdater.queue[queueIndex];\n\n    if (queueEntry.type === 'mediaSource') {\n      if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n        sourceUpdater.queue.shift();\n        queueEntry.action(sourceUpdater);\n\n        if (queueEntry.doneFn) {\n          queueEntry.doneFn();\n        } // Only specific source buffer actions must wait for async updateend events. Media\n        // Source actions process synchronously. Therefore, both audio and video source\n        // buffers are now clear to process the next queue entries.\n\n\n        shiftQueue('audio', sourceUpdater);\n        shiftQueue('video', sourceUpdater);\n      } // Media Source actions require both source buffers, so if the media source action\n      // couldn't process yet (because one or both source buffers are busy), block other\n      // queue actions until both are available and the media source action can process.\n\n\n      return;\n    }\n\n    if (type === 'mediaSource') {\n      // If the queue was shifted by a media source action (this happens when pushing a\n      // media source action onto the queue), then it wasn't from an updateend event from an\n      // audio or video source buffer, so there's no change from previous state, and no\n      // processing should be done.\n      return;\n    } // Media source queue entries don't need to consider whether the source updater is\n    // started (i.e., source buffers are created) as they don't need the source buffers, but\n    // source buffer queue entries do.\n\n\n    if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n      return;\n    }\n\n    if (queueEntry.type !== type) {\n      queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n      if (queueIndex === null) {\n        // Either there's no queue entry that uses this source buffer type in the queue, or\n        // there's a media source queue entry before the next entry of this type, in which\n        // case wait for that action to process first.\n        return;\n      }\n\n      queueEntry = sourceUpdater.queue[queueIndex];\n    }\n\n    sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n    //\n    // The queue pending operation must be set before the action is performed in the event\n    // that the action results in a synchronous event that is acted upon. For instance, if\n    // an exception is thrown that can be handled, it's possible that new actions will be\n    // appended to an empty queue and immediately executed, but would not have the correct\n    // pending information if this property was set after the action was performed.\n\n    sourceUpdater.queuePending[type] = queueEntry;\n    queueEntry.action(type, sourceUpdater);\n\n    if (!queueEntry.doneFn) {\n      // synchronous operation, process next entry\n      sourceUpdater.queuePending[type] = null;\n      shiftQueue(type, sourceUpdater);\n      return;\n    }\n  };\n\n  var cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n    var buffer = sourceUpdater[type + \"Buffer\"];\n    var titleType = toTitleCase(type);\n\n    if (!buffer) {\n      return;\n    }\n\n    buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n    buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n    sourceUpdater.codecs[type] = null;\n    sourceUpdater[type + \"Buffer\"] = null;\n  };\n\n  var inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n    return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n  };\n\n  var actions = {\n    appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.appendBuffer(bytes);\n        } catch (e) {\n          sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n          sourceUpdater.queuePending[type] = null;\n          onError(e);\n        }\n      };\n    },\n    remove: function remove(start, end) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.remove(start, end);\n        } catch (e) {\n          sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n        }\n      };\n    },\n    timestampOffset: function timestampOffset(offset) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n        sourceBuffer.timestampOffset = offset;\n      };\n    },\n    callback: function callback(_callback) {\n      return function (type, sourceUpdater) {\n        _callback();\n      };\n    },\n    endOfStream: function endOfStream(error) {\n      return function (sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n        try {\n          sourceUpdater.mediaSource.endOfStream(error);\n        } catch (e) {\n          videojs.log.warn('Failed to call media source endOfStream', e);\n        }\n      };\n    },\n    duration: function duration(_duration) {\n      return function (sourceUpdater) {\n        sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n        try {\n          sourceUpdater.mediaSource.duration = _duration;\n        } catch (e) {\n          videojs.log.warn('Failed to set media source duration', e);\n        }\n      };\n    },\n    abort: function abort() {\n      return function (type, sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.abort();\n        } catch (e) {\n          videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    addSourceBuffer: function addSourceBuffer(type, codec) {\n      return function (sourceUpdater) {\n        var titleType = toTitleCase(type);\n        var mime = getMimeForCodec(codec);\n        sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n        var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n        sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n        sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n        sourceUpdater.codecs[type] = codec;\n        sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n      };\n    },\n    removeSourceBuffer: function removeSourceBuffer(type) {\n      return function (sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n        try {\n          sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n        } catch (e) {\n          videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    changeType: function changeType(codec) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        } // do not update codec if we don't need to.\n\n\n        if (sourceUpdater.codecs[type] === codec) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n        sourceBuffer.changeType(mime);\n        sourceUpdater.codecs[type] = codec;\n      };\n    }\n  };\n\n  var pushQueue = function pushQueue(_ref) {\n    var type = _ref.type,\n        sourceUpdater = _ref.sourceUpdater,\n        action = _ref.action,\n        doneFn = _ref.doneFn,\n        name = _ref.name;\n    sourceUpdater.queue.push({\n      type: type,\n      action: action,\n      doneFn: doneFn,\n      name: name\n    });\n    shiftQueue(type, sourceUpdater);\n  };\n\n  var onUpdateend = function onUpdateend(type, sourceUpdater) {\n    return function (e) {\n      // Although there should, in theory, be a pending action for any updateend receieved,\n      // there are some actions that may trigger updateend events without set definitions in\n      // the w3c spec. For instance, setting the duration on the media source may trigger\n      // updateend events on source buffers. This does not appear to be in the spec. As such,\n      // if we encounter an updateend without a corresponding pending action from our queue\n      // for that source buffer type, process the next action.\n      if (sourceUpdater.queuePending[type]) {\n        var doneFn = sourceUpdater.queuePending[type].doneFn;\n        sourceUpdater.queuePending[type] = null;\n\n        if (doneFn) {\n          // if there's an error, report it\n          doneFn(sourceUpdater[type + \"Error_\"]);\n        }\n      }\n\n      shiftQueue(type, sourceUpdater);\n    };\n  };\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n   * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n   */\n\n\n  var SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n    function SourceUpdater(mediaSource) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.mediaSource = mediaSource;\n\n      _this.sourceopenListener_ = function () {\n        return shiftQueue('mediaSource', assertThisInitialized(_this));\n      };\n\n      _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n      _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n      _this.audioTimestampOffset_ = 0;\n      _this.videoTimestampOffset_ = 0;\n      _this.queue = [];\n      _this.queuePending = {\n        audio: null,\n        video: null\n      };\n      _this.delayedAudioAppendQueue_ = [];\n      _this.videoAppendQueued_ = false;\n      _this.codecs = {};\n      _this.onVideoUpdateEnd_ = onUpdateend('video', assertThisInitialized(_this));\n      _this.onAudioUpdateEnd_ = onUpdateend('audio', assertThisInitialized(_this));\n\n      _this.onVideoError_ = function (e) {\n        // used for debugging\n        _this.videoError_ = e;\n      };\n\n      _this.onAudioError_ = function (e) {\n        // used for debugging\n        _this.audioError_ = e;\n      };\n\n      _this.createdSourceBuffers_ = false;\n      _this.initializedEme_ = false;\n      _this.triggeredReady_ = false;\n      return _this;\n    }\n\n    var _proto = SourceUpdater.prototype;\n\n    _proto.initializedEme = function initializedEme() {\n      this.initializedEme_ = true;\n      this.triggerReady();\n    };\n\n    _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n      // if false, likely waiting on one of the segment loaders to get enough data to create\n      // source buffers\n      return this.createdSourceBuffers_;\n    };\n\n    _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n      return this.initializedEme_;\n    };\n\n    _proto.ready = function ready() {\n      return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n    };\n\n    _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n      if (this.hasCreatedSourceBuffers()) {\n        // already created them before\n        return;\n      } // the intial addOrChangeSourceBuffers will always be\n      // two add buffers.\n\n\n      this.addOrChangeSourceBuffers(codecs);\n      this.createdSourceBuffers_ = true;\n      this.trigger('createdsourcebuffers');\n      this.triggerReady();\n    };\n\n    _proto.triggerReady = function triggerReady() {\n      // only allow ready to be triggered once, this prevents the case\n      // where:\n      // 1. we trigger createdsourcebuffers\n      // 2. ie 11 synchronously initializates eme\n      // 3. the synchronous initialization causes us to trigger ready\n      // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n      if (this.ready() && !this.triggeredReady_) {\n        this.triggeredReady_ = true;\n        this.trigger('ready');\n      }\n    }\n    /**\n     * Add a type of source buffer to the media source.\n     *\n     * @param {string} type\n     *        The type of source buffer to add.\n     *\n     * @param {string} codec\n     *        The codec to add the source buffer with.\n     */\n    ;\n\n    _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.addSourceBuffer(type, codec),\n        name: 'addSourceBuffer'\n      });\n    }\n    /**\n     * call abort on a source buffer.\n     *\n     * @param {string} type\n     *        The type of source buffer to call abort on.\n     */\n    ;\n\n    _proto.abort = function abort(type) {\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.abort(type),\n        name: 'abort'\n      });\n    }\n    /**\n     * Call removeSourceBuffer and remove a specific type\n     * of source buffer on the mediaSource.\n     *\n     * @param {string} type\n     *        The type of source buffer to remove.\n     */\n    ;\n\n    _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n      if (!this.canRemoveSourceBuffer()) {\n        videojs.log.error('removeSourceBuffer is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.removeSourceBuffer(type),\n        name: 'removeSourceBuffer'\n      });\n    }\n    /**\n     * Whether or not the removeSourceBuffer function is supported\n     * on the mediaSource.\n     *\n     * @return {boolean}\n     *          if removeSourceBuffer can be called.\n     */\n    ;\n\n    _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n      // IE reports that it supports removeSourceBuffer, but often throws\n      // errors when attempting to use the function. So we report that it\n      // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n      // throws errors, so we report that it does not support this as well.\n      return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    SourceUpdater.canChangeType = function canChangeType() {\n      return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    _proto.canChangeType = function canChangeType() {\n      return this.constructor.canChangeType();\n    }\n    /**\n     * Call the changeType function on a source buffer, given the code and type.\n     *\n     * @param {string} type\n     *        The type of source buffer to call changeType on.\n     *\n     * @param {string} codec\n     *        The codec string to change type with on the source buffer.\n     */\n    ;\n\n    _proto.changeType = function changeType(type, codec) {\n      if (!this.canChangeType()) {\n        videojs.log.error('changeType is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.changeType(codec),\n        name: 'changeType'\n      });\n    }\n    /**\n     * Add source buffers with a codec or, if they are already created,\n     * call changeType on source buffers using changeType.\n     *\n     * @param {Object} codecs\n     *        Codecs to switch to\n     */\n    ;\n\n    _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n      var _this2 = this;\n\n      if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n        throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n      }\n\n      Object.keys(codecs).forEach(function (type) {\n        var codec = codecs[type];\n\n        if (!_this2.hasCreatedSourceBuffers()) {\n          return _this2.addSourceBuffer(type, codec);\n        }\n\n        if (_this2.canChangeType()) {\n          _this2.changeType(type, codec);\n        }\n      });\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {MediaObject} object containing audioBytes and/or videoBytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n    ;\n\n    _proto.appendBuffer = function appendBuffer(options, doneFn) {\n      var _this3 = this;\n\n      var segmentInfo = options.segmentInfo,\n          type = options.type,\n          bytes = options.bytes;\n      this.processedAppend_ = true;\n\n      if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n        this.delayedAudioAppendQueue_.push([options, doneFn]);\n        this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n        return;\n      } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n      // not be fired. This means that the queue will be blocked until the next action\n      // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n      // these errors by calling the doneFn with the specific error.\n\n\n      var onError = doneFn;\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.appendBuffer(bytes, segmentInfo || {\n          mediaIndex: -1\n        }, onError),\n        doneFn: doneFn,\n        name: 'appendBuffer'\n      });\n\n      if (type === 'video') {\n        this.videoAppendQueued_ = true;\n\n        if (!this.delayedAudioAppendQueue_.length) {\n          return;\n        }\n\n        var queue = this.delayedAudioAppendQueue_.slice();\n        this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n        this.delayedAudioAppendQueue_.length = 0;\n        queue.forEach(function (que) {\n          _this3.appendBuffer.apply(_this3, que);\n        });\n      }\n    }\n    /**\n     * Get the audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The audio buffer's buffered time range\n     */\n    ;\n\n    _proto.audioBuffered = function audioBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get the video buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The video buffer's buffered time range\n     */\n    ;\n\n    _proto.videoBuffered = function videoBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get a combined video/audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         the combined time range\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n      var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n      if (audio && !video) {\n        return this.audioBuffered();\n      }\n\n      if (video && !audio) {\n        return this.videoBuffered();\n      }\n\n      return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n    }\n    /**\n     * Add a callback to the queue that will set duration on the mediaSource.\n     *\n     * @param {number} duration\n     *        The duration to set\n     *\n     * @param {Function} [doneFn]\n     *        function to run after duration has been set.\n     */\n    ;\n\n    _proto.setDuration = function setDuration(duration, doneFn) {\n      if (doneFn === void 0) {\n        doneFn = noop;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.duration(duration),\n        name: 'duration',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Add a mediaSource endOfStream call to the queue\n     *\n     * @param {Error} [error]\n     *        Call endOfStream with an error\n     *\n     * @param {Function} [doneFn]\n     *        A function that should be called when the\n     *        endOfStream call has finished.\n     */\n    ;\n\n    _proto.endOfStream = function endOfStream(error, doneFn) {\n      if (error === void 0) {\n        error = null;\n      }\n\n      if (doneFn === void 0) {\n        doneFn = noop;\n      }\n\n      if (typeof error !== 'string') {\n        error = undefined;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.endOfStream(error),\n        name: 'endOfStream',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeAudio = function removeAudio(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeVideo = function removeVideo(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {boolean} the updating status of the SourceBuffer\n     */\n    ;\n\n    _proto.updating = function updating() {\n      // the audio/video source buffer is updating\n      if (_updating('audio', this) || _updating('video', this)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Set/get the timestampoffset on the audio SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n      this.audioTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'audio',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.audioTimestampOffset_ = offset;\n      }\n\n      return this.audioTimestampOffset_;\n    }\n    /**\n     * Set/get the timestampoffset on the video SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n      this.videoTimestampOffset !== offset) {\n        pushQueue({\n          type: 'video',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.videoTimestampOffset_ = offset;\n      }\n\n      return this.videoTimestampOffset_;\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the audio queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.audioQueueCallback = function audioQueueCallback(callback) {\n      if (!this.audioBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the video queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.videoQueueCallback = function videoQueueCallback(callback) {\n      if (!this.videoBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this4 = this;\n\n      this.trigger('dispose');\n      bufferTypes.forEach(function (type) {\n        _this4.abort(type);\n\n        if (_this4.canRemoveSourceBuffer()) {\n          _this4.removeSourceBuffer(type);\n        } else {\n          _this4[type + \"QueueCallback\"](function () {\n            return cleanupBuffer(type, _this4);\n          });\n        }\n      });\n      this.videoAppendQueued_ = false;\n      this.delayedAudioAppendQueue_.length = 0;\n\n      if (this.sourceopenListener_) {\n        this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n      }\n\n      this.off();\n    };\n\n    return SourceUpdater;\n  }(videojs.EventTarget);\n\n  var uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n    return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n  };\n\n  var VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n    return _char3.charCodeAt(0);\n  }));\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  var VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n    inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n    function VTTSegmentLoader(settings, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      _this.mediaSource_ = null;\n      _this.subtitlesTrack_ = null;\n      _this.loaderType_ = 'subtitle';\n      _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n      // the sync controller leads to improper behavior.\n\n      _this.shouldSaveSegmentTimingInfo_ = false;\n      return _this;\n    }\n\n    var _proto = VTTSegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      // don't need to transmux any subtitles\n      return null;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n        return videojs.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n    ;\n\n    _proto.track = function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     */\n    ;\n\n    _proto.remove = function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      var _this2 = this; // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    } // never set a timestamp offset for vtt segments.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n      return null;\n    };\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n    ;\n\n    _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        // stop at the last possible segmentInfo\n        if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n          segmentInfo = null;\n          break;\n        }\n\n        segmentInfo = this.generateSegmentInfo_({\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex + 1,\n          startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n          isSyncRequest: segmentInfo.isSyncRequest\n        });\n      }\n\n      return segmentInfo;\n    };\n\n    _proto.stopForError = function stopForError(error) {\n      this.error(error);\n      this.state = 'READY';\n      this.pause();\n      this.trigger('error');\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      var _this3 = this;\n\n      if (!this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      if (error) {\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n        }\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n        } else {\n          this.mediaRequestsErrored += 1;\n        }\n\n        this.stopForError(error);\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functionality between segment loaders\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      this.state = 'APPENDING'; // used for tests\n\n      this.trigger('appending');\n      var segment = segmentInfo.segment;\n\n      if (segment.map) {\n        segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.stopForError({\n            message: 'Error loading vtt.js'\n          });\n\n          return;\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.segmentRequestFinished_(error, simpleSegment, result);\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.stopForError({\n          message: e.message\n        });\n        return;\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.cues.length) {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.cues[0].startTime,\n          end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n        };\n      } else {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.startOfSegment,\n          end: segmentInfo.startOfSegment + segmentInfo.duration\n        };\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n      // the subtitle track\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n      // cues to have identical time-intervals, but if the text is also identical\n      // we can safely assume it is a duplicate that can be removed (ex. when a cue\n      // \"overlaps\" VTT segments)\n\n      removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n      this.handleAppendsDone_();\n    };\n\n    _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n      // that we do not support here.\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n    ;\n\n    _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n      var decoder;\n      var decodeBytesToString = false;\n\n      if (typeof window.TextDecoder === 'function') {\n        decoder = new window.TextDecoder('utf8');\n      } else {\n        decoder = window.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n    ;\n\n    _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / clock_1 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    };\n\n    return VTTSegmentLoader;\n  }(SegmentLoader);\n  /**\n   * @file ad-cue-tags.js\n   */\n\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   *\n   * @param {Object} track\n   *        the track to find the cue for\n   *\n   * @param {number} mediaTime\n   *        the time to find the cue at\n   *\n   * @return {Object|null}\n   *         the found cue or null\n   */\n\n\n  var findAdCue = function findAdCue(track, mediaTime) {\n    var cues = track.cues;\n\n    for (var i = 0; i < cues.length; i++) {\n      var cue = cues[i];\n\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n\n    return null;\n  };\n\n  var updateAdCues = function updateAdCues(media, track, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    if (!media.segments) {\n      return;\n    }\n\n    var mediaTime = offset;\n    var cue;\n\n    for (var i = 0; i < media.segments.length; i++) {\n      var segment = media.segments[i];\n\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n          var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n              adOffset = _segment$cueOutCont$s[0],\n              adTotal = _segment$cueOutCont$s[1];\n\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n\n      mediaTime += segment.duration;\n    }\n  }; // synchronize expired playlist segments.\n  // the max media sequence diff is 48 hours of live stream\n  // content with two second segments. Anything larger than that\n  // will likely be invalid.\n\n\n  var MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\n  var syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (duration !== Infinity) {\n        var syncPoint = {\n          time: 0,\n          segmentIndex: 0,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n        return null;\n      }\n\n      var syncPoint = null;\n      var lastDistance = null;\n      var partsAndSegments = getPartsAndSegments(playlist);\n      currentTime = currentTime || 0;\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n        if (!datetimeMapping || !segment.dateTimeObject) {\n          continue;\n        }\n\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (var z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      var lastDistance = null;\n      currentTime = currentTime || 0;\n      var partsAndSegments = getPartsAndSegments(playlist);\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n        if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n          var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: start,\n              segmentIndex: partAndSegment.segmentIndex,\n              partIndex: partAndSegment.partIndex\n            };\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      currentTime = currentTime || 0;\n\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        var lastDistance = null;\n\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var discontinuitySync = syncController.discontinuities[discontinuity];\n\n          if (discontinuitySync) {\n            var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex: segmentIndex,\n                partIndex: null\n              };\n            }\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (playlist.syncInfo) {\n        var syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }];\n\n  var SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SyncController, _videojs$EventTarget);\n\n    function SyncController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n      _this.timelines = [];\n      _this.discontinuities = [];\n      _this.timelineToDatetimeMappings = {};\n      _this.logger_ = logger('SyncController');\n      return _this;\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Object}\n     *          A sync-point object\n     */\n\n\n    var _proto = SyncController.prototype;\n\n    _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @return {number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n    ;\n\n    _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: playlist.segments,\n        startIndex: syncPoint.segmentIndex,\n        endIndex: 0\n      }));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Array}\n     *          A list of sync-point objects\n     */\n    ;\n\n    _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {string} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {number} target.value\n     *        The value to target for the specified key.\n     * @return {Object}\n     *          The sync-point nearest the target\n     */\n    ;\n\n    _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n    ;\n\n    _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n      if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n        videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n        return;\n      } // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n     * before segments start to load.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n    ;\n\n    _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n      // It's possible for the playlist to be updated before playback starts, meaning time\n      // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n      // crossed, then the old time zero mapping (for the prior timeline) would be retained\n      // unless the mappings are cleared.\n      this.timelineToDatetimeMappings = {};\n\n      if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var firstSegment = playlist.segments[0];\n        var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n        this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n      }\n    }\n    /**\n     * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n     * based on the latest timing information.\n     *\n     * @param {Object} options\n     *        Options object\n     * @param {SegmentInfo} options.segmentInfo\n     *        The current active request information\n     * @param {boolean} options.shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved for timeline mapping and program date time mappings.\n     */\n    ;\n\n    _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n      var segmentInfo = _ref.segmentInfo,\n          shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n      var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n      var segment = segmentInfo.segment;\n\n      if (didCalculateSegmentTimeMapping) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!segmentInfo.playlist.syncInfo) {\n          segmentInfo.playlist.syncInfo = {\n            mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n\n      var dateTime = segment.dateTimeObject;\n\n      if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n        this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n      }\n    };\n\n    _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    };\n\n    _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {Object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @param {boolean} shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved in timelines.\n     * @return {boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n    ;\n\n    _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n      // TODO: remove side effects\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n      var start;\n      var end;\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n\n        if (shouldSaveTimelineMapping) {\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n        }\n\n        start = segmentInfo.startOfSegment;\n        end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        start = timingInfo.start + mappingObj.mapping;\n        end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      if (part) {\n        part.start = start;\n        part.end = end;\n      } // If we don't have a segment start yet or the start value we got\n      // is less than our current segment.start value, save a new start value.\n      // We have to do this because parts will have segment timing info saved\n      // multiple times and we want segment start to be the earliest part start\n      // value for that segment.\n\n\n      if (!segment.start || start < segment.start) {\n        segment.start = start;\n      }\n\n      segment.end = end;\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n    ;\n\n    _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex,\n                endIndex: segmentIndex\n              });\n            } else {\n              time = segment.end + sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex + 1,\n                endIndex: segmentIndex\n              });\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.off();\n    };\n\n    return SyncController;\n  }(videojs.EventTarget);\n  /**\n   * The TimelineChangeController acts as a source for segment loaders to listen for and\n   * keep track of latest and pending timeline changes. This is useful to ensure proper\n   * sync, as each loader may need to make a consideration for what timeline the other\n   * loader is on before making changes which could impact the other loader's media.\n   *\n   * @class TimelineChangeController\n   * @extends videojs.EventTarget\n   */\n\n\n  var TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n    function TimelineChangeController() {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.pendingTimelineChanges_ = {};\n      _this.lastTimelineChanges_ = {};\n      return _this;\n    }\n\n    var _proto = TimelineChangeController.prototype;\n\n    _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n      this.pendingTimelineChanges_[type] = null;\n      this.trigger('pendingtimelinechange');\n    };\n\n    _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n      var type = _ref.type,\n          from = _ref.from,\n          to = _ref.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.pendingTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        this.trigger('pendingtimelinechange');\n      }\n\n      return this.pendingTimelineChanges_[type];\n    };\n\n    _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n      var type = _ref2.type,\n          from = _ref2.from,\n          to = _ref2.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.lastTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        delete this.pendingTimelineChanges_[type];\n        this.trigger('timelinechange');\n      }\n\n      return this.lastTimelineChanges_[type];\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n      this.off();\n    };\n\n    return TimelineChangeController;\n  }(videojs.EventTarget);\n  /* rollup-plugin-worker-factory start for worker!/Users/gkatsevman/p/http-streaming-release/src/decrypter-worker.js */\n\n\n  var workerCode = transform(getWorkerString(function () {\n    function createCommonjsModule(fn, basedir, module) {\n      return module = {\n        path: basedir,\n        exports: {},\n        require: function require(path, base) {\n          return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n        }\n      }, fn(module, module.exports), module.exports;\n    }\n\n    function commonjsRequire() {\n      throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n    }\n\n    var createClass = createCommonjsModule(function (module) {\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      module.exports = _createClass;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var setPrototypeOf = createCommonjsModule(function (module) {\n      function _setPrototypeOf(o, p) {\n        module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n        return _setPrototypeOf(o, p);\n      }\n\n      module.exports = _setPrototypeOf;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var inheritsLoose = createCommonjsModule(function (module) {\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        setPrototypeOf(subClass, superClass);\n      }\n\n      module.exports = _inheritsLoose;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n    var Stream = /*#__PURE__*/function () {\n      function Stream() {\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      var _proto = Stream.prototype;\n\n      _proto.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      }\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {boolean} if we could turn it off or not\n       */\n      ;\n\n      _proto.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n        // In Video.js we slice listener functions\n        // on trigger so that it does not mess up the order\n        // while we loop through.\n        //\n        // Here we slice on off so that the loop in trigger\n        // can continue using it's old reference to loop without\n        // messing up the order.\n\n        this.listeners[type] = this.listeners[type].slice(0);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      }\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {string} type the event name\n       */\n      ;\n\n      _proto.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      }\n      /**\n       * Destroys the stream and cleans up.\n       */\n      ;\n\n      _proto.dispose = function dispose() {\n        this.listeners = {};\n      }\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n      ;\n\n      _proto.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     *\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n    /*! @name aes-decrypter @version 3.1.2 @license Apache-2.0 */\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i;\n      var x;\n      var xInv;\n      var d = [];\n      var th = [];\n      var x2;\n      var x4;\n      var x8;\n      var s;\n      var tEnc;\n      var tDec; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = /*#__PURE__*/function () {\n      function AES(key) {\n        /**\n        * The expanded S-box and inverse S-box tables. These will be computed\n        * on the client so that we don't have to send them down the wire.\n        *\n        * There are two tables, _tables[0] is for encryption and\n        * _tables[1] is for decryption.\n        *\n        * The first 4 sub-tables are the expanded S-box with MixColumns. The\n        * last (_tables[01][4]) is the S-box itself.\n        *\n        * @private\n        */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i;\n        var j;\n        var tmp;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        var encKey = key.slice(0);\n        var decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {number} encrypted0 the first word to decrypt\n       * @param {number} encrypted1 the second word to decrypt\n       * @param {number} encrypted2 the third word to decrypt\n       * @param {number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      var _proto = AES.prototype;\n\n      _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2;\n        var b2;\n        var c2; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * A wrapper around the Stream class to use setTimeout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream = /*#__PURE__*/function (_Stream) {\n      inheritsLoose(AsyncStream, _Stream);\n\n      function AsyncStream() {\n        var _this;\n\n        _this = _Stream.call(this, Stream) || this;\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      var _proto = AsyncStream.prototype;\n\n      _proto.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      }\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n      ;\n\n      _proto.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream;\n    }(Stream);\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt = function decrypt(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0;\n      var init1;\n      var init2;\n      var init3;\n      var encrypted0;\n      var encrypted1;\n      var encrypted2;\n      var encrypted3; // iteration variable\n\n      var wordIx; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter = /*#__PURE__*/function () {\n      function Decrypter(encrypted, key, initVector, done) {\n        var step = Decrypter.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {number} the value of step 32000\n       */\n\n\n      var _proto = Decrypter.prototype;\n      /**\n       * @private\n       */\n\n      _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter, null, [{\n        key: \"STEP\",\n        get: function get() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /* global self */\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     */\n\n\n    self.onmessage = function (event) {\n      var data = event.data;\n      var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n      var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n      var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n      /* eslint-disable no-new, handle-callback-err */\n\n      new Decrypter(encrypted, key, iv, function (err, bytes) {\n        self.postMessage(createTransferableMessage({\n          source: data.source,\n          decrypted: bytes\n        }), [bytes.buffer]);\n      });\n      /* eslint-enable */\n    };\n  }));\n  var Decrypter = factory(workerCode);\n  /* rollup-plugin-worker-factory end for worker!/Users/gkatsevman/p/http-streaming-release/src/decrypter-worker.js */\n\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  var audioTrackKind_ = function audioTrackKind_(properties) {\n    var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n\n  var stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n    segmentLoader.abort();\n    segmentLoader.pause();\n\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n\n  var startLoaders = function startLoaders(playlistLoader, mediaType) {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n\n  var onGroupChanged = function onGroupChanged(type, settings) {\n    return function () {\n      var _settings$segmentLoad = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad[type],\n          mainSegmentLoader = _settings$segmentLoad.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n      if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup || activeGroup.isMasterPlaylist) {\n        // there is no group active or active group is a main playlist and won't change\n        return;\n      }\n\n      if (!activeGroup.playlistLoader) {\n        if (previousActiveLoader) {\n          // The previous group had a playlist loader but the new active group does not\n          // this means we are switching from demuxed to muxed audio. In this case we want to\n          // do a destructive reset of the main segment loader and not restart the audio\n          // loaders.\n          mainSegmentLoader.resetEverything();\n        }\n\n        return;\n      } // Non-destructive resync\n\n\n      segmentLoader.resyncLoader();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onGroupChanging = function onGroupChanging(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      mediaType.lastGroup_ = null;\n      segmentLoader.abort();\n      segmentLoader.pause();\n    };\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n\n  var onTrackChanged = function onTrackChanged(type, settings) {\n    return function () {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          _settings$segmentLoad2 = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad2[type],\n          mainSegmentLoader = _settings$segmentLoad2.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n      if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup) {\n        // there is no group active so we do not want to restart loaders\n        return;\n      }\n\n      if (activeGroup.isMasterPlaylist) {\n        // track did not change, do nothing\n        if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n          return;\n        }\n\n        var mpc = settings.vhs.masterPlaylistController_;\n        var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n        if (mpc.media() === newPlaylist) {\n          return;\n        }\n\n        mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n        masterPlaylistLoader.pause();\n        mainSegmentLoader.resetEverything();\n        mpc.fastQualityChange_(newPlaylist);\n        return;\n      }\n\n      if (type === 'AUDIO') {\n        if (!activeGroup.playlistLoader) {\n          // when switching from demuxed audio/video to muxed audio/video (noted by no\n          // playlist loader for the audio group), we want to do a destructive reset of the\n          // main segment loader and not restart the audio loaders\n          mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n          // it should be stopped\n\n          mainSegmentLoader.resetEverything();\n          return;\n        } // although the segment loader is an audio segment loader, call the setAudio\n        // function to ensure it is prepared to re-append the init segment (or handle other\n        // config changes)\n\n\n        segmentLoader.setAudio(true);\n        mainSegmentLoader.setAudio(false);\n      }\n\n      if (previousActiveLoader === activeGroup.playlistLoader) {\n        // Nothing has actually changed. This can happen because track change events can fire\n        // multiple times for a \"single\" change. One for enabling the new active track, and\n        // one for disabling the track that was active\n        startLoaders(activeGroup.playlistLoader, mediaType);\n        return;\n      }\n\n      if (segmentLoader.track) {\n        // For WebVTT, set the new text track in the segmentloader\n        segmentLoader.track(activeTrack);\n      } // destructive reset\n\n\n      segmentLoader.resetEverything();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type],\n            blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n        stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n        var activeTrack = mediaType.activeTrack();\n        var activeGroup = mediaType.activeGroup();\n        var id = (activeGroup.filter(function (group) {\n          return group[\"default\"];\n        })[0] || activeGroup[0]).id;\n        var defaultTrack = mediaType.tracks[id];\n\n        if (activeTrack === defaultTrack) {\n          // Default track encountered an error. All we can do now is blacklist the current\n          // rendition and hope another will switch audio groups\n          blacklistCurrentPlaylist({\n            message: 'Problem encountered loading the default audio track.'\n          });\n          return;\n        }\n\n        videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n        for (var trackId in mediaType.tracks) {\n          mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n        }\n\n        mediaType.onTrackChanged();\n      };\n    },\n\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type];\n        videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n        stopLoaders(segmentLoader, mediaType);\n        var track = mediaType.activeTrack();\n\n        if (track) {\n          track.mode = 'disabled';\n        }\n\n        mediaType.onTrackChanged();\n      };\n    }\n  };\n  var setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: function AUDIO(type, playlistLoader, settings) {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n  var initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': function AUDIO(type, settings) {\n      var vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$ = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$.groups,\n          tracks = _settings$mediaTypes$.tracks,\n          logger_ = _settings$mediaTypes$.logger_,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n      var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            \"default\": {\n              \"default\": true\n            }\n          }\n        };\n\n        if (audioOnlyMaster) {\n          mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n        }\n      }\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (audioOnlyMaster) {\n            logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n            properties.isMasterPlaylist = true;\n            playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n            // use the resolved media playlist object\n          } else if (sourceType === 'vhs-json' && properties.playlists) {\n            playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n          } else if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n            // should we even have properties.playlists in this check.\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = new videojs.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              \"default\": properties[\"default\"],\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': function SUBTITLES(type, settings) {\n      var tech = settings.tech,\n          vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$2 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$2.groups,\n          tracks = _settings$mediaTypes$2.tracks,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          if (mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n          } else if (sourceType === 'dash') {\n            var playlists = properties.playlists.filter(function (p) {\n              return p.excludeUntil !== Infinity;\n            });\n\n            if (!playlists.length) {\n              return;\n            }\n\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else if (sourceType === 'vhs-json') {\n            playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n            // as provided, otherwise use the resolved URI to load the playlist\n            properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              \"default\": properties[\"default\"] && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n      var tech = settings.tech,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$3 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$3.groups,\n          tracks = _settings$mediaTypes$3.tracks;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n          if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n            continue;\n          }\n\n          var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n          var newProps = {\n            label: variantLabel,\n            language: properties.language,\n            instreamId: properties.instreamId,\n            \"default\": properties[\"default\"] && properties.autoselect\n          };\n\n          if (captionServices[newProps.instreamId]) {\n            newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n          }\n\n          if (newProps[\"default\"] === undefined) {\n            delete newProps[\"default\"];\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n\n          groups[groupId].push(videojs.mergeOptions({\n            id: variantLabel\n          }, properties));\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: newProps.instreamId,\n              kind: 'captions',\n              \"default\": newProps[\"default\"],\n              language: newProps.language,\n              label: newProps.label\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n\n  var groupMatch = function groupMatch(list, media) {\n    for (var i = 0; i < list.length; i++) {\n      if (playlistMatch(media, list[i])) {\n        return true;\n      }\n\n      if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n\n  var activeGroup = function activeGroup(type, settings) {\n    return function (track) {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          groups = settings.mediaTypes[type].groups;\n      var media = masterPlaylistLoader.media();\n\n      if (!media) {\n        return null;\n      }\n\n      var variants = null; // set to variants to main media active group\n\n      if (media.attributes[type]) {\n        variants = groups[media.attributes[type]];\n      }\n\n      var groupKeys = Object.keys(groups);\n\n      if (!variants) {\n        // find the masterPlaylistLoader media\n        // that is in a media group if we are dealing\n        // with audio only\n        if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n          for (var i = 0; i < groupKeys.length; i++) {\n            var groupPropertyList = groups[groupKeys[i]];\n\n            if (groupMatch(groupPropertyList, media)) {\n              variants = groupPropertyList;\n              break;\n            }\n          } // use the main group if it exists\n\n        } else if (groups.main) {\n          variants = groups.main; // only one group, use that one\n        } else if (groupKeys.length === 1) {\n          variants = groups[groupKeys[0]];\n        }\n      }\n\n      if (typeof track === 'undefined') {\n        return variants;\n      }\n\n      if (track === null || !variants) {\n        // An active track was specified so a corresponding group is expected. track === null\n        // means no track is currently active so there is no corresponding group\n        return null;\n      }\n\n      return variants.filter(function (props) {\n        return props.id === track.id;\n      })[0] || null;\n    };\n  };\n\n  var activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].enabled) {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    },\n\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    }\n  };\n\n  var getActiveGroup = function getActiveGroup(type, _ref) {\n    var mediaTypes = _ref.mediaTypes;\n    return function () {\n      var activeTrack_ = mediaTypes[type].activeTrack();\n\n      if (!activeTrack_) {\n        return null;\n      }\n\n      return mediaTypes[type].activeGroup(activeTrack_);\n    };\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the master manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.masterPlaylistLoader\n   *        PlaylistLoader for the master source\n   * @param {VhsHandler} settings.vhs\n   *        VHS SourceHandler\n   * @param {Object} settings.master\n   *        The parsed master manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.blacklistCurrentPlaylist\n   *        Blacklists the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n\n  var setupMediaGroups = function setupMediaGroups(settings) {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      initialize[type](type, settings);\n    });\n    var mediaTypes = settings.mediaTypes,\n        masterPlaylistLoader = settings.masterPlaylistLoader,\n        tech = settings.tech,\n        vhs = settings.vhs,\n        _settings$segmentLoad3 = settings.segmentLoaders,\n        audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n        mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n      mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n    if (audioGroup) {\n      var groupId = (audioGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || audioGroup[0]).id;\n      mediaTypes.AUDIO.tracks[groupId].enabled = true;\n      mediaTypes.AUDIO.onGroupChanged();\n      mediaTypes.AUDIO.onTrackChanged();\n      var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n      // track is changed, but needs to be handled here since the track may not be considered\n      // changed on the first call to onTrackChanged\n\n      if (!activeAudioGroup.playlistLoader) {\n        // either audio is muxed with video or the stream is audio only\n        mainSegmentLoader.setAudio(true);\n      } else {\n        // audio is demuxed\n        mainSegmentLoader.setAudio(false);\n        audioSegmentLoader.setAudio(true);\n      }\n    }\n\n    masterPlaylistLoader.on('mediachange', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanged();\n      });\n    });\n    masterPlaylistLoader.on('mediachanging', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanging();\n      });\n    }); // custom audio track change event handler for usage event\n\n    var onAudioTrackChanged = function onAudioTrackChanged() {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-audio-change'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-audio-change'\n      });\n    };\n\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    vhs.on('dispose', function () {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n\n    for (var id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n\n  var createMediaTypes = function createMediaTypes() {\n    var mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop,\n        activeTrack: noop,\n        getActiveGroup: noop,\n        onGroupChanged: noop,\n        onTrackChanged: noop,\n        lastTrack_: null,\n        logger_: logger(\"MediaGroups[\" + type + \"]\")\n      };\n    });\n    return mediaTypes;\n  };\n\n  var ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n  var Vhs$1; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  var loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\n  var sumLoaderStat = function sumLoaderStat(stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n\n  var shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n    var currentPlaylist = _ref.currentPlaylist,\n        buffered = _ref.buffered,\n        currentTime = _ref.currentTime,\n        nextPlaylist = _ref.nextPlaylist,\n        bufferLowWaterLine = _ref.bufferLowWaterLine,\n        bufferHighWaterLine = _ref.bufferHighWaterLine,\n        duration = _ref.duration,\n        experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n        log = _ref.log; // we have no other playlist to switch to\n\n    if (!nextPlaylist) {\n      videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n      return false;\n    }\n\n    var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n    if (!currentPlaylist) {\n      log(sharedLogLine + \" as current playlist is not set\");\n      return true;\n    } // no need to switch if playlist is the same\n\n\n    if (nextPlaylist.id === currentPlaylist.id) {\n      return false;\n    } // determine if current time is in a buffered range.\n\n\n    var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n    // This is because in LIVE, the player plays 3 segments from the end of the\n    // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n    // in those segments, a viewer will never experience a rendition upswitch.\n\n    if (!currentPlaylist.endList) {\n      // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n      // doubles the time to first playback.\n      if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n        log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n        return false;\n      }\n\n      log(sharedLogLine + \" as current playlist is live\");\n      return true;\n    }\n\n    var forwardBuffer = timeAheadOf(buffered, currentTime);\n    var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n    // duration is below the max potential low water line\n\n    if (duration < maxBufferLowWaterLine) {\n      log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n      return true;\n    }\n\n    var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n    var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n    // we can switch down\n\n    if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n      var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n      if (experimentalBufferBasedABR) {\n        logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n      }\n\n      log(logLine);\n      return true;\n    } // and if our buffer is higher than the low water line,\n    // we can switch up\n\n\n    if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n      var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n      if (experimentalBufferBasedABR) {\n        _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n      }\n\n      log(_logLine);\n      return true;\n    }\n\n    log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n    return false;\n  };\n  /**\n   * the master playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a master playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class MasterPlaylistController\n   * @extends videojs.EventTarget\n   */\n\n\n  var MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n    function MasterPlaylistController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      var src = options.src,\n          handleManifestRedirects = options.handleManifestRedirects,\n          withCredentials = options.withCredentials,\n          tech = options.tech,\n          bandwidth = options.bandwidth,\n          externVhs = options.externVhs,\n          useCueTags = options.useCueTags,\n          blacklistDuration = options.blacklistDuration,\n          enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n          sourceType = options.sourceType,\n          cacheEncryptionKeys = options.cacheEncryptionKeys,\n          experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n          experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n          captionServices = options.captionServices;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or JSON manifest string is required');\n      }\n\n      var maxPlaylistRetries = options.maxPlaylistRetries;\n\n      if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n        maxPlaylistRetries = Infinity;\n      }\n\n      Vhs$1 = externVhs;\n      _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n      _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n      _this.withCredentials = withCredentials;\n      _this.tech_ = tech;\n      _this.vhs_ = tech.vhs;\n      _this.sourceType_ = sourceType;\n      _this.useCueTags_ = useCueTags;\n      _this.blacklistDuration = blacklistDuration;\n      _this.maxPlaylistRetries = maxPlaylistRetries;\n      _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n      if (_this.useCueTags_) {\n        _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n        _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n\n      _this.requestOptions_ = {\n        withCredentials: withCredentials,\n        handleManifestRedirects: handleManifestRedirects,\n        maxPlaylistRetries: maxPlaylistRetries,\n        timeout: null\n      };\n\n      _this.on('error', _this.pauseLoading);\n\n      _this.mediaTypes_ = createMediaTypes();\n      _this.mediaSource = new window.MediaSource();\n      _this.handleDurationChange_ = _this.handleDurationChange_.bind(assertThisInitialized(_this));\n      _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(assertThisInitialized(_this));\n      _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(assertThisInitialized(_this));\n\n      _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n      _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n      _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n      // everything, and the MediaSource should not be detached without a proper disposal\n\n\n      _this.seekable_ = videojs.createTimeRanges();\n      _this.hasPlayed_ = false;\n      _this.syncController_ = new SyncController(options);\n      _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      _this.decrypter_ = new Decrypter();\n      _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n      _this.inbandTextTracks_ = {};\n      _this.timelineChangeController_ = new TimelineChangeController();\n      var segmentLoaderSettings = {\n        vhs: _this.vhs_,\n        parse708captions: options.parse708captions,\n        captionServices: captionServices,\n        mediaSource: _this.mediaSource,\n        currentTime: _this.tech_.currentTime.bind(_this.tech_),\n        seekable: function seekable() {\n          return _this.seekable();\n        },\n        seeking: function seeking() {\n          return _this.tech_.seeking();\n        },\n        duration: function duration() {\n          return _this.duration();\n        },\n        hasPlayed: function hasPlayed() {\n          return _this.hasPlayed_;\n        },\n        goalBufferLength: function goalBufferLength() {\n          return _this.goalBufferLength();\n        },\n        bandwidth: bandwidth,\n        syncController: _this.syncController_,\n        decrypter: _this.decrypter_,\n        sourceType: _this.sourceType_,\n        inbandTextTracks: _this.inbandTextTracks_,\n        cacheEncryptionKeys: cacheEncryptionKeys,\n        sourceUpdater: _this.sourceUpdater_,\n        timelineChangeController: _this.timelineChangeController_,\n        experimentalExactManifestTimings: options.experimentalExactManifestTimings\n      }; // The source type check not only determines whether a special DASH playlist loader\n      // should be used, but also covers the case where the provided src is a vhs-json\n      // manifest object (instead of a URL). In the case of vhs-json, the default\n      // PlaylistLoader should be used.\n\n      _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n      _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n\n      _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        segmentMetadataTrack: _this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'vtt',\n        featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n      }), options);\n\n      _this.setupSegmentLoaderListeners_();\n\n      if (_this.experimentalBufferBasedABR) {\n        _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n          return _this.startABRTimer_();\n        });\n\n        _this.tech_.on('pause', function () {\n          return _this.stopABRTimer_();\n        });\n\n        _this.tech_.on('play', function () {\n          return _this.startABRTimer_();\n        });\n      } // Create SegmentLoader stat-getters\n      // mediaRequests_\n      // mediaRequestsAborted_\n      // mediaRequestsTimedout_\n      // mediaRequestsErrored_\n      // mediaTransferDuration_\n      // mediaBytesTransferred_\n      // mediaAppends_\n\n\n      loaderStats.forEach(function (stat) {\n        _this[stat + '_'] = sumLoaderStat.bind(assertThisInitialized(_this), stat);\n      });\n      _this.logger_ = logger('MPC');\n      _this.triggeredFmp4Usage = false;\n\n      if (_this.tech_.preload() === 'none') {\n        _this.loadOnPlay_ = function () {\n          _this.loadOnPlay_ = null;\n\n          _this.masterPlaylistLoader_.load();\n        };\n\n        _this.tech_.one('play', _this.loadOnPlay_);\n      } else {\n        _this.masterPlaylistLoader_.load();\n      }\n\n      _this.timeToLoadedData__ = -1;\n      _this.mainAppendsToLoadedData__ = -1;\n      _this.audioAppendsToLoadedData__ = -1;\n      var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n      _this.tech_.one(event, function () {\n        var timeToLoadedDataStart = Date.now();\n\n        _this.tech_.one('loadeddata', function () {\n          _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n          _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n          _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n        });\n      });\n\n      return _this;\n    }\n\n    var _proto = MasterPlaylistController.prototype;\n\n    _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n      return this.mainAppendsToLoadedData__;\n    };\n\n    _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n      return this.audioAppendsToLoadedData__;\n    };\n\n    _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n      var main = this.mainAppendsToLoadedData_();\n      var audio = this.audioAppendsToLoadedData_();\n\n      if (main === -1 || audio === -1) {\n        return -1;\n      }\n\n      return main + audio;\n    };\n\n    _proto.timeToLoadedData_ = function timeToLoadedData_() {\n      return this.timeToLoadedData__;\n    }\n    /**\n     * Run selectPlaylist and switch to the new playlist if we should\n     *\n     * @private\n     *\n     */\n    ;\n\n    _proto.checkABR_ = function checkABR_() {\n      var nextPlaylist = this.selectPlaylist();\n\n      if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n        this.switchMedia_(nextPlaylist, 'abr');\n      }\n    };\n\n    _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n      var oldMedia = this.media();\n      var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n      var newId = playlist.id || playlist.uri;\n\n      if (oldId && oldId !== newId) {\n        this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n        this.tech_.trigger({\n          type: 'usage',\n          name: \"vhs-rendition-change-\" + cause\n        });\n      }\n\n      this.masterPlaylistLoader_.media(playlist, delay);\n    }\n    /**\n     * Start a timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.startABRTimer_ = function startABRTimer_() {\n      var _this2 = this;\n\n      this.stopABRTimer_();\n      this.abrTimer_ = window.setInterval(function () {\n        return _this2.checkABR_();\n      }, 250);\n    }\n    /**\n     * Stop the timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.stopABRTimer_ = function stopABRTimer_() {\n      // if we're scrubbing, we don't need to pause.\n      // This getter will be added to Video.js in version 7.11.\n      if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n        return;\n      }\n\n      window.clearInterval(this.abrTimer_);\n      this.abrTimer_ = null;\n    }\n    /**\n     * Get a list of playlists for the currently selected audio playlist\n     *\n     * @return {Array} the array of audio playlists\n     */\n    ;\n\n    _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n      var master = this.master();\n      var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n      // assume that the audio tracks are contained in masters\n      // playlist array, use that or an empty array.\n\n      if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n        return defaultPlaylists;\n      }\n\n      var AUDIO = master.mediaGroups.AUDIO;\n      var groupKeys = Object.keys(AUDIO);\n      var track; // get the current active track\n\n      if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n        track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n      } else {\n        // default group is `main` or just the first group.\n        var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n        for (var label in defaultGroup) {\n          if (defaultGroup[label][\"default\"]) {\n            track = {\n              label: label\n            };\n            break;\n          }\n        }\n      } // no active track no playlists.\n\n\n      if (!track) {\n        return defaultPlaylists;\n      }\n\n      var playlists = []; // get all of the playlists that are possible for the\n      // active track.\n\n      for (var group in AUDIO) {\n        if (AUDIO[group][track.label]) {\n          var properties = AUDIO[group][track.label];\n\n          if (properties.playlists && properties.playlists.length) {\n            playlists.push.apply(playlists, properties.playlists);\n          } else if (properties.uri) {\n            playlists.push(properties);\n          } else if (master.playlists.length) {\n            // if an audio group does not have a uri\n            // see if we have main playlists that use it as a group.\n            // if we do then add those to the playlists list.\n            for (var i = 0; i < master.playlists.length; i++) {\n              var playlist = master.playlists[i];\n\n              if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n                playlists.push(playlist);\n              }\n            }\n          }\n        }\n      }\n\n      if (!playlists.length) {\n        return defaultPlaylists;\n      }\n\n      return playlists;\n    }\n    /**\n     * Register event handlers on the master playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n      var _this3 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this3.tech_.preload() !== 'none') {\n          _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n          _this3.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this3.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this3.audioSegmentLoader_,\n            SUBTITLES: _this3.subtitleSegmentLoader_,\n            main: _this3.mainSegmentLoader_\n          },\n          tech: _this3.tech_,\n          requestOptions: _this3.requestOptions_,\n          masterPlaylistLoader: _this3.masterPlaylistLoader_,\n          vhs: _this3.vhs_,\n          master: _this3.master(),\n          mediaTypes: _this3.mediaTypes_,\n          blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n        });\n\n        _this3.triggerPresenceUsage_(_this3.master(), media);\n\n        _this3.setupFirstPlay();\n\n        if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this3.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this3.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        if (_this3.loadOnPlay_) {\n          _this3.tech_.off('play', _this3.loadOnPlay_);\n        }\n\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // exclude any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this3.excludeUnsupportedVariants_();\n\n          var selectedMedia;\n\n          if (_this3.enableLowInitialPlaylist) {\n            selectedMedia = _this3.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this3.selectPlaylist();\n          }\n\n          if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n            return;\n          }\n\n          _this3.initialMedia_ = selectedMedia;\n\n          _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n          // fire again since the playlist will be requested. In the case of vhs-json\n          // (where the manifest object is provided as the source), when the media\n          // playlist's `segments` list is already available, a media playlist won't be\n          // requested, and loadedplaylist won't fire again, so the playlist handler must be\n          // called on its own here.\n\n\n          var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n          if (!haveJsonSource) {\n            return;\n          }\n\n          updatedPlaylist = _this3.initialMedia_;\n        }\n\n        _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this3.mainSegmentLoader_.abort();\n\n        _this3.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n\n        _this3.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n        // excluded for not-changing. We likely just have a really slowly updating\n        // playlist.\n\n\n        if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n          return;\n        }\n\n        var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this3.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }); // useful for monitoring QoS\n\n\n          _this3.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-disabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-enabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * Given an updated media playlist (whether it was loaded for the first time, or\n     * refreshed for live playlists), update any relevant properties and state to reflect\n     * changes in the media that should be accounted for (e.g., cues and duration).\n     *\n     * @param {Object} updatedPlaylist the updated media playlist object\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n      if (this.useCueTags_) {\n        this.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n\n      this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n      this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n\n        if (this.audioSegmentLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n    ;\n\n    _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-demuxed'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-webvtt'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Vhs$1.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-aes'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-alternate-audio'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-playlist-cue-tags'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    };\n\n    _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n      var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n      var currentTime = this.tech_.currentTime();\n      var bufferLowWaterLine = this.bufferLowWaterLine();\n      var bufferHighWaterLine = this.bufferHighWaterLine();\n      var buffered = this.tech_.buffered();\n      return shouldSwitchToMedia({\n        buffered: buffered,\n        currentTime: currentTime,\n        currentPlaylist: currentPlaylist,\n        nextPlaylist: nextPlaylist,\n        bufferLowWaterLine: bufferLowWaterLine,\n        bufferHighWaterLine: bufferHighWaterLine,\n        duration: this.duration(),\n        experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n        log: this.logger_\n      });\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n      var _this4 = this;\n\n      if (!this.experimentalBufferBasedABR) {\n        this.mainSegmentLoader_.on('bandwidthupdate', function () {\n          var nextPlaylist = _this4.selectPlaylist();\n\n          if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n            _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n          }\n\n          _this4.tech_.trigger('bandwidthupdate');\n        });\n        this.mainSegmentLoader_.on('progress', function () {\n          _this4.trigger('progress');\n        });\n      }\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.mainSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-timestamp-offset'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.audioSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.audioSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this4.logger_('main segment loader ended');\n\n        _this4.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function (event) {\n        // never try to early abort with the new ABR algorithm\n        if (_this4.experimentalBufferBasedABR) {\n          return;\n        }\n\n        _this4.delegateLoaders_('all', ['abort']);\n\n        _this4.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      var updateCodecs = function updateCodecs() {\n        if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n          return _this4.tryToCreateSourceBuffers_();\n        }\n\n        var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n        if (!codecs) {\n          return;\n        }\n\n        _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n      };\n\n      this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n      this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n      this.mainSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this4.logger_('audioSegmentLoader ended');\n\n        _this4.onEndOfStream();\n      });\n    };\n\n    _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n    ;\n\n    _proto.load = function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     * @deprecated\n     */\n    ;\n\n    _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      this.fastQualityChange_(media);\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n    ;\n\n    _proto.fastQualityChange_ = function fastQualityChange_(media) {\n      var _this5 = this;\n\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        this.logger_('skipping fastQualityChange because new media is same as old');\n        return;\n      }\n\n      this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n        } else {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n    ;\n\n    _proto.play = function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n    ;\n\n    _proto.setupFirstPlay = function setupFirstPlay() {\n      var _this6 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this6.trigger('firstplay');\n\n            _this6.tech_.setCurrentTime(seekable.end(0));\n\n            _this6.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceOpen_ = function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * handle the sourceended event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceEnded_ = function handleSourceEnded_() {\n      if (!this.inbandTextTracks_.metadataTrack_) {\n        return;\n      }\n\n      var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n      if (!cues || !cues.length) {\n        return;\n      }\n\n      var duration = this.duration();\n      cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n    }\n    /**\n     * handle the durationchange event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleDurationChange_ = function handleDurationChange_() {\n      this.tech_.trigger('durationchange');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n    ;\n\n    _proto.onEndOfStream = function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n        if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.stopABRTimer_();\n      this.sourceUpdater_.endOfStream();\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     *\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n    ;\n\n    _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n    ;\n\n    _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n      if (error === void 0) {\n        error = {};\n      } // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n\n      var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        if (this.mediaSource.readyState !== 'open') {\n          this.trigger('error');\n        } else {\n          this.sourceUpdater_.endOfStream('network');\n        }\n\n        return;\n      }\n\n      currentPlaylist.playlistErrors_++;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var enabledPlaylists = playlists.filter(isEnabled);\n      var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n      // forever\n\n      if (playlists.length === 1 && blacklistDuration !== Infinity) {\n        videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        var reincluded = false;\n        playlists.forEach(function (playlist) {\n          // skip current playlist which is about to be blacklisted\n          if (playlist === currentPlaylist) {\n            return;\n          }\n\n          var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n          if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n            reincluded = true;\n            delete playlist.excludeUntil;\n          }\n        });\n\n        if (reincluded) {\n          videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n          // playlist. This is needed for users relying on the retryplaylist event to catch a\n          // case where the player might be stuck and looping through \"dead\" playlists.\n\n          this.tech_.trigger('retryplaylist');\n        }\n      } // Blacklist this playlist\n\n\n      var excludeUntil;\n\n      if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n        excludeUntil = Infinity;\n      } else {\n        excludeUntil = Date.now() + blacklistDuration * 1000;\n      }\n\n      currentPlaylist.excludeUntil = excludeUntil;\n\n      if (error.reason) {\n        currentPlaylist.lastExcludeReason_ = error.reason;\n      }\n\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-blacklisted'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n      // Would be something like media().id !=== currentPlaylist.id and we  would need something\n      // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n      // from loading a new playlist on any blacklist.\n      // Select a new playlist\n\n      var nextPlaylist = this.selectPlaylist();\n\n      if (!nextPlaylist) {\n        this.error = 'Playback cannot continue. No available working or supported playlists.';\n        this.trigger('error');\n        return;\n      }\n\n      var logFn = error.internal ? this.logger_ : videojs.log.warn;\n      var errorMessage = error.message ? ' ' + error.message : '';\n      logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n      if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n        this.delegateLoaders_('audio', ['abort', 'pause']);\n      } // if subtitle group changed reset subtitle loaders\n\n\n      if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n        this.delegateLoaders_('subtitle', ['abort', 'pause']);\n      }\n\n      this.delegateLoaders_('main', ['abort', 'pause']);\n      var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n      var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n      return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n    }\n    /**\n     * Pause all segment/playlist loaders\n     */\n    ;\n\n    _proto.pauseLoading = function pauseLoading() {\n      this.delegateLoaders_('all', ['abort', 'pause']);\n      this.stopABRTimer_();\n    }\n    /**\n     * Call a set of functions in order on playlist loaders, segment loaders,\n     * or both types of loaders.\n     *\n     * @param {string} filter\n     *        Filter loaders that should call fnNames using a string. Can be:\n     *        * all - run on all loaders\n     *        * audio - run on all audio loaders\n     *        * subtitle - run on all subtitle loaders\n     *        * main - run on the main/master loaders\n     *\n     * @param {Array|string} fnNames\n     *        A string or array of function names to call.\n     */\n    ;\n\n    _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n      var _this7 = this;\n\n      var loaders = [];\n      var dontFilterPlaylist = filter === 'all';\n\n      if (dontFilterPlaylist || filter === 'main') {\n        loaders.push(this.masterPlaylistLoader_);\n      }\n\n      var mediaTypes = [];\n\n      if (dontFilterPlaylist || filter === 'audio') {\n        mediaTypes.push('AUDIO');\n      }\n\n      if (dontFilterPlaylist || filter === 'subtitle') {\n        mediaTypes.push('CLOSED-CAPTIONS');\n        mediaTypes.push('SUBTITLES');\n      }\n\n      mediaTypes.forEach(function (mediaType) {\n        var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n        if (loader) {\n          loaders.push(loader);\n        }\n      });\n      ['main', 'audio', 'subtitle'].forEach(function (name) {\n        var loader = _this7[name + \"SegmentLoader_\"];\n\n        if (loader && (filter === name || filter === 'all')) {\n          loaders.push(loader);\n        }\n      });\n      loaders.forEach(function (loader) {\n        return fnNames.forEach(function (fnName) {\n          if (typeof loader[fnName] === 'function') {\n            loader[fnName]();\n          }\n        });\n      });\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // if the seek location is already buffered, continue buffering as usual\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n    ;\n\n    _proto.duration = function duration() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        // no playlists loaded yet, so can't determine a duration\n        return 0;\n      } // Don't rely on the media source for duration in the case of a live playlist since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, just return Infinity.\n\n\n      if (!media.endList) {\n        return Infinity;\n      } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n      // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Vhs$1.Playlist.duration(media);\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.seekable_;\n    };\n\n    _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n      var audioSeekable; // If we have two source buffers and only one is created then the seekable range will be incorrect.\n      // We should wait until all source buffers are created.\n\n      if (!this.masterPlaylistLoader_ || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var master = this.masterPlaylistLoader_.master;\n      var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.duration());\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd;\n      var oldStart;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n    ;\n\n    _proto.updateDuration = function updateDuration(isLive) {\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n        this.updateDuration_ = null;\n      }\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.updateDuration_ = this.updateDuration.bind(this, isLive);\n        this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n        return;\n      }\n\n      if (isLive) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          return;\n        } // Even in the case of a live playlist, the native MediaSource's duration should not\n        // be set to Infinity (even though this would be expected for a live playlist), since\n        // setting the native MediaSource's duration to infinity ends up with consequences to\n        // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n        //\n        // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n        // however, few browsers have support for setLiveSeekableRange()\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n        //\n        // Until a time when the duration of the media source can be set to infinity, and a\n        // seekable range specified across browsers, the duration should be greater than or\n        // equal to the last possible seekable value.\n        // MediaSource duration starts as NaN\n        // It is possible (and probable) that this case will never be reached for many\n        // sources, since the MediaSource reports duration as the highest value without\n        // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n        // we buffered times 0 to 100 with real times of 100 to 200, even though current\n        // time will be between 0 and 100, the native media source may report the duration\n        // as 200. However, since we report duration separate from the media source (as\n        // Infinity), and as long as the native media source duration value is greater than\n        // our reported seekable range, seeks will work as expected. The large number as\n        // duration for live is actually a strategy used by some players to work around the\n        // issue of live seekable ranges cited above.\n\n\n        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n          this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n        }\n\n        return;\n      }\n\n      var buffered = this.tech_.buffered();\n      var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n      if (buffered.length > 0) {\n        duration = Math.max(duration, buffered.end(buffered.length - 1));\n      }\n\n      if (this.mediaSource.duration !== duration) {\n        this.sourceUpdater_.setDuration(duration);\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this8 = this;\n\n      this.trigger('dispose');\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this8.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.sourceUpdater_.dispose();\n      this.timelineChangeController_.dispose();\n      this.stopABRTimer_();\n\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      }\n\n      this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n      this.off();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n    ;\n\n    _proto.master = function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n    ;\n\n    _proto.media = function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    };\n\n    _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n      // otherwise check on the segment loader.\n\n      var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n      if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n      var _this9 = this;\n\n      var media = {\n        main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n        audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n      }; // set \"main\" media equal to video\n\n      media.video = media.main;\n      var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n      var codecs = {};\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n      if (media.main.hasVideo) {\n        codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n      }\n\n      if (media.main.isMuxed) {\n        codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n      }\n\n      if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n        codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n        media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n      } // no codecs, no playback.\n\n\n      if (!codecs.audio && !codecs.video) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: 'Could not determine codecs for playlist.',\n          blacklistDuration: Infinity\n        });\n        return;\n      } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n      var supportFunction = function supportFunction(isFmp4, codec) {\n        return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n      };\n\n      var unsupportedCodecs = {};\n      var unsupportedAudio;\n      ['video', 'audio'].forEach(function (type) {\n        if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n          var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n          unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n          unsupportedCodecs[supporter].push(codecs[type]);\n\n          if (type === 'audio') {\n            unsupportedAudio = supporter;\n          }\n        }\n      });\n\n      if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n        var audioGroup = this.media().attributes.AUDIO;\n        this.master().playlists.forEach(function (variant) {\n          var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n          if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n        this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n      } // if we have any unsupported codecs blacklist this playlist.\n\n\n      if (Object.keys(unsupportedCodecs).length) {\n        var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n          if (acc) {\n            acc += ', ';\n          }\n\n          acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n          return acc;\n        }, '') + '.';\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          internal: true,\n          message: message,\n          blacklistDuration: Infinity\n        });\n        return;\n      } // check if codec switching is happening\n\n\n      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n        var switchMessages = [];\n        ['video', 'audio'].forEach(function (type) {\n          var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n          var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n          if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n            switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n          }\n        });\n\n        if (switchMessages.length) {\n          this.blacklistCurrentPlaylist({\n            playlist: this.media(),\n            message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n            blacklistDuration: Infinity,\n            internal: true\n          });\n          return;\n        }\n      } // TODO: when using the muxer shouldn't we just return\n      // the codecs that the muxer outputs?\n\n\n      return codecs;\n    }\n    /**\n     * Create source buffers and exlude any incompatible renditions.\n     *\n     * @private\n     */\n    ;\n\n    _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n      // media source is not ready yet or sourceBuffers are already\n      // created.\n      if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n\n      if (!this.areMediaTypesKnown_()) {\n        return;\n      }\n\n      var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n\n      this.sourceUpdater_.createSourceBuffers(codecs);\n      var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n      this.excludeIncompatibleVariants_(codecString);\n    }\n    /**\n     * Excludes playlists with codecs that are unsupported by the muxer and browser.\n     */\n    ;\n\n    _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n      var _this10 = this;\n\n      var playlists = this.master().playlists;\n      var ids = []; // TODO: why don't we have a property to loop through all\n      // playlist? Why did we ever mix indexes and keys?\n\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n\n        if (ids.indexOf(variant.id) !== -1) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var codecs = codecsForPlaylist(_this10.master, variant);\n        var unsupported = [];\n\n        if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n          unsupported.push(\"audio codec \" + codecs.audio);\n        }\n\n        if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n          unsupported.push(\"video codec \" + codecs.video);\n        }\n\n        if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n          unsupported.push(\"text codec \" + codecs.text);\n        }\n\n        if (unsupported.length) {\n          variant.excludeUntil = Infinity;\n\n          _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n    ;\n\n    _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n      var _this11 = this;\n\n      var ids = [];\n      var playlists = this.master().playlists;\n      var codecs = unwrapCodecList(parseCodecs(codecString));\n      var codecCount_ = codecCount(codecs);\n      var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n      var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n        // or it if it is already excluded forever.\n\n        if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var blacklistReasons = []; // get codecs from the playlist for this variant\n\n        var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n        var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n        // variant is incompatible. Wait for mux.js to probe\n\n        if (!variantCodecs.audio && !variantCodecs.video) {\n          return;\n        } // TODO: we can support this by removing the\n        // old media source and creating a new one, but it will take some work.\n        // The number of streams cannot change\n\n\n        if (variantCodecCount !== codecCount_) {\n          blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n        } // only exclude playlists by codec change, if codecs cannot switch\n        // during playback.\n\n\n        if (!_this11.sourceUpdater_.canChangeType()) {\n          var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n          var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n          if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n          } // the audio codec cannot change\n\n\n          if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n          }\n        }\n\n        if (blacklistReasons.length) {\n          variant.excludeUntil = Infinity;\n\n          _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n        }\n      });\n    };\n\n    _proto.updateAdCues_ = function updateAdCues_(media) {\n      var offset = 0;\n      var seekable = this.seekable();\n\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {number} Desired forward buffer length in seconds\n     */\n    ;\n\n    _proto.goalBufferLength = function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {number} Desired buffer low water line in seconds\n     */\n    ;\n\n    _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n    };\n\n    _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n      return Config.BUFFER_HIGH_WATER_LINE;\n    };\n\n    return MasterPlaylistController;\n  }(videojs.EventTarget);\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The master playlist loader\n   * @param {string} playlistID - id of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n\n  var enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n    return function (enable) {\n      var playlist = loader.master.playlists[playlistID];\n      var incompatible = isIncompatible(playlist);\n      var currentlyEnabled = isEnabled(playlist);\n\n      if (typeof enable === 'undefined') {\n        return currentlyEnabled;\n      }\n\n      if (enable) {\n        delete playlist.disabled;\n      } else {\n        playlist.disabled = true;\n      }\n\n      if (enable !== currentlyEnabled && !incompatible) {\n        // Ensure the outside world knows about our changes\n        changePlaylistFn();\n\n        if (enable) {\n          loader.trigger('renditionenabled');\n        } else {\n          loader.trigger('renditiondisabled');\n        }\n      }\n\n      return enable;\n    };\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n\n  var Representation = function Representation(vhsHandler, playlist, id) {\n    var mpc = vhsHandler.masterPlaylistController_,\n        smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n    var changeType = smoothQualityChange ? 'smooth' : 'fast';\n    var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      var resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n    }\n\n    this.codecs = codecsForPlaylist(mpc.master(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the master playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  };\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the VhsHandler class\n   *\n   * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n   * representation API into\n   */\n\n\n  var renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n    // Add a single API-specific function to the VhsHandler instance\n    vhsHandler.representations = function () {\n      var master = vhsHandler.masterPlaylistController_.master();\n      var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n      if (!playlists) {\n        return [];\n      }\n\n      return playlists.filter(function (media) {\n        return !isIncompatible(media);\n      }).map(function (e, i) {\n        return new Representation(vhsHandler, e, e.id);\n      });\n    };\n  };\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n\n\n  var timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  var PlaybackWatcher = /*#__PURE__*/function () {\n    /**\n     * Represents an PlaybackWatcher object.\n     *\n     * @class\n     * @param {Object} options an object that includes the tech and settings\n     */\n    function PlaybackWatcher(options) {\n      var _this = this;\n\n      this.masterPlaylistController_ = options.masterPlaylistController;\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n      this.media = options.media;\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.timer_ = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n\n      var playHandler = function playHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var canPlayHandler = function canPlayHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var waitingHandler = function waitingHandler() {\n        return _this.techWaiting_();\n      };\n\n      var cancelTimerHandler = function cancelTimerHandler() {\n        return _this.cancelTimer_();\n      };\n\n      var mpc = this.masterPlaylistController_;\n      var loaderTypes = ['main', 'subtitle', 'audio'];\n      var loaderChecks = {};\n      loaderTypes.forEach(function (type) {\n        loaderChecks[type] = {\n          reset: function reset() {\n            return _this.resetSegmentDownloads_(type);\n          },\n          updateend: function updateend() {\n            return _this.checkSegmentDownloads_(type);\n          }\n        };\n        mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n        // isn't changing we want to reset. We cannot assume that the new rendition\n        // will also be stalled, until after new appends.\n\n        mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n        // This prevents one segment playlists (single vtt or single segment content)\n        // from being detected as stalling. As the buffer will not change in those cases, since\n        // the buffer is the entire video duration.\n\n        _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      /**\n       * We check if a seek was into a gap through the following steps:\n       * 1. We get a seeking event and we do not get a seeked event. This means that\n       *    a seek was attempted but not completed.\n       * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n       *    removed everything from our buffer and appended a segment, and should be ready\n       *    to check for gaps.\n       */\n\n      var setSeekingHandlers = function setSeekingHandlers(fn) {\n        ['main', 'audio'].forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n        });\n      };\n\n      this.seekingAppendCheck_ = function () {\n        if (_this.fixesBadSeeks_()) {\n          _this.consecutiveUpdates = 0;\n          _this.lastRecordedTime = _this.tech_.currentTime();\n          setSeekingHandlers('off');\n        }\n      };\n\n      this.clearSeekingAppendCheck_ = function () {\n        return setSeekingHandlers('off');\n      };\n\n      this.watchForBadSeeking_ = function () {\n        _this.clearSeekingAppendCheck_();\n\n        setSeekingHandlers('on');\n      };\n\n      this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n      this.tech_.on('seeking', this.watchForBadSeeking_);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler);\n      /*\n        An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n        is surfaced in one of two ways:\n         1)  The `waiting` event is fired before the player has buffered content, making it impossible\n            to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n            we can check if playback is stalled due to a gap, and skip the gap if necessary.\n        2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n            is in a playing state. To catch this case, it's important that our one-time play listener is setup\n            even if the player is in a playing state\n      */\n\n      this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n      this.dispose = function () {\n        _this.clearSeekingAppendCheck_();\n\n        _this.logger_('dispose');\n\n        _this.tech_.off('waiting', waitingHandler);\n\n        _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n        _this.tech_.off('canplay', canPlayHandler);\n\n        _this.tech_.off('play', playHandler);\n\n        _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n        _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n        loaderTypes.forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n          mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n          _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n        });\n\n        if (_this.checkCurrentTimeTimeout_) {\n          window.clearTimeout(_this.checkCurrentTimeTimeout_);\n        }\n\n        _this.cancelTimer_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n\n    var _proto = PlaybackWatcher.prototype;\n\n    _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * Reset stalled download stats for a specific type of loader\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#playlistupdate\n     * @listens Tech#seeking\n     * @listens Tech#seeked\n     */\n    ;\n\n    _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n      var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n      if (this[type + \"StalledDownloads_\"] > 0) {\n        this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n      }\n\n      this[type + \"StalledDownloads_\"] = 0;\n      this[type + \"Buffered_\"] = loader.buffered_();\n    }\n    /**\n     * Checks on every segment `appendsdone` to see\n     * if segment appends are making progress. If they are not\n     * and we are still downloading bytes. We blacklist the playlist.\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#appendsdone\n     */\n    ;\n\n    _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n      var mpc = this.masterPlaylistController_;\n      var loader = mpc[type + \"SegmentLoader_\"];\n      var buffered = loader.buffered_();\n      var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n      this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n      // the buffered value for this loader changed\n      // appends are working\n\n      if (isBufferedDifferent) {\n        this.resetSegmentDownloads_(type);\n        return;\n      }\n\n      this[type + \"StalledDownloads_\"]++;\n      this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n        playlistId: loader.playlist_ && loader.playlist_.id,\n        buffered: timeRangesToArray(buffered)\n      }); // after 10 possibly stalled appends with no reset, exclude\n\n      if (this[type + \"StalledDownloads_\"] < 10) {\n        return;\n      }\n\n      this.logger_(type + \" loader stalled download exclusion\");\n      this.resetSegmentDownloads_(type);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-\" + type + \"-download-exclusion\"\n      });\n\n      if (type === 'subtitle') {\n        return;\n      } // TODO: should we exclude audio tracks rather than main tracks\n      // when type is audio?\n\n\n      mpc.blacklistCurrentPlaylist({\n        message: \"Excessive \" + type + \" segment downloading detected.\"\n      }, Infinity);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n    ;\n\n    _proto.checkCurrentTime_ = function checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n    ;\n\n    _proto.cancelTimer_ = function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {boolean} whether an action was taken to fix the seek\n     * @private\n     */\n    ;\n\n    _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      } // TODO: It's possible that these seekable checks should be moved out of this function\n      // and into a function that runs on seekablechange. It's also possible that we only need\n      // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n      // seekable range.\n\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n        // happen in live with a 3 segment playlist), then don't use a time delta\n        seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n      var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n      var media = this.media(); // verify that at least two segment durations or one part duration have been\n      // appended before checking for a gap.\n\n      var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n      // appended before checking for a gap.\n\n      var bufferedToCheck = [audioBuffered, videoBuffered];\n\n      for (var i = 0; i < bufferedToCheck.length; i++) {\n        // skip null buffered\n        if (!bufferedToCheck[i]) {\n          continue;\n        }\n\n        var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n        // duration behind we haven't appended enough to call this a bad seek.\n\n        if (timeAhead < minAppendedDuration) {\n          return false;\n        }\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n      // to seek over the gap\n\n      if (nextRange.length === 0) {\n        return false;\n      }\n\n      seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n      this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n    ;\n\n    _proto.waiting_ = function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-unknown-waiting'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n    ;\n\n    _proto.techWaiting_ = function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-live-resync'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var videoUnderflow = this.videoUnderflow_({\n        audioBuffered: sourceUpdater.audioBuffered(),\n        videoBuffered: sourceUpdater.videoBuffered(),\n        currentTime: currentTime\n      });\n\n      if (videoUnderflow) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-video-underflow'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n        this.cancelTimer_();\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    };\n\n    _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n      if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n        allowSeeksWithinUnsafeLiveWindow = false;\n      }\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n      var videoBuffered = _ref.videoBuffered,\n          audioBuffered = _ref.audioBuffered,\n          currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n      if (!videoBuffered) {\n        return;\n      }\n\n      var gap; // find a gap in demuxed content.\n\n      if (videoBuffered.length && audioBuffered.length) {\n        // in Chrome audio will continue to play for ~3s when we run out of video\n        // so we have to check that the video buffer did have some buffer in the\n        // past.\n        var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n        var videoRange = findRange(videoBuffered, currentTime);\n        var audioRange = findRange(audioBuffered, currentTime);\n\n        if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n          gap = {\n            start: lastVideoRange.end(0),\n            end: audioRange.end(0)\n          };\n        } // find a gap in muxed content.\n\n      } else {\n        var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n\n        if (!nextRange.length) {\n          gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n        }\n      }\n\n      if (gap) {\n        this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n    ;\n\n    _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-gap-skip'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    };\n\n    _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    };\n\n    return PlaybackWatcher;\n  }();\n\n  var defaultOptions = {\n    errorInterval: 30,\n    getSource: function getSource(next) {\n      var tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      var sourceObj = tech.currentSource_ || this.currentSource();\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  var initPlugin = function initPlugin(player, options) {\n    var lastCalled = 0;\n    var seekTo = 0;\n    var localOptions = videojs.mergeOptions(defaultOptions, options);\n    player.ready(function () {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-initialized'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    var loadedMetadataHandler = function loadedMetadataHandler() {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n\n    var setSource = function setSource(sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n\n    var errorHandler = function errorHandler() {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'vhs-error-reload-canceled'\n        });\n        player.trigger({\n          type: 'usage',\n          name: 'hls-error-reload-canceled'\n        });\n        return;\n      }\n\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n\n    var cleanupEvents = function cleanupEvents() {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n\n    var reinitPlugin = function reinitPlugin(newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n\n  var reloadSourceOnError = function reloadSourceOnError(options) {\n    initPlugin(this, options);\n  };\n\n  var version$4 = \"2.12.0\";\n  var version$3 = \"5.14.1\";\n  var version$2 = \"0.19.2\";\n  var version$1 = \"4.7.0\";\n  var version = \"3.1.2\";\n  var Vhs = {\n    PlaylistLoader: PlaylistLoader,\n    Playlist: Playlist,\n    utils: utils,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    lastBandwidthSelector: lastBandwidthSelector,\n    movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n    comparePlaylistBandwidth: comparePlaylistBandwidth,\n    comparePlaylistResolution: comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properties\n\n  Object.keys(Config).forEach(function (prop) {\n    Object.defineProperty(Vhs, prop, {\n      get: function get() {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n        return Config[prop];\n      },\n      set: function set(value) {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n        if (typeof value !== 'number' || value < 0) {\n          videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n          return;\n        }\n\n        Config[prop] = value;\n      }\n    });\n  });\n  var LOCAL_STORAGE_KEY = 'videojs-vhs';\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleVhsMediaChange\n   */\n\n  var handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n    var newPlaylist = playlistLoader.media();\n    var selectedIndex = -1;\n\n    for (var i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.id) {\n        selectedIndex = i;\n        break;\n      }\n    }\n\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex: selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} vhs Vhs object to listen to for media events.\n   * @function handleVhsLoadedMetadata\n   */\n\n\n  var handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n    vhs.representations().forEach(function (rep) {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleVhsMediaChange(qualityLevels, vhs.playlists);\n  }; // HLS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n\n  Vhs.canPlaySource = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    }\n\n    var codecs = {};\n\n    if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n      codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n    }\n\n    if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n      codecs.audio = audioPlaylist.attributes.CODECS;\n    }\n\n    var videoContentType = getMimeForCodec(codecs.video);\n    var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n    var keySystemContentTypes = {};\n\n    for (var keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {};\n\n      if (audioContentType) {\n        keySystemContentTypes[keySystem].audioContentType = audioContentType;\n      }\n\n      if (videoContentType) {\n        keySystemContentTypes[keySystem].videoContentType = videoContentType;\n      } // Default to using the video playlist's PSSH even though they may be different, as\n      // videojs-contrib-eme will only accept one in the options.\n      //\n      // This shouldn't be an issue for most cases as early intialization will handle all\n      // unique PSSH values, and if they aren't, then encrypted events should have the\n      // specific information needed for the unique license.\n\n\n      if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n\n    return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n  };\n  /**\n   * @typedef {Object} KeySystems\n   *\n   * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n   * Note: not all options are listed here.\n   *\n   * @property {Uint8Array} [pssh]\n   *           Protection System Specific Header\n   */\n\n  /**\n   * Goes through all the playlists and collects an array of KeySystems options objects\n   * containing each playlist's keySystems and their pssh values, if available.\n   *\n   * @param {Object[]} playlists\n   *        The playlists to look through\n   * @param {string[]} keySystems\n   *        The keySystems to collect pssh values for\n   *\n   * @return {KeySystems[]}\n   *         An array of KeySystems objects containing available key systems and their\n   *         pssh values\n   */\n\n\n  var getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n    return playlists.reduce(function (keySystemsArr, playlist) {\n      if (!playlist.contentProtection) {\n        return keySystemsArr;\n      }\n\n      var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n        var keySystemOptions = playlist.contentProtection[keySystem];\n\n        if (keySystemOptions && keySystemOptions.pssh) {\n          keySystemsObj[keySystem] = {\n            pssh: keySystemOptions.pssh\n          };\n        }\n\n        return keySystemsObj;\n      }, {});\n\n      if (Object.keys(keySystemsOptions).length) {\n        keySystemsArr.push(keySystemsOptions);\n      }\n\n      return keySystemsArr;\n    }, []);\n  };\n  /**\n   * Returns a promise that waits for the\n   * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n   *\n   * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n   * browsers.\n   *\n   * As per the above ticket, this is particularly important for Chrome, where, if\n   * unencrypted content is appended before encrypted content and the key session has not\n   * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n   * during playback.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   * @param {Object[]} mainPlaylists\n   *        The playlists found on the master playlist object\n   *\n   * @return {Object}\n   *         Promise that resolves when the key session has been created\n   */\n\n\n  var waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n    var player = _ref.player,\n        sourceKeySystems = _ref.sourceKeySystems,\n        audioMedia = _ref.audioMedia,\n        mainPlaylists = _ref.mainPlaylists;\n\n    if (!player.eme.initializeMediaKeys) {\n      return Promise.resolve();\n    } // TODO should all audio PSSH values be initialized for DRM?\n    //\n    // All unique video rendition pssh values are initialized for DRM, but here only\n    // the initial audio playlist license is initialized. In theory, an encrypted\n    // event should be fired if the user switches to an alternative audio playlist\n    // where a license is required, but this case hasn't yet been tested. In addition, there\n    // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n    // languages).\n\n\n    var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n    var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n    var initializationFinishedPromises = [];\n    var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n    // only place where it should not be deduped is for ms-prefixed APIs, but the early\n    // return for IE11 above, and the existence of modern EME APIs in addition to\n    // ms-prefixed APIs on Edge should prevent this from being a concern.\n    // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n    keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n      keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n        player.tech_.one('keysessioncreated', resolve);\n      }));\n      initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n        player.eme.initializeMediaKeys({\n          keySystems: keySystemsOptions\n        }, function (err) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve();\n        });\n      }));\n    }); // The reasons Promise.race is chosen over Promise.any:\n    //\n    // * Promise.any is only available in Safari 14+.\n    // * None of these promises are expected to reject. If they do reject, it might be\n    //   better here for the race to surface the rejection, rather than mask it by using\n    //   Promise.any.\n\n    return Promise.race([// If a session was previously created, these will all finish resolving without\n    // creating a new session, otherwise it will take until the end of all license\n    // requests, which is why the key session check is used (to make setup much faster).\n    Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n    Promise.race(keySessionCreatedPromises)]);\n  };\n  /**\n   * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n   * there are keySystems on the source, sets up source options to prepare the source for\n   * eme.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} media\n   *        The active media playlist\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   *\n   * @return {boolean}\n   *         Whether or not options were configured and EME is available\n   */\n\n\n  var setupEmeOptions = function setupEmeOptions(_ref2) {\n    var player = _ref2.player,\n        sourceKeySystems = _ref2.sourceKeySystems,\n        media = _ref2.media,\n        audioMedia = _ref2.audioMedia;\n    var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n    if (!sourceOptions) {\n      return false;\n    }\n\n    player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n    // do nothing.\n\n    if (sourceOptions && !player.eme) {\n      videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n      return false;\n    }\n\n    return true;\n  };\n\n  var getVhsLocalStorage = function getVhsLocalStorage() {\n    if (!window.localStorage) {\n      return null;\n    }\n\n    var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (!storedObject) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n\n  var updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n    if (!window.localStorage) {\n      return false;\n    }\n\n    var objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n\n    return objectToStore;\n  };\n  /**\n   * Parses VHS-supported media types from data URIs. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   * for information on data URIs.\n   *\n   * @param {string} dataUri\n   *        The data URI\n   *\n   * @return {string|Object}\n   *         The parsed object/string, or the original string if no supported media type\n   *         was found\n   */\n\n\n  var expandDataUri = function expandDataUri(dataUri) {\n    if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n      return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n    } // no known case for this data URI, return the string as-is\n\n\n    return dataUri;\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n\n  Vhs.supportsNativeHls = function () {\n    if (!document || !document.createElement) {\n      return false;\n    }\n\n    var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n\n    var canPlay = [// Apple santioned\n    'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n    'audio/mpegurl', // Very common\n    'audio/x-mpegurl', // Very common\n    'application/x-mpegurl', // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n\n  Vhs.supportsNativeDash = function () {\n    if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n      return false;\n    }\n\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n\n  Vhs.supportsTypeNatively = function (type) {\n    if (type === 'hls') {\n      return Vhs.supportsNativeHls;\n    }\n\n    if (type === 'dash') {\n      return Vhs.supportsNativeDash;\n    }\n\n    return false;\n  };\n  /**\n   * HLS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n\n  Vhs.isSupported = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var Component = videojs.getComponent('Component');\n  /**\n   * The Vhs Handler object, where we orchestrate all of the parts\n   * of HLS to interact with video.js\n   *\n   * @class VhsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  var VhsHandler = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VhsHandler, _Component);\n\n    function VhsHandler(source, tech, options) {\n      var _this;\n\n      _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n      if (options.hls && Object.keys(options.hls).length) {\n        videojs.log.warn('Using hls options is deprecated. Use vhs instead.');\n      } // if a tech level `initialBandwidth` option was passed\n      // use that over the VHS level `bandwidth` option\n\n\n      if (typeof options.initialBandwidth === 'number') {\n        _this.options_.bandwidth = options.initialBandwidth;\n      }\n\n      _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n      // backwards-compatibility\n\n      if (tech.options_ && tech.options_.playerId) {\n        var _player = videojs(tech.options_.playerId);\n\n        if (!_player.hasOwnProperty('hls')) {\n          Object.defineProperty(_player, 'hls', {\n            get: function get() {\n              videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'hls-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('vhs')) {\n          Object.defineProperty(_player, 'vhs', {\n            get: function get() {\n              videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'vhs-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('dash')) {\n          Object.defineProperty(_player, 'dash', {\n            get: function get() {\n              videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        _this.player_ = _player;\n      }\n\n      _this.tech_ = tech;\n      _this.source_ = source;\n      _this.stats = {};\n      _this.ignoreNextSeekingEvent_ = false;\n\n      _this.setOptions_();\n\n      if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native HLS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n\n      _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n        var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n        if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n          _this.masterPlaylistController_.fastQualityChange_();\n        } else {\n          // When leaving fullscreen, since the in page pixel dimensions should be smaller\n          // than full screen, see if there should be a rendition switch down to preserve\n          // bandwidth.\n          _this.masterPlaylistController_.checkABR_();\n        }\n      });\n\n      _this.on(_this.tech_, 'seeking', function () {\n        if (this.ignoreNextSeekingEvent_) {\n          this.ignoreNextSeekingEvent_ = false;\n          return;\n        }\n\n        this.setCurrentTime(this.tech_.currentTime());\n      });\n\n      _this.on(_this.tech_, 'error', function () {\n        // verify that the error was real and we are loaded\n        // enough to have mpc loaded.\n        if (this.tech_.error() && this.masterPlaylistController_) {\n          this.masterPlaylistController_.pauseLoading();\n        }\n      });\n\n      _this.on(_this.tech_, 'play', _this.play);\n\n      return _this;\n    }\n\n    var _proto = VhsHandler.prototype;\n\n    _proto.setOptions_ = function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-bandwidth-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-throughput-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n    ;\n\n    _proto.src = function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.src = expandDataUri(this.source_.src);\n      this.options_.tech = this.tech_;\n      this.options_.externVhs = Vhs;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      if (this.options_.smoothQualityChange) {\n        videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n      }\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      var playbackWatcherOptions = videojs.mergeOptions({\n        liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n      }, this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        },\n        masterPlaylistController: this.masterPlaylistController_\n      });\n      this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs.players[_this3.tech_.options_.playerId];\n        var error = _this3.masterPlaylistController_.error;\n\n        if (typeof error === 'object' && !error.code) {\n          error.code = 3;\n        } else if (typeof error === 'string') {\n          error = {\n            message: error,\n            code: 3\n          };\n        }\n\n        player.error(error);\n      });\n      var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n            var networkInformation = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            var tenMbpsAsBitsPerSecond = 10e6;\n\n            if (this.options_.useNetworkInformationApi && networkInformation) {\n              // downlink returns Mbps\n              // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n              var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n              // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n              // high quality streams are not filtered out.\n\n              if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n                playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n              } else {\n                playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n              }\n            }\n\n            return playerBandwidthEst;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set() {\n            videojs.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        mediaAppends: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaAppends_() || 0;\n          },\n          enumerable: true\n        },\n        mainAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        audioAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        appendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        timeToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to VhsHandler\n        renditionSelectionMixin(_this3);\n      });\n      this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n        _this3.setupEme_();\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.mediaSourceUrl_ = window.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n      this.tech_.src(this.mediaSourceUrl_);\n    }\n    /**\n     * If necessary and EME is available, sets up EME options and waits for key session\n     * creation.\n     *\n     * This function also updates the source updater so taht it can be used, as for some\n     * browsers, EME must be configured before content is appended (if appending unencrypted\n     * content before encrypted content).\n     */\n    ;\n\n    _proto.setupEme_ = function setupEme_() {\n      var _this4 = this;\n\n      var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      var didSetupEmeOptions = setupEmeOptions({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        media: this.playlists.media(),\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n      });\n      this.player_.tech_.on('keystatuschange', function (e) {\n        if (e.status === 'output-restricted') {\n          _this4.masterPlaylistController_.blacklistCurrentPlaylist({\n            playlist: _this4.masterPlaylistController_.media(),\n            message: \"DRM keystatus changed to \" + e.status + \". Playlist will fail to play. Check for HDCP content.\",\n            blacklistDuration: Infinity\n          });\n        }\n      }); // In IE11 this is too early to initialize media keys, and IE11 does not support\n      // promises.\n\n      if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n        // If EME options were not set up, we've done all we could to initialize EME.\n        this.masterPlaylistController_.sourceUpdater_.initializedEme();\n        return;\n      }\n\n      this.logger_('waiting for EME key session creation');\n      waitForKeySessionCreation({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n        mainPlaylists: this.playlists.master.playlists\n      }).then(function () {\n        _this4.logger_('created EME key session');\n\n        _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n      })[\"catch\"](function (err) {\n        _this4.logger_('error while creating EME key session', err);\n\n        _this4.player_.error({\n          message: 'Failed to initialize media keys for EME',\n          code: 3\n        });\n      });\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n    ;\n\n    _proto.setupQualityLevels_ = function setupQualityLevels_() {\n      var _this5 = this;\n\n      var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleVhsLoadedMetadata(_this5.qualityLevels_, _this5);\n      });\n      this.playlists.on('mediachange', function () {\n        handleVhsMediaChange(_this5.qualityLevels_, _this5.playlists);\n      });\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    VhsHandler.version = function version$5() {\n      return {\n        '@videojs/http-streaming': version$4,\n        'mux.js': version$3,\n        'mpd-parser': version$2,\n        'm3u8-parser': version$1,\n        'aes-decrypter': version\n      };\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    _proto.version = function version() {\n      return this.constructor.version();\n    };\n\n    _proto.canChangeType = function canChangeType() {\n      return SourceUpdater.canChangeType();\n    }\n    /**\n     * Begin playing the video.\n     */\n    ;\n\n    _proto.play = function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.duration = function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.vhs) {\n        delete this.tech_.vhs;\n      } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n      if (this.tech_) {\n        delete this.tech_.hls;\n      }\n\n      if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n        window.URL.revokeObjectURL(this.mediaSourceUrl_);\n        this.mediaSourceUrl_ = null;\n      }\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n    ;\n\n    _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n      if (pauseAfterSeek === void 0) {\n        pauseAfterSeek = true;\n      }\n\n      if (retryCount === void 0) {\n        retryCount = 2;\n      }\n\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    };\n\n    return VhsHandler;\n  }(Component);\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n\n  var VhsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$4,\n    canHandleSource: function canHandleSource(srcObj, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      tech.vhs = new VhsHandler(source, tech, localOptions);\n\n      if (!videojs.hasOwnProperty('hls')) {\n        Object.defineProperty(tech, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n            return tech.vhs;\n          },\n          configurable: true\n        });\n      }\n\n      tech.vhs.xhr = xhrFactory();\n      tech.vhs.src(source.src, source.type);\n      return tech.vhs;\n    },\n    canPlayType: function canPlayType(type, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n          _videojs$mergeOptions2 = _videojs$mergeOptions.vhs.overrideNative,\n          overrideNative = _videojs$mergeOptions2 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions2;\n\n      var supportedType = simpleTypeFromSourceType(type);\n      var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n      return canUseMsePlayback ? 'maybe' : '';\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {boolean} if  native media sources are supported\n   */\n\n  var supportsNativeMediaSources = function supportsNativeMediaSources() {\n    return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n  }; // register source handlers with the appropriate techs\n\n\n  if (supportsNativeMediaSources()) {\n    videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n  }\n\n  videojs.VhsHandler = VhsHandler;\n  Object.defineProperty(videojs, 'HlsHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n      return VhsHandler;\n    },\n    configurable: true\n  });\n  videojs.VhsSourceHandler = VhsSourceHandler;\n  Object.defineProperty(videojs, 'HlsSourceHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n      return VhsSourceHandler;\n    },\n    configurable: true\n  });\n  videojs.Vhs = Vhs;\n  Object.defineProperty(videojs, 'Hls', {\n    get: function get() {\n      videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n      return Vhs;\n    },\n    configurable: true\n  });\n\n  if (!videojs.use) {\n    videojs.registerComponent('Hls', Vhs);\n    videojs.registerComponent('Vhs', Vhs);\n  }\n\n  videojs.options.vhs = videojs.options.vhs || {};\n  videojs.options.hls = videojs.options.hls || {};\n\n  if (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n    var registerPlugin = videojs.registerPlugin || videojs.plugin;\n    registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs;\n\n})));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","videojs","this","version$5","browserApi","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","i","length","document","_i","history","LogByTypeFactory","name","log","level","args","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","window","console","info","test","Array","isArray","log$1","createLogger$1","logByType","_len","arguments","_key","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","commonjsGlobal","createCommonjsModule","_extends_1","_extends","Object","assign","target","source","key","prototype","call","apply","toString$1","toString","keys","object","isObject$1","each","forEach","sources","value","isPlain","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","match","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","parent","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","classRegExp","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","vdata","floor","performance","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","supportsPassive","opts","defineProperty","passiveEvents","on","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","debounce","immediate","timeout","debounced","_later","clearTimeout","cancel","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","_options","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","touchStart","couldBeTap","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","requestNamedAnimationFrame","_this4","cancelNamedAnimationFrame","cancelAnimationFrame","_this5","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","assertThisInitialized","_assertThisInitialized","ReferenceError","inheritsLoose","subClass","superClass","create","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","end","Symbol","iterator","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","tuple","reviver","json","JSON","parse","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","keycode","searchInput","hasKeyCode","foundNamedKey","search","String","codes","aliases","charCodeAt","isEventKey","nameOrCode","backspace","tab","enter","ctrl","alt","esc","space","home","up","right","down","insert","delete","command","windows","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","fromCharCode","title","alias","MODAL_CLASS_NAME","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","Url","window_1","isFunction_1","isFunction","alert","confirm","prompt","httpHandler","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","charset","getCharset","contentTypeHeader","contentType","_contentType$split","headers","decode","Uint8Array","createXHR","parseHeaders","row","lib","default_1","initParams","uri","params","_createXHR","called","getBody","xhr","responseText","getXml","responseType","responseXML","firefoxBugTakenEffect","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","aborted","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","noop$1","array","forEachArray","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","defineProperties","default","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","minDoc","doccy","topLevel","document_1","_objCreate","F","o","ParsingError","errorData","parseTimeStamp","input","computeSeconds","h","s","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","v","region","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","center","middle","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","b","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","current","localName","annotation","rootDiv","tagStack","innerHTML","createProcessingInstruction","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","computeLinePos","textTrackList","mediaElement","trackList","count","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","shouldCompute","hasBeenReset","displayState","fontSize","decoder","buffer","reportOrThrowError","collectNextLine","pos","parseHeader","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseRegion","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","stream","alreadyCollectedLine","hasSubstring","vtt","autoKeyword","directionSetting","lr","rl","alignSetting","auto","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","enumerable","pauseOnExit","TypeError","setting","findDirectionSetting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","mws","mw","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","_middleware","mwFactory","mwrest","_mws$i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","translate","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","replaceChild","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodesLength","nodes","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","_this8","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this9","resolve","play_","_this10","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","_this11","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this12","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","allowedInputTypes","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this13","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","foundSourceAndTech","sourceOrder","handleSrc_","isRetry","_this14","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","_this15","str1","str2","sourceTech","_this16","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","_this17","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","_obj","toJSON","createModal","_this18","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this19","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","setPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","_construct","Parent","Class","Constructor","instance","Function","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","hasPlugin","inherits","normalizeId","getPlayer","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","dom","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","Stream","_length","pipe","destination","atob","Buffer","decodeB64ToUint8Array","b64Text","decodedString","LineStream","_Stream","nextNewline","TAB","parseByterange","byterangeString","offset","parseAttributes$1","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","subkey","addParser","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","currentMap","uris","currentUri","hasParts","defaultMediaGroups","AUDIO","VIDEO","SUBTITLES","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","required","partInf","partTarget","comment","custom","identifier","missing","chunk","regexs","webm","ogg","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","resolveUrl$1","baseUrl","relativeUrl","nativeURL","URL","protocolLess","removeLocation","newUrl","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE$3","SVG","XML","XMLNS","conventions","NAMESPACE","NAMESPACE$2","notEmptyString","orderedSetReducer","toOrderedSet","splitOnASCIIWhitespace","copy","dest","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","ns","namespaceURI","_nsMap","prefix","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation$1","Node","_xmlEncoder","_visitNode","Document","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","newFirst","newLast","pre","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer$1","nodeSerializeToString","isHtml","nodeFilter","buf","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","addSerializedAttribute","qualifiedName","len","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","_importNode","deep","node2","_cloneNode","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","root","createElementNS","createDocumentType","nodeValue","refChild","oldChild","normalize","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","nodeClassNamesSet","arrayIncludes","createComment","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","DocumentType_1","DOMImplementation","XMLSerializer","entities","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","NAMESPACE$1","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError$1","locator","XMLReader$1","copyLocator","lineNumber","columnNumber","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","fatalError","addValue","warning","setTagName","closed","appendElement$1","domBuilder","localNSMap","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","endElement","endPrefixMapping","parseHtmlSpecialContent","elStartEnd","elEndStart","characters","fixSelfClosed","closeMap","parseDCC","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","parseInstruction","processingInstruction","ElementAttributes","defaultNSMap","startDocument","_parse","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","currentElement","endMatch","locator2","endDocument","getLocalName","getLocator","getQName","getURI","XMLReader_1","sax","XMLReader","ParseError","DOMParser$1","DOMHandler","cdata","_locator","_toString","chars","java","appendElement","hander","parseFromString","mimeType","xmlns","setDocumentLocator","errorImpl","isCallback","build","msg","buildErrorHandler","xml","documentURI","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","_error","__DOMHandler","DOMParser","isObject","merge","objects","flatten","lists","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","_ref$indexRange","indexRange","resolvedUri","startRange","endRange","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","generateSidxKey","mergeDiscontiguousPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist$1","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","_ref3","_attributes2","CODECS","bandwidth","videoOnly","_ref4","audioOnly","_ref5","vttOnly","_ref6","toM3u8","dashPlaylists","locations","_mediaGroups","_dashPlaylists$0$attr","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captionServices","isAudioOnly","mainPlaylist","formattedPlaylists","roleLabel","formatted","_attributes","formatAudioPlaylist","organizeAudioPlaylists","subs","_m3u8Attributes","m3u8Attributes","formatVttPlaylist","organizeVttPlaylists","cc","svcObj","svc","service","channel","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","presentationTime","periodStart","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","_value$split","flags","_value$split2","_value$split2$","opt","_opt$split","labelVal","keySystem","psshNode","psshBuffer","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","parsedPeriodId","adaptationSets","stringToMpdXml","manifestString","mpd","parsedManifestInfo","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","periods","priorPeriod","priorPeriodAttributes","mpdType","getPeriodStart","representationInfo","inheritAttributes","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","MAX_UINT32","pow","parseSidx_1","view","DataView","byteOffset","byteLength","subarray","referenceId","getUint32","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","toUint8","bytes","ArrayBuffer","isView","BigInt","BYTE_TABLE","bytesToNumber","_temp","_ref$signed","signed","_ref$le","total","_byte","exponent","numberToBytes","_temp2","_ref2$le","byteCount","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","bytesMatch","_temp3","_ref3$offset","_ref3$mask","mask","bByte","ID3","getId3Offset","returnSize","getId3Size","normalizePath$1","findBox","paths","complete","normalizePaths$1","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","normalizePaths","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","matroska","ac3","_isLikely","docType","fmp4","moof","moov","avi","riff","h264","findH264Nal","h265","findH265Nal","isLikelyTypes","isLikelyFn","isLikely","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","detectContainerForBytes","sampleRate","timestamp","clock_1","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","filterRanges","timeRanges","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","master","partHoldBack","holdBack","intervalDuration","endSequence","expired","backward","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","endIndex","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_ret","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","forEachMediaGroup","groupKey","labelKey","mediaProperties","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","phonyUri","audioOnlyMaster","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newIndex","oldSegment","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","onwarn","oninfo","_ref$customTagParsers","_ref$customTagMappers","customParser","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","byterangeEnd","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","buffers","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","fin","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","newMaster","masterXml","oldMaster","noChanges","playlistUpdate","group","_playlistUpdate","updateMaster","mpl","mup","createMUPTimeout_","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","userIdentifier","sei","userData","ccData","emulationPreventionBytesPositions","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","Cea708Service","serviceNum","encoding","currentWindow","createTextDecoder","startPts","win","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","_char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover$1","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","privateData","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","metadataStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","m2ts_1","_AdtsStream","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","expGolomb","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","frameCropLeftOffset","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","frameHeader","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","halfSecond","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","subresults","toUnsigned$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","isInitialized","segmentCache","parsedCaptions","parsingPartial","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","baseTimes","scale","baseTime","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameSyncPoint","frameBuffer","frameI","foundKeyFrame","handleRollover","probe","ONE_SECOND_IN_TS","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","isAacData","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","_ref7","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","_ref9","didError","segmentFinish","_ref8","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","audioDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","oldPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","timestampOffsetForSegment","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","basedir","require","commonjsRequire","createClass","_defineProperties","protoProps","staticProps","__esModule","precompute","tables","xInv","x2","x4","tEnc","tDec","encTable","decTable","sbox","sboxInv","th","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","unpad","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","_segment$cueOutCont$s","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","timeAhead","nextRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","qualityLevels","selectedIndex_","emeKeySystems","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","audioPlaylistLoader","didSetupEmeOptions","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions","_videojs$mergeOptions2","supportedType"],"mappings":"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"}