{"version":3,"sources":["../src/loader.js"],"names":["firstLoad","language","langStringCache","setUp","lang","notifyVideoJS","Event","getLegacyEvents","done","events","document","on","FILTER_CONTENT_UPDATED","e","nodes","langStrings","getLanguageJson","find","addBack","each","index","element","id","attr","config","data","modulePromises","techOrder","indexOf","push","ogvjs","worker","wasm","base","Config","wwwroot","jsrev","Promise","all","then","langJson","videojs","options","flash","swf","addLanguage","catch","Notification","exception","resolve","cacheKey","rawCacheContent","LocalStorage","get","cacheContent","JSON","parse","request","methodname","args","Ajax","call","langStringData","set","result"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Video JS loader.\n *\n * This takes care of applying the filter on content which was dynamically loaded.\n *\n * @module     media_videojs/loader\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Config from 'core/config';\nimport Event from 'core/event';\nimport jQuery from 'jquery';\nimport Ajax from 'core/ajax';\nimport LocalStorage from 'core/localstorage';\nimport Notification from 'core/notification';\n\n/** @var {bool} Whether this is the first load of videojs module */\nlet firstLoad;\n\n/** @var {string} The language that is used in the player */\nlet language;\n\n/** @var {object} List of languages and translations for the current page */\nlet langStringCache;\n\n/**\n * Set-up.\n *\n * Adds the listener for the event to then notify video.js.\n * @param {string} lang Language to be used in the player\n */\nexport const setUp = (lang) => {\n    language = lang;\n    firstLoad = true;\n    // Notify Video.js about the nodes already present on the page.\n    notifyVideoJS(null, jQuery('body'));\n    // We need to call popover automatically if nodes are added to the page later.\n    Event.getLegacyEvents().done((events) => {\n        jQuery(document).on(events.FILTER_CONTENT_UPDATED, notifyVideoJS);\n    });\n};\n\n/**\n * Notify video.js of new nodes.\n *\n * @param {Event} e The event.\n * @param {NodeList} nodes List of new nodes.\n */\nconst notifyVideoJS = (e, nodes) => {\n    const selector = '.mediaplugin_videojs';\n    const langStrings = getLanguageJson();\n\n    // Find the descendants matching the expected parent of the audio and video\n    // tags. Then also addBack the nodes matching the same selector. Finally,\n    // we find the audio and video tags contained in those parents. Kind thanks\n    // to jQuery for the simplicity.\n    nodes.find(selector)\n        .addBack(selector)\n        .find('audio, video').each((index, element) => {\n            const id = jQuery(element).attr('id');\n            const config = jQuery(element).data('setup-lazy');\n            const modulePromises = [import('media_videojs/video-lazy')];\n\n            if (config.techOrder && config.techOrder.indexOf('youtube') !== -1) {\n                // Add YouTube to the list of modules we require.\n                modulePromises.push(import('media_videojs/Youtube-lazy'));\n            }\n            if (config.techOrder && config.techOrder.indexOf('flash') !== -1) {\n                // Add Flash to the list of modules we require.\n                modulePromises.push(import('media_videojs/videojs-flash-lazy'));\n            }\n            if (config.techOrder && config.techOrder.indexOf('OgvJS') !== -1) {\n                config.ogvjs = {\n                    worker: true,\n                    wasm: true,\n                    base: Config.wwwroot + '/media/player/videojs/ogvloader.php/' + Config.jsrev + '/'\n                };\n                // Add Ogv.JS to the list of modules we require.\n                modulePromises.push(import('media_videojs/videojs-ogvjs-lazy'));\n            }\n            Promise.all([langStrings, ...modulePromises])\n            .then(([langJson, videojs]) => {\n                if (firstLoad) {\n                    videojs.options.flash.swf = `${Config.wwwroot}/media/player/videojs/videojs/video-js.swf`;\n                    videojs.addLanguage(language, langJson);\n\n                    firstLoad = false;\n                }\n                videojs(id, config);\n                return;\n            })\n            .catch(Notification.exception);\n        });\n};\n\n/**\n * Returns the json object of the language strings to be used in the player.\n *\n * @returns {Promise}\n */\nconst getLanguageJson = () => {\n    if (langStringCache) {\n        return Promise.resolve(langStringCache);\n    }\n\n    const cacheKey = `media_videojs/${language}`;\n\n    const rawCacheContent = LocalStorage.get(cacheKey);\n    if (rawCacheContent) {\n        const cacheContent = JSON.parse(rawCacheContent);\n\n        langStringCache = cacheContent;\n\n        return Promise.resolve(langStringCache);\n    }\n\n    const request = {\n        methodname: 'media_videojs_get_language',\n        args: {\n            lang: language,\n        },\n    };\n\n    return Ajax.call([request])[0]\n        .then(langStringData => {\n            LocalStorage.set(cacheKey, langStringData);\n\n            return langStringData;\n        })\n        .then(result => JSON.parse(result))\n        .then(langStrings => {\n            langStringCache = langStrings;\n\n            return langStrings;\n        });\n};\n"],"file":"loader.min.js"}