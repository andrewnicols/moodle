{"version":3,"file":"gradingpanel.min.js","sources":["../../../src/grades/grader/gradingpanel.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Grading panel for gradingform_guide.\n *\n * @module     gradingform_guide/grades/grader/gradingpanel\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {fetchOne} from 'core/fetch';\nimport {normaliseResult} from 'core_grades/grades/grader/gradingpanel/normalise';\nimport {compareData} from 'core_grades/grades/grader/gradingpanel/comparison';\n\n// Note: We use jQuery.serializer here until we can rewrite Ajax to use XHR.send()\nimport jQuery from 'jquery';\n\n/**\n * For a given component, contextid, itemname & gradeduserid we can fetch the currently assigned grade.\n *\n * @param {String} component\n * @param {Number} contextid\n * @param {String} itemname\n * @param {Number} gradeduserid\n *\n * @returns {Promise}\n */\nexport const fetchCurrentGrade = (component, contextid, itemname, gradeduserid) => fetchOne(\n    `gradingform_guide_grader_gradingpanel_fetch`,\n    {\n        component,\n        contextid,\n        itemname,\n        gradeduserid,\n    }\n);\n\n/**\n * For a given component, contextid, itemname & gradeduserid we can store the currently assigned grade in a given form.\n *\n * @param {String} component\n * @param {Number} contextid\n * @param {String} itemname\n * @param {Number} gradeduserid\n * @param {Boolean} notifyUser\n * @param {HTMLElement} rootNode\n *\n * @returns {Promise}\n */\nexport const storeCurrentGrade = async(component, contextid, itemname, gradeduserid, notifyUser, rootNode) => {\n    const form = rootNode.querySelector('form');\n\n    if (compareData(form) === true) {\n        return normaliseResult(await fetchOne(`gradingform_guide_grader_gradingpanel_store`, {\n            component,\n            contextid,\n            itemname,\n            gradeduserid,\n            notifyuser: notifyUser,\n            formdata: jQuery(form).serialize(),\n        }));\n    } else {\n        return '';\n    }\n};\n"],"names":["obj","_jquery","__esModule","default","_exports","fetchCurrentGrade","component","contextid","itemname","gradeduserid","fetchOne","storeCurrentGrade","async","notifyUser","rootNode","form","querySelector","compareData","normaliseResult","notifyuser","formdata","jQuery","serialize"],"mappings":"yPA4B4B,IAAAA;;;;;;;0HAA5BC,SAA4BD,IAA5BC,UAA4BD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAoB1BI,SAAAC,kBAR+BA,CAACC,UAAWC,UAAWC,SAAUC,gBAAiB,EAAAC,iBAE/E,8CAAA,CACIJ,oBACAC,oBACAC,kBACAC,4BA+BNL,SAAAO,kBAf+BC,MAAMN,UAAWC,UAAWC,SAAUC,aAAcI,WAAYC,YAC7F,MAAMC,KAAOD,SAASE,cAAc,QAEpC,OAA0B,KAAtB,EAAAC,YAAWA,aAACF,OACL,EAAAG,WAAeA,uBAAO,EAAAR,iBAAwD,8CAAA,CACjFJ,oBACAC,oBACAC,kBACAC,0BACAU,WAAYN,WACZO,UAAU,EAAAC,QAAAA,SAAON,MAAMO,eAGpB,EACX,CACF"}