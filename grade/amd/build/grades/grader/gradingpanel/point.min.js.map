{"version":3,"sources":["../../../../src/grades/grader/gradingpanel/point.js"],"names":["fetchCurrentGrade","storeCurrentGrade","component","context","itemname","userId","notifyUser","rootNode","form","querySelector","grade","checkValidity","value","trim","invalidResult","serialize"],"mappings":"6VA2BA,6E,8kBAaiC,QAApBA,CAAAA,iBAAoB,SAAa,2BAAW,OAAX,yBAAb,C,CAc1B,GAAMC,CAAAA,iBAAiB,+DAAG,iBAAMC,SAAN,CAAiBC,OAAjB,CAA0BC,QAA1B,CAAoCC,MAApC,CAA4CC,UAA5C,CAAwDC,QAAxD,uHACvBC,IADuB,CAChBD,QAAQ,CAACE,aAAT,CAAuB,MAAvB,CADgB,CAEvBC,KAFuB,CAEfF,IAAI,CAACC,aAAL,CAAmB,uBAAnB,CAFe,MAIzB,CAACC,KAAK,CAACC,aAAN,EAAD,EAA0B,CAACD,KAAK,CAACE,KAAN,CAAYC,IAAZ,EAJF,yDAKlBC,wBALkB,cAQzB,iCAAYN,IAAZ,CARyB,gDASZ,0BAAU,OAAV,EAAmBN,SAAnB,CAA8BC,OAA9B,CAAuCC,QAAvC,CAAiDC,MAAjD,CAAyDC,UAAzD,CAAqE,oBAAOE,IAAP,EAAaO,SAAb,EAArE,CATY,+FAWlB,EAXkB,wDAAH,0DAAvB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Grading panel for simple direct grading.\n *\n * @module     core_grades/grades/grader/gradingpanel/point\n * @package    core_grades\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {saveGrade, fetchGrade} from './repository';\nimport {compareData} from 'core_grades/grades/grader/gradingpanel/comparison';\n// Note: We use jQuery.serializer here until we can rewrite Ajax to use XHR.send()\nimport jQuery from 'jquery';\nimport {invalidResult} from './normalise';\n\n/**\n * Fetch the current grade for a user.\n *\n * @param {String} component\n * @param {Number} context\n * @param {String} itemname\n * @param {Number} userId\n * @param {Element} rootNode\n * @return {Object}\n */\nexport const fetchCurrentGrade = (...args) => fetchGrade('point')(...args);\n\n/**\n * Store a new grade for a user.\n *\n * @param {String} component\n * @param {Number} context\n * @param {String} itemname\n * @param {Number} userId\n * @param {Boolean} notifyUser\n * @param {Element} rootNode\n *\n * @return {Object}\n */\nexport const storeCurrentGrade = async(component, context, itemname, userId, notifyUser, rootNode) => {\n    const form = rootNode.querySelector('form');\n    const grade = form.querySelector('input[name=\"grade\"]');\n\n    if (!grade.checkValidity() || !grade.value.trim()) {\n        return invalidResult;\n    }\n\n    if (compareData(form) === true) {\n        return await saveGrade('point')(component, context, itemname, userId, notifyUser, jQuery(form).serialize());\n    } else {\n        return '';\n    }\n};\n"],"file":"point.min.js"}