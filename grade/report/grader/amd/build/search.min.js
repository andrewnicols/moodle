define("gradereport_grader/search",["exports","core/pending","gradereport_grader/search/search_class","gradereport_grader/search/repository","core/str"],(function(_exports,_pending,_search_class,Repository,_str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Allow the user to search for learners within the grader report.
   * Have to basically search twice on the dataset to avoid passing around massive csv params whilst allowing debouncing.
   *
   * @module    gradereport_grader/search
   * @copyright 2023 Mathew May <mathew.solutions>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_pending=_interopRequireDefault(_pending),_search_class=_interopRequireDefault(_search_class),Repository=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Repository);const bannedFilterFields=["profileimageurlsmall","profileimageurl","id","link","matchingField","matchingFieldName"];let profilestringmap=null;_exports.init=async()=>{const pendingPromise=new _pending.default;profilestringmap=await(()=>{const requiredStrings=["username","firstname","lastname","email","city","country","department","institution","idnumber","phone1","phone2"];return(0,_str.get_strings)(requiredStrings.map((key=>({key:key})))).then((stringArray=>new Map(requiredStrings.map(((key,index)=>[key,stringArray[index]])))))})(),new _search_class.default(fetchFilterableData,filter,filterMatchIndicator),pendingPromise.resolve()};const fetchFilterableData=courseID=>Repository.userFetch(courseID).then((r=>r.users)),filter=(dataset,searchTerm)=>{const preppedSearchTerm=searchTerm.toLowerCase();return dataset.filter((user=>Object.keys(user).some((key=>""!==user[key]&&!bannedFilterFields.includes(key)&&user[key].toString().toLowerCase().includes(preppedSearchTerm)))))},filterMatchIndicator=(matchedResultsSubset,selectOneLink,searchTerm)=>{const preppedSearchTerm=searchTerm.toLowerCase();return matchedResultsSubset.map((user=>{for(const[key,value]of Object.entries(user)){var _profilestringmap$get;const valueString=value.toString().toLowerCase();if(valueString.includes(preppedSearchTerm)){user.matchingFieldName=null!==(_profilestringmap$get=profilestringmap.get(key))&&void 0!==_profilestringmap$get?_profilestringmap$get:key,user.matchingField=valueString.replace(preppedSearchTerm,'<span class="font-weight-bold">'.concat(searchTerm,"</span>")),user.link=selectOneLink(user.id);break}}return user}))}}));

//# sourceMappingURL=search.min.js.map