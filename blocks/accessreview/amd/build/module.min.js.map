{"version":3,"file":"module.min.js","sources":["../src/module.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manager for the accessreview block.\n *\n * @module block_accessreview/module\n * @author      Max Larkin <max@brickfieldlabs.ie>\n * @copyright   2020 Brickfield Education Labs <max@brickfieldlabs.ie>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\nimport * as Templates from 'core/templates';\nimport {exception as displayError} from 'core/notification';\n\n/**\n * The number of colours used to represent the heatmap. (Indexed on 0.)\n * @type {number}\n */\nconst numColours = 2;\n\n/**\n * The toggle state of the heatmap.\n * @type {boolean}\n */\nlet toggleState = true;\n\n/**\n * Renders the HTML template onto a particular HTML element.\n * @param {HTMLElement} element The element to attach the HTML to.\n * @param {number} errorCount The number of errors on this module/section.\n * @param {number} checkCount The number of checks triggered on this module/section.\n * @param {String} displayFormat\n * @param {Number} minViews\n * @param {Number} viewDelta\n * @returns {Promise}\n */\nconst renderTemplate = (element, errorCount, checkCount, displayFormat, minViews, viewDelta) => {\n    // Calculate a weight?\n    const weight = parseInt((errorCount - minViews) / viewDelta * numColours);\n\n    const context = {\n        resultPassed: !errorCount,\n        classList: '',\n        passRate: {\n            errorCount,\n            checkCount,\n            failureRate: Math.round(errorCount / checkCount * 100),\n        },\n    };\n\n    if (!element) {\n        return Promise.resolve();\n    }\n\n    const elementClassList = ['block_accessreview'];\n    if (context.resultPassed) {\n        elementClassList.push('block_accessreview_success');\n    } else if (weight) {\n        elementClassList.push('block_accessreview_danger');\n    } else {\n        elementClassList.push('block_accessreview_warning');\n    }\n\n    const showIcons = (displayFormat == 'showicons') || (displayFormat == 'showboth');\n    const showBackground = (displayFormat == 'showbackground') || (displayFormat == 'showboth');\n\n    if (showBackground && !showIcons) {\n        // Only the background is displayed.\n        // No need to display the template.\n        // Note: The case where both the background and icons are shown is handled later to avoid jankiness.\n        element.classList.add(...elementClassList, 'alert');\n\n        return Promise.resolve();\n    }\n\n    if (showIcons && !showBackground) {\n        context.classList = elementClassList.join(' ');\n    }\n\n    // The icons are displayed either with, or without, the background.\n    return Templates.renderForPromise('block_accessreview/status', context)\n    .then(({html, js}) => {\n        Templates.appendNodeContents(element, html, js);\n\n        if (showBackground) {\n            element.classList.add(...elementClassList, 'alert');\n        }\n\n        return;\n    })\n    .catch();\n};\n\n/**\n * Applies the template to all sections and modules on the course page.\n *\n * @param {Number} courseId\n * @param {String} displayFormat\n * @param {Boolean} updatePreference\n * @returns {Promise}\n */\nconst showAccessMap = (courseId, displayFormat, updatePreference = false) => {\n    // Get error data.\n    return Promise.all(fetchReviewData(courseId, updatePreference))\n    .then(([sectionData, moduleData]) => {\n        // Get total data.\n        const {minViews, viewDelta} = getErrorTotals(sectionData, moduleData);\n\n        sectionData.forEach(section => {\n            const element = document.querySelector(`#section-${section.section} .summary`);\n            if (!element) {\n                return;\n            }\n\n            renderTemplate(element, section.numerrors, section.numchecks, displayFormat, minViews, viewDelta);\n        });\n\n        moduleData.forEach(module => {\n            const element = document.getElementById(`module-${module.cmid}`);\n            if (!element) {\n                return;\n            }\n\n            renderTemplate(element, module.numerrors, module.numchecks, displayFormat, minViews, viewDelta);\n        });\n\n        // Change the icon display.\n        document.querySelector('.icon-accessmap').classList.remove(...['fa-eye-slash']);\n        document.querySelector('.icon-accessmap').classList.add(...['fa-eye']);\n\n        return {\n            sectionData,\n            moduleData,\n        };\n    })\n    .catch(displayError);\n};\n\n\n/**\n * Hides or removes the templates from the HTML of the current page.\n *\n * @param {Boolean} updatePreference\n */\nconst hideAccessMap = (updatePreference = false) => {\n    // Removes the added elements.\n    document.querySelectorAll('.block_accessreview_view').forEach(node => node.remove());\n\n    const classList = [\n        'block_accessreview',\n        'block_accessreview_success',\n        'block_accessreview_warning',\n        'block_accessreview_danger',\n        'block_accessreview_view',\n        'alert',\n    ];\n\n    // Removes the added classes.\n    document.querySelectorAll('.block_accessreview').forEach(node => node.classList.remove(...classList));\n\n    if (updatePreference) {\n        setToggleStatePreference(false);\n    }\n\n    // Change the icon display.\n    document.querySelector('.icon-accessmap').classList.remove(...['fa-eye']);\n    document.querySelector('.icon-accessmap').classList.add(...['fa-eye-slash']);\n};\n\n\n/**\n * Toggles the heatmap on/off.\n *\n * @param {Number} courseId\n * @param {String} displayFormat\n */\nconst toggleAccessMap = (courseId, displayFormat) => {\n    toggleState = !toggleState;\n    if (!toggleState) {\n        hideAccessMap(true);\n    } else {\n        showAccessMap(courseId, displayFormat, true);\n    }\n};\n\n/**\n * Parses information on the errors, generating the min, max and totals.\n *\n * @param {Object[]} sectionData The error data for course sections.\n * @param {Object[]} moduleData The error data for course modules.\n * @returns {Object} An object representing the extra error information.\n */\nconst getErrorTotals = (sectionData, moduleData) => {\n    const totals = {\n        totalErrors: 0,\n        totalUsers: 0,\n        minViews: 0,\n        maxViews: 0,\n        viewDelta: 0,\n    };\n\n    [].concat(sectionData, moduleData).forEach(item => {\n        totals.totalErrors += item.numerrors;\n        if (item.numerrors < totals.minViews) {\n            totals.minViews = item.numerrors;\n        }\n\n        if (item.numerrors > totals.maxViews) {\n            totals.maxViews = item.numerrors;\n        }\n        totals.totalUsers += item.numchecks;\n    });\n\n    totals.viewDelta = totals.maxViews - totals.minViews + 1;\n\n    return totals;\n};\n\nconst registerEventListeners = (courseId, displayFormat) => {\n    document.addEventListener('click', e => {\n        if (e.target.closest('#toggle-accessmap')) {\n            e.preventDefault();\n            toggleAccessMap(courseId, displayFormat);\n        }\n    });\n};\n\n/**\n * Set the user preference for the toggle value.\n *\n * @param   {Boolean} toggleState\n * @returns {Promise}\n */\nconst getTogglePreferenceParams = toggleState => {\n    return {\n        methodname: 'core_user_update_user_preferences',\n        args: {\n            preferences: [{\n                type: 'block_accessreviewtogglestate',\n                value: toggleState,\n            }],\n        }\n    };\n};\n\nconst setToggleStatePreference = toggleState => fetchMany([getTogglePreferenceParams(toggleState)]);\n\n/**\n * Fetch the review data.\n *\n * @param   {Number} courseid\n * @param {Boolean} updatePreference\n * @returns {Promise[]}\n */\nconst fetchReviewData = (courseid, updatePreference = false) => {\n    const calls = [\n        {\n            methodname: 'block_accessreview_get_section_data',\n            args: {courseid}\n        },\n        {\n            methodname: 'block_accessreview_get_module_data',\n            args: {courseid}\n        },\n    ];\n\n    if (updatePreference) {\n        calls.push(getTogglePreferenceParams(true));\n    }\n\n    return fetchMany(calls);\n};\n\n/**\n * Setting up the access review module.\n * @param {number} toggled A number represnting the state of the review toggle.\n * @param {string} displayFormat A string representing the display format for icons.\n * @param {number} courseId The course ID.\n */\nexport const init = (toggled, displayFormat, courseId) => {\n    // Settings consts.\n    toggleState = toggled == 1;\n\n    if (toggleState) {\n        showAccessMap(courseId, displayFormat);\n    }\n\n    registerEventListeners(courseId, displayFormat);\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","Templates","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","desc","set","_interopRequireWildcard","toggleState","renderTemplate","element","errorCount","checkCount","displayFormat","minViews","viewDelta","weight","parseInt","context","resultPassed","classList","passRate","failureRate","Math","round","Promise","resolve","elementClassList","_element$classList","showIcons","showBackground","add","apply","concat","join","renderForPromise","then","_ref","_element$classList2","html","js","appendNodeContents","catch","showAccessMap","courseId","updatePreference","arguments","undefined","all","fetchReviewData","_ref2","_document$querySelect","_document$querySelect2","_ref3","sectionData","moduleData","_getErrorTotals","getErrorTotals","forEach","section","document","querySelector","numerrors","numchecks","module","getElementById","cmid","remove","displayError","toggleAccessMap","_document$querySelect3","_document$querySelect4","querySelectorAll","node","_node$classList","setToggleStatePreference","hideAccessMap","totals","totalErrors","totalUsers","maxViews","item","getTogglePreferenceParams","methodname","args","preferences","type","fetchMany","courseid","calls","_exports","init","toggled","addEventListener","e","target","closest","preventDefault","registerEventListeners"],"mappings":"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"}