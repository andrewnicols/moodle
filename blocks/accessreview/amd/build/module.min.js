define ("block_accessreview/module",["exports","core/ajax","core/templates","core/notification"],function(_exports,_ajax,Templates,_notification){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.init=void 0;Templates=_interopRequireWildcard(Templates);function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(null===obj||"object"!=typeof obj&&"function"!=typeof obj){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if("default"!=key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}let toggleState=!0;const renderTemplate=(element,errorCount,checkCount,displayFormat,minViews,viewDelta)=>{const weight=parseInt((errorCount-minViews)/viewDelta*2),context={resultPassed:!errorCount,classList:"",passRate:{errorCount,checkCount,failureRate:Math.round(100*(errorCount/checkCount))}};if(!element){return Promise.resolve()}const elementClassList=["block_accessreview"];if(context.resultPassed){elementClassList.push("block_accessreview_success")}else if(weight){elementClassList.push("block_accessreview_danger")}else{elementClassList.push("block_accessreview_warning")}const showIcons="showicons"==displayFormat||"showboth"==displayFormat,showBackground="showbackground"==displayFormat||"showboth"==displayFormat;if(showBackground&&!showIcons){element.classList.add(...elementClassList,"alert");return Promise.resolve()}if(showIcons&&!showBackground){context.classList=elementClassList.join(" ")}return Templates.renderForPromise("block_accessreview/status",context).then(_ref=>{let{html,js}=_ref;Templates.appendNodeContents(element,html,js);if(showBackground){element.classList.add(...elementClassList,"alert")}}).catch()},showAccessMap=function(courseId,displayFormat){let updatePreference=2<arguments.length&&arguments[2]!==void 0?arguments[2]:!1;return Promise.all(fetchReviewData(courseId,updatePreference)).then(_ref2=>{let[sectionData,moduleData]=_ref2;const{minViews,viewDelta}=getErrorTotals(sectionData,moduleData);sectionData.forEach(section=>{const element=document.querySelector("#section-".concat(section.section," .summary"));if(!element){return}renderTemplate(element,section.numerrors,section.numchecks,displayFormat,minViews,viewDelta)});moduleData.forEach(module=>{const element=document.getElementById("module-".concat(module.cmid));if(!element){return}renderTemplate(element,module.numerrors,module.numchecks,displayFormat,minViews,viewDelta)});document.querySelector(".icon-accessmap").classList.remove(...["fa-eye-slash"]);document.querySelector(".icon-accessmap").classList.add(...["fa-eye"]);return{sectionData,moduleData}}).catch(_notification.exception)},hideAccessMap=function(){let updatePreference=0<arguments.length&&arguments[0]!==void 0?arguments[0]:!1;document.querySelectorAll(".block_accessreview_view").forEach(node=>node.remove());const classList=["block_accessreview","block_accessreview_success","block_accessreview_warning","block_accessreview_danger","block_accessreview_view","alert"];document.querySelectorAll(".block_accessreview").forEach(node=>node.classList.remove(...classList));if(updatePreference){setToggleStatePreference(!1)}document.querySelector(".icon-accessmap").classList.remove(...["fa-eye"]);document.querySelector(".icon-accessmap").classList.add(...["fa-eye-slash"])},toggleAccessMap=(courseId,displayFormat)=>{toggleState=!toggleState;if(!toggleState){hideAccessMap(!0)}else{showAccessMap(courseId,displayFormat,!0)}},getErrorTotals=(sectionData,moduleData)=>{const totals={totalErrors:0,totalUsers:0,minViews:0,maxViews:0,viewDelta:0};[].concat(sectionData,moduleData).forEach(item=>{totals.totalErrors+=item.numerrors;if(item.numerrors<totals.minViews){totals.minViews=item.numerrors}if(item.numerrors>totals.maxViews){totals.maxViews=item.numerrors}totals.totalUsers+=item.numchecks});totals.viewDelta=totals.maxViews-totals.minViews+1;return totals},registerEventListeners=(courseId,displayFormat)=>{document.addEventListener("click",e=>{if(e.target.closest("#toggle-accessmap")){e.preventDefault();toggleAccessMap(courseId,displayFormat)}})},getTogglePreferenceParams=toggleState=>{return{methodname:"core_user_update_user_preferences",args:{preferences:[{type:"block_accessreviewtogglestate",value:toggleState}]}}},setToggleStatePreference=toggleState=>(0,_ajax.call)([getTogglePreferenceParams(toggleState)]),fetchReviewData=function(courseid){let updatePreference=1<arguments.length&&arguments[1]!==void 0?arguments[1]:!1;const calls=[{methodname:"block_accessreview_get_section_data",args:{courseid}},{methodname:"block_accessreview_get_module_data",args:{courseid}}];if(updatePreference){calls.push(getTogglePreferenceParams(!0))}return(0,_ajax.call)(calls)},init=(toggled,displayFormat,courseId)=>{toggleState=1==toggled;if(toggleState){showAccessMap(courseId,displayFormat)}registerEventListeners(courseId,displayFormat)};_exports.init=init});
//# sourceMappingURL=module.min.js.map
