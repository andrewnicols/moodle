{"version":3,"sources":["../src/view_courses.js"],"names":["define","$","Notification","CustomEvents","Templates","EventList","CourseRepository","EventsRepository","Pending","SELECTORS","MORE_COURSES_BUTTON","MORE_COURSES_BUTTON_CONTAINER","NO_COURSES_EMPTY_MESSAGE","NO_COURSES_WITH_EVENTS_MESSAGE","COURSES_LIST","COURSE_ITEMS_LOADING_PLACEHOLDER","COURSE_EVENTS_CONTAINER","COURSE_NAME","LOADING_ICON","TIMELINE_BLOCK","TIMELINE_SEARCH","TEMPLATES","COURSE_ITEMS","SECONDS_IN_DAY","additionalConfig","courseview","hideLoadingPlaceholder","root","find","addClass","showLoadingPlaceholder","removeClass","hideMoreCoursesButton","showMoreCoursesButton","enableMoreCoursesButtonLoading","button","prop","render","then","html","append","catch","disableMoreCoursesButtonLoading","remove","showNoCoursesWithEventsMessage","container","replaceNodeContents","hideNoCoursesWithEventsMessage","renderCourseItemsHTML","appendNodeContents","getOffset","parseInt","attr","setOffset","offset","getLimit","getDaysOffset","getDaysLimit","daysLimit","getMidnight","getStartTime","midnight","daysOffset","getEndTime","getEventsForCourseIds","courseIds","startTime","limit","endTime","searchValue","args","courseids","starttime","endtime","searchvalue","queryByCourses","getEventReloadTime","data","setEventReloadTime","time","hasReloadedEventsSince","loadEventsForCourses","courses","map","course","id","updateDisplayFromCourses","hasdaysoffset","hasdayslimit","daysoffset","dayslimit","nodayslimit","hascourses","length","loadMoreCourses","pendingPromise","closest","val","getEnrolledCoursesWithEventsByTimelineClassification","result","startEventLoadingTime","Date","now","nextOffset","nextoffset","moreCoursesAvailable","morecoursesavailable","eventsPromise","renderPromise","when","eventsByCourse","forEach","courseId","courseEventsContainer","eventListRoot","rootSelector","init","resolve","exception","registerEventListeners","events","activate","on","e","originalEvent","preventDefault","stopPropagation","shown","hasClass","reset","removeAttr"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the timeline courses view for the timeline block.\n *\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/templates',\n    'block_timeline/event_list',\n    'core_course/repository',\n    'block_timeline/calendar_events_repository',\n    'core/pending'\n],\nfunction(\n    $,\n    Notification,\n    CustomEvents,\n    Templates,\n    EventList,\n    CourseRepository,\n    EventsRepository,\n    Pending\n) {\n\n    var SELECTORS = {\n        MORE_COURSES_BUTTON: '[data-action=\"more-courses\"]',\n        MORE_COURSES_BUTTON_CONTAINER: '[data-region=\"more-courses-button-container\"]',\n        NO_COURSES_EMPTY_MESSAGE: '[data-region=\"no-courses-empty-message\"]',\n        NO_COURSES_WITH_EVENTS_MESSAGE: '[data-region=\"no-events-empty-message\"]',\n        COURSES_LIST: '[data-region=\"courses-list\"]',\n        COURSE_ITEMS_LOADING_PLACEHOLDER: '[data-region=\"course-items-loading-placeholder\"]',\n        COURSE_EVENTS_CONTAINER: '[data-region=\"course-events-container\"]',\n        COURSE_NAME: '[data-region=\"course-name\"]',\n        LOADING_ICON: '.loading-icon',\n        TIMELINE_BLOCK: '[data-region=\"timeline\"]',\n        TIMELINE_SEARCH: '[data-action=\"search\"]'\n    };\n\n    var TEMPLATES = {\n        COURSE_ITEMS: 'block_timeline/course-items',\n        LOADING_ICON: 'core/loading'\n    };\n\n    var COURSE_CLASSIFICATION = 'inprogress';\n    var COURSE_SORT = 'fullname asc';\n    var COURSE_EVENT_LIMIT = 5;\n    var COURSE_LIMIT = 2;\n    var SECONDS_IN_DAY = 60 * 60 * 24;\n\n    const additionalConfig = {courseview: true};\n\n    /**\n     * Hide the loading placeholder elements.\n     *\n     * @param {object} root The rool element.\n     */\n    var hideLoadingPlaceholder = function(root) {\n        root.find(SELECTORS.COURSE_ITEMS_LOADING_PLACEHOLDER).addClass('hidden');\n    };\n\n    /**\n     * Show the loading placeholder elements.\n     *\n     * @param {object} root The rool element.\n     */\n    const showLoadingPlaceholder = function(root) {\n        root.find(SELECTORS.COURSE_ITEMS_LOADING_PLACEHOLDER).removeClass('hidden');\n    };\n\n    /**\n     * Hide the \"more courses\" button.\n     *\n     * @param {object} root The rool element.\n     */\n    var hideMoreCoursesButton = function(root) {\n        root.find(SELECTORS.MORE_COURSES_BUTTON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Show the \"more courses\" button.\n     *\n     * @param {object} root The rool element.\n     */\n    var showMoreCoursesButton = function(root) {\n        root.find(SELECTORS.MORE_COURSES_BUTTON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Disable the \"more courses\" button and show the loading spinner.\n     *\n     * @param {object} root The rool element.\n     */\n    var enableMoreCoursesButtonLoading = function(root) {\n        var button = root.find(SELECTORS.MORE_COURSES_BUTTON);\n        button.prop('disabled', true);\n        Templates.render(TEMPLATES.LOADING_ICON, {})\n            .then(function(html) {\n                button.append(html);\n                return html;\n            })\n            .catch(function() {\n                // It's not important if this false so just do so silently.\n                return false;\n            });\n    };\n\n    /**\n     * Enable the \"more courses\" button and remove the loading spinner.\n     *\n     * @param {object} root The rool element.\n     */\n    var disableMoreCoursesButtonLoading = function(root) {\n        var button = root.find(SELECTORS.MORE_COURSES_BUTTON);\n        button.prop('disabled', false);\n        button.find(SELECTORS.LOADING_ICON).remove();\n    };\n\n    /**\n     * Display the message for when courses have no events available (within the current filtering).\n     *\n     * @param {object} root The rool element.\n     */\n    const showNoCoursesWithEventsMessage = function(root) {\n        // Remove any course list contents, since we will display the no events message.\n        const container = root.find(SELECTORS.COURSES_LIST);\n        Templates.replaceNodeContents(container, '', '');\n        root.find(SELECTORS.NO_COURSES_WITH_EVENTS_MESSAGE).removeClass('hidden');\n    };\n\n    /**\n     * Hide the message for when courses have no events available (within the current filtering).\n     *\n     * @param {object} root The rool element.\n     */\n    const hideNoCoursesWithEventsMessage = function(root) {\n        root.find(SELECTORS.NO_COURSES_WITH_EVENTS_MESSAGE).addClass('hidden');\n    };\n\n    /**\n     * Render the course items HTML to the page.\n     *\n     * @param {object} root The rool element.\n     * @param {string} html The course items HTML to render.\n     * @param {boolean} append Whether the HTML should be appended (eg pressed \"show more courses\").\n     *                         Defaults to false - replaces the existing content (eg when modifying filter values).\n     */\n    var renderCourseItemsHTML = function(root, html, append = false) {\n        var container = root.find(SELECTORS.COURSES_LIST);\n\n        if (append) {\n            Templates.appendNodeContents(container, html, '');\n        } else {\n            Templates.replaceNodeContents(container, html, '');\n        }\n    };\n\n    /**\n     * Return the offset value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getOffset = function(root) {\n        return parseInt(root.attr('data-offset'), 10);\n    };\n\n    /**\n     * Set the offset value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} offset Offset value.\n     */\n    var setOffset = function(root, offset) {\n        root.attr('data-offset', offset);\n    };\n\n    /**\n     * Return the limit value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getLimit = function(root) {\n        return parseInt(root.attr('data-limit'), 10);\n    };\n\n    /**\n     * Return the days offset value for fetching events.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getDaysOffset = function(root) {\n        return parseInt(root.attr('data-days-offset'), 10);\n    };\n\n    /**\n     * Return the days limit value for fetching events. The days\n     * limit is optional so undefined will be returned if it isn't\n     * set.\n     *\n     * @param {object} root The rool element.\n     * @return {int|undefined}\n     */\n    var getDaysLimit = function(root) {\n        var daysLimit = root.attr('data-days-limit');\n        return daysLimit != undefined ? parseInt(daysLimit, 10) : undefined;\n    };\n\n    /**\n     * Return the timestamp for the user's midnight.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getMidnight = function(root) {\n        return parseInt(root.attr('data-midnight'), 10);\n    };\n\n    /**\n     * Return the start time for fetching events. This is calculated\n     * based on the user's midnight value so that timezones are\n     * preserved.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getStartTime = function(root) {\n        var midnight = getMidnight(root);\n        var daysOffset = getDaysOffset(root);\n        return midnight + (daysOffset * SECONDS_IN_DAY);\n    };\n\n    /**\n     * Return the end time for fetching events. This is calculated\n     * based on the user's midnight value so that timezones are\n     * preserved.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getEndTime = function(root) {\n        var midnight = getMidnight(root);\n        var daysLimit = getDaysLimit(root);\n        return daysLimit != undefined ? midnight + (daysLimit * SECONDS_IN_DAY) : null;\n    };\n\n    /**\n     * Get a list of events for the given course ids. Returns a promise that will\n     * be resolved with the events.\n     *\n     * @param {array} courseIds The list of course ids to fetch events for.\n     * @param {Number} startTime Timestamp to fetch events from.\n     * @param {Number} limit Limit to the number of events (this applies per course, not total)\n     * @param {Number} endTime Timestamp to fetch events to.\n     * @param {string|undefined} searchValue Search value\n     * @return {object} jQuery promise.\n     */\n    var getEventsForCourseIds = function(courseIds, startTime, limit, endTime, searchValue) {\n        var args = {\n            courseids: courseIds,\n            starttime: startTime,\n            limit: limit\n        };\n\n        if (endTime) {\n            args.endtime = endTime;\n        }\n\n        if (searchValue) {\n            args.searchvalue = searchValue;\n        }\n\n        return EventsRepository.queryByCourses(args);\n    };\n\n    /**\n     * Get the last time the events were reloaded.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getEventReloadTime = function(root) {\n        return root.data('last-event-load-time');\n    };\n\n    /**\n     * Set the last time the events were reloaded.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} time Timestamp in milliseconds.\n     */\n    var setEventReloadTime = function(root, time) {\n        root.data('last-event-load-time', time);\n    };\n\n    /**\n     * Check if events have begun reloading since the given\n     * time.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} time Timestamp in milliseconds.\n     * @return {bool}\n     */\n    var hasReloadedEventsSince = function(root, time) {\n        return getEventReloadTime(root) > time;\n    };\n\n    /**\n     * Send a request to the server to load the events for the courses.\n     *\n     * @param {array} courses List of course objects.\n     * @param {Number} startTime Timestamp to load events after.\n     * @param {int|undefined} endTime Timestamp to load events up until.\n     * @param {string|undefined} searchValue Search value\n     * @return {object} jQuery promise resolved with the events.\n     */\n    var loadEventsForCourses = function(courses, startTime, endTime, searchValue) {\n        var courseIds = courses.map(function(course) {\n            return course.id;\n        });\n\n        return getEventsForCourseIds(courseIds, startTime, COURSE_EVENT_LIMIT + 1, endTime, searchValue);\n    };\n\n    /**\n     * Render the courses in the DOM once the server has returned the courses.\n     *\n     * @param {array} courses List of course objects.\n     * @param {object} root The root element\n     * @param {Number} midnight The midnight timestamp in the user's timezone.\n     * @param {Number} daysOffset Number of days from today to offset the events.\n     * @param {Number} daysLimit Number of days from today to limit the events to.\n     * @param {boolean} append Whether new content should be appended instead of replaced (eg \"show more courses\").\n     * @return {object} jQuery promise resolved after rendering is complete.\n     */\n    var updateDisplayFromCourses = function(courses, root, midnight, daysOffset, daysLimit, append) {\n        // Render the courses template.\n        return Templates.render(TEMPLATES.COURSE_ITEMS, {\n            courses: courses,\n            midnight: midnight,\n            hasdaysoffset: true,\n            hasdayslimit: daysLimit != undefined,\n            daysoffset: daysOffset,\n            dayslimit: daysLimit,\n            nodayslimit: daysLimit == undefined,\n            courseview: true,\n            hascourses: true\n        }).then(function(html) {\n            hideLoadingPlaceholder(root);\n\n            if (html) {\n                // Template rendering is complete and we have the HTML so we can\n                // add it to the DOM.\n                renderCourseItemsHTML(root, html, append);\n            }\n\n            return html;\n        })\n        .then(function(html) {\n            if (courses.length < COURSE_LIMIT) {\n                // We know there aren't any more courses because we got back less\n                // than we asked for so hide the button to request more.\n                hideMoreCoursesButton(root);\n            } else {\n                // Make sure the button is visible if there are more courses to load.\n                showMoreCoursesButton(root);\n            }\n\n            return html;\n        })\n        .catch(function() {\n            hideLoadingPlaceholder(root);\n        });\n    };\n\n    /**\n     * Find all of the visible course blocks and initialise the event\n     * list module to being loading the events for the course block.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     * @param {boolean} append Whether content should be appended instead of replaced (eg \"show more courses\"). False by default.\n     * @return {object} jQuery promise resolved with courses and events.\n     */\n    var loadMoreCourses = function(root, append = false) {\n        const pendingPromise = new Pending('block/timeline:load-more-courses');\n        var offset = getOffset(root);\n        var limit = getLimit(root);\n        const startTime = getStartTime(root);\n        const endTime = getEndTime(root);\n        const searchValue = root.closest(SELECTORS.TIMELINE_BLOCK).find(SELECTORS.TIMELINE_SEARCH).val();\n\n        // Start loading the next set of courses.\n        // Fetch up to limit number of courses with at least one action event in the time filtering specified.\n        // Courses without events will also be fetched, but hidden in case they have events in other timespans.\n        return CourseRepository.getEnrolledCoursesWithEventsByTimelineClassification(\n            COURSE_CLASSIFICATION,\n            limit,\n            offset,\n            COURSE_SORT,\n            searchValue,\n            startTime,\n            endTime\n        ).then(function(result) {\n            var startEventLoadingTime = Date.now();\n            var courses = result.courses;\n            var nextOffset = result.nextoffset;\n            var daysOffset = getDaysOffset(root);\n            var daysLimit = getDaysLimit(root);\n            var midnight = getMidnight(root);\n            const moreCoursesAvailable = result.morecoursesavailable;\n\n            // Record the next offset if we want to request more courses.\n            setOffset(root, nextOffset);\n            // Load the events for these courses.\n            var eventsPromise = loadEventsForCourses(courses, startTime, endTime, searchValue);\n            // Render the courses in the DOM.\n            var renderPromise = updateDisplayFromCourses(courses, root, midnight, daysOffset, daysLimit, append);\n\n            return $.when(eventsPromise, renderPromise)\n                .then(function(eventsByCourse) {\n                    if (hasReloadedEventsSince(root, startEventLoadingTime)) {\n                        // All of the events are being reloaded so ignore our results.\n                        return eventsByCourse;\n                    }\n\n                    if (courses.length > 0) {\n                        // Render the events in the correct course event list.\n                        courses.forEach(function(course) {\n                            const courseId = course.id;\n                            const containerSelector = '[data-region=\"course-events-container\"][data-course-id=\"' + courseId + '\"]';\n                            const courseEventsContainer = root.find(containerSelector);\n                            const eventListRoot = courseEventsContainer.find(EventList.rootSelector);\n\n                            EventList.init(eventListRoot, additionalConfig);\n                        });\n\n                        if (!moreCoursesAvailable) {\n                            // If no more courses with events matching the current filtering exist, hide the more courses button.\n                            hideMoreCoursesButton(root);\n                        } else {\n                            // If more courses exist with events matching the current filtering, show the more courses button.\n                            showMoreCoursesButton(root);\n                        }\n                    } else {\n                        // No more courses to load, hide the more courses button.\n                        hideMoreCoursesButton(root);\n\n                        // A zero offset means this was not loading \"more courses\", so we need to display the no results message.\n                        if (offset == 0) {\n                            showNoCoursesWithEventsMessage(root);\n                        }\n                    }\n\n                    return eventsByCourse;\n                });\n        }).then(() => {\n            return pendingPromise.resolve();\n        }).catch(Notification.exception);\n    };\n\n    /**\n     * Add event listeners to load more courses for the courses view.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var registerEventListeners = function(root) {\n        CustomEvents.define(root, [CustomEvents.events.activate]);\n        // Show more courses and load their events when the user clicks the \"more courses\" button.\n        root.on(CustomEvents.events.activate, SELECTORS.MORE_COURSES_BUTTON, function(e, data) {\n            enableMoreCoursesButtonLoading(root);\n            loadMoreCourses(root, true)\n                .then(function() {\n                    disableMoreCoursesButtonLoading(root);\n                    return;\n                })\n                .catch(function() {\n                    disableMoreCoursesButtonLoading(root);\n                });\n\n            if (data) {\n                data.originalEvent.preventDefault();\n                data.originalEvent.stopPropagation();\n            }\n            e.stopPropagation();\n        });\n    };\n\n    /**\n     * Initialise the timeline courses view. Begin loading the events\n     * if this view is active. Add the relevant event listeners.\n     *\n     * This function should only be called once per page load because it\n     * is adding event listeners to the page.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var init = function(root) {\n        root = $(root);\n\n        // Only need to handle course loading if the user is actively enrolled in a course.\n        if (!root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\n            setEventReloadTime(root, Date.now());\n\n            if (root.hasClass('active')) {\n                // Only load if this is active otherwise it will be lazy loaded later.\n                loadMoreCourses(root);\n                root.attr('data-seen', true);\n            }\n\n            registerEventListeners(root);\n        }\n    };\n\n    /**\n     * Reset the element back to it's initial state. Begin loading the events again\n     * if this view is active.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var reset = function(root) {\n\n        setOffset(root, 0);\n        showLoadingPlaceholder(root);\n        hideNoCoursesWithEventsMessage(root);\n        root.removeAttr('data-seen');\n\n        if (root.hasClass('active')) {\n            shown(root);\n        }\n    };\n\n    /**\n     * Begin loading the events unless we know there are no actively enrolled courses.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var shown = function(root) {\n        if (!root.attr('data-seen') && !root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\n            loadMoreCourses(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    return {\n        init: init,\n        reset: reset,\n        shown: shown\n    };\n});\n"],"file":"view_courses.min.js"}