define ("block_timeline/view_dates",["jquery","core/str","block_timeline/event_list","core/pubsub","core/paged_content_events"],function($,Str,EventList,PubSub,PagedContentEvents){var SELECTORS={EVENT_LIST_CONTAINER:"[data-region=\"event-list-container\"]"},DEFAULT_PAGE_LIMIT=[5,10,25],getPagingLimits=function(root){var limitPref=parseInt(root.data("limit"),10),isDefaultSet=!1,limits=DEFAULT_PAGE_LIMIT.map(function(value){if(limitPref==value){isDefaultSet=!0}return{value:value,active:limitPref==value}});if(!isDefaultSet){limits[0].active=!0}return limits},registerEventListeners=function(root,namespace){var event=namespace+PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;PubSub.subscribe(event,function(limit){$(root).data("limit",limit)})},load=function(root){var eventListContainer=root.find(SELECTORS.EVENT_LIST_CONTAINER),namespace=$(eventListContainer).attr("id")+"user_block_timeline"+Math.random();registerEventListeners(root,namespace);var limits=getPagingLimits(root),config={persistentLimitKey:"block_timeline_user_limit_preference",eventNamespace:namespace};Str.get_string("ariaeventlistpaginationnavdates","block_timeline").then(function(string){EventList.init(eventListContainer,limits,{},string,config);return string}).catch(function(){EventList.init(eventListContainer,limits,{},"",config)})};return{init:function init(root){root=$(root);if(root.hasClass("active")){load(root);root.attr("data-seen",!0)}},reset:function reset(root){root.removeAttr("data-seen");if(root.hasClass("active")){load(root);root.attr("data-seen",!0)}},shown:function shown(root){if(!root.attr("data-seen")){load(root);root.attr("data-seen",!0)}}}});
//# sourceMappingURL=view_dates.min.js.map
