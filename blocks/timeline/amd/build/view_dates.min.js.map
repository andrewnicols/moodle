{"version":3,"sources":["../src/view_dates.js"],"names":["define","$","Str","EventList","PubSub","PagedContentEvents","SELECTORS","EVENT_LIST_CONTAINER","DEFAULT_PAGE_LIMIT","getPagingLimits","root","limitPref","parseInt","data","isDefaultSet","limits","map","value","active","registerEventListeners","namespace","event","SET_ITEMS_PER_PAGE_LIMIT","subscribe","limit","load","eventListContainer","find","attr","Math","random","config","persistentLimitKey","eventNamespace","get_string","then","string","init","catch","hasClass","reset","removeAttr","shown"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the timeline dates view for the timeline block.\n *\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'core/str',\n    'block_timeline/event_list',\n    'core/pubsub',\n    'core/paged_content_events'\n],\nfunction(\n    $,\n    Str,\n    EventList,\n    PubSub,\n    PagedContentEvents\n) {\n\n    var SELECTORS = {\n        EVENT_LIST_CONTAINER: '[data-region=\"event-list-container\"]',\n    };\n\n    var DEFAULT_PAGE_LIMIT = [5, 10, 25];\n\n    /**\n     * Generate a paged content array of limits taking into account user preferences\n     *\n     * @param {object} root The root element for the timeline dates view.\n     * @return {array} Array of limit objects\n     */\n    var getPagingLimits = function(root) {\n        var limitPref = parseInt(root.data('limit'), 10);\n        var isDefaultSet = false;\n        var limits = DEFAULT_PAGE_LIMIT.map(function(value) {\n            if (limitPref == value) {\n                isDefaultSet = true;\n            }\n\n            return {\n                value: value,\n                active: limitPref == value\n            };\n        });\n\n        if (!isDefaultSet) {\n            limits[0].active = true;\n        }\n\n        return limits;\n    };\n\n    /**\n     * Setup the listeners for the timeline block\n     *\n     * @param {string} root view dates container\n     * @param {string} namespace The namespace for the paged content\n     */\n    var registerEventListeners = function(root, namespace) {\n        var event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\n        PubSub.subscribe(event, function(limit) {\n            $(root).data('limit', limit);\n        });\n    };\n\n    /**\n     * Initialise the event list and being loading the events.\n     *\n     * @param {object} root The root element for the timeline dates view.\n     */\n    var load = function(root) {\n        var eventListContainer = root.find(SELECTORS.EVENT_LIST_CONTAINER);\n        var namespace = $(eventListContainer).attr('id') + \"user_block_timeline\" + Math.random();\n        registerEventListeners(root, namespace);\n\n        var limits = getPagingLimits(root);\n        var config = {\n            persistentLimitKey: \"block_timeline_user_limit_preference\",\n            eventNamespace: namespace\n        };\n        Str.get_string('ariaeventlistpaginationnavdates', 'block_timeline')\n            .then(function(string) {\n                EventList.init(eventListContainer, limits, {}, string, config);\n                return string;\n            })\n            .catch(function() {\n                // Ignore if we can't load the string. Still init the event list.\n                EventList.init(eventListContainer, limits, {}, \"\", config);\n            });\n    };\n\n    /**\n     * Initialise the timeline dates view. Begin loading the events\n     * if this view is active.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var init = function(root) {\n        root = $(root);\n        if (root.hasClass('active')) {\n            load(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    /**\n     * Reset the view back to it's initial state. If this view is active then\n     * beging loading the events.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var reset = function(root) {\n        root.removeAttr('data-seen');\n        if (root.hasClass('active')) {\n            load(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    /**\n     * Load the events if this is the first time the view is displayed.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var shown = function(root) {\n        if (!root.attr('data-seen')) {\n            load(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    return {\n        init: init,\n        reset: reset,\n        shown: shown\n    };\n});\n"],"file":"view_dates.min.js"}