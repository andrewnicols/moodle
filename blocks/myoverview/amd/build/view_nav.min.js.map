{"version":3,"sources":["../src/view_nav.js"],"names":["updatePreferences","filter","value","type","Repository","updateUserPreferences","preferences","registerSelector","root","Selector","find","SELECTORS","FILTERS","CustomEvents","define","events","activate","on","FILTER_OPTION","e","data","option","target","hasClass","attr","pref","customfieldvalue","courseView","region","page","document","querySelector","selectBlock","input","searchInput","clearIcon","View","clearSearch","init","originalEvent","preventDefault","DISPLAY_OPTION","reset"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the timeline view navigation for the overview block.\n *\n * @copyright  2018 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport * as Repository from 'block_myoverview/repository';\nimport * as View from 'block_myoverview/view';\nimport SELECTORS from 'block_myoverview/selectors';\n\n/**\n * Update the user preference for the block.\n *\n * @param {String} filter The type of filter: display/sort/grouping.\n * @param {String} value The current preferred value.\n */\nconst updatePreferences = (filter, value) => {\n    let type = null;\n    if (filter === 'display') {\n        type = 'block_myoverview_user_view_preference';\n    } else if (filter === 'sort') {\n        type = 'block_myoverview_user_sort_preference';\n    } else if (filter === 'customfieldvalue') {\n        type = 'block_myoverview_user_grouping_customfieldvalue_preference';\n    } else {\n        type = 'block_myoverview_user_grouping_preference';\n    }\n\n    Repository.updateUserPreferences({\n        preferences: [\n            {\n                type: type,\n                value: value\n            }\n        ]\n    });\n};\n\n/**\n * Event listener for the Display filter (cards, list).\n *\n * @param {object} root The root element for the overview block\n */\nconst registerSelector = root => {\n\n    const Selector = root.find(SELECTORS.FILTERS);\n\n    CustomEvents.define(Selector, [CustomEvents.events.activate]);\n    Selector.on(\n        CustomEvents.events.activate,\n        SELECTORS.FILTER_OPTION,\n        (e, data) => {\n            const option = $(e.target);\n\n            if (option.hasClass('active')) {\n                // If it's already active then we don't need to do anything.\n                return;\n            }\n\n            const filter = option.attr('data-filter');\n            const pref = option.attr('data-pref');\n            const customfieldvalue = option.attr('data-customfieldvalue');\n\n            root.find(SELECTORS.courseView.region).attr('data-' + filter, option.attr('data-value'));\n            updatePreferences(filter, pref);\n\n            if (customfieldvalue) {\n                root.find(SELECTORS.courseView.region).attr('data-customfieldvalue', customfieldvalue);\n                updatePreferences('customfieldvalue', customfieldvalue);\n            }\n\n            // Reset the views.\n\n            // Check if the user is currently in a searching state, if so we'll reset it.\n            const page = document.querySelector(SELECTORS.region.selectBlock);\n            const input = page.querySelector(SELECTORS.region.searchInput);\n            if (input.value !== '') {\n                const clearIcon = page.querySelector(SELECTORS.region.clearIcon);\n                input.value = '';\n                // Triggers the init so wont need to call it again.\n                View.clearSearch(clearIcon, root);\n            } else {\n                View.init(root);\n            }\n\n            data.originalEvent.preventDefault();\n        }\n    );\n\n    Selector.on(\n        CustomEvents.events.activate,\n        SELECTORS.DISPLAY_OPTION,\n        (e, data) => {\n            const option = $(e.target);\n\n            if (option.hasClass('active')) {\n                return;\n            }\n\n            const filter = option.attr('data-display-option');\n            const pref = option.attr('data-pref');\n\n            root.find(SELECTORS.courseView.region).attr('data-display', option.attr('data-value'));\n            updatePreferences(filter, pref);\n            View.reset(root);\n            data.originalEvent.preventDefault();\n        }\n    );\n};\n\n/**\n * Initialise the timeline view navigation by adding event listeners to\n * the navigation elements.\n *\n * @param {object} root The root element for the myoverview block\n */\nexport const init = root => {\n    root = $(root);\n    registerSelector(root);\n};\n"],"file":"view_nav.min.js"}