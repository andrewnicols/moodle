define ("core_contentbank/sort",["exports","./selectors","core/str","core/prefetch","core/ajax","core/notification"],function(_exports,_selectors,_str,_prefetch,_ajax,_notification){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.init=void 0;_selectors=_interopRequireDefault(_selectors);_prefetch=_interopRequireDefault(_prefetch);_ajax=_interopRequireDefault(_ajax);_notification=_interopRequireDefault(_notification);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const init=()=>{const contentBank=document.querySelector(_selectors.default.regions.contentbank);_prefetch.default.prefetchStrings("contentbank",["contentname","uses","lastmodified","size","type","author"]);_prefetch.default.prefetchStrings("moodle",["sortbyx","sortbyxreverse"]);registerListenerEvents(contentBank)};_exports.init=init;const registerListenerEvents=contentBank=>{contentBank.addEventListener("click",e=>{const viewList=contentBank.querySelector(_selectors.default.actions.viewlist),viewGrid=contentBank.querySelector(_selectors.default.actions.viewgrid),fileArea=contentBank.querySelector(_selectors.default.regions.filearea),shownItems=fileArea.querySelectorAll(_selectors.default.elements.listitem);if(e.target.closest(_selectors.default.actions.viewgrid)){contentBank.classList.remove("view-list");contentBank.classList.add("view-grid");if(fileArea&&shownItems){fileArea.setAttribute("role","list");shownItems.forEach(listItem=>{listItem.setAttribute("role","listitem");listItem.querySelectorAll(_selectors.default.elements.cell).forEach(cell=>cell.removeAttribute("role"))});const heading=fileArea.querySelector(_selectors.default.elements.heading);heading.removeAttribute("role");heading.querySelectorAll(_selectors.default.elements.cell).forEach(cell=>cell.removeAttribute("role"))}viewGrid.classList.add("active");viewList.classList.remove("active");setViewListPreference(!1);return}if(e.target.closest(_selectors.default.actions.viewlist)){contentBank.classList.remove("view-grid");contentBank.classList.add("view-list");if(fileArea&&shownItems){fileArea.setAttribute("role","table");shownItems.forEach(listItem=>{listItem.setAttribute("role","row");listItem.querySelectorAll(_selectors.default.elements.cell).forEach(cell=>cell.setAttribute("role","cell"))});const heading=fileArea.querySelector(_selectors.default.elements.heading);heading.setAttribute("role","row");heading.querySelectorAll(_selectors.default.elements.cell).forEach(cell=>cell.setAttribute("role","columnheader"))}viewList.classList.add("active");viewGrid.classList.remove("active");setViewListPreference(!0);return}if(fileArea&&shownItems){const sortByName=e.target.closest(_selectors.default.actions.sortname);if(sortByName){const ascending=updateSortButtons(contentBank,sortByName);updateSortOrder(fileArea,shownItems,"data-file",ascending);return}const sortByUses=e.target.closest(_selectors.default.actions.sortuses);if(sortByUses){const ascending=updateSortButtons(contentBank,sortByUses);updateSortOrder(fileArea,shownItems,"data-uses",ascending);return}const sortByDate=e.target.closest(_selectors.default.actions.sortdate);if(sortByDate){const ascending=updateSortButtons(contentBank,sortByDate);updateSortOrder(fileArea,shownItems,"data-timemodified",ascending);return}const sortBySize=e.target.closest(_selectors.default.actions.sortsize);if(sortBySize){const ascending=updateSortButtons(contentBank,sortBySize);updateSortOrder(fileArea,shownItems,"data-bytes",ascending);return}const sortByType=e.target.closest(_selectors.default.actions.sorttype);if(sortByType){const ascending=updateSortButtons(contentBank,sortByType);updateSortOrder(fileArea,shownItems,"data-type",ascending);return}const sortByAuthor=e.target.closest(_selectors.default.actions.sortauthor);if(sortByAuthor){const ascending=updateSortButtons(contentBank,sortByAuthor);updateSortOrder(fileArea,shownItems,"data-author",ascending)}}})},setViewListPreference=function(viewList){if(!1===viewList){viewList=null}const request={methodname:"core_user_update_user_preferences",args:{preferences:[{type:"core_contentbank_view_list",value:viewList}]}};return _ajax.default.call([request])[0].catch(_notification.default.exception)},updateSortButtons=(contentBank,sortButton)=>{const sortButtons=contentBank.querySelectorAll(_selectors.default.elements.sortbutton);sortButtons.forEach(button=>{if(button!==sortButton){button.classList.remove("dir-asc");button.classList.remove("dir-desc");button.classList.add("dir-none");button.closest(_selectors.default.elements.cell).setAttribute("aria-sort","none");updateButtonTitle(button,!1)}});let ascending=!0;if(sortButton.classList.contains("dir-none")){sortButton.classList.remove("dir-none");sortButton.classList.add("dir-asc");sortButton.closest(_selectors.default.elements.cell).setAttribute("aria-sort","ascending")}else if(sortButton.classList.contains("dir-asc")){sortButton.classList.remove("dir-asc");sortButton.classList.add("dir-desc");sortButton.closest(_selectors.default.elements.cell).setAttribute("aria-sort","descending");ascending=!1}else if(sortButton.classList.contains("dir-desc")){sortButton.classList.remove("dir-desc");sortButton.classList.add("dir-asc");sortButton.closest(_selectors.default.elements.cell).setAttribute("aria-sort","ascending")}updateButtonTitle(sortButton,ascending);return ascending},updateButtonTitle=(button,ascending)=>{const sortString=ascending?"sortbyxreverse":"sortbyx";return(0,_str.get_string)(button.dataset.string,"contentbank").then(columnName=>{return(0,_str.get_string)(sortString,"core",columnName)}).then(sortByString=>{button.setAttribute("title",sortByString);return sortByString}).catch()},updateSortOrder=(fileArea,itemList,attribute,ascending)=>{const sortList=[].slice.call(itemList).sort(function(a,b){let aa=a.getAttribute(attribute),bb=b.getAttribute(attribute);if(!isNaN(aa)){aa=parseInt(aa);bb=parseInt(bb)}if(ascending){return aa>bb?1:-1}else{return aa<bb?1:-1}});sortList.forEach(listItem=>fileArea.appendChild(listItem))}});
//# sourceMappingURL=sort.min.js.map
