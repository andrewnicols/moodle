{"version":3,"sources":["../src/form.js"],"names":["define","$","dragDrop","dragDropToImageForm","maxBgImageSize","maxDragImageSize","fp","init","filePickers","append","updateVisibilityOfFilePickers","setOptionsForDragItemSelectors","setupEventHandlers","waitForFilePickerToInitialise","file","href","setTimeout","M","util","js_pending","on","loadPreviewImage","one","afterPreviewImageLoaded","attr","createDropZones","js_complete","dropZoneHolder","empty","bgimageurl","numDrops","form","getFormValue","dropNo","dragNo","group","label","imgUrl","waitForAllDropImagesToBeLoaded","notYetLoadedImages","not","i","imgNode","imageIsLoaded","length","updateDropZones","imgElement","complete","naturalHeight","dropBackgroundPosition","offset","drop","left","parseInt","top","is","html","css","numGroups","first","find","resizeAllDragsAndDropsInGroup","drops","maxWidth","maxHeight","each","Math","max","ceil","offsetWidth","offsetHeight","round","floor","e","input","target","closest","hasClass","dragStart","window","numDrags","picker","show","hide","dragItemOptions","toNameWithIndex","name","selector","selectedvalue","val","remove","value","hasOwnProperty","optionnode","isItemUsed","filter","selectNode","info","prepare","start","x","y","dragMove","dragEnd","backgroundImage","backgroundPosition","data","dropPosition","min","outerWidth","outerHeight","setFormValue","indexes","indexString","getEl","elements","el","type","checked","draftItemIdsToName","nameToParentNode","index","filepicker","parentNode","fileAnchor","get","innerHTML","draftitemid"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * JavaScript to allow dragging options to slots (using mouse down or touch) or tab through slots using keyboard.\n *\n * @module     qtype_ddimageortext/form\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/dragdrop'], function($, dragDrop) {\n\n    \"use strict\";\n\n    /**\n     * Singleton object to handle progressive enhancement of the\n     * drag-drop onto image question editing form.\n     * @type {Object}\n     */\n    var dragDropToImageForm = {\n        /**\n         * @var {Object} maxBgImageSize Properties width and height.\n         * @private\n         */\n        maxBgImageSize: null,\n\n        /**\n         * @var {Object} maxDragImageSize with properties width and height.\n         * @private\n         */\n        maxDragImageSize: null,\n\n        /**\n         * @property {object} fp for interacting with the file pickers.\n         * @private\n         */\n        fp: null, // Object containing functions associated with the file picker.\n\n        /**\n         * Initialise the form javascript features.\n         *\n         * @method\n         */\n        init: function() {\n            dragDropToImageForm.fp = dragDropToImageForm.filePickers();\n\n            $('#id_previewareaheader').append(\n                '<div class=\"ddarea que ddimageortext\">' +\n                '  <div class=\"droparea\">' +\n                '    <img class=\"dropbackground\" />' +\n                '    <div class=\"dropzones\"></div>' +\n                '  </div>' +\n                '  <div class=\"dragitems\"></div>' +\n                '</div>');\n\n            dragDropToImageForm.updateVisibilityOfFilePickers();\n            dragDropToImageForm.setOptionsForDragItemSelectors();\n            dragDropToImageForm.setupEventHandlers();\n            dragDropToImageForm.waitForFilePickerToInitialise();\n        },\n\n        /**\n         * Waits for the file-pickers to be sufficiently ready before initialising the preview.\n         */\n        waitForFilePickerToInitialise: function() {\n            if (dragDropToImageForm.fp.file('bgimage').href === null) {\n                // It would be better to use an onload or onchange event rather than this timeout.\n                // Unfortunately attempts to do this early are overwritten by filepicker during its loading.\n                setTimeout(dragDropToImageForm.waitForFilePickerToInitialise, 1000);\n                return;\n            }\n            M.util.js_pending('dragDropToImageForm');\n\n            // From now on, when a new file gets loaded into the filepicker, update the preview.\n            // This is not in the setupEventHandlers section as it needs to be delayed until\n            // after filepicker's javascript has finished.\n            $('form.mform[data-qtype=\"ddimageortext\"]').on('change', '.filepickerhidden', function() {\n                M.util.js_pending('dragDropToImageForm');\n                dragDropToImageForm.loadPreviewImage();\n            });\n\n            dragDropToImageForm.loadPreviewImage();\n        },\n\n        /**\n         * Loads the preview background image.\n         */\n        loadPreviewImage: function() {\n            $('fieldset#id_previewareaheader .dropbackground')\n                .one('load', dragDropToImageForm.afterPreviewImageLoaded)\n                .attr('src', dragDropToImageForm.fp.file('bgimage').href);\n        },\n\n        /**\n         * After the background image is loaded, continue setting up the preview.\n         */\n        afterPreviewImageLoaded: function() {\n            dragDropToImageForm.createDropZones();\n            M.util.js_complete('dragDropToImageForm');\n        },\n\n        /**\n         * Create, or recreate all the drop zones.\n         */\n        createDropZones: function() {\n            var dropZoneHolder = $('.dropzones');\n            dropZoneHolder.empty();\n\n            var bgimageurl = dragDropToImageForm.fp.file('bgimage').href;\n            if (bgimageurl === null) {\n                return; // There is not currently a valid preview to update.\n            }\n\n            var numDrops = dragDropToImageForm.form.getFormValue('nodropzone', []);\n            for (var dropNo = 0; dropNo < numDrops; dropNo++) {\n                var dragNo = dragDropToImageForm.form.getFormValue('drops', [dropNo, 'choice']);\n                if (dragNo === '0') {\n                    continue;\n                }\n                dragNo = dragNo - 1;\n                var group = dragDropToImageForm.form.getFormValue('drags', [dragNo, 'draggroup']),\n                    label = dragDropToImageForm.form.getFormValue('draglabel', [dragNo]);\n                if ('image' === dragDropToImageForm.form.getFormValue('drags', [dragNo, 'dragitemtype'])) {\n                    var imgUrl = dragDropToImageForm.fp.file('dragitem[' + dragNo + ']').href;\n                    if (imgUrl === null) {\n                        continue;\n                    }\n                    // Althoug these are previews of drops, we also add the class name 'drag',\n                    dropZoneHolder.append('<img class=\"droppreview group' + group + ' drop' + dropNo +\n                            '\" src=\"' + imgUrl + '\" alt=\"' + label + '\" data-drop-no=\"' + dropNo + '\">');\n\n                } else if (label !== '') {\n                    dropZoneHolder.append('<div class=\"droppreview group' + group + ' drop' + dropNo +\n                        '\"  data-drop-no=\"' + dropNo + '\">' + label + '</div>');\n                }\n            }\n\n            dragDropToImageForm.waitForAllDropImagesToBeLoaded();\n        },\n\n        /**\n         * This polls until all the drop-zone images have loaded, and then calls updateDropZones().\n         */\n        waitForAllDropImagesToBeLoaded: function() {\n            var notYetLoadedImages = $('.dropzones img').not(function(i, imgNode) {\n                return dragDropToImageForm.imageIsLoaded(imgNode);\n            });\n\n            if (notYetLoadedImages.length > 0) {\n                setTimeout(function() {\n                    dragDropToImageForm.waitForAllDropImagesToBeLoaded();\n                }, 100);\n                return;\n            }\n\n            dragDropToImageForm.updateDropZones();\n        },\n\n        /**\n         * Check if an image has loaded without errors.\n         *\n         * @param {HTMLImageElement} imgElement an image.\n         * @returns {boolean} true if this image has loaded without errors.\n         */\n        imageIsLoaded: function(imgElement) {\n            return imgElement.complete && imgElement.naturalHeight !== 0;\n        },\n\n        /**\n         * Set the size and position of all the drop zones.\n         */\n        updateDropZones: function() {\n            var bgimageurl = dragDropToImageForm.fp.file('bgimage').href;\n            if (bgimageurl === null) {\n                return; // There is not currently a valid preview to update.\n            }\n\n            var dropBackgroundPosition = $('fieldset#id_previewareaheader .dropbackground').offset(),\n                numDrops = dragDropToImageForm.form.getFormValue('nodropzone', []);\n\n            // Move each drop to the right position and update the text.\n            for (var dropNo = 0; dropNo < numDrops; dropNo++) {\n                var drop = $('.dropzones .drop' + dropNo);\n                if (drop.length === 0) {\n                    continue;\n                }\n                var dragNo = dragDropToImageForm.form.getFormValue('drops', [dropNo, 'choice']) - 1;\n\n                drop.offset({\n                    left: dropBackgroundPosition.left +\n                            parseInt(dragDropToImageForm.form.getFormValue('drops', [dropNo, 'xleft'])),\n                    top: dropBackgroundPosition.top +\n                            parseInt(dragDropToImageForm.form.getFormValue('drops', [dropNo, 'ytop']))\n                });\n\n                var label = dragDropToImageForm.form.getFormValue('draglabel', [dragNo]);\n                if (drop.is('img')) {\n                    drop.attr('alt', label);\n                } else {\n                    drop.html(label);\n                }\n            }\n\n            // Resize them to the same size.\n            $('.dropzones .droppreview').css('padding', '0');\n            var numGroups = $('.draggroup select').first().find('option').length;\n            for (var group = 1; group <= numGroups; group++) {\n                dragDropToImageForm.resizeAllDragsAndDropsInGroup(group);\n            }\n        },\n\n        /**\n         * In a given group, set all the drags and drops to be the same size.\n         *\n         * @param {int} group the group number.\n         */\n        resizeAllDragsAndDropsInGroup: function(group) {\n            var drops = $('.dropzones .droppreview.group' + group),\n                maxWidth = 0,\n                maxHeight = 0;\n\n            // Find the maximum size of any drag in this groups.\n            drops.each(function(i, drop) {\n                maxWidth = Math.max(maxWidth, Math.ceil(drop.offsetWidth));\n                maxHeight = Math.max(maxHeight, Math.ceil(drop.offsetHeight));\n            });\n\n            // The size we will want to set is a bit bigger than this.\n            maxWidth += 10;\n            maxHeight += 10;\n\n            // Set each drag home to that size.\n            drops.each(function(i, drop) {\n                var left = Math.round((maxWidth - drop.offsetWidth) / 2),\n                    top = Math.floor((maxHeight - drop.offsetHeight) / 2);\n                // Set top and left padding so the item is centred.\n                $(drop).css({\n                    'padding-left': left + 'px',\n                    'padding-right': (maxWidth - drop.offsetWidth - left) + 'px',\n                    'padding-top': top + 'px',\n                    'padding-bottom': (maxHeight - drop.offsetHeight - top) + 'px'\n                });\n            });\n        },\n\n        /**\n         * Events linked to form actions.\n         */\n        setupEventHandlers: function() {\n            // Changes to settings in the draggable items section.\n            $('fieldset#id_draggableitemheader')\n                .on('change input', 'input, select', function(e) {\n                    var input = $(e.target).closest('select, input');\n                    if (input.hasClass('dragitemtype')) {\n                        dragDropToImageForm.updateVisibilityOfFilePickers();\n                    }\n\n                    dragDropToImageForm.setOptionsForDragItemSelectors();\n\n                    if (input.is('.dragitemtype, .draggroup')) {\n                        dragDropToImageForm.createDropZones();\n                    } else if (input.is('.draglabel')) {\n                        dragDropToImageForm.updateDropZones();\n                    }\n                });\n\n            // Changes to Drop zones section: left, top and drag item.\n            $('fieldset#id_dropzoneheader').on('change input', 'input, select', function(e) {\n                var input = $(e.target).closest('select, input');\n                if (input.is('select')) {\n                    dragDropToImageForm.createDropZones();\n                } else {\n                    dragDropToImageForm.updateDropZones();\n                }\n            });\n\n            // Moving drop zones in the preview.\n            $('fieldset#id_previewareaheader').on('mousedown touchstart', '.droppreview', function(e) {\n                dragDropToImageForm.dragStart(e);\n            });\n\n            $(window).on('resize', function() {\n                dragDropToImageForm.updateDropZones();\n            });\n        },\n\n        /**\n         * Update all the drag item filepickers, so they are only shown for\n         */\n        updateVisibilityOfFilePickers: function() {\n            var numDrags = dragDropToImageForm.form.getFormValue('noitems', []);\n            for (var dragNo = 0; dragNo < numDrags; dragNo++) {\n                var picker = $('input#id_dragitem_' + dragNo).closest('.fitem_ffilepicker');\n                if ('image' === dragDropToImageForm.form.getFormValue('drags', [dragNo, 'dragitemtype'])) {\n                    picker.show();\n                } else {\n                    picker.hide();\n                }\n            }\n        },\n\n\n        setOptionsForDragItemSelectors: function() {\n            var dragItemOptions = {'0': ''},\n                numDrags = dragDropToImageForm.form.getFormValue('noitems', []),\n                numDrops = dragDropToImageForm.form.getFormValue('nodropzone', []);\n\n            // Work out the list of options.\n            for (var dragNo = 0; dragNo < numDrags; dragNo++) {\n                var label = dragDropToImageForm.form.getFormValue('draglabel', [dragNo]);\n                var file = dragDropToImageForm.fp.file(dragDropToImageForm.form.toNameWithIndex('dragitem', [dragNo]));\n                if ('image' === dragDropToImageForm.form.getFormValue('drags', [dragNo, 'dragitemtype']) && file.name !== null) {\n                    dragItemOptions[dragNo + 1] = (dragNo + 1) + '. ' + label + ' (' + file.name + ')';\n                } else if (label !== '') {\n                    dragItemOptions[dragNo + 1] = (dragNo + 1) + '. ' + label;\n                }\n            }\n\n            // Initialise each select.\n            for (var dropNo = 0; dropNo < numDrops; dropNo++) {\n                var selector = $('#id_drops_' + dropNo + '_choice');\n\n                var selectedvalue = selector.val();\n                selector.find('option').remove();\n                for (var value in dragItemOptions) {\n                    if (!dragItemOptions.hasOwnProperty(value)) {\n                        continue;\n                    }\n                    selector.append('<option value=\"' + value + '\">' + dragItemOptions[value] + '</option>');\n                    var optionnode = selector.find('option[value=\"' + value + '\"]');\n                    if (parseInt(value) === parseInt(selectedvalue)) {\n                        optionnode.attr('selected', true);\n                    } else if (dragDropToImageForm.isItemUsed(parseInt(value))) {\n                        optionnode.attr('disabled', true);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Checks if the specified drag option is already used somewhere.\n         *\n         * @param {Number} value of the drag item to check\n         * @return {Boolean} true if item is allocated to dropzone\n         */\n        isItemUsed: function(value) {\n            if (value === 0) {\n                return false; // None option can always be selected.\n            }\n\n            if (dragDropToImageForm.form.getFormValue('drags', [value - 1, 'infinite'])) {\n                return false; // Infinite, so can't be used up.\n            }\n\n            return $('fieldset#id_dropzoneheader select').filter(function(i, selectNode) {\n                return parseInt($(selectNode).val()) === value;\n            }).length !== 0;\n        },\n\n        /**\n         * Handles when a dropzone in dragged in the preview.\n         * @param {Object} e Event object\n         */\n        dragStart: function(e) {\n            var drop = $(e.target).closest('.droppreview');\n\n            var info = dragDrop.prepare(e);\n            if (!info.start) {\n                return;\n            }\n\n            dragDrop.start(e, drop, function(x, y, drop) {\n                dragDropToImageForm.dragMove(drop);\n            }, function() {\n                dragDropToImageForm.dragEnd();\n            });\n        },\n\n        /**\n         * Handles update while a drop is being dragged.\n         *\n         * @param {jQuery} drop the drop preview being moved.\n         */\n        dragMove: function(drop) {\n            var backgroundImage = $('fieldset#id_previewareaheader .dropbackground'),\n                backgroundPosition = backgroundImage.offset(),\n                dropNo = drop.data('dropNo'),\n                dropPosition = drop.offset(),\n                left = Math.round(dropPosition.left - backgroundPosition.left),\n                top = Math.round(dropPosition.top - backgroundPosition.top);\n\n            // Constrain coordinates to be inside the background.\n            left = Math.round(Math.max(0, Math.min(left, backgroundImage.outerWidth() - drop.outerWidth())));\n            top = Math.round(Math.max(0, Math.min(top, backgroundImage.outerHeight() - drop.outerHeight())));\n\n            // Update the form.\n            dragDropToImageForm.form.setFormValue('drops', [dropNo, 'xleft'], left);\n            dragDropToImageForm.form.setFormValue('drops', [dropNo, 'ytop'], top);\n        },\n\n        /**\n         * Handles when the drag ends.\n         */\n        dragEnd: function() {\n            // Redraw, in case the position was constrained.\n            dragDropToImageForm.updateDropZones();\n        },\n\n        /**\n         * Low level operations on form.\n         */\n        form: {\n            toNameWithIndex: function(name, indexes) {\n                var indexString = name;\n                for (var i = 0; i < indexes.length; i++) {\n                    indexString = indexString + '[' + indexes[i] + ']';\n                }\n                return indexString;\n            },\n\n            getEl: function(name, indexes) {\n                var form = $('form.mform[data-qtype=\"ddimageortext\"]')[0];\n                return form.elements[this.toNameWithIndex(name, indexes)];\n            },\n\n            /**\n             * Helper to get the value of a form elements with name like \"drops[0][xleft]\".\n             *\n             * @param {String} name the base name, e.g. 'drops'.\n             * @param {String[]} indexes the indexes, e.g. ['0', 'xleft'].\n             * @return {String} the value of that field.\n             */\n            getFormValue: function(name, indexes) {\n                var el = this.getEl(name, indexes);\n                if (!el.type) {\n                    el = el[el.length - 1];\n                }\n                if (el.type === 'checkbox') {\n                    return el.checked;\n                } else {\n                    return el.value;\n                }\n            },\n\n            /**\n             * Helper to get the value of a form elements with name like \"drops[0][xleft]\".\n             *\n             * @param {String} name the base name, e.g. 'drops'.\n             * @param {String[]} indexes the indexes, e.g. ['0', 'xleft'].\n             * @param {String|Number} value the value to set.\n             */\n            setFormValue: function(name, indexes, value) {\n                var el = this.getEl(name, indexes);\n                if (el.type === 'checkbox') {\n                    el.checked = value;\n                } else {\n                    el.value = value;\n                }\n            }\n        },\n\n        /**\n         * Utility to get the file name and url from the filepicker.\n         * @returns {Object} object containing functions {file, name}\n         */\n        filePickers: function() {\n            var draftItemIdsToName;\n            var nameToParentNode;\n\n            if (draftItemIdsToName === undefined) {\n                draftItemIdsToName = {};\n                nameToParentNode = {};\n                var fp = $('form.mform[data-qtype=\"ddimageortext\"] input.filepickerhidden');\n                fp.each(function(index, filepicker) {\n                    draftItemIdsToName[filepicker.value] = filepicker.name;\n                    nameToParentNode[filepicker.name] = filepicker.parentNode;\n                });\n            }\n\n            return {\n                file: function(name) {\n                    var parentNode = $(nameToParentNode[name]);\n                    var fileAnchor = parentNode.find('div.filepicker-filelist a');\n                    if (fileAnchor.length) {\n                        return {href: fileAnchor.get(0).href, name: fileAnchor.get(0).innerHTML};\n                    } else {\n                        return {href: null, name: null};\n                    }\n                },\n\n                name: function(draftitemid) {\n                    return draftItemIdsToName[draftitemid];\n                }\n            };\n        }\n    };\n\n    return {\n        init: dragDropToImageForm.init\n    };\n});\n"],"file":"form.min.js"}