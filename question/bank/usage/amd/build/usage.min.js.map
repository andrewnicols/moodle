{"version":3,"file":"usage.min.js","sources":["../src/usage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Usage column selector js.\n *\n * @module     qbank_usage/usage\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Safat Shahin <safatshahin@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from 'core/fragment';\nimport CancelModal from 'core/modal_cancel';\nimport Notification from 'core/notification';\nimport * as Str from 'core/str';\n\n/**\n * Event listeners for the module.\n *\n * @method clickEvent\n * @param {Number} questionId\n * @param {Number} contextId\n */\nconst usageEvent = (questionId, contextId) => {\n    const args = {\n        questionid: questionId,\n    };\n\n    CancelModal.create({\n        title: Str.get_string('usageheader', 'qbank_usage'),\n        body: Fragment.loadFragment('qbank_usage', 'question_usage', contextId, args),\n        large: true,\n        show: true,\n    }).then((modal) => {\n        const refreshModal = () => modal.setBody(Fragment.loadFragment('qbank_usage', 'question_usage', contextId, args));\n        modal.getRoot().on('click', 'a[href].page-link', function(e) {\n            e.preventDefault();\n            let attr = e.target.getAttribute(\"href\");\n            if (attr !== '#') {\n                args.querystring = attr;\n                refreshModal();\n            }\n        });\n        // Version selection event.\n        modal.getRoot().on('change', '#question_usage_version_dropdown', function(e) {\n            args.questionid = e.target.value;\n            refreshModal();\n        });\n        return modal;\n    }).catch(Notification.exception);\n};\n\n/**\n * Entrypoint of the js.\n *\n * @method init\n * @param {string} questionSelector the question usage identifier.\n * @param {Number} contextId the question context id.\n */\nexport const init = (questionSelector, contextId) => {\n    const target = document.querySelector(questionSelector);\n    const questionId = target.getAttribute('data-questionid');\n    target.addEventListener('click', () => {\n        // Call for the event listener to listed for clicks in any usage count row.\n        usageEvent(questionId, contextId);\n    });\n};\n"],"names":["questionSelector","contextId","target","document","querySelector","questionId","getAttribute","addEventListener","args","questionid","create","title","Str","get_string","body","Fragment","loadFragment","large","show","then","modal","refreshModal","setBody","getRoot","on","e","preventDefault","attr","querystring","value","catch","Notification","exception","usageEvent"],"mappings":";;;;;;;;04BAwEoB,CAACA,iBAAkBC,mBAC7BC,OAASC,SAASC,cAAcJ,kBAChCK,WAAaH,OAAOI,aAAa,mBACvCJ,OAAOK,iBAAiB,SAAS,KAvClB,EAACF,WAAYJ,mBACtBO,KAAO,CACTC,WAAYJ,kCAGJK,OAAO,CACfC,MAAOC,IAAIC,WAAW,cAAe,eACrCC,KAAMC,kBAASC,aAAa,cAAe,iBAAkBf,UAAWO,MACxES,OAAO,EACPC,MAAM,IACPC,MAAMC,cACCC,aAAe,IAAMD,MAAME,QAAQP,kBAASC,aAAa,cAAe,iBAAkBf,UAAWO,cAC3GY,MAAMG,UAAUC,GAAG,QAAS,qBAAqB,SAASC,GACtDA,EAAEC,qBACEC,KAAOF,EAAEvB,OAAOI,aAAa,QACpB,MAATqB,OACAnB,KAAKoB,YAAcD,KACnBN,mBAIRD,MAAMG,UAAUC,GAAG,SAAU,oCAAoC,SAASC,GACtEjB,KAAKC,WAAagB,EAAEvB,OAAO2B,MAC3BR,kBAEGD,SACRU,MAAMC,sBAAaC,YAelBC,CAAW5B,WAAYJ"}